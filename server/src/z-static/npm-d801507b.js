// npm-d801507b.d7b47243bf5d5f1d7a6c.js
/*! For license information please see npm-d801507b.d7b47243bf5d5f1d7a6c.js.LICENSE.txt */
(self.__LOADABLE_LOADED_CHUNKS__ = self.__LOADABLE_LOADED_CHUNKS__ || []).push([[6534], {
    33170: function(e) {
        e.exports = function(e) {
            var t = {};
            function n(i) {
                if (t[i])
                    return t[i].exports;
                var r = t[i] = {
                    i,
                    l: !1,
                    exports: {}
                };
                return e[i].call(r.exports, r, r.exports, n),
                r.l = !0,
                r.exports
            }
            return n.m = e,
            n.c = t,
            n.d = function(e, t, i) {
                n.o(e, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: i
                })
            }
            ,
            n.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }),
                Object.defineProperty(e, "__esModule", {
                    value: !0
                })
            }
            ,
            n.t = function(e, t) {
                if (1 & t && (e = n(e)),
                8 & t)
                    return e;
                if (4 & t && "object" == typeof e && e && e.__esModule)
                    return e;
                var i = Object.create(null);
                if (n.r(i),
                Object.defineProperty(i, "default", {
                    enumerable: !0,
                    value: e
                }),
                2 & t && "string" != typeof e)
                    for (var r in e)
                        n.d(i, r, function(t) {
                            return e[t]
                        }
                        .bind(null, r));
                return i
            }
            ,
            n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                }
                : function() {
                    return e
                }
                ;
                return n.d(t, "a", t),
                t
            }
            ,
            n.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            ,
            n.p = "",
            n(n.s = 13)
        }([function(e, t) {
            function n(t) {
                return e.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                }
                ,
                e.exports.__esModule = !0,
                e.exports.default = e.exports,
                n(t)
            }
            e.exports = n,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(14);
            function r() {
                return "undefined" != typeof Reflect && Reflect.get ? (e.exports = r = Reflect.get.bind(),
                e.exports.__esModule = !0,
                e.exports.default = e.exports) : (e.exports = r = function(e, t, n) {
                    var r = i(e, t);
                    if (r) {
                        var o = Object.getOwnPropertyDescriptor(r, t);
                        return o.get ? o.get.call(arguments.length < 3 ? e : n) : o.value
                    }
                }
                ,
                e.exports.__esModule = !0,
                e.exports.default = e.exports),
                r.apply(this, arguments)
            }
            e.exports = r,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            e.exports = function(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            function n(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var i = t[n];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            e.exports = function(e, t, i) {
                return t && n(e.prototype, t),
                i && n(e, i),
                Object.defineProperty(e, "prototype", {
                    writable: !1
                }),
                e
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(15);
            e.exports = function(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }),
                Object.defineProperty(e, "prototype", {
                    writable: !1
                }),
                t && i(e, t)
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(11).default
              , r = n(7);
            e.exports = function(e, t) {
                if (t && ("object" === i(t) || "function" == typeof t))
                    return t;
                if (void 0 !== t)
                    throw new TypeError("Derived constructors may only return object or undefined");
                return r(e)
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            e.exports = function(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n,
                e
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            e.exports = function(e) {
                if (void 0 === e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(16)();
            e.exports = i;
            try {
                regeneratorRuntime = i
            } catch (e) {
                "object" == typeof globalThis ? globalThis.regeneratorRuntime = i : Function("r", "regeneratorRuntime = r")(i)
            }
        }
        , function(e, t) {
            function n(e, t, n, i, r, o, a) {
                try {
                    var s = e[o](a)
                      , l = s.value
                } catch (e) {
                    return void n(e)
                }
                s.done ? t(l) : Promise.resolve(l).then(i, r)
            }
            e.exports = function(e) {
                return function() {
                    var t = this
                      , i = arguments;
                    return new Promise((function(r, o) {
                        var a = e.apply(t, i);
                        function s(e) {
                            n(a, r, o, s, l, "next", e)
                        }
                        function l(e) {
                            n(a, r, o, s, l, "throw", e)
                        }
                        s(void 0)
                    }
                    ))
                }
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(17)
              , r = n(18)
              , o = n(19)
              , a = n(20);
            e.exports = function(e) {
                return i(e) || r(e) || o(e) || a()
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            function n(t) {
                return e.exports = n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                ,
                e.exports.__esModule = !0,
                e.exports.default = e.exports,
                n(t)
            }
            e.exports = n,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            e.exports = function(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, i = new Array(t); n < t; n++)
                    i[n] = e[n];
                return i
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            e.exports = n(21)
        }
        , function(e, t, n) {
            var i = n(0);
            e.exports = function(e, t) {
                for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = i(e)); )
                    ;
                return e
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            function n(t, i) {
                return e.exports = n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                    return e.__proto__ = t,
                    e
                }
                ,
                e.exports.__esModule = !0,
                e.exports.default = e.exports,
                n(t, i)
            }
            e.exports = n,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(11).default;
            function r() {
                "use strict";
                e.exports = r = function() {
                    return t
                }
                ,
                e.exports.__esModule = !0,
                e.exports.default = e.exports;
                var t = {}
                  , n = Object.prototype
                  , o = n.hasOwnProperty
                  , a = "function" == typeof Symbol ? Symbol : {}
                  , s = a.iterator || "@@iterator"
                  , l = a.asyncIterator || "@@asyncIterator"
                  , u = a.toStringTag || "@@toStringTag";
                function c(e, t, n) {
                    return Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }),
                    e[t]
                }
                try {
                    c({}, "")
                } catch (e) {
                    c = function(e, t, n) {
                        return e[t] = n
                    }
                }
                function h(e, t, n, i) {
                    var r = t && t.prototype instanceof p ? t : p
                      , o = Object.create(r.prototype)
                      , a = new M(i || []);
                    return o._invoke = function(e, t, n) {
                        var i = "suspendedStart";
                        return function(r, o) {
                            if ("executing" === i)
                                throw new Error("Generator is already running");
                            if ("completed" === i) {
                                if ("throw" === r)
                                    throw o;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (n.method = r,
                            n.arg = o; ; ) {
                                var a = n.delegate;
                                if (a) {
                                    var s = w(a, n);
                                    if (s) {
                                        if (s === f)
                                            continue;
                                        return s
                                    }
                                }
                                if ("next" === n.method)
                                    n.sent = n._sent = n.arg;
                                else if ("throw" === n.method) {
                                    if ("suspendedStart" === i)
                                        throw i = "completed",
                                        n.arg;
                                    n.dispatchException(n.arg)
                                } else
                                    "return" === n.method && n.abrupt("return", n.arg);
                                i = "executing";
                                var l = d(e, t, n);
                                if ("normal" === l.type) {
                                    if (i = n.done ? "completed" : "suspendedYield",
                                    l.arg === f)
                                        continue;
                                    return {
                                        value: l.arg,
                                        done: n.done
                                    }
                                }
                                "throw" === l.type && (i = "completed",
                                n.method = "throw",
                                n.arg = l.arg)
                            }
                        }
                    }(e, n, a),
                    o
                }
                function d(e, t, n) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, n)
                        }
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        }
                    }
                }
                t.wrap = h;
                var f = {};
                function p() {}
                function g() {}
                function m() {}
                var v = {};
                c(v, s, (function() {
                    return this
                }
                ));
                var y = Object.getPrototypeOf
                  , _ = y && y(y(P([])));
                _ && _ !== n && o.call(_, s) && (v = _);
                var T = m.prototype = p.prototype = Object.create(v);
                function b(e) {
                    ["next", "throw", "return"].forEach((function(t) {
                        c(e, t, (function(e) {
                            return this._invoke(t, e)
                        }
                        ))
                    }
                    ))
                }
                function S(e, t) {
                    var n;
                    this._invoke = function(r, a) {
                        function s() {
                            return new t((function(n, s) {
                                !function n(r, a, s, l) {
                                    var u = d(e[r], e, a);
                                    if ("throw" !== u.type) {
                                        var c = u.arg
                                          , h = c.value;
                                        return h && "object" == i(h) && o.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                                            n("next", e, s, l)
                                        }
                                        ), (function(e) {
                                            n("throw", e, s, l)
                                        }
                                        )) : t.resolve(h).then((function(e) {
                                            c.value = e,
                                            s(c)
                                        }
                                        ), (function(e) {
                                            return n("throw", e, s, l)
                                        }
                                        ))
                                    }
                                    l(u.arg)
                                }(r, a, n, s)
                            }
                            ))
                        }
                        return n = n ? n.then(s, s) : s()
                    }
                }
                function w(e, t) {
                    var n = e.iterator[t.method];
                    if (void 0 === n) {
                        if (t.delegate = null,
                        "throw" === t.method) {
                            if (e.iterator.return && (t.method = "return",
                            t.arg = void 0,
                            w(e, t),
                            "throw" === t.method))
                                return f;
                            t.method = "throw",
                            t.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return f
                    }
                    var i = d(n, e.iterator, t.arg);
                    if ("throw" === i.type)
                        return t.method = "throw",
                        t.arg = i.arg,
                        t.delegate = null,
                        f;
                    var r = i.arg;
                    return r ? r.done ? (t[e.resultName] = r.value,
                    t.next = e.nextLoc,
                    "return" !== t.method && (t.method = "next",
                    t.arg = void 0),
                    t.delegate = null,
                    f) : r : (t.method = "throw",
                    t.arg = new TypeError("iterator result is not an object"),
                    t.delegate = null,
                    f)
                }
                function k(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]),
                    2 in e && (t.finallyLoc = e[2],
                    t.afterLoc = e[3]),
                    this.tryEntries.push(t)
                }
                function C(e) {
                    var t = e.completion || {};
                    t.type = "normal",
                    delete t.arg,
                    e.completion = t
                }
                function M(e) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }],
                    e.forEach(k, this),
                    this.reset(!0)
                }
                function P(e) {
                    if (e) {
                        var t = e[s];
                        if (t)
                            return t.call(e);
                        if ("function" == typeof e.next)
                            return e;
                        if (!isNaN(e.length)) {
                            var n = -1
                              , i = function t() {
                                for (; ++n < e.length; )
                                    if (o.call(e, n))
                                        return t.value = e[n],
                                        t.done = !1,
                                        t;
                                return t.value = void 0,
                                t.done = !0,
                                t
                            };
                            return i.next = i
                        }
                    }
                    return {
                        next: R
                    }
                }
                function R() {
                    return {
                        value: void 0,
                        done: !0
                    }
                }
                return g.prototype = m,
                c(T, "constructor", m),
                c(m, "constructor", g),
                g.displayName = c(m, u, "GeneratorFunction"),
                t.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === g || "GeneratorFunction" === (t.displayName || t.name))
                }
                ,
                t.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m,
                    c(e, u, "GeneratorFunction")),
                    e.prototype = Object.create(T),
                    e
                }
                ,
                t.awrap = function(e) {
                    return {
                        __await: e
                    }
                }
                ,
                b(S.prototype),
                c(S.prototype, l, (function() {
                    return this
                }
                )),
                t.AsyncIterator = S,
                t.async = function(e, n, i, r, o) {
                    void 0 === o && (o = Promise);
                    var a = new S(h(e, n, i, r),o);
                    return t.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                        return e.done ? e.value : a.next()
                    }
                    ))
                }
                ,
                b(T),
                c(T, u, "Generator"),
                c(T, s, (function() {
                    return this
                }
                )),
                c(T, "toString", (function() {
                    return "[object Generator]"
                }
                )),
                t.keys = function(e) {
                    var t = [];
                    for (var n in e)
                        t.push(n);
                    return t.reverse(),
                    function n() {
                        for (; t.length; ) {
                            var i = t.pop();
                            if (i in e)
                                return n.value = i,
                                n.done = !1,
                                n
                        }
                        return n.done = !0,
                        n
                    }
                }
                ,
                t.values = P,
                M.prototype = {
                    constructor: M,
                    reset: function(e) {
                        if (this.prev = 0,
                        this.next = 0,
                        this.sent = this._sent = void 0,
                        this.done = !1,
                        this.delegate = null,
                        this.method = "next",
                        this.arg = void 0,
                        this.tryEntries.forEach(C),
                        !e)
                            for (var t in this)
                                "t" === t.charAt(0) && o.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type)
                            throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(e) {
                        if (this.done)
                            throw e;
                        var t = this;
                        function n(n, i) {
                            return a.type = "throw",
                            a.arg = e,
                            t.next = n,
                            i && (t.method = "next",
                            t.arg = void 0),
                            !!i
                        }
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var r = this.tryEntries[i]
                              , a = r.completion;
                            if ("root" === r.tryLoc)
                                return n("end");
                            if (r.tryLoc <= this.prev) {
                                var s = o.call(r, "catchLoc")
                                  , l = o.call(r, "finallyLoc");
                                if (s && l) {
                                    if (this.prev < r.catchLoc)
                                        return n(r.catchLoc, !0);
                                    if (this.prev < r.finallyLoc)
                                        return n(r.finallyLoc)
                                } else if (s) {
                                    if (this.prev < r.catchLoc)
                                        return n(r.catchLoc, !0)
                                } else {
                                    if (!l)
                                        throw new Error("try statement without catch or finally");
                                    if (this.prev < r.finallyLoc)
                                        return n(r.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var i = this.tryEntries[n];
                            if (i.tryLoc <= this.prev && o.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                                var r = i;
                                break
                            }
                        }
                        r && ("break" === e || "continue" === e) && r.tryLoc <= t && t <= r.finallyLoc && (r = null);
                        var a = r ? r.completion : {};
                        return a.type = e,
                        a.arg = t,
                        r ? (this.method = "next",
                        this.next = r.finallyLoc,
                        f) : this.complete(a)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type)
                            throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                        this.method = "return",
                        this.next = "end") : "normal" === e.type && t && (this.next = t),
                        f
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.finallyLoc === e)
                                return this.complete(n.completion, n.afterLoc),
                                C(n),
                                f
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.tryLoc === e) {
                                var i = n.completion;
                                if ("throw" === i.type) {
                                    var r = i.arg;
                                    C(n)
                                }
                                return r
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(e, t, n) {
                        return this.delegate = {
                            iterator: P(e),
                            resultName: t,
                            nextLoc: n
                        },
                        "next" === this.method && (this.arg = void 0),
                        f
                    }
                },
                t
            }
            e.exports = r,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(12);
            e.exports = function(e) {
                if (Array.isArray(e))
                    return i(e)
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            e.exports = function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            var i = n(12);
            e.exports = function(e, t) {
                if (e) {
                    if ("string" == typeof e)
                        return i(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name),
                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? i(e, t) : void 0
                }
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t) {
            e.exports = function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            ,
            e.exports.__esModule = !0,
            e.exports.default = e.exports
        }
        , function(e, t, n) {
            "use strict";
            n.r(t),
            n.d(t, "StreamPlayer", (function() {
                return jt
            }
            )),
            n.d(t, "BasicPlayer", (function() {
                return Xt
            }
            )),
            n.d(t, "storage", (function() {
                return Ut
            }
            ));
            var i = n(9)
              , r = n.n(i)
              , o = n(2)
              , a = n.n(o)
              , s = n(3)
              , l = n.n(s)
              , u = n(1)
              , c = n.n(u)
              , h = n(4)
              , d = n.n(h)
              , f = n(5)
              , p = n.n(f)
              , g = n(0)
              , m = n.n(g)
              , v = n(8)
              , y = n.n(v)
              , _ = n(10)
              , T = n.n(_)
              , b = {
                autoplay: !1,
                loop: !1,
                muted: !1,
                metaChunkSize: 209715.2,
                dataChunkSize: 1048576,
                bufferEnoughTime: .5,
                bufferMaxTime: 3,
                bufferCheckingInterval: 100,
                preload: "auto"
            }
              , S = {
                defaultBufferSize: 10485760
            }
              , w = n(7)
              , k = n.n(w)
              , C = n(6)
              , M = n.n(C)
              , P = function() {
                function e() {
                    a()(this, e),
                    this._events = [],
                    this._callbacks = {}
                }
                return l()(e, [{
                    key: "register",
                    value: function(e) {
                        this._events.includes[e] || this._events.push(e)
                    }
                }, {
                    key: "on",
                    value: function(e, t) {
                        return !!this._events.includes(e) && (this._callbacks[e] || (this._callbacks[e] = []),
                        this._callbacks[e].push(t),
                        !0)
                    }
                }, {
                    key: "off",
                    value: function(e, t) {
                        if (!this._events.includes(e))
                            return !1;
                        var n = this._callbacks[e].indexOf(t);
                        return this._callbacks[e].splice(n, 1),
                        !0
                    }
                }, {
                    key: "trigger",
                    value: function(e, t) {
                        if (!this._callbacks[e] || !this._callbacks[e].length)
                            return !1;
                        var n = null;
                        return this._callbacks[e].forEach((function(e, i) {
                            0 == i ? n = e(t) : e(t)
                        }
                        )),
                        n
                    }
                }, {
                    key: "events",
                    get: function() {
                        return this._events
                    },
                    set: function(e) {
                        var t = this;
                        e.forEach((function(e) {
                            t.register(e)
                        }
                        ))
                    }
                }]),
                e
            }();
            var R = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e) {
                    var i;
                    return a()(this, n),
                    i = t.call(this),
                    M()(k()(i), "_initTextTrack", (function() {
                        i.textTrack = document.createElement("track"),
                        i.textTrack.default = !0,
                        i.textTrack.kind = "captions",
                        i.textTrack.label = "English",
                        i.textTrack.srclang = "en",
                        i.textTrack.oncuechange = function(e) {
                            var t, n, r = null === (t = e.target) || void 0 === t || null === (n = t.track) || void 0 === n ? void 0 : n.activeCues;
                            r && r.length && (r[0].track.mode = "hidden",
                            i.trigger("SUBTITLE_CHANGED", r[0].text))
                        }
                    }
                    )),
                    M()(k()(i), "load", (function(e) {
                        return fetch(e).then((function(e) {
                            return e.text()
                        }
                        )).then((function(e) {
                            var t = new Blob([e],{
                                type: "text/vtt"
                            });
                            i.textTrack && (i.textTrack.src = URL.createObjectURL(t),
                            i.el.appendChild(i.textTrack))
                        }
                        ))
                    }
                    )),
                    M()(k()(i), "reset", (function() {
                        i.textTrack && (i.textTrack.src && URL.revokeObjectURL(i.textTrack.src),
                        i.textTrack.parentNode && i.textTrack.parentNode.removeChild(i.textTrack),
                        i.textTrack = null)
                    }
                    )),
                    i.el = e,
                    i.textTrack = null,
                    i._initTextTrack(),
                    i.events = ["SUBTITLE_CHANGED"],
                    i
                }
                return l()(n)
            }(P);
            var x = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this)).el = e,
                    r.events = i,
                    r.proxyEvents = [],
                    r
                }
                return l()(n, [{
                    key: "bind",
                    value: function(e, t) {
                        c()(m()(n.prototype), "on", this).call(this, e, t) || this.el.addEventListener(e, t)
                    }
                }, {
                    key: "remove",
                    value: function(e, t) {
                        c()(m()(n.prototype), "off", this).call(this, e, t) || this.el.removeEventListener(e, t)
                    }
                }, {
                    key: "proxy",
                    value: function(e, t) {
                        var i = this;
                        this.register(e),
                        this.proxyEvents.push(e),
                        c()(m()(n.prototype), "on", this).call(this, e, t),
                        this.el.addEventListener(e, (function(t) {
                            c()(m()(n.prototype), "trigger", i).call(i, e, t)
                        }
                        ))
                    }
                }]),
                n
            }(P)
              , E = []
              , D = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , i = arguments.length > 2 ? arguments[2] : void 0;
                    a()(this, e),
                    this.type = t,
                    this.config = n,
                    this.el = document.createElement("video"),
                    this.config.container && this.config.container.appendChild(this.el),
                    this.eventManager = new x(this.el,[].concat(T()(E), T()(i))),
                    this.subtitle = null,
                    this.isReady = !1,
                    this._initAttributes()
                }
                var t;
                return l()(e, [{
                    key: "_initAttributes",
                    value: function() {
                        this.el.autoplay = this.config.autoplay || b.autoplay,
                        this.el.loop = this.config.loop || b.loop,
                        this.el.muted = this.config.muted || b.muted,
                        this.el.controls = !1,
                        this.el.playsInline = !0,
                        this.el.preload = this.config.preload || b.preload
                    }
                }, {
                    key: "_initEvents",
                    value: function() {
                        var e = this;
                        this.eventManager.proxy("canplay", (function() {
                            e.isReady = !0
                        }
                        ))
                    }
                }, {
                    key: "load",
                    value: function(e) {
                        this.el.src !== e && (this.el.src = e)
                    }
                }, {
                    key: "play",
                    value: function() {
                        return this.el.play()
                    }
                }, {
                    key: "pause",
                    value: function() {
                        this.el.pause()
                    }
                }, {
                    key: "seek",
                    value: function(e) {
                        this.el.currentTime = e
                    }
                }, {
                    key: "mute",
                    value: function(e) {
                        this.el.muted = e
                    }
                }, {
                    key: "addSubtitle",
                    value: function(e, t) {
                        return this.subtitle && (this.subtitle.reset(),
                        this.subtitle = null),
                        this.subtitle = new R(this.el),
                        this.subtitle.on("SUBTITLE_CHANGED", t),
                        this.subtitle.load(e)
                    }
                }, {
                    key: "access",
                    value: function() {
                        var e = this;
                        return this.el.play().then((function() {
                            e.el.pause()
                        }
                        ))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.pause(),
                        this.el.src = ""
                    }
                }, {
                    key: "on",
                    value: function(e, t) {
                        this.eventManager.bind(e, t)
                    }
                }, {
                    key: "off",
                    value: function(e, t) {
                        this.eventManager.remove(e, t)
                    }
                }, {
                    key: "replay",
                    value: (t = r()(y.a.mark((function e() {
                        return y.a.wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return this.seek(0),
                                    e.prev = 1,
                                    e.next = 4,
                                    this.play();
                                case 4:
                                    e.next = 8;
                                    break;
                                case 6:
                                    e.prev = 6,
                                    e.t0 = e.catch(1);
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this, [[1, 6]])
                    }
                    ))),
                    function() {
                        return t.apply(this, arguments)
                    }
                    )
                }, {
                    key: "currentTime",
                    get: function() {
                        return this.el.currentTime
                    }
                }, {
                    key: "playing",
                    get: function() {
                        return !this.el.paused
                    }
                }, {
                    key: "duration",
                    get: function() {
                        return this.el.duration
                    }
                }, {
                    key: "bufferRanges",
                    get: function() {
                        for (var e = [], t = 0; t < this.el.buffered.length; t++)
                            e.push({
                                startTime: this.el.buffered.start(t),
                                duration: this.el.buffered.end(t) - this.el.buffered.start(t)
                            });
                        return e
                    }
                }, {
                    key: "volume",
                    set: function(e) {
                        this.el.volume = e
                    }
                }, {
                    key: "speed",
                    set: function(e) {
                        this.el.playbackRate = e
                    }
                }, {
                    key: "release",
                    value: function() {
                        this.isReady = !1
                    }
                }, {
                    key: "getQualityInfo",
                    value: function() {
                        return this.el.getVideoPlaybackQuality ? this.el.getVideoPlaybackQuality() : {
                            corruptedVideoFrames: 0,
                            creationTime: performance.now(),
                            droppedVideoFrames: this.el.webkitDroppedFrameCount || 0,
                            totalVideoFrames: this.el.webkitDecodedFrameCount || 0
                        }
                    }
                }]),
                e
            }();
            D.isSoftwareRender = function() {
                try {
                    var e = document.createElement("canvas").getContext("webgl")
                      , t = e.getExtension("WEBGL_debug_renderer_info");
                    return e.getParameter(t.UNMASKED_RENDERER_WEBGL).includes("SwiftShader")
                } catch (e) {
                    return !0
                }
            }
            ;
            var L = D;
            var I = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n() {
                    var e, i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return a()(this, n),
                    e = t.call(this),
                    M()(k()(e), "_downloadChunk", (function() {
                        if (!(e.loading || e._totalSize && e._chunkOffset >= e._totalSize)) {
                            var t = function() {
                                var e = performance.now();
                                return function() {
                                    return (performance.now() - e) / 1e3
                                }
                            }()
                              , n = e._chunkSize
                              , i = e._chunkOffset
                              , r = e.url
                              , o = new XMLHttpRequest;
                            e.xhr = o,
                            o.open("GET", r, !0),
                            o.withCredentials = !!e.config.withCredentials,
                            o.responseType = "arraybuffer",
                            o.start = e._chunkOffset,
                            o.setRequestHeader("Range", "bytes=" + e._chunkOffset + "-" + (e._chunkOffset + n - 1)),
                            o.onerror = function(t) {
                                0 !== t.target.status && void 0 !== t.target.status || e.trigger("ERROR", {
                                    name: "CORS_ERROR",
                                    url: r
                                })
                            }
                            ,
                            o.onreadystatechange = function(a) {
                                if (403 === o.status && e.trigger("ERROR", {
                                    name: "FORBIDDEN_ERROR",
                                    url: r,
                                    code: 403
                                }),
                                4 == o.readyState && (e.loading = !1,
                                200 == o.status || 206 == o.status || 304 == o.status || 416 == o.status)) {
                                    if (416 == o.status)
                                        return void e.trigger("ERROR", {
                                            url: r,
                                            name: "RANGE_ERROR",
                                            code: 416,
                                            range: "bytes=" + i + "-" + (i + n - 1)
                                        });
                                    if (r != e.url)
                                        return;
                                    var s = null;
                                    if (o.getAllResponseHeaders().toLocaleLowerCase().indexOf("content-range") >= 0 && (s = o.getResponseHeader("content-range")),
                                    !e._totalSize && s) {
                                        var l = s.split("/");
                                        2 == l.length && (e._totalSize = parseInt(l[1]),
                                        e.trigger("FILE_SIZE", e._totalSize))
                                    }
                                    e.eof = o.response.byteLength != n || o.response.byteLength == e._totalSize,
                                    e.lastChunkNetworkTime = t(),
                                    e.trigger("CHUNK_READY", {
                                        data: o.response,
                                        eof: e.eof,
                                        chunkOffset: i,
                                        chunkSize: n,
                                        totalSize: e._totalSize,
                                        networkDuration: e.lastChunkNetworkTime
                                    }),
                                    e.eof || e.paused ? e.eof && e.trigger("EOF", null) : e.timeoutId = setTimeout((function() {
                                        e._chunkOffset += n,
                                        e._downloadChunk()
                                    }
                                    ), 0)
                                }
                            }
                            ,
                            e.loading = !0,
                            o.send()
                        }
                    }
                    )),
                    M()(k()(e), "load", (function(t) {
                        e.url = t
                    }
                    )),
                    M()(k()(e), "start", (function() {
                        e.url && (e.eof = !1,
                        e.paused = !1,
                        e.chunkOffset = 0,
                        e.switchToInitSize(),
                        e._downloadChunk())
                    }
                    )),
                    M()(k()(e), "pause", (function() {
                        e.paused = !0
                    }
                    )),
                    M()(k()(e), "resume", (function(t) {
                        !e.paused || e.loading || e.eof || (e.paused = !1,
                        null != t ? e._chunkOffset = t : e._chunkOffset += e._chunkSize,
                        e._downloadChunk())
                    }
                    )),
                    M()(k()(e), "release", (function() {
                        e.xhr && (e.xhr.abort(),
                        e.xhr = null,
                        e.loading = !1),
                        e.eof = !0,
                        e.paused = !0,
                        e.timeoutId && clearTimeout(e.timeoutId),
                        e.switchToInitSize(),
                        e._chunkOffset = 0,
                        e._totalSize = 0,
                        e.url = ""
                    }
                    )),
                    e.config = i,
                    e._chunkSize = 0,
                    e._chunkOffset = 0,
                    e._totalSize = 0,
                    e.url = "",
                    e._initChunkSize = -1,
                    e._commonChunkSize = -1,
                    e.lastChunkNetworkTime = 0,
                    e.eof = !0,
                    e.paused = !0,
                    e.loading = !1,
                    e.timeoutId = null,
                    e.xhr = null,
                    e.events = ["CHUNK_READY", "FILE_SIZE", "EOF", "ERROR"],
                    e
                }
                return l()(n, [{
                    key: "chunkSize",
                    set: function(e) {
                        !e || e < 0 || (this._chunkSize = Math.ceil(e))
                    }
                }, {
                    key: "initChunkSize",
                    set: function(e) {
                        !e || e < 0 || (this._initChunkSize = Math.ceil(e))
                    }
                }, {
                    key: "commonChunkSize",
                    set: function(e) {
                        !e || e < 0 || (this._commonChunkSize = Math.ceil(e))
                    }
                }, {
                    key: "switchToCommonSize",
                    value: function() {
                        this._commonChunkSize <= 0 || (this.chunkSize = this._commonChunkSize)
                    }
                }, {
                    key: "switchToInitSize",
                    value: function() {
                        this._initChunkSize <= 0 || (this.chunkSize = this._initChunkSize)
                    }
                }, {
                    key: "chunkOffset",
                    set: function(e) {
                        this._chunkOffset = e
                    }
                }]),
                n
            }(P)
              , O = new (l()((function e() {
                var t = this;
                a()(this, e),
                M()(this, "create", (function(e, n, i) {
                    return new t.defs[e](n,i)
                }
                )),
                M()(this, "define", (function(e, n) {
                    t.defs[e] = n
                }
                )),
                M()(this, "isSupported", (function(e) {
                    return t.defs[e]
                }
                )),
                this.defs = {}
            }
            )))
              , A = Math.pow(2, 32)
              , G = function(e, t, n, i, r) {
                var o = new Uint8Array(e,t,r)
                  , a = new Uint8Array(n,i,r);
                o.set(a)
            }
              , N = function(e, t) {
                return e + t
            }
              , B = function(e, t) {
                return {
                    value: e.getUint8(t),
                    position: t + 1
                }
            }
              , $ = function(e, t) {
                return {
                    value: e.getUint16(t),
                    position: t + 2
                }
            }
              , F = function(e, t, n) {
                return {
                    value: e.getUint32(t, !n),
                    position: t + 4
                }
            }
              , H = function(e, t, n) {
                return e.setUint8(t, n),
                t + 1
            }
              , U = function(e, t, n) {
                return e.setUint16(t, n),
                t + 2
            }
              , V = function(e, t, n) {
                return e.setInt32(t, n),
                t + 4
            }
              , j = function(e, t, n) {
                return e.setUint32(t, n),
                t + 4
            }
              , z = G
              , X = N
              , K = B
              , Q = $
              , W = function(e, t) {
                return {
                    value: e.getInt16(t),
                    position: t + 2
                }
            }
              , q = function(e, t) {
                var n = $(e, t)
                  , i = n.value << 16;
                return t = n.position,
                {
                    value: i | (n = B(e, t)).value,
                    position: t = n.position
                }
            }
              , Z = F
              , Y = function(e, t, n) {
                return {
                    value: e.getInt32(t, !n),
                    position: t + 4
                }
            }
              , J = function(e, t, n) {
                var i = F(e, t, n)
                  , r = i.value;
                t = i.position;
                var o = (i = F(e, t, n)).value;
                return t = i.position,
                {
                    value: n ? r * A + o : o * A + r,
                    position: t
                }
            }
              , ee = function(e, t, n) {
                return {
                    value: null,
                    position: N(t, 8)
                }
            }
              , te = function(e, t, n) {
                for (var i = [], r = t; r < t + n; r++)
                    i.push(e.getUint8(r));
                return {
                    value: String.fromCharCode.apply(null, i),
                    position: t + n
                }
            }
              , ne = function(e, t, n) {
                var i = new Uint8Array(n);
                return G(i.buffer, 0, e.buffer, t, n * i.BYTES_PER_ELEMENT),
                {
                    value: i,
                    position: t + i.byteLength
                }
            }
              , ie = H
              , re = function(e, t, n) {
                return e.setInt16(t, n),
                t + 2
            }
              , oe = U
              , ae = function(e, t, n) {
                return t = H(e, t, (16711680 & n) >> 16),
                t = H(e, t, (65280 & n) >> 8),
                H(e, t, 255 & n)
            }
              , se = V
              , le = j
              , ue = function(e, t, n) {
                var i = Math.floor(n / A);
                return t = j(e, t, i),
                j(e, t, 4294967295 & n)
            }
              , ce = function(e, t, n, i) {
                var r = Math.min(n.length, i)
                  , o = 0;
                for (o = 0; o < r; o++)
                    t = H(e, t, n.charCodeAt(o));
                for (; o < i; o++)
                    t = H(e, t, 0);
                return t
            }
              , he = function(e, t, n) {
                if (n instanceof Uint8Array)
                    G(e.buffer, t, n.buffer, 0, n.byteLength),
                    t += n.byteLength;
                else
                    for (var i = 0; i < n.length; i++)
                        t = H(e, t, n[i]);
                return t
            }
              , de = function(e, t, n) {
                if (n instanceof Uint32Array)
                    G(e.buffer, t, n.buffer, 0, n.byteLength),
                    t += n.byteLength;
                else
                    for (var i = 0; i < n.length; i++)
                        t = j(e, t, n[i]);
                return t
            }
              , fe = function(e, t, n) {
                n = n || 0;
                var i = new ArrayBuffer(t)
                  , r = new Uint8Array(i)
                  , o = new Uint8Array(e,n,t);
                return r.set(o),
                i
            }
              , pe = function(e, t) {
                var n = Number(e).toString(16);
                for (t = null == t ? t = 2 : t; n.length < t; )
                    n = "0" + n;
                return n
            };
            var ge = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i, r) {
                    var o;
                    return a()(this, n),
                    (o = t.call(this)).offset = r,
                    o.type = e,
                    o.size = i,
                    o
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        var n = this;
                        return this.offset = t,
                        t = X(t, 4),
                        {
                            position: t = ce(e, t, this.type, 4),
                            writeSize: function(t) {
                                return n.size = t - n.offset,
                                n.size,
                                le(e, n.offset, n.size),
                                t
                            }
                        }
                    }
                }]),
                n
            }(P);
            var me = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "ftyp", e, i)).data = null,
                    r.majorBrand = null,
                    r.minorVersion = null,
                    r.compatibleBrands = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = ne(e, t, this.size - 8);
                            this.data = i.value,
                            t = i.position
                        } else {
                            var r = this.size - 8
                              , o = te(e, t, 4);
                            for (this.majorBrand = o.value,
                            t = o.position,
                            o = Z(e, t, !0),
                            this.minorVersion = o.value,
                            t = o.position,
                            r -= 8,
                            this.compatibleBrands = []; r >= 4; ) {
                                var a = te(e, t, 4);
                                this.compatibleBrands.push(a.value),
                                t = a.position,
                                r -= 4
                            }
                        }
                        return t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        if (t = i.position,
                        this.data)
                            t = he(e, t, this.data);
                        else {
                            t = ce(e, t, this.majorBrand, 4),
                            t = le(e, t, this.minorVersion);
                            for (var r = 0; r < this.compatibleBrands.length; r++)
                                t = ce(e, t, this.compatibleBrands[r], 4)
                        }
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            me.type = "ftyp",
            me.skippable = !0,
            O.define(me.type, me);
            var ve = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i, r) {
                    var o;
                    return a()(this, n),
                    (o = t.call(this, e, i, r)).boxes = [],
                    o.events = ["SUB_BOX"],
                    o.lastPosition = -1,
                    o.listBoxes = [],
                    o
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        for (; t < this.offset + this.size; ) {
                            this.lastPosition = t;
                            var n = this.trigger("SUB_BOX", {
                                position: t
                            });
                            if (n) {
                                t = n.position;
                                var i = n.type;
                                this.listBoxes && this.listBoxes.length && this.listBoxes.indexOf(i) >= 0 ? (this[n.type] || (this[n.type] = []),
                                this[n.type].push(n.box)) : this[n.type] = n.box,
                                this.boxes.push(n.type)
                            }
                            if (t == this.lastPosition)
                                break
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = this
                          , r = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return {
                            position: t = r.position,
                            writeSize: function(e) {
                                return r.writeSize(e)
                            },
                            writeSubBoxes: function(e, t) {
                                for (var n = 0; n < i.boxes.length; n++) {
                                    var r = i.boxes[n];
                                    if (i[r] && !i[r].unwritable)
                                        if (i.listBoxes && i.listBoxes.length && i.listBoxes.indexOf(r) >= 0)
                                            for (var o = 0; o < i[r].length; o++)
                                                t = i[r][o].write(e, t),
                                                i.size += i[r][o].size;
                                        else
                                            t = i[r].write(e, t),
                                            i.size += i[r].size
                                }
                                return t
                            }
                        }
                    }
                }, {
                    key: "addSubBox",
                    value: function(e, t) {
                        this[e = e || t.type] = t,
                        this.boxes.push(e)
                    }
                }]),
                n
            }(ge);
            var ye = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "moov", e, i)).listBoxes = ["trak"],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }, {
                    key: "duration",
                    get: function() {
                        return this.mvhd ? this.mvhd.duration : 0
                    }
                }, {
                    key: "timescale",
                    get: function() {
                        return this.mvhd ? this.mvhd.timescale : 1
                    }
                }]),
                n
            }(ve);
            ye.type = "moov",
            O.define(ye.type, ye);
            var _e = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i, r) {
                    var o;
                    return a()(this, n),
                    (o = t.call(this, e, i, r)).version = 0,
                    o.flags = 0,
                    o
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        var n = K(e, t);
                        return this.version = n.value,
                        t = n.position,
                        n = q(e, t),
                        this.flags = n.value,
                        n.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = ie(e, t, this.version),
                        {
                            position: t = ae(e, t, this.flags),
                            writeSize: function(e) {
                                return i.writeSize(e)
                            }
                        }
                    }
                }]),
                n
            }(ge);
            var Te = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "mvhd", e, i)).data = null,
                    r.creationTime = null,
                    r.modificationTime = null,
                    r.timescale = null,
                    r.duration = null,
                    r.rate = null,
                    r.volume = null,
                    r.nextTrackId = null,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = t;
                            t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                            var r = ne(e, t, this.size - 8 - (t - i));
                            return this.data = r.value,
                            i = r.position,
                            1 == this.version ? (t = X(t, 16),
                            r = Z(e, t, !0),
                            this.timescale = r.value,
                            t = r.position,
                            r = J(e, t, !0),
                            this.duration = r.value,
                            t = r.position) : (t = X(t, 8),
                            r = Z(e, t, !0),
                            this.timescale = r.value,
                            t = r.position,
                            r = Z(e, t, !0),
                            this.duration = r.value,
                            t = r.position),
                            i
                        }
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var o = null;
                        if (1 == this.version)
                            o = J(e, t, !0),
                            this.creationTime = o.value,
                            t = o.position,
                            o = J(e, t, !0),
                            this.modificationTime = o.value,
                            t = o.position,
                            o = Z(e, t, !0),
                            this.timescale = o.value,
                            t = o.position,
                            o = J(e, t, !0),
                            this.duration = o.value,
                            t = o.position;
                        else {
                            var a = Z(e, t, !0);
                            this.creationTime = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.modificationTime = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.timescale = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.duration = a.value,
                            t = a.position
                        }
                        return o = Z(e, t, !0),
                        this.rate = o.value,
                        t = o.position,
                        o = Q(e, t),
                        this.volume = o.value >> 8,
                        t = o.position,
                        o = function(e, t, n) {
                            var i = new Uint32Array(n);
                            return G(i.buffer, 0, e.buffer, t, n * i.BYTES_PER_ELEMENT),
                            {
                                value: i,
                                position: t + i.byteLength
                            }
                        }(e, t = X(t, 10), 9),
                        this.matrix = o.value,
                        t = o.position,
                        t = X(t, 24),
                        o = Z(e, t, !0),
                        this.nextTrackId = o.value,
                        o.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data ? t = he(e, t, this.data) : (t = le(e, t, this.creationTime),
                        t = le(e, t, this.modificationTime),
                        t = le(e, t, this.timescale),
                        t = le(e, t, this.duration),
                        t = le(e, t, this.rate),
                        t = oe(e, t, this.volume << 8),
                        t = X(t, 10),
                        t = de(e, t, this.matrix),
                        t = X(t, 24),
                        t = le(e, t, this.nextTrackId)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Te.type = "mvhd",
            Te.skippable = !0,
            O.define(Te.type, Te);
            var be = function() {
                function e(t, n) {
                    a()(this, e),
                    this.index = t,
                    this.trackId = n,
                    this.dts = 0,
                    this.timescale = 1,
                    this.size = 0,
                    this.read = !1
                }
                return l()(e, [{
                    key: "timestamp",
                    get: function() {
                        return this.dts / this.timescale
                    }
                }]),
                e
            }();
            var Se = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    r = t.call(this, "trak", e, i),
                    M()(k()(r), "buildSamples", (function() {
                        if (r.sampleIndex = 0,
                        r.samples = [],
                        r.samplesDuration = 0,
                        r.samplesSize = 0,
                        r.mdia && r.mdia.minf && r.mdia.minf.stbl) {
                            var e = r.mdia.minf.stbl.stco
                              , t = r.mdia.minf.stbl.stsc
                              , n = r.mdia.minf.stbl.stsz
                              , i = r.mdia.minf.stbl.stts
                              , o = r.mdia.minf.stbl.ctts
                              , a = r.mdia.minf.stbl.stss
                              , s = r.mdia.minf.stbl.stsd;
                            if (n && n.sampleSizes && n.sampleSizes.length)
                                for (var l = 0, u = -1, c = -1, h = -1, d = -1, f = 0, p = -1, g = -1, m = -1, v = -1, y = 0; y < n.sampleSizes.length; y++) {
                                    var _ = new be(y,r.id);
                                    _.timescale = r.timescale,
                                    r.samples[y] = _,
                                    _.size = n.sampleSizes[y],
                                    r.samplesSize += _.size,
                                    0 === y ? (p = 1,
                                    g = 0,
                                    _.chunkIndex = p,
                                    _.chunkRunIndex = g,
                                    m = t.samplesPerChunk[g],
                                    l = 0,
                                    v = g + 1 < t.firstChunk.length ? t.firstChunk[g + 1] - 1 : 1 / 0) : y < m ? (_.chunkIndex = p,
                                    _.chunkRunIndex = g) : (p++,
                                    _.chunkIndex = p,
                                    l = 0,
                                    p <= v || (v = 1 + ++g < t.firstChunk.length ? t.firstChunk[g + 1] - 1 : 1 / 0),
                                    _.chunkRunIndex = g,
                                    m += t.samplesPerChunk[g]),
                                    _.descriptionIndex = t.sampleDescriptionIndex[_.chunkRunIndex] - 1,
                                    _.description = s.entries[_.descriptionIndex],
                                    _.offset = e.chunkOffsets[_.chunkIndex - 1] + l,
                                    l += _.size,
                                    y > u && (c++,
                                    u < 0 && (u = 0),
                                    u += i.sampleCounts[c]),
                                    y > 0 ? (r.samples[y - 1].duration = i.sampleDeltas[c],
                                    r.samplesDuration += r.samples[y - 1].duration,
                                    _.dts = r.samples[y - 1].dts + r.samples[y - 1].duration,
                                    y == n.sampleSizes.length - 1 && (_.duration = i.sampleDeltas[c],
                                    r.samplesDuration += _.duration)) : _.dts = 0,
                                    o ? (y >= h && (d++,
                                    h < 0 && (h = 0),
                                    h += o.sampleCounts[d]),
                                    _.cts = r.samples[y].dts + o.sampleOffsets[d]) : _.cts = _.dts,
                                    a ? y == a.sampleNumbers[f] - 1 ? (_.iFrame = !0,
                                    f++) : _.iFrame = !1 : _.iFrame = !0
                                }
                        }
                    }
                    )),
                    M()(k()(r), "resetForFMP4", (function() {
                        if (r.tkhd && (r.tkhd.duration = 0),
                        r.mdia && (r.mdia.mdhd && (r.mdia.mdhd.duration = 0),
                        r.mdia && r.mdia.minf && r.mdia.minf.stbl)) {
                            var e = r.mdia.minf.stbl;
                            if (e.stco && (e.stco.chunkOffsets = []),
                            e.stsc) {
                                var t = e.stsc;
                                t.firstChunk = [],
                                t.samplesPerChunk = [],
                                t.sampleDescriptionIndex = []
                            }
                            if (e.stsz && (e.stsz.sampleSizes = []),
                            e.stts) {
                                var n = e.stts;
                                n.sampleCounts = [],
                                n.sampleDeltas = []
                            }
                            if (e.ctts) {
                                var i = e.ctts;
                                i.sampleCounts = [],
                                i.sampleOffsets = []
                            }
                        }
                    }
                    )),
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }, {
                    key: "getSampleOffsetWithTime",
                    value: function(e) {
                        if (!this.samples.length)
                            return 0;
                        for (var t = -1, n = -1, i = (this.samples[0].timescale,
                        0); i < this.samples.length; i++) {
                            var r = this.samples[i];
                            if (r.cts > e * r.timescale) {
                                t = Math.max(0, i - 1);
                                break
                            }
                            r.iFrame && (n = i)
                        }
                        if (t = n)
                            return 0;
                        for (e = this.samples[t].cts,
                        this.sampleIndex = t; this.samples[t].read && t != this.samples.length - 1; )
                            t++;
                        return this.samples[t].offset
                    }
                }, {
                    key: "id",
                    get: function() {
                        return this.tkhd ? this.tkhd.trackId : 0
                    }
                }, {
                    key: "idString",
                    get: function() {
                        return "trak_" + this.id
                    }
                }, {
                    key: "name",
                    get: function() {
                        return this.mdia && this.mdia.hdlr ? this.mdia.hdlr.handler : ""
                    }
                }, {
                    key: "isAudio",
                    get: function() {
                        return "soun" == this.name
                    }
                }, {
                    key: "isVideo",
                    get: function() {
                        return "vide" == this.name
                    }
                }, {
                    key: "duration",
                    get: function() {
                        return this.mdia && this.mdia.mdhd ? this.mdia.mdhd.duration : 0
                    }
                }, {
                    key: "calculatedDuration",
                    get: function() {
                        if (!this.samples.length)
                            return 0;
                        var e = this.samples[this.samples.length - 1];
                        return (e.cts + e.duration) / e.timescale
                    }
                }, {
                    key: "timescale",
                    get: function() {
                        return this.mdia && this.mdia.mdhd ? this.mdia.mdhd.timescale : 1
                    }
                }, {
                    key: "sampleDesc",
                    get: function() {
                        return this.mdia && this.mdia.minf && this.mdia.minf.stbl && this.mdia.minf.stbl.stsd && this.mdia.minf.stbl.stsd.entries.length ? this.mdia.minf.stbl.stsd.entries[0] : null
                    }
                }, {
                    key: "codec",
                    get: function() {
                        return this.sampleDesc ? this.sampleDesc.getCodec() : ""
                    }
                }, {
                    key: "sampleDuration",
                    get: function() {
                        return this.samples && this.samples.length ? this.samples[0].duration : 0
                    }
                }]),
                n
            }(ve);
            Se.type = "trak",
            O.define(Se.type, Se);
            var we = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "tkhd", e, i)).data = null,
                    r.creationTime = null,
                    r.modificationTime = null,
                    r.trackId = null,
                    r.duration = null,
                    r.layer = null,
                    r.alternateGroup = null,
                    r.volume = null,
                    r.matrix = null,
                    r.width = null,
                    r.height = null,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = t;
                            t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                            var r = ne(e, t, this.size - 8 - (t - i));
                            return this.data = r.value,
                            i = r.position,
                            1 == this.version ? (t = X(t, 16),
                            r = Z(e, t, !0),
                            this.trackId = r.value,
                            t = r.position,
                            t = X(t, 4),
                            r = J(e, t, !0),
                            this.duration = r.value,
                            t = r.position) : (t = X(t, 8),
                            r = Z(e, t, !0),
                            this.trackId = r.value,
                            t = r.position,
                            t = X(t, 4),
                            r = Z(e, t, !0),
                            this.duration = r.value,
                            t = r.position),
                            t = X(t, 52),
                            r = Z(e, t, !0),
                            this.width = r.value,
                            t = r.position,
                            r = Z(e, t, !0),
                            this.height = r.value,
                            t = r.position,
                            i
                        }
                        if (t = c()(m()(n.prototype), "parse", this).call(this, e, t),
                        1 == this.version) {
                            var o = J(e, t, !0);
                            this.creationTime = o.value,
                            t = o.position,
                            o = J(e, t, !0),
                            this.modificationTime = o.value,
                            t = o.position,
                            o = Z(e, t, !0),
                            this.trackId = o.value,
                            t = o.position,
                            t = (o = Z(e, t, !0)).position,
                            o = J(e, t, !0),
                            this.duration = o.value,
                            t = o.position
                        } else {
                            var a = Z(e, t, !0);
                            this.creationTime = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.modificationTime = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.trackId = a.value,
                            t = a.position,
                            t = X(t, 4),
                            a = Z(e, t, !0),
                            this.duration = a.value,
                            t = a.position
                        }
                        t = X(t, 8);
                        var s = W(e, t);
                        return this.layer = s.value,
                        t = s.position,
                        s = W(e, t),
                        this.alternateGroup = s.value,
                        t = s.position,
                        s = W(e, t),
                        this.volume = s.value >> 8,
                        t = s.position,
                        s = function(e, t, n) {
                            var i = new Int32Array(n);
                            return G(i.buffer, 0, e.buffer, t, n * i.BYTES_PER_ELEMENT),
                            {
                                value: i,
                                position: t + i.byteLength
                            }
                        }(e, t = X(t, 2), 9),
                        this.matrix = s.value,
                        t = s.position,
                        s = Z(e, t, !0),
                        this.width = s.value,
                        t = s.position,
                        s = Z(e, t, !0),
                        this.height = s.value,
                        s.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data ? t = he(e, t, this.data) : (t = le(e, t, this.creationTime),
                        t = le(e, t, this.modificationTime),
                        t = le(e, t, this.trackId),
                        t = X(t, 4),
                        t = le(e, t, this.duration),
                        t = X(t, 8),
                        t = re(e, t, this.layer),
                        t = re(e, t, this.alternateGroup),
                        t = re(e, t, this.volume << 8),
                        t = function(e, t, n) {
                            if (n instanceof Int32Array)
                                G(e.buffer, t, n.buffer, 0, n.byteLength),
                                t += n.byteLength;
                            else
                                for (var i = 0; i < n.length; i++)
                                    t = V(e, t, n[i]);
                            return t
                        }(e, t = X(t, 2), this.matrix),
                        t = le(e, t, this.width),
                        t = le(e, t, this.height)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            we.type = "tkhd",
            we.skippable = !0,
            O.define(we.type, we);
            var ke = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "edts", e, i)).unwritable = !0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            ke.type = "edts",
            O.define(ke.type, ke);
            var Ce = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "elst", e, i)).entries = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = t;
                            t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                            var r = ne(e, t, this.size - 8 - (t - i));
                            return this.data = r.value,
                            r.position
                        }
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var o = Z(e, t, !0)
                          , a = o.value;
                        t = o.position;
                        for (var s = 0; s < a; s++) {
                            var l = {};
                            this.entries.push(l),
                            1 === this.version ? (o = J(e, t, !0),
                            l.segmentDuration = o.value,
                            t = o.position,
                            o = ee(0, t),
                            l.mediaTime = o.value,
                            t = o.position) : (o = Z(e, t, !0),
                            l.segmentDuration = o.value,
                            t = o.position,
                            o = Y(e, t, !0),
                            l.mediaTime = o.value,
                            t = o.position),
                            o = W(e, t),
                            l.mediaRateInteger = o.value,
                            t = o.position,
                            o = W(e, t),
                            l.mediaRateFraction = o.value,
                            t = o.position
                        }
                        return t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        if (t = i.position,
                        this.data)
                            t = he(e, t, this.data);
                        else {
                            t = le(e, t, this.entries.length);
                            for (var r = 0; r < this.entries.length; r++) {
                                var o = this.entries[r];
                                t = le(e, t, o.segmentDuration),
                                t = se(e, t, o.mediaTime),
                                t = re(e, t, o.mediaRateInteger),
                                t = re(e, t, o.mediaRateFraction)
                            }
                        }
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Ce.type = "elst",
            Ce.skippable = !0,
            O.define(Ce.type, Ce);
            var Me = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "mdia", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            Me.type = "mdia",
            O.define(Me.type, Me);
            var Pe = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "mdhd", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = t;
                            t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                            var r = ne(e, t, this.size - 8 - (t - i));
                            return this.data = r.value,
                            i = r.position,
                            1 == this.version ? (t = X(t, 16),
                            r = Z(e, t, !0),
                            this.timescale = r.value,
                            t = r.position,
                            r = J(e, t, !0),
                            this.duration = r.value,
                            t = r.position) : (t = X(t, 8),
                            r = Z(e, t, !0),
                            this.timescale = r.value,
                            t = r.position,
                            r = Z(e, t, !0),
                            this.duration = r.value,
                            t = r.position),
                            i
                        }
                        if (t = c()(m()(n.prototype), "parse", this).call(this, e, t),
                        1 == this.version) {
                            var o = J(e, t, !0);
                            this.creationTime = o.value,
                            t = o.position,
                            o = J(e, t, !0),
                            this.modificationTime = o.value,
                            t = o.position,
                            o = Z(e, t, !0),
                            this.timescale = o.value,
                            t = o.position,
                            o = J(e, t, !0),
                            this.duration = o.value,
                            t = o.position
                        } else {
                            var a = Z(e, t, !0);
                            this.creationTime = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.modificationTime = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.timescale = a.value,
                            t = a.position,
                            a = Z(e, t, !0),
                            this.duration = a.value,
                            t = a.position
                        }
                        var s = Q(e, t);
                        this.language = s.value,
                        t = s.position;
                        var l = [];
                        return l[0] = this.language >> 10 & 31,
                        l[1] = this.language >> 5 & 31,
                        l[2] = 31 & this.language,
                        this.languageString = String.fromCharCode(l[0] + 96, l[1] + 96, l[2] + 96),
                        X(t, 2)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data ? t = he(e, t, this.data) : (t = le(e, t, this.creationTime),
                        t = le(e, t, this.modificationTime),
                        t = le(e, t, this.timescale),
                        t = le(e, t, this.duration),
                        t = oe(e, t, this.language),
                        t = X(t, 2)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Pe.type = "mdhd",
            Pe.skippable = !0,
            O.define(Pe.type, Pe);
            var Re = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "hdlr", e, i)).name = "",
                    r.handler = "",
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (t = c()(m()(n.prototype), "parse", this).call(this, e, t),
                        0 === this.version) {
                            t = X(t, 4);
                            var i = te(e, t, 4);
                            this.handler = i.value,
                            t = i.position,
                            t = X(t, 12),
                            i = te(e, t, 12),
                            this.name = i.value,
                            t = i.position
                        }
                        return t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = X(t, 4),
                        t = ce(e, t, this.handler, 4),
                        t = X(t, 12),
                        t = ce(e, t, this.name, this.name.length + 1),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Re.type = "hdlr",
            Re.skippable = !0,
            O.define(Re.type, Re);
            var xe = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "minf", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            xe.type = "minf",
            O.define(xe.type, xe);
            var Ee = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "vmhd", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = t;
                            t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                            var r = ne(e, t, this.size - 8 - (t - i));
                            return this.data = r.value,
                            r.position
                        }
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var o = Q(e, t);
                        return this.graphicsMode = o.value,
                        o = function(e, t, n) {
                            var i = new Uint16Array(n);
                            return G(i.buffer, 0, e.buffer, t, n * i.BYTES_PER_ELEMENT),
                            {
                                value: i,
                                position: t + i.byteLength
                            }
                        }(e, t = o.position, 3),
                        this.opcolor = o.value,
                        o.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data ? t = he(e, t, this.data) : t = function(e, t, n) {
                            if (n instanceof Uint16Array)
                                G(e.buffer, t, n.buffer, 0, n.byteLength),
                                t += n.byteLength;
                            else
                                for (var i = 0; i < n.length; i++)
                                    t = U(e, t, n[i]);
                            return t
                        }(e, t = oe(e, t, this.graphicsMode), this.opcolor),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Ee.type = "vmhd",
            Ee.skippable = !0,
            O.define(Ee.type, Ee);
            var De = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "dinf", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            De.type = "dinf",
            O.define(De.type, De);
            var Le = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "url ", e, i)).location = "",
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t),
                        1 !== this.flags && (this.location = "")
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Le.type = "url ",
            O.define(Le.type, Le);
            var Ie = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "dref", e, i)).events = ["SUB_BOX"],
                    r.entries = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0)
                          , r = i.value;
                        t = i.position;
                        for (var o = 0; o < r; o++) {
                            var a = this.trigger("SUB_BOX", {
                                position: t
                            });
                            a && (t = a.position,
                            this.entries.push(a.box))
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        t = i.position,
                        t = le(e, t, this.entries.length);
                        for (var r = 0; r < this.entries.length; r++)
                            t = this.entries[r].write(e, t);
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Ie.type = "dref",
            O.define(Ie.type, Ie);
            var Oe = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "stbl", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            Oe.type = "stbl",
            O.define(Oe.type, Oe);
            var Ae = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "stsd", e, i)).events = ["SUB_BOX"],
                    r.entries = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0)
                          , r = i.value;
                        t = i.position;
                        for (var o = 0; o < r; o++) {
                            var a = this.trigger("SUB_BOX", {
                                position: t
                            });
                            a && (t = a.position,
                            this.entries.push(a.box))
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        t = i.position,
                        t = le(e, t, this.entries.length);
                        for (var r = 0; r < this.entries.length; r++)
                            t = this.entries[r].write(e, t);
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Ae.type = "stsd",
            O.define(Ae.type, Ae);
            var Ge = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i, r) {
                    return a()(this, n),
                    t.call(this, e, i, r)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = ne(e, t, 78);
                            this.data = i.value,
                            t = i.position
                        } else {
                            t = X(t, 6);
                            var r = Q(e, t);
                            this.dataReferenceIndex = r.value,
                            t = r.position,
                            t = X(t, 16),
                            r = Q(e, t),
                            this.width = r.value,
                            t = r.position,
                            r = Q(e, t),
                            this.height = r.value,
                            t = r.position,
                            r = Z(e, t, !0),
                            this.hResolution = r.value,
                            t = r.position,
                            r = Z(e, t, !0),
                            this.vResolution = r.value,
                            t = r.position,
                            t = (r = Z(e, t, !0)).position,
                            r = Q(e, t),
                            this.frameCount = r.value,
                            t = r.position,
                            r = K(e, t);
                            var o = Math.min(31, r.value);
                            t = r.position,
                            r = te(e, t, o),
                            this.compressorName = r.value,
                            t = r.position,
                            o < 31 && (t = (r = te(e, t, 31 - o)).position),
                            r = Q(e, t),
                            this.depth = r.value,
                            t = r.position,
                            t = X(t, 2)
                        }
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data ? t = he(e, t, this.data) : (t = X(t, 6),
                        t = oe(e, t, this.dataReferenceIndex),
                        t = X(t, 16),
                        t = oe(e, t, this.width),
                        t = oe(e, t, this.height),
                        t = le(e, t, this.hResolution),
                        t = le(e, t, this.vResolution),
                        t = X(t, 4),
                        t = oe(e, t, this.frameCount),
                        t = ie(e, t, Math.min(31, this.compressorName.length)),
                        t = ce(e, t, this.compressorName, 31),
                        t = oe(e, t, this.depth),
                        t = re(e, t, -1)),
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }, {
                    key: "getCodec",
                    value: function() {
                        return this.type.replace(".", "")
                    }
                }]),
                n
            }(ve);
            Ge.skippable = !0;
            var Ne = Ge;
            var Be = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "avc1", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "getCodec",
                    value: function() {
                        var e = c()(m()(n.prototype), "getCodec", this).call(this);
                        if (this.avcC)
                            return e + "." + pe(this.avcC.AVCProfileIndication) + pe(this.avcC.profileCompatibility) + pe(this.avcC.AVCLevelIndication)
                    }
                }]),
                n
            }(Ne);
            Be.type = "avc1",
            O.define(Be.type, Be);
            var $e = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "avcC", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i, r = ne(e, t, this.size - 8);
                            return this.data = r.value,
                            i = r.position,
                            t = X(t, 1),
                            r = K(e, t),
                            this.AVCProfileIndication = r.value,
                            t = r.position,
                            r = K(e, t),
                            this.profileCompatibility = r.value,
                            t = r.position,
                            r = K(e, t),
                            this.AVCLevelIndication = r.value,
                            t = r.position,
                            t = X(t, 1),
                            i
                        }
                        var o = K(e, t);
                        this.configurationVersion = o.value,
                        t = o.position,
                        o = K(e, t),
                        this.AVCProfileIndication = o.value,
                        t = o.position,
                        o = K(e, t),
                        this.profileCompatibility = o.value,
                        t = o.position,
                        o = K(e, t),
                        this.AVCLevelIndication = o.value,
                        t = o.position,
                        o = K(e, t),
                        this.lengthSizeMinusOne = 3 & o.value,
                        t = o.position,
                        o = K(e, t),
                        this.SPSNalusCount = 31 & o.value,
                        t = o.position;
                        var a = this.size - 8 - 6;
                        this.SPS = [];
                        for (var s = 0; s < this.SPSNalusCount; s++) {
                            this.SPS[s] = {};
                            var l = Q(e, t);
                            this.SPS[s].length = l.value,
                            t = l.position,
                            l = ne(e, t, this.SPS[s].length),
                            this.SPS[s].nalu = l.value,
                            t = l.position,
                            a -= 2 + this.SPS[s].length
                        }
                        o = K(e, t),
                        this.PPSNalusCount = o.value,
                        t = o.position,
                        a--,
                        this.PPS = [];
                        for (var u = 0; u < this.PPSNalusCount; u++) {
                            this.PPS[u] = {};
                            var c = Q(e, t);
                            this.PPS[u].length = c.value,
                            t = c.position,
                            c = ne(e, t, this.PPS[u].length),
                            this.PPS[u].nalu = c.value,
                            t = c.position,
                            a -= 2 + this.PPS[u].length
                        }
                        if (a > 0) {
                            var h = ne(e, t, a);
                            this.ext = h.value,
                            t = h.position
                        }
                        return t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        if (t = i.position,
                        this.data)
                            t = he(e, t, this.data);
                        else {
                            t = ie(e, t, this.configurationVersion),
                            t = ie(e, t, this.AVCProfileIndication),
                            t = ie(e, t, this.profileCompatibility),
                            t = ie(e, t, this.AVCLevelIndication),
                            t = ie(e, t, this.lengthSizeMinusOne + 252),
                            t = ie(e, t, this.SPS.length + 224);
                            for (var r = 0; r < this.SPS.length; r++)
                                t = oe(e, t, this.SPS[r].length),
                                t = he(e, t, this.SPS[r].nalu);
                            t = ie(e, t, this.PPS.length);
                            for (var o = 0; o < this.PPS.length; o++)
                                t = oe(e, t, this.PPS[o].length),
                                t = he(e, t, this.PPS[o].nalu);
                            this.ext && (t = he(e, t, this.ext))
                        }
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            $e.type = "avcC",
            $e.skippable = !0,
            O.define($e.type, $e);
            var Fe = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "pasp", e, i)).unwritable = !0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.keepData) {
                            var i = ne(e, t, this.size - 8);
                            this.data = i.value
                        }
                        var r = Z(e, t, !0);
                        this.hSpacing = r.value,
                        t = r.position,
                        r = Z(e, t, !0),
                        this.vSpacing = r.value,
                        t = r.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data && (t = he(e, t, this.data)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            Fe.type = "pasp",
            Fe.keepData = !0,
            O.define(Fe.type, Fe);
            var He = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "btrt", e, i)).unwritable = !0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.keepData) {
                            var i = ne(e, t, this.size - 8);
                            this.data = i.value
                        }
                        var r = Y(e, t, !0);
                        this.bufferSize = r.value,
                        t = r.position,
                        r = Y(e, t, !0),
                        this.maxBitrate = r.value,
                        t = r.position,
                        r = Y(e, t, !0),
                        this.avgBitrate = r.value,
                        t = r.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data && (t = he(e, t, this.data)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            He.type = "btrt",
            He.keepData = !0,
            O.define(He.type, He);
            var Ue = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "stts", e, i)).sampleCounts = [],
                    r.sampleDeltas = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0)
                          , r = i.value;
                        if (t = i.position,
                        0 === this.version)
                            for (var o = 0; o < r; o++) {
                                var a = Z(e, t, !0);
                                this.sampleCounts.push(a.value),
                                t = a.position;
                                var s = (a = Y(e, t, !0)).value;
                                t = a.position,
                                s < 0 && (s = 1),
                                this.sampleDeltas.push(s)
                            }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        t = i.position,
                        t = le(e, t, this.sampleCounts.length);
                        for (var r = 0; r < this.sampleCounts.length; r++)
                            t = le(e, t, this.sampleCounts[r]),
                            t = le(e, t, this.sampleDeltas[r]);
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Ue.type = "stts",
            O.define(Ue.type, Ue);
            var Ve = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "stss", e, i)).sampleNumbers = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0)
                          , r = i.value;
                        if (t = i.position,
                        0 === this.version)
                            for (var o = 0; o < r; o++) {
                                var a = Z(e, t, !0);
                                this.sampleNumbers.push(a.value),
                                t = a.position
                            }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = le(e, t, this.sampleNumbers.length),
                        t = de(e, t, this.sampleNumbers),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Ve.type = "stss",
            O.define(Ve.type, Ve);
            var je = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "ctts", e, i)).sampleCounts = [],
                    r.sampleOffsets = [],
                    r.unwritable = !0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0)
                          , r = i.value;
                        t = i.position;
                        for (var o = 0; o < r; o++) {
                            var a = Z(e, t, !0);
                            this.sampleCounts.push(a.value),
                            t = a.position,
                            a = Y(e, t, !0),
                            this.sampleOffsets.push(a.value),
                            t = a.position
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        t = i.position,
                        t = le(e, t, this.sampleCounts.length);
                        for (var r = 0; r < this.sampleCounts.length; r++)
                            t = le(e, t, this.sampleCounts[r]),
                            t = 1 === this.version ? se(e, t, this.sampleOffsets[r]) : le(e, t, this.sampleOffsets[r]);
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            je.type = "ctts",
            O.define(je.type, je);
            var ze = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "stsc", e, i)).firstChunk = [],
                    r.samplesPerChunk = [],
                    r.sampleDescriptionIndex = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0)
                          , r = i.value;
                        if (t = i.position,
                        0 === this.version)
                            for (var o = 0; o < r; o++) {
                                var a = Z(e, t, !0);
                                this.firstChunk.push(a.value),
                                t = a.position,
                                a = Z(e, t, !0),
                                this.samplesPerChunk.push(a.value),
                                t = a.position,
                                a = Z(e, t, !0),
                                this.sampleDescriptionIndex.push(a.value),
                                t = a.position
                            }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        t = i.position,
                        t = le(e, t, this.firstChunk.length);
                        for (var r = 0; r < this.firstChunk.length; r++)
                            t = le(e, t, this.firstChunk[r]),
                            t = le(e, t, this.samplesPerChunk[r]),
                            t = le(e, t, this.sampleDescriptionIndex[r]);
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            ze.type = "stsc",
            O.define(ze.type, ze);
            var Xe = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "stsz", e, i)).sampleSizes = [],
                    r.sampleSize = 0,
                    r.sampleCount = 0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (t = c()(m()(n.prototype), "parse", this).call(this, e, t),
                        0 === this.version) {
                            var i = Z(e, t, !0);
                            this.sampleSize = i.value,
                            t = i.position,
                            i = Z(e, t, !0),
                            this.sampleCount = i.value,
                            t = i.position;
                            for (var r = 0; r < this.sampleCount; r++)
                                if (0 === this.sampleSize) {
                                    var o = Z(e, t, !0);
                                    this.sampleSizes.push(o.value),
                                    t = o.position
                                } else
                                    this.sampleSizes[r] = this.sampleSize
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = !0;
                        if (this.sampleSizes.length > 0)
                            for (var r = 0; r + 1 < this.sampleSizes.length; ) {
                                if (this.sampleSizes[r + 1] !== this.sampleSizes[0]) {
                                    i = !1;
                                    break
                                }
                                r++
                            }
                        else
                            i = !1;
                        var o = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = o.position,
                        t = i ? le(e, t, this.sampleSizes[0]) : X(t, 4),
                        t = le(e, t, this.sampleSizes.length),
                        i || (t = de(e, t, this.sampleSizes)),
                        o.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Xe.type = "stsz",
            O.define(Xe.type, Xe);
            var Ke = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "stco", e, i)).chunkOffsets = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0)
                          , r = i.value;
                        if (t = i.position,
                        0 === this.version)
                            for (var o = 0; o < r; o++) {
                                var a = Z(e, t, !0);
                                this.chunkOffsets.push(a.value),
                                t = a.position
                            }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = le(e, t, this.chunkOffsets.length),
                        t = de(e, t, this.chunkOffsets),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            Ke.type = "stco",
            O.define(Ke.type, Ke);
            var Qe = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "udta", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            Qe.type = "udta",
            O.define(Qe.type, Qe);
            var We = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "meta", e, i)).events = ["SUB_BOX"],
                    r.boxes = [],
                    r.lastPosition = -1,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        for (t = c()(m()(n.prototype), "parse", this).call(this, e, t); t < this.offset + this.size; ) {
                            this.lastPosition = t;
                            var i = this.trigger("SUB_BOX", {
                                position: t
                            });
                            if (i && (t = i.position,
                            this[i.type] = i.box,
                            this.boxes.push(i.type)),
                            t == this.lastPosition)
                                break
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            We.type = "meta",
            O.define(We.type, We);
            var qe = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "ilst", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            qe.type = "ilst",
            O.define(qe.type, qe);
            var Ze = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "free", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            Ze.type = "free",
            O.define(Ze.type, Ze);
            var Ye = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "mdat", e, i)).data = null,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data && (t = he(e, t, this.data)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            Ye.type = "mdat",
            O.define(Ye.type, Ye);
            var Je = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "mvex", e, i)).listBoxes = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            Je.type = "mvex",
            O.define(Je.type, Je);
            var et = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "mehd", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (t = c()(m()(n.prototype), "parse", this).call(this, e, t),
                        1 & this.flags && (this.version = 1),
                        1 == this.version) {
                            var i = J(e, t, !0);
                            this.fragmentDuration = i.value,
                            t = i.position
                        } else {
                            var r = Z(e, t, !0);
                            this.fragmentDuration = r.value,
                            t = r.position
                        }
                        return t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            et.type = "mehd",
            O.define(et.type, et);
            var tt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "trex", e, i)).trackId = null,
                    r.defaultSampleDescriptionIndex = null,
                    r.defaultSampleDuration = null,
                    r.defaultSampleSize = null,
                    r.defaultSampleFlags = null,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0);
                        return this.trackId = i.value,
                        t = i.position,
                        i = Z(e, t, !0),
                        this.defaultSampleDescriptionIndex = i.value,
                        t = i.position,
                        i = Z(e, t, !0),
                        this.defaultSampleDuration = i.value,
                        t = i.position,
                        i = Z(e, t, !0),
                        this.defaultSampleSize = i.value,
                        t = i.position,
                        i = Z(e, t, !0),
                        this.defaultSampleFlags = i.value,
                        i.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = le(e, t, this.trackId),
                        t = le(e, t, this.defaultSampleDescriptionIndex),
                        t = le(e, t, this.defaultSampleDuration),
                        t = le(e, t, this.defaultSampleSize),
                        t = le(e, t, this.defaultSampleFlags),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            tt.type = "trex",
            O.define(tt.type, tt);
            var nt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "moof", e, i)).listBoxes = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }, {
                    key: "adjustDataOffset",
                    value: function(e) {
                        this.traf && this.traf.trun && (this.traf.trun.dataOffset = this.size + 8),
                        le(e, this.dataOffsetPosition, this.dataOffset)
                    }
                }, {
                    key: "dataOffset",
                    get: function() {
                        return this.traf && this.traf.trun ? this.traf.trun.dataOffset : 0
                    }
                }, {
                    key: "dataOffsetPosition",
                    get: function() {
                        return this.traf && this.traf.trun ? this.traf.trun.dataOffsetPosition : 0
                    }
                }]),
                n
            }(ve);
            nt.type = "moof",
            O.define(nt.type, nt);
            var it = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "mfhd", e, i)).sequenceNumber = 0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = Z(e, t, !0);
                        return this.sequenceNumber = i.value,
                        i.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = le(e, t, this.sequenceNumber),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            it.type = "mfhd",
            O.define(it.type, it);
            var rt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "traf", e, i)).listBoxes = [],
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ve);
            rt.type = "traf",
            O.define(rt.type, rt);
            var ot = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "tfhd", e, i)).trackId = 0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = le(e, t, this.trackId),
                        1 & this.flags && (t = ue(e, t, this.baseDataOffset)),
                        2 & this.flags && (t = le(e, t, this.defaultSampleDescriptionIndex)),
                        8 & this.flags && (t = le(e, t, this.defaultSampleDuration)),
                        16 & this.flags && (t = le(e, t, this.defaultSampleSize)),
                        32 & this.flags && (t = le(e, t, this.defaultSampleFlags)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            ot.type = "tfhd",
            O.define(ot.type, ot);
            var at = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "tfdt", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        this.version = this.baseMediaDecodeTime > Math.pow(2, 32) - 1 ? 1 : 0;
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = 1 === this.version ? ue(e, t, this.baseMediaDecodeTime) : le(e, t, this.baseMediaDecodeTime),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            at.type = "tfdt",
            O.define(at.type, at);
            var st = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "trun", e, i)).flags = 0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        t = i.position,
                        t = le(e, t, this.sampleCount),
                        1 & this.flags && (this.dataOffsetPosition = t,
                        t = se(e, t, this.dataOffset)),
                        4 & this.flags && (t = le(e, t, this.firstSampleFlags));
                        for (var r = 0; r < this.sampleCount; r++)
                            256 & this.flags && (t = le(e, t, this.sampleDuration[r])),
                            512 & this.flags && (t = le(e, t, this.sampleSize[r])),
                            1024 & this.flags && (t = le(e, t, this.sampleFlags[r])),
                            2048 & this.flags && (t = 0 === this.version ? le(e, t, this.sampleCompositionTimeOffset[r]) : se(e, t, this.sampleCompositionTimeOffset[r]));
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            st.type = "trun",
            O.define(st.type, st);
            var lt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "smhd", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i = t;
                            t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                            var r = ne(e, t, this.size - 8 - (t - i));
                            return this.data = r.value,
                            r.position
                        }
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var o = Q(e, t);
                        return this.balance = o.value,
                        o.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data ? t = he(e, t, this.data) : (t = oe(e, t, this.balance),
                        t = X(t, 2)),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(_e);
            lt.type = "smhd",
            lt.skippable = !0,
            O.define(lt.type, lt);
            var ut = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i, r) {
                    var o;
                    return a()(this, n),
                    (o = t.call(this)).type = e,
                    o.size = i,
                    o.offset = r,
                    o
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {}
                }, {
                    key: "write",
                    value: function(e, t) {
                        return t
                    }
                }]),
                n
            }(P);
            var ct = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, n.type, e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        var n = Q(e, t);
                        if (this.esId = n.value,
                        t = n.position,
                        n = K(e, t),
                        this.flags = n.value,
                        t = n.position,
                        this.size -= 3,
                        128 & this.flags ? (n = Q(e, t),
                        this.depEsId = n.value,
                        t = n.position,
                        this.size -= 2) : this.depEsId = 0,
                        64 & this.flags) {
                            var i = K(e, t)
                              , r = i.value;
                            t = i.position,
                            i = te(e, t, r),
                            this.URL = i.value,
                            t = i.position,
                            this.size -= r + 1
                        } else
                            this.URL = "";
                        if (32 & this.flags) {
                            var o = Q(e, t);
                            this.ocrEsId = o.value,
                            t = o.position,
                            this.size -= 2
                        } else
                            this.ocrEsId = 0;
                        return t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        return t
                    }
                }]),
                n
            }(ut);
            ct.type = 3..toString();
            var ht = ct;
            var dt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, n.type, e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        var n = ne(e, t, this.size);
                        return this.data = n.value,
                        n.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        return t
                    }
                }]),
                n
            }(ut);
            dt.type = 5..toString();
            var ft = dt;
            var pt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, n.type, e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        var n = K(e, t);
                        return this.oti = n.value,
                        t = n.position,
                        n = K(e, t),
                        this.streamType = n.value,
                        t = n.position,
                        n = q(e, t),
                        this.bufferSize = n.value,
                        t = n.position,
                        n = Z(e, t, !0),
                        this.maxBitrate = n.value,
                        t = n.position,
                        n = Z(e, t, !0),
                        this.avgBitrate = n.value,
                        t = n.position,
                        this.size -= 13,
                        t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        return t
                    }
                }]),
                n
            }(ut);
            pt.type = 4..toString();
            var gt = pt;
            var mt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, n.type, e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        var n = ne(e, t, this.size);
                        return this.data = n.value,
                        n.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        return t
                    }
                }]),
                n
            }(ut);
            mt.type = 6..toString();
            var vt = mt;
            var yt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "esds", e, i)).lastPosition = -1,
                    r.boxes = [],
                    r.boxDef = {},
                    r.boxDef[ht.type] = ht,
                    r.boxDef[gt.type] = gt,
                    r.boxDef[ft.type] = ft,
                    r.boxDef[vt.type] = vt,
                    r
                }
                return l()(n, [{
                    key: "parseDesc",
                    value: function(e, t) {
                        var n = 0
                          , i = K(e, t)
                          , r = i.value;
                        t = i.position;
                        var o = (i = K(e, t)).value;
                        for (t = i.position; 128 & o; ) {
                            n = (127 & o) << 7;
                            var a = K(e, t);
                            o = a.value,
                            t = a.position
                        }
                        return {
                            size: n += 127 & o,
                            position: t,
                            type: r + ""
                        }
                    }
                }, {
                    key: "parse",
                    value: function(e, t) {
                        t = c()(m()(n.prototype), "parse", this).call(this, e, t);
                        var i = ne(e, t, this.size - 12);
                        this.data = i.value,
                        t = i.position;
                        for (var r = new DataView(this.data.buffer), o = 0; o < this.size - 12; ) {
                            var a = this.parseDesc(r, o);
                            if (a) {
                                o = a.position;
                                var s = a.type;
                                if (!this.boxDef[s])
                                    break;
                                var l = new this.boxDef[s](a.size,o);
                                o = l.parse(r, o),
                                this[s] = l,
                                this.boxes.push(s)
                            }
                        }
                        return t
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        this.data && (t = he(e, t, this.data)),
                        i.writeSize(t),
                        t
                    }
                }, {
                    key: "getCodec",
                    value: function() {
                        var e = this[gt.type]
                          , t = this[ft.type]
                          , n = e ? e.oti : 0
                          , i = "";
                        return t && t.data && 31 == (i = (248 & t.data[0]) >> 3) && t.data.length >= 2 && (i = 32 + ((7 & t.data[0]) << 3) + ((224 & t.data[1]) >> 5)),
                        function(e, t) {
                            var n = Number(e).toString(16);
                            for (t = null == t ? t = 2 : t; n.length < t; )
                                n = "0" + n;
                            return n
                        }(n) + (i ? "." + i : "")
                    }
                }]),
                n
            }(_e);
            yt.type = "esds",
            O.define(yt.type, yt);
            var _t = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "mp4a", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        return c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        return c()(m()(n.prototype), "write", this).call(this, e, t)
                    }
                }, {
                    key: "getCodec",
                    value: function() {
                        var e = c()(m()(n.prototype), "getCodec", this).call(this);
                        return this.esds ? e + "." + this.esds.getCodec() : e
                    }
                }]),
                n
            }(function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i, r) {
                    return a()(this, n),
                    t.call(this, e, i, r)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        t = X(t, 6);
                        var i = Q(e, t);
                        this.dataReferenceIndex = i.value,
                        t = i.position,
                        t = X(t, 8),
                        i = Q(e, t),
                        this.channelCount = i.value,
                        t = i.position,
                        i = Q(e, t),
                        this.sampleSize = i.value,
                        t = i.position,
                        t = X(t, 4),
                        i = Z(e, t, !0),
                        this.samplerate = i.value / 65536,
                        t = i.position,
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = X(t, 6),
                        t = oe(e, t, this.dataReferenceIndex),
                        t = X(t, 8),
                        t = oe(e, t, this.channelCount),
                        t = oe(e, t, this.sampleSize),
                        t = X(t, 4),
                        t = le(e, t, this.samplerate << 16),
                        t = i.writeSubBoxes(e, t),
                        i.writeSize(t),
                        t
                    }
                }, {
                    key: "getCodec",
                    value: function() {
                        return this.type.replace(".", "")
                    }
                }]),
                n
            }(ve));
            _t.type = "mp4a",
            O.define(_t.type, _t);
            var Tt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "keys", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.keepData) {
                            var i = ne(e, t, this.size - 8);
                            this.data = i.value
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            Tt.type = "keys",
            Tt.keepData = !0,
            O.define(Tt.type, Tt);
            var bt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "hvc1", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        c()(m()(n.prototype), "parse", this).call(this, e, t)
                    }
                }, {
                    key: "getCodec",
                    value: function() {
                        var e = c()(m()(n.prototype), "getCodec", this).call(this);
                        if (this.hvcC) {
                            switch (e += ".",
                            this.hvcC.generalProfileSpace) {
                            case 0:
                                e += "";
                                break;
                            case 1:
                                e += "A";
                                break;
                            case 2:
                                e += "B";
                                break;
                            case 3:
                                e += "C"
                            }
                            e += this.hvcC.generalProfileIdc,
                            e += ".";
                            for (var t = this.hvcC.generalProfileCompatibility, i = 0, r = 0; r < 32 && (i |= 1 & t,
                            31 != r); r++)
                                i <<= 1,
                                t >>= 1;
                            e += pe(i, 0),
                            e += ".",
                            0 === this.hvcC.generalTierFlag ? e += "L" : e += "H",
                            e += this.hvcC.generalLevelIdc;
                            for (var o = !1, a = "", s = 5; s >= 0; s--)
                                (this.hvcC.generalConstraintIndicator[s] || o) && (a = "." + pe(this.hvcC.generalConstraintIndicator[s], 0) + a,
                                o = !0);
                            e += a
                        }
                        return e
                    }
                }]),
                n
            }(Ne);
            bt.type = "hvc1",
            O.define(bt.type, bt);
            var St = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "hvcC", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        if (n.skippable) {
                            var i, r = ne(e, t, this.size - 8);
                            this.data = r.value,
                            i = r.position,
                            t = X(t, 1);
                            var o = (r = K(e, t)).value;
                            return t = r.position,
                            this.generalProfileSpace = o >> 6,
                            this.generalTierFlag = (32 & o) >> 5,
                            this.generalProfileIdc = 31 & o,
                            r = Z(e, t, !0),
                            this.generalProfileCompatibility = r.value,
                            t = r.position,
                            r = ne(e, t, 6),
                            this.generalConstraintIndicator = r.value,
                            t = r.position,
                            r = K(e, t),
                            this.generalLevelIdc = r.value,
                            t = r.position,
                            i
                        }
                        var a = K(e, t);
                        this.configurationVersion = a.value,
                        t = a.position;
                        var s = (a = K(e, t)).value;
                        t = a.position,
                        this.generalProfileSpace = s >> 6,
                        this.generalTierFlag = (32 & s) >> 5,
                        this.generalProfileIdc = 31 & s,
                        a = Z(e, t, !0),
                        this.generalProfileCompatibility = a.value,
                        t = a.position,
                        a = ne(e, t, 6),
                        this.generalConstraintIndicator = a.value,
                        t = a.position,
                        a = K(e, t),
                        this.generalLevelIdc = a.value,
                        t = a.position,
                        a = Q(e, t),
                        this.minSpatialSegmentationIdc = 4095 & a.value,
                        t = a.position,
                        a = K(e, t),
                        this.parallelismType = 3 & a.value,
                        t = a.position,
                        a = K(e, t),
                        this.chromaFormatIdc = 3 & a.value,
                        t = a.position,
                        a = K(e, t),
                        this.bitDepthLumaMinus8 = 7 & a.value,
                        t = a.position,
                        a = K(e, t),
                        this.bitDepthChromaMinus8 = 7 & a.value,
                        t = a.position,
                        a = Q(e, t),
                        this.avgFrameRate = a.value,
                        t = a.position,
                        s = (a = K(e, t)).value,
                        t = a.position,
                        this.constantFrameRate = s >> 6,
                        this.numTemporalLayers = 1 & s,
                        this.temporalIdNested = 1 & s,
                        this.lengthSizeMinusOne = 3 & s,
                        this.naluArrays = [];
                        var l = (a = K(e, t)).value;
                        t = a.position;
                        for (var u = 0; u < l; u++) {
                            var c = [];
                            this.naluArrays.push(c),
                            s = (a = K(e, t)).value,
                            t = a.position,
                            c.completeness = (128 & s) >> 7,
                            c.naluType = 63 & s;
                            var h = (a = Q(e, t)).value;
                            t = a.position;
                            for (var d = 0; d < h; d++) {
                                var f = {};
                                c.push(f);
                                var p = (a = Q(e, t)).value;
                                t = a.position,
                                a = ne(e, t, p),
                                f.data = a.value,
                                t = a.position
                            }
                        }
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        if (t = i.position,
                        this.data)
                            t = he(e, t, this.data);
                        else {
                            t = ie(e, t, this.configurationVersion),
                            t = ie(e, t, this.generalProfileSpace << 6 | this.generalTierFlag << 5 | this.generalProfileIdc),
                            t = le(e, t, this.generalProfileCompatibility),
                            t = he(e, t, this.generalConstraintIndicator),
                            t = ie(e, t, this.generalLevelIdc),
                            t = oe(e, t, this.minSpatialSegmentationIdc + (15 << 24)),
                            t = ie(e, t, this.parallelismType + 252),
                            t = ie(e, t, this.chromaFormatIdc + 252),
                            t = ie(e, t, this.bitDepthLumaMinus8 + 248),
                            t = ie(e, t, this.bitDepthChromaMinus8 + 248),
                            t = oe(e, t, this.avgFrameRate),
                            t = ie(e, t, (this.constantFrameRate << 6) + (this.numTemporalLayers << 3) + (this.temporalIdNested << 2) + this.lengthSizeMinusOne),
                            t = ie(e, t, this.naluArrays.length);
                            for (var r = 0; r < this.naluArrays.length; r++) {
                                t = ie(e, t, (this.naluArrays[r].completeness << 7) + this.naluArrays[r].naluType),
                                t = oe(e, t, this.naluArrays[r].length);
                                for (var o = 0; o < this.naluArrays[r].length; o++)
                                    t = oe(e, t, this.naluArrays[r][o].data.length),
                                    t = he(e, t, this.naluArrays[r][o].data)
                            }
                        }
                        return i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            St.type = "hvcC",
            St.skippable = !0,
            O.define(St.type, St);
            var wt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    var r;
                    return a()(this, n),
                    (r = t.call(this, "colr", e, i)).unwritable = !0,
                    r
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        var n = te(e, t, 4);
                        if (this.colourType = n.value,
                        t = n.position,
                        "nclx" === this.colourType) {
                            n = Q(e, t),
                            this.colourPrimaries = n.value,
                            t = n.position,
                            n = Q(e, t),
                            this.transferCharacteristics = n.value,
                            t = n.position,
                            n = Q(e, t),
                            this.matrixCoefficients = n.value,
                            t = n.position;
                            var i = (n = K(e, t)).value;
                            t = n.position,
                            this.fullRangeFlag = i >> 7
                        } else
                            "rICC" !== this.colourType && "prof" !== this.colourType || (n = ne(this.size - 4),
                            this.ICCProfile = n.value,
                            t = n.position)
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            wt.type = "colr",
            wt.keepData = !1,
            O.define(wt.type, wt);
            var kt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e, i) {
                    return a()(this, n),
                    t.call(this, "fiel", e, i)
                }
                return l()(n, [{
                    key: "parse",
                    value: function(e, t) {
                        var n = K(e, t);
                        this.fieldCount = n.value,
                        t = n.position,
                        n = K(e, t),
                        this.fieldOrdering = n.value,
                        t = n.position
                    }
                }, {
                    key: "write",
                    value: function(e, t) {
                        var i = c()(m()(n.prototype), "write", this).call(this, e, t);
                        return t = i.position,
                        t = ie(e, t, this.fieldCount),
                        t = ie(e, t, this.fieldOrdering),
                        i.writeSize(t),
                        t
                    }
                }]),
                n
            }(ge);
            kt.type = "fiel",
            kt.keepData = !1,
            O.define(kt.type, kt);
            var Ct = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n() {
                    var e;
                    return a()(this, n),
                    e = t.call(this),
                    M()(k()(e), "setPosition", (function(t) {
                        e.position = t
                    }
                    )),
                    M()(k()(e), "setEndPosition", (function(t) {
                        e.endPosition = t
                    }
                    )),
                    M()(k()(e), "_isEnoughForSize", (function() {
                        return e.endPosition - e.position >= 4
                    }
                    )),
                    M()(k()(e), "_isEnoughForType", (function() {
                        return e.endPosition - e.position >= 4
                    }
                    )),
                    M()(k()(e), "_isEnoughForBox", (function(t) {
                        return e.endPosition - e.position >= t
                    }
                    )),
                    M()(k()(e), "start", (function() {
                        for (e.paused = !1; e.position < e.endPosition && !e.moovReady && (e.lastPosition = e.position,
                        e._parse(),
                        e.lastPosition != e.position && !e.paused); )
                            ;
                    }
                    )),
                    M()(k()(e), "updateBuffer", (function(t) {
                        e.dataView = new DataView(t),
                        e.trigger("UPDATED", null)
                    }
                    )),
                    M()(k()(e), "_parse", (function() {
                        var t = e.position;
                        if (!e._isEnoughForSize())
                            return e.paused = !0,
                            e.trigger("PAUSED", {
                                type: null,
                                size: null,
                                position: e.position
                            }),
                            !1;
                        var n = Z(e.dataView, e.position, !0)
                          , i = n.value;
                        if (e.position = n.position,
                        !e._isEnoughForType())
                            return e.paused = !0,
                            e.position = t,
                            e.trigger("PAUSED", {
                                type: null,
                                size: i,
                                position: e.position
                            }),
                            !1;
                        var r = (n = te(e.dataView, e.position, 4)).value;
                        if (!e._isEnoughForBox(i))
                            return e.paused = !0,
                            e.position = t,
                            e.trigger("PAUSED", {
                                type: r,
                                size: i,
                                position: e.position
                            }),
                            !1;
                        if (e.position = n.position,
                        !O.isSupported(r))
                            return e.position = t + i,
                            {
                                type: r,
                                box: null,
                                position: e.position
                            };
                        e.trigger("STARTED", {
                            type: r,
                            offset: t,
                            size: i
                        });
                        var o = O.create(r, i, t);
                        return o.on("SUB_BOX", (function(t) {
                            return e.position = t.position,
                            e._parse()
                        }
                        )),
                        o.parse(e.dataView, e.position),
                        e.position = t + i,
                        e.trigger("ENDED", {
                            type: r,
                            offset: t,
                            size: i,
                            box: o
                        }),
                        "moov" == r ? (e.moovReady = !0,
                        !1) : {
                            type: r,
                            box: o,
                            position: e.position
                        }
                    }
                    )),
                    M()(k()(e), "release", (function() {
                        e.dataView = null,
                        e.position = 0,
                        e.endPosition = 0,
                        e.lastPosition = -1,
                        e.paused = !0,
                        e.moovReady = !1
                    }
                    )),
                    e.dataView = null,
                    e.position = 0,
                    e.endPosition = 0,
                    e.lastPosition = -1,
                    e.paused = !0,
                    e.moovReady = !1,
                    e.events = ["STARTED", "PAUSED", "ENDED", "UPDATED"],
                    e
                }
                return l()(n)
            }(P);
            var Mt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e) {
                    var i;
                    return a()(this, n),
                    i = t.call(this),
                    M()(k()(i), "inputBuffer", (function(e) {
                        i.memory.inputBuffer(e)
                    }
                    )),
                    M()(k()(i), "release", (function() {
                        i.boxParser.release()
                    }
                    )),
                    i.boxParser = new Ct,
                    i.boxParser.on("STARTED", (function(e) {}
                    )),
                    i.boxParser.on("PAUSED", (function(e) {}
                    )),
                    i.boxParser.on("ENDED", (function(e) {
                        var t = (e.type + "_READY").toUpperCase();
                        i.trigger(t, e)
                    }
                    )),
                    i.boxParser.on("UPDATED", (function(e) {
                        i.boxParser.start()
                    }
                    )),
                    i.memory = e,
                    i.memory.on("UPDATED", (function(e) {
                        i.boxParser.moovReady || (i.boxParser.setEndPosition(i.memory.endPosition),
                        i.boxParser.updateBuffer(e))
                    }
                    )),
                    i.events = ["MOOV_READY", "FTYP_READY"],
                    i
                }
                return l()(n, [{
                    key: "moovReady",
                    get: function() {
                        return this.boxParser.moovReady
                    }
                }]),
                n
            }(P);
            var Pt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e) {
                    var i;
                    return a()(this, n),
                    i = t.call(this),
                    M()(k()(i), "initFromConf", (function(e) {
                        i.conf = e;
                        var t = i.conf.getTracks()
                          , n = i.conf.moov.mvhd;
                        i.conf.moov.mvhd.duration = 0;
                        for (var r = i.conf.ftyp, o = 0; o < t.length; o++) {
                            var a = t[o];
                            a.resetForFMP4();
                            var s = O.create("moov", 0, 0);
                            s.addSubBox("mvhd", n),
                            s.addSubBox("trak", [a]);
                            var l = O.create("mvex", 0, 0)
                              , u = O.create("trex", 0, 0);
                            u.trackId = a.id,
                            u.defaultSampleDescriptionIndex = 1,
                            u.defaultSampleDuration = a.sampleDuration,
                            u.defaultSampleSize = 0,
                            u.defaultSampleFlags = 65536,
                            l.addSubBox("trex", u),
                            s.addSubBox("mvex", l),
                            i.trigger("META_READY", {
                                trackId: a.idString,
                                buffer: i.createFmp4MoovBuffer(r, s),
                                startSampleIndex: -1,
                                stopSampleIndex: -1,
                                eos: !1
                            })
                        }
                        i.ready = !0
                    }
                    )),
                    M()(k()(i), "createFmp4MoovBuffer", (function(e, t) {
                        var n = i.memory.createBuffer(i.conf.fileSize)
                          , r = new DataView(n)
                          , o = 0;
                        return o = e.write(r, o),
                        t.write(r, o),
                        fe(r.buffer, e.size + t.size)
                    }
                    )),
                    M()(k()(i), "getSample", (function(e, t) {
                        var n = e.samples[t];
                        n.data || (n.data = new Uint8Array(n.size));
                        var r = i.memory.findNextBufferEndPos(n.offset) - n.offset;
                        return n.size > r ? null : (z(n.data.buffer, 0, i.memory.buffer, n.offset - i.memory.startPosition, n.size),
                        i.readLength += n.size,
                        e.samples[t].read = !0,
                        n)
                    }
                    )),
                    M()(k()(i), "createMoof", (function(e) {
                        var t = O.create("moof", 0, 0)
                          , n = O.create("mfhd", 0, 0);
                        t.addSubBox("mfhd", n),
                        n.sequenceNumber = i.nextMoofIndex,
                        i.nextMoofIndex++;
                        var r = O.create("traf", 0, 0);
                        t.addSubBox("traf", r);
                        var o = O.create("tfhd", 0, 0);
                        r.addSubBox("tfhd", o),
                        o.trackId = e.trackId,
                        o.flags = 131072;
                        var a = O.create("tfdt", 0, 0);
                        r.addSubBox("tfdt", a),
                        a.baseMediaDecodeTime = e.dts - 0;
                        var s = O.create("trun", 0, 0);
                        return r.addSubBox("trun", s),
                        s.flags = 3841,
                        s.dataOffset = 0,
                        s.firstSampleFlags = 0,
                        s.sampleCount = 1,
                        s.sampleDuration = [e.duration],
                        s.sampleSize = [e.size],
                        s.sampleFlags = [e.iFrame ? 1 << 25 : 65536],
                        s.sampleCompositionTimeOffset = [e.cts - e.dts],
                        t
                    }
                    )),
                    M()(k()(i), "createFragment", (function(e, t, n, r) {
                        var o = i.getSample(e, t);
                        if (!o)
                            return r;
                        var a = i.createMoof(o);
                        r = a.write(n, r),
                        i.moofSize = a.size,
                        a.adjustDataOffset(n);
                        var s = O.create("mdat", 0, 0);
                        return s.data = o.data,
                        s.write(n, r)
                    }
                    )),
                    M()(k()(i), "createFMP4", (function(e) {
                        for (var t = e.idString, n = e.name, r = 0, o = i.memory.createBuffer(i.fragmentBufferSize), a = new DataView(o), s = !1, l = e.sampleIndex; e.sampleIndex < e.samples.length; ) {
                            0 == i.moofSize && (i.moofSize = e.samples[e.sampleIndex].size);
                            var u = r + e.samples[e.sampleIndex].size + i.moofSize + i.mdatHeaderSize;
                            if (u >= i.fragmentBufferSize) {
                                0 == r && (i.fragmentBufferSize = u),
                                s = !0;
                                break
                            }
                            var c = i.createFragment(e, e.sampleIndex, a, r);
                            if ((e.isVideo ? i.videoPaused : i.audioPaused) || c == r) {
                                e.isVideo ? i.videoPaused = !0 : i.audioPaused = !0,
                                i.trigger("PAUSED", {
                                    trackId: t,
                                    trackName: n,
                                    index: e.sampleIndex,
                                    timestamp: e.samples[e.sampleIndex].timestamp,
                                    offset: e.samples[e.sampleIndex].offset
                                });
                                break
                            }
                            r = c,
                            e.sampleIndex++
                        }
                        if (0 != r && !i.paused) {
                            var h = fe(a.buffer, r);
                            i.trigger("DATA_READY", {
                                trackId: t,
                                startSampleIndex: l,
                                stopSampleIndex: e.sampleIndex,
                                buffer: h,
                                eos: e.sampleIndex == e.samples.length
                            })
                        }
                        s && i.createFMP4(e)
                    }
                    )),
                    M()(k()(i), "createVideoFMP4", (function() {
                        return new Promise((function(e, t) {
                            var n = i.conf.getVideoTrack();
                            setTimeout((function() {
                                i.createFMP4(n),
                                e()
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    M()(k()(i), "createAudioFMP4", (function() {
                        return new Promise((function(e, t) {
                            var n = i.conf.getAudioTrack();
                            setTimeout((function() {
                                i.createFMP4(n),
                                e()
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    M()(k()(i), "start", (function() {
                        if (i.ready) {
                            var e = [];
                            return i.paused = !1,
                            i.videoPaused && (i.videoPaused = !1,
                            e.push(i.createVideoFMP4())),
                            i.audioPaused && (i.audioPaused = !1,
                            e.push(i.createAudioFMP4())),
                            Promise.all(e)
                        }
                    }
                    )),
                    M()(k()(i), "pause", (function() {
                        i.videoPaused = !0,
                        i.audioPaused = !0,
                        i.paused = !0
                    }
                    )),
                    M()(k()(i), "release", (function() {
                        i.ready = !1,
                        i.readLength = 0,
                        i.nextMoofIndex = 0,
                        i.moofSize = 0,
                        i.paused = !0,
                        i.shouldStart = !1,
                        i.videoPaused = !0,
                        i.audioPaused = !0
                    }
                    )),
                    i.ready = !1,
                    i.readLength = 0,
                    i.nextMoofIndex = 0,
                    i.paused = !0,
                    i.shouldStart = !1,
                    i.fragmentBufferSize = 1048576,
                    i.memory = e,
                    i.moofSize = 0,
                    i.mdatHeaderSize = 8,
                    i.videoPaused = !0,
                    i.audioPaused = !0,
                    i.events = ["META_READY", "DATA_READY", "PAUSED"],
                    i
                }
                return l()(n)
            }(P);
            var Rt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e) {
                    var i;
                    return a()(this, n),
                    i = t.call(this),
                    M()(k()(i), "_initMediaSource", (function() {
                        i.mediaSource = new MediaSource,
                        i.el.src = window.URL.createObjectURL(i.mediaSource);
                        var e = function() {
                            window.URL.revokeObjectURL(i.el.src),
                            i.shouldEos = !1,
                            i.ready = !0,
                            i.initSourceBuffer(),
                            i.trigger("OPENED", null)
                        };
                        return i.mediaSource.addEventListener("sourceopen", e),
                        i.mediaSource.addEventListener("sourceended", (function e() {
                            i.ready = !1,
                            i.trigger("ENDED", null),
                            i.mediaSource.removeEventListener("sourceended", e)
                        }
                        )),
                        i.mediaSource.addEventListener("sourceclose", (function e() {
                            i.ready = !1,
                            i.trigger("CLOSED", null),
                            i.mediaSource.removeEventListener("sourceclose", e)
                        }
                        )),
                        function() {
                            i.el.pause(),
                            i.checkSourceBufferReady() ? i.mediaSource.endOfStream() : i.shouldEos = !0,
                            i.mediaSource.removeEventListener("sourceopen", e)
                        }
                    }
                    )),
                    M()(k()(i), "init", (function(e) {
                        e && (i.conf = e,
                        i.initSourceBuffer())
                    }
                    )),
                    M()(k()(i), "initSourceBuffer", (function() {
                        i.conf && i.ready && (i.mediaSource.duration = i.conf.duration,
                        i.conf.getTracks().forEach((function(e, t) {
                            var n = 'video/mp4; codecs="' + e.codec + '"'
                              , r = e.idString;
                            if (MediaSource.isTypeSupported(n)) {
                                var o = i.mediaSource.addSourceBuffer(n);
                                o.addEventListener("abort", (function(e) {}
                                )),
                                o.addEventListener("update", (function(e) {}
                                )),
                                o.addEventListener("updatestart", (function(e) {}
                                )),
                                o.addEventListener("error", (function(e) {}
                                )),
                                o.addEventListener("updateend", (function(e) {
                                    i.feedBuffer(r),
                                    i.trigger("UPDATED", {
                                        trackId: r
                                    }),
                                    o.bufferCompleteCount++,
                                    o.eosBufferIndex >= 0 && o.eosBufferIndex == o.bufferCompleteCount && (o.eos = !0,
                                    i.checkEndOfStream(r)),
                                    i.shouldEos && i.checkSourceBufferReady() && (i.mediaSource.endOfStream(),
                                    i.shouldEos = !1)
                                }
                                )),
                                o.bufferInputCount = 0,
                                o.bufferCompleteCount = 0,
                                o.eosBufferIndex = -1,
                                o.eos = !1,
                                i.sourceBuffers[r] = o,
                                i.inputBuffers[r] || (i.inputBuffers[r] = []),
                                i.feedBuffer(r)
                            }
                        }
                        )))
                    }
                    )),
                    M()(k()(i), "checkEndOfStream", (function() {
                        var e = !0;
                        for (var t in i.sourceBuffers)
                            e = e && i.sourceBuffers[t].eos;
                        e && i.checkSourceBufferReady() && i.mediaSource.endOfStream()
                    }
                    )),
                    M()(k()(i), "feedBuffer", (function(e) {
                        if (i.checkSourceBufferReady(e) && i.hasPendingBuffer(e)) {
                            var t = i.inputBuffers[e].shift();
                            i.sourceBuffers[e].appendBuffer(t.buffer),
                            i.sourceBuffers[e].bufferInputCount++,
                            t.eos && (i.sourceBuffers[e].eosBufferIndex = i.sourceBuffers[e].bufferInputCount)
                        }
                    }
                    )),
                    M()(k()(i), "hasPendingBuffer", (function(e) {
                        return !!i.inputBuffers[e] && 0 != i.inputBuffers[e].length
                    }
                    )),
                    M()(k()(i), "clearPendingBuffers", (function() {
                        for (var e in i.inputBuffers)
                            i.inputBuffers[e] = []
                    }
                    )),
                    M()(k()(i), "checkSourceBufferReady", (function(e) {
                        var t = !0;
                        if (e)
                            t = !!i.sourceBuffers[e] && !i.sourceBuffers[e].updating;
                        else
                            for (var n in i.sourceBuffers)
                                t = t && !i.sourceBuffers[n].updating;
                        return i.msAvailable && t
                    }
                    )),
                    M()(k()(i), "inputBuffer", (function(e, t) {
                        i.inputBuffers[e] || (i.inputBuffers[e] = []),
                        i.inputBuffers[e].push(t),
                        i.feedBuffer(e)
                    }
                    )),
                    M()(k()(i), "start", (function() {
                        return i.el.play()
                    }
                    )),
                    M()(k()(i), "stop", (function() {
                        i.el.pause()
                    }
                    )),
                    M()(k()(i), "release", (function() {
                        i._releaseMediaSource && i._releaseMediaSource(),
                        i._releaseMediaSource = i._initMediaSource(),
                        i.conf = null,
                        i.ready = !1,
                        i.sourceBuffers = {},
                        i.inputBuffers = {},
                        i.bufferInputCount = 0,
                        i.bufferCompleteCount = 0,
                        i.eosBufferIndex = -1
                    }
                    )),
                    i.el = e,
                    i.conf = null,
                    i.ready = !1,
                    i.sourceBuffers = {},
                    i.inputBuffers = {},
                    i.bufferInputCount = 0,
                    i.bufferCompleteCount = 0,
                    i.eosBufferIndex = -1,
                    i.shouldEos = !1,
                    i._releaseMediaSource = i._initMediaSource(),
                    i.events = ["OPENED", "CLOSED", "UPDATED"],
                    i
                }
                return l()(n, [{
                    key: "msAvailable",
                    get: function() {
                        return this.mediaSource && "open" === this.mediaSource.readyState
                    }
                }]),
                n
            }(P);
            var xt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n() {
                    var e;
                    return a()(this, n),
                    e = t.call(this),
                    M()(k()(e), "inputFTYP", (function(t) {
                        t && t.box && (e.ftyp = t.box)
                    }
                    )),
                    M()(k()(e), "inputMOOV", (function(t) {
                        t && t.box && (e.moov = t.box,
                        e.getTracks().forEach((function(e) {
                            e.buildSamples()
                        }
                        )),
                        e.moov.timescale && (e.duration = e.moov.duration / e.moov.timescale),
                        e.fileSize && e.duration && (e.durationPerUnitSize = e.duration / (e.fileSize - e.metadataSize)),
                        e.trigger("CONF_READY", k()(e)))
                    }
                    )),
                    M()(k()(e), "getTracks", (function() {
                        return e.moov.trak
                    }
                    )),
                    M()(k()(e), "getTrack", (function(t) {
                        var n = e.moov.trak.filter((function(e) {
                            return e.name == t
                        }
                        ));
                        return n.length ? n[0] : null
                    }
                    )),
                    M()(k()(e), "getVideoTrack", (function() {
                        return e.getTrack("vide")
                    }
                    )),
                    M()(k()(e), "getAudioTrack", (function() {
                        return e.getTrack("soun")
                    }
                    )),
                    M()(k()(e), "getISamples", (function(e) {
                        return e.samples.filter((function(e) {
                            return e.iFrame
                        }
                        ))
                    }
                    )),
                    M()(k()(e), "getVideoISamples", (function() {
                        var t = e.getVideoTrack();
                        return e.getISamples(t)
                    }
                    )),
                    M()(k()(e), "getAudioISamples", (function() {
                        var t = e.getAudioTrack();
                        return e.getISamples(t)
                    }
                    )),
                    M()(k()(e), "getGopSize", (function() {
                        var t = e.getGopOffsets();
                        return t.length >= 2 ? t[1] - t[0] : 0
                    }
                    )),
                    M()(k()(e), "getGopOffsets", (function() {
                        e.iVideoSamples.length || (e.iVideoSamples = e.getVideoISamples());
                        for (var t = e.getAudioISamples(), n = e.iVideoSamples.map((function(e) {
                            return e.offset
                        }
                        )), i = -1, r = [], o = 1; o < e.iVideoSamples.length; o++) {
                            for (var a = e.iVideoSamples[o - 1], s = e.iVideoSamples[o], l = a.dts / a.timescale, u = (s.dts + s.duration) / s.timescale, c = i, h = -1, d = i + 1; d < t.length; d++) {
                                var f = t[d];
                                c < 0 && (f.dts / f.timescale <= l && (c = d),
                                c >= 0 && r.push(t[c].offset)),
                                (f.dts + f.duration) / f.timescale <= u && (h = d)
                            }
                            h >= 0 && (r.push(t[h].offset),
                            i = h)
                        }
                        return n.map((function(e, t) {
                            return 0 == t ? Math.min(e, r[t]) : Math.max(e, r[t])
                        }
                        ))
                    }
                    )),
                    M()(k()(e), "getDataOffsetWithTime", (function(t) {
                        for (var n = e.getTracks(), i = 1 / 0, r = 0; r < n.length; r++) {
                            var o = n[r];
                            if (!(t > o.calculatedDuration)) {
                                var a = o.getSampleOffsetWithTime(t);
                                a < i && (i = a)
                            }
                        }
                        return i
                    }
                    )),
                    M()(k()(e), "release", (function() {
                        e.ftyp = null,
                        e.moov = null,
                        e.fileSize = 0,
                        e.iVideoSamples = []
                    }
                    )),
                    e.ftyp = null,
                    e.moov = null,
                    e.fileSize = 0,
                    e.duration = 0,
                    e.durationPerUnitSize = 0,
                    e.iVideoSamples = [],
                    e.events = ["CONF_READY"],
                    e
                }
                return l()(n, [{
                    key: "metadataSize",
                    get: function() {
                        return this.moov ? this.moov.size : 0
                    }
                }]),
                n
            }(P);
            var Et = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n() {
                    var e;
                    return a()(this, n),
                    e = t.call(this),
                    M()(k()(e), "inputBuffer", (function(t) {
                        e.buffer ? e.buffer = function(e, t, n) {
                            if (e + t.byteLength < n.byteLength) {
                                var i = new ArrayBuffer(n.byteLength)
                                  , r = new Uint8Array(i);
                                return r.set(new Uint8Array(n), 0),
                                r.set(new Uint8Array(t), e),
                                i
                            }
                            var o = new ArrayBuffer(e + t.byteLength)
                              , a = new Uint8Array(o);
                            return a.set(new Uint8Array(n), 0),
                            a.set(new Uint8Array(t), e),
                            o
                        }(t.chunkOffset, t.data, e.buffer) : (e.buffer = t.data,
                        e.offset = t.chunkOffset),
                        e.chunkInfo.push({
                            offset: t.chunkOffset,
                            size: t.chunkSize
                        }),
                        e.chunkInfo = function(e, t, n) {
                            if (0 === e.length)
                                return [];
                            e.sort((function(e, n) {
                                return e[t] - n[t]
                            }
                            ));
                            for (var i = [e[0]], r = 1; r < e.length; r++) {
                                var o = e[r]
                                  , a = i[i.length - 1];
                                o[t] > a[t] + a[n] ? i.push(o) : o[t] + o[n] > a[t] + a[n] && (a[n] += o[t] + o[n] - (a[t] + a[n]))
                            }
                            return i
                        }(e.chunkInfo, "offset", "size"),
                        e.trigger("UPDATED", e.buffer)
                    }
                    )),
                    M()(k()(e), "createBuffer", (function(e) {
                        return e = e || S.defaultBufferSize,
                        new ArrayBuffer(e)
                    }
                    )),
                    M()(k()(e), "findNextBufferEndPos", (function(t) {
                        for (var n = 0; n < e.chunkInfo.length; n++) {
                            var i = e.chunkInfo[n];
                            if (i.offset <= t && i.offset + i.size >= t)
                                return i.offset + i.size
                        }
                        return t
                    }
                    )),
                    M()(k()(e), "release", (function() {
                        e.buffer = null,
                        e.chunkInfo = [],
                        e.offset = 0
                    }
                    )),
                    e.buffer = null,
                    e.offset = 0,
                    e.chunkInfo = [],
                    e.events = ["UPDATED"],
                    e
                }
                return l()(n, [{
                    key: "startPosition",
                    get: function() {
                        return this.buffer ? this.offset : 0
                    }
                }, {
                    key: "endPosition",
                    get: function() {
                        return this.buffer ? this.offset + this.buffer.byteLength : 0
                    }
                }]),
                n
            }(P);
            var Dt, Lt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e) {
                    var i;
                    return a()(this, n),
                    i = t.call(this),
                    M()(k()(i), "_stopBufferChecking", (function() {
                        i.timeoutId && (window.clearTimeout(i.timeoutId),
                        i.timeoutId = null)
                    }
                    )),
                    M()(k()(i), "_startBufferChecking", (function() {
                        i._eof || i.paused ? i._stopBufferChecking() : (i.isEnough ? i.trigger("BUFFER_ENOUGH", null) : i.trigger("BUFFER_UNENOUGH", null),
                        i.timeoutId = window.setTimeout((function() {
                            i._startBufferChecking()
                        }
                        ), i._checkingInterval))
                    }
                    )),
                    i.el = e,
                    i.timeoutId = null,
                    i.paused = !0,
                    i._eof = !1,
                    i.rebufferCount = 0,
                    i._initEnoughTime = b.bufferEnoughTime,
                    i._enoughTime = b.bufferEnoughTime,
                    i._maxTime = b.bufferMaxTime,
                    i._checkingInterval = b.bufferCheckingInterval,
                    i.events = ["BUFFER_ENOUGH", "BUFFER_UNENOUGH"],
                    i
                }
                return l()(n, [{
                    key: "start",
                    value: function() {
                        this.paused = !1,
                        this._startBufferChecking()
                    }
                }, {
                    key: "stop",
                    value: function() {
                        this.paused = !0
                    }
                }, {
                    key: "release",
                    value: function() {
                        this.stop(),
                        this._stopBufferChecking(),
                        this._eof = !1,
                        this._enoughTime = this._initEnoughTime,
                        this.rebufferCount = 0
                    }
                }, {
                    key: "countRebuffer",
                    value: function() {
                        this.rebufferCount++,
                        this._enoughTime < this._maxTime && (this._enoughTime += .5)
                    }
                }, {
                    key: "checkAvailable",
                    value: function(e) {
                        for (var t = this.isEnough, n = 0; n < this.el.buffered.length; n++) {
                            var i = this.el.buffered.start(n)
                              , r = this.el.buffered.end(n);
                            if (e >= i && e <= r)
                                return {
                                    requestTime: t ? e : r,
                                    isEnough: t
                                }
                        }
                        return {
                            requestTime: e,
                            isEnough: !1
                        }
                    }
                }, {
                    key: "enoughTime",
                    set: function(e) {
                        e && (this._initEnoughTime = e,
                        this._enoughTime = e)
                    }
                }, {
                    key: "maxTime",
                    set: function(e) {
                        e && (this._maxTime = e)
                    }
                }, {
                    key: "checkingInterval",
                    set: function(e) {
                        e && (this._checkingInterval = e)
                    }
                }, {
                    key: "eof",
                    set: function(e) {
                        this._eof = e,
                        e && this._stopBufferChecking()
                    }
                }, {
                    key: "ranges",
                    get: function() {
                        for (var e = [], t = 0; t < this.el.buffered.length; t++) {
                            var n = this.el.buffered.start(t)
                              , i = this.el.buffered.end(t);
                            e.push([n, i])
                        }
                        return e
                    }
                }, {
                    key: "pendingBufferDuration",
                    get: function() {
                        for (var e = -1, t = 0; t < this.el.buffered.length; t++) {
                            var n = this.el.buffered.start(t)
                              , i = this.el.buffered.end(t);
                            if (this.el.currentTime >= n && this.el.currentTime < i) {
                                e = i;
                                break
                            }
                        }
                        return e < 0 ? 0 : e - this.el.currentTime
                    }
                }, {
                    key: "isEnough",
                    get: function() {
                        return !!this._eof || this.pendingBufferDuration >= this._enoughTime
                    }
                }]),
                n
            }(P), It = ["loadstart", "downloaderError", "downloaderChunkReady", "memoryCompleted"], Ot = new Uint8Array(16);
            function At() {
                if (!Dt && !(Dt = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto)))
                    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
                return Dt(Ot)
            }
            for (var Gt = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i, Nt = [], Bt = 0; Bt < 256; ++Bt)
                Nt.push((Bt + 256).toString(16).substr(1));
            var $t = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                  , n = (Nt[e[t + 0]] + Nt[e[t + 1]] + Nt[e[t + 2]] + Nt[e[t + 3]] + "-" + Nt[e[t + 4]] + Nt[e[t + 5]] + "-" + Nt[e[t + 6]] + Nt[e[t + 7]] + "-" + Nt[e[t + 8]] + Nt[e[t + 9]] + "-" + Nt[e[t + 10]] + Nt[e[t + 11]] + Nt[e[t + 12]] + Nt[e[t + 13]] + Nt[e[t + 14]] + Nt[e[t + 15]]).toLowerCase();
                if (!function(e) {
                    return "string" == typeof e && Gt.test(e)
                }(n))
                    throw TypeError("Stringified UUID is invalid");
                return n
            }
              , Ft = function(e, t, n) {
                var i = (e = e || {}).random || (e.rng || At)();
                if (i[6] = 15 & i[6] | 64,
                i[8] = 63 & i[8] | 128,
                t) {
                    n = n || 0;
                    for (var r = 0; r < 16; ++r)
                        t[n + r] = i[r];
                    return t
                }
                return $t(i)
            };
            var Ht = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n() {
                    var e, i, r, o, s, l;
                    return a()(this, n),
                    (l = t.call(this)).indexedDB = "undefined" == typeof window ? null : (null === (e = window) || void 0 === e ? void 0 : e.indexedDB) || (null === (i = window) || void 0 === i ? void 0 : i.webkitIndexedDB) || (null === (r = window) || void 0 === r ? void 0 : r.mozIndexedDB) || (null === (o = window) || void 0 === o ? void 0 : o.OIndexedDB) || (null === (s = window) || void 0 === s ? void 0 : s.msIndexedDB),
                    l.request = null,
                    l.db = null,
                    l.store = null,
                    l
                }
                return l()(n, [{
                    key: "init",
                    value: function() {
                        var e = this;
                        return this.indexedDB ? new Promise((function(t, n) {
                            var i = e.indexedDB.open(e.dbName, e.dbVersion);
                            i.onsuccess = function(n) {
                                e.db = n.target.result,
                                t()
                            }
                            ,
                            i.onerror = function(e) {
                                n()
                            }
                            ,
                            i.onupgradeneeded = function(t) {
                                e.store = t.currentTarget.result.createObjectStore(e.dbStoreName)
                            }
                        }
                        )) : null
                    }
                }, {
                    key: "setData",
                    value: function(e, t) {
                        var n = this;
                        return new Promise((function(i, r) {
                            n.db || r();
                            var o = n.db.transaction(n.dbStoreName, "readwrite").objectStore(n.dbStoreName).put(t, e);
                            o.onsuccess = function() {
                                i()
                            }
                            ,
                            o.onerror = function() {
                                r()
                            }
                        }
                        ))
                    }
                }, {
                    key: "getData",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            t.db || i();
                            var r = t.db.transaction(t.dbStoreName, "readonly").objectStore(t.dbStoreName).get(e);
                            r.onsuccess = function(e) {
                                var t = e.target.result;
                                n(t)
                            }
                            ,
                            r.onerror = function() {
                                i()
                            }
                        }
                        ))
                    }
                }, {
                    key: "hasData",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            t.db || i();
                            var r = t.db.transaction(t.dbStoreName, "readonly").objectStore(t.dbStoreName).getKey(e);
                            r.onsuccess = function(e) {
                                var t = e.target.result;
                                n(t)
                            }
                            ,
                            r.onerror = function() {
                                i()
                            }
                        }
                        ))
                    }
                }, {
                    key: "clearData",
                    value: function() {
                        var e = this;
                        return new Promise((function(t, n) {
                            e.db || n();
                            var i = e.db.transaction(e.dbStoreName, "readwrite").objectStore(e.dbStoreName).clear();
                            i.onsuccess = function(e) {
                                t()
                            }
                            ,
                            i.onerror = function() {
                                n()
                            }
                        }
                        ))
                    }
                }]),
                n
            }(function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n() {
                    var e;
                    return a()(this, n),
                    (e = t.call(this)).dbName = "tiktok",
                    e.dbVersion = 1,
                    e.dbStoreName = "playback",
                    e
                }
                return l()(n, [{
                    key: "init",
                    value: function() {}
                }, {
                    key: "setData",
                    value: function(e, t) {}
                }, {
                    key: "getData",
                    value: function(e) {}
                }, {
                    key: "clearData",
                    value: function() {}
                }]),
                n
            }(P));
            var Ut = new (function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n() {
                    var e;
                    return a()(this, n),
                    (e = t.call(this)).impl = new Ht,
                    e.readyPromise = e.impl.init(),
                    e
                }
                return l()(n, [{
                    key: "save",
                    value: function(e, t) {
                        var n = this;
                        if (this.readyPromise)
                            return this.readyPromise.then((function() {
                                return n.impl.setData(e, t)
                            }
                            ))
                    }
                }, {
                    key: "export",
                    value: function(e) {
                        var t = this;
                        if (this.readyPromise)
                            return this.readyPromise.then((function() {
                                return t.impl.getData(e)
                            }
                            ))
                    }
                }, {
                    key: "check",
                    value: function(e) {
                        var t = this;
                        if (this.readyPromise)
                            return this.readyPromise.then((function() {
                                return t.impl.hasData(e)
                            }
                            ))
                    }
                }, {
                    key: "clear",
                    value: function() {
                        var e = this;
                        if (this.readyPromise)
                            return this.readyPromise.then((function() {
                                return e.impl.clearData()
                            }
                            ))
                    }
                }]),
                n
            }(P));
            var Vt = function(e) {
                d()(u, e);
                var t, n, i, o, s = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(u);
                function u(e) {
                    var t;
                    return a()(this, u),
                    (t = s.call(this, "Stream", e, It)).id = Ft(),
                    t._initMemory(),
                    t._initEvents(),
                    t._initConf(),
                    t._initDownloader(),
                    t._initDemuxer(),
                    t._initRemuxer(),
                    t._initBuffer(),
                    t._initMSE(),
                    t
                }
                return l()(u, [{
                    key: "_initMemory",
                    value: function() {
                        var e = this;
                        this.memory = new Et,
                        this.memory.on("UPDATED", function() {
                            var t = r()(y.a.mark((function t(n) {
                                return y.a.wrap((function(t) {
                                    for (; ; )
                                        switch (t.prev = t.next) {
                                        case 0:
                                            e.downloader.eof && e.eventManager.trigger("MEMORY_COMPLETED", n);
                                        case 1:
                                        case "end":
                                            return t.stop()
                                        }
                                }
                                ), t)
                            }
                            )));
                            return function(e) {
                                return t.apply(this, arguments)
                            }
                        }())
                    }
                }, {
                    key: "_initEvents",
                    value: function() {
                        var e = this;
                        c()(m()(u.prototype), "_initEvents", this).call(this),
                        this.eventManager.proxy("canplay", (function(e) {}
                        )),
                        this.eventManager.proxy("waiting", (function(t) {
                            e.buffer.countRebuffer(),
                            e.downloader.loading || e.downloader.eof || e.downloader.resume()
                        }
                        )),
                        this.eventManager.proxy("play", (function(t) {
                            e.buffer.start()
                        }
                        )),
                        this.eventManager.proxy("pause", (function(t) {
                            e.buffer.stop()
                        }
                        )),
                        this.eventManager.proxy("seeking", (function(e) {}
                        ))
                    }
                }, {
                    key: "_initMSE",
                    value: function() {
                        var e = this;
                        this.mse = new Rt(this.el),
                        this.mse.on("OPENED", (function() {}
                        )),
                        this.mse.on("CLOSED", (function() {}
                        )),
                        this.mse.on("UPDATED", (function(t) {
                            e.buffer.isEnough && e.downloader.pause()
                        }
                        ))
                    }
                }, {
                    key: "_initConf",
                    value: function() {
                        var e = this;
                        this.conf = new xt,
                        this.conf.on("CONF_READY", (function(t) {
                            e.mse.init(t),
                            e.remuxer.initFromConf(t)
                        }
                        ))
                    }
                }, {
                    key: "_initBuffer",
                    value: function() {
                        var e = this;
                        this.buffer = new Lt(this.el),
                        this.config.bufferEnoughTime && (this.bufferEnoughTime = this.config.bufferEnoughTime),
                        this.config.bufferMaxTime && (this.buffer.maxTime = this.config.bufferMaxTime),
                        this.config.bufferCheckingInterval && (this.buffer.checkingInterval = this.config.bufferCheckingInterval),
                        this.buffer.on("BUFFER_UNENOUGH", (function() {
                            e.el.playbackRate = .9,
                            e.downloader.resume()
                        }
                        )),
                        this.buffer.on("BUFFER_ENOUGH", (function() {
                            e.el.playbackRate = 1,
                            e.downloader.pause()
                        }
                        ))
                    }
                }, {
                    key: "_initDemuxer",
                    value: function() {
                        var e = this;
                        this.demuxer = new Mt(this.memory),
                        this.demuxer.on("FTYP_READY", (function(t) {
                            e.conf.inputFTYP(t)
                        }
                        )),
                        this.demuxer.on("MOOV_READY", (function(t) {
                            e.conf.inputMOOV(t),
                            e.downloader.switchToCommonSize()
                        }
                        ))
                    }
                }, {
                    key: "_initRemuxer",
                    value: function() {
                        var e = this;
                        this.remuxer = new Pt(this.memory),
                        this.remuxer.on("META_READY", (function(t) {
                            e.mse.inputBuffer(t.trackId, t),
                            e.remuxer.start()
                        }
                        )),
                        this.remuxer.on("DATA_READY", (function(t) {
                            e.mse.inputBuffer(t.trackId, t)
                        }
                        )),
                        this.remuxer.on("PAUSED", (function(e) {}
                        ))
                    }
                }, {
                    key: "_initDownloader",
                    value: function() {
                        var e = this;
                        this.downloader = new I({
                            withCredentials: this.config.withCredentials
                        }),
                        this.metaChunkSize = Math.ceil(this.config.metaChunkSize || b.metaChunkSize),
                        this.dataChunkSize = Math.ceil(this.config.dataChunkSize || b.dataChunkSize),
                        this.downloader.on("FILE_SIZE", (function(t) {
                            e.conf.fileSize = t
                        }
                        )),
                        this.downloader.on("CHUNK_READY", (function(t) {
                            e.demuxer.inputBuffer(t),
                            e.remuxer.start(),
                            e.eventManager.trigger("downloaderChunkReady", {
                                chunkSize: t.chunkSize,
                                networkDuration: t.networkDuration,
                                speed: t.networkDuration ? 8 * t.chunkSize / 1024 / t.networkDuration : 0
                            })
                        }
                        )),
                        this.downloader.on("EOF", (function() {
                            e.buffer.eof = !0
                        }
                        )),
                        this.downloader.on("ERROR", (function(t) {
                            e.eventManager.trigger("downloaderError", t)
                        }
                        ))
                    }
                }, {
                    key: "loadFromLocal",
                    value: (o = r()(y.a.mark((function e(t) {
                        var n, i;
                        return y.a.wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    Ut.check(t);
                                case 2:
                                    if (!(n = e.sent)) {
                                        e.next = 8;
                                        break
                                    }
                                    return e.next = 6,
                                    Ut.export(t);
                                case 6:
                                    i = e.sent,
                                    this.loadFromBuffer(i);
                                case 8:
                                    return e.abrupt("return", !!n);
                                case 9:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    ))),
                    function(e) {
                        return o.apply(this, arguments)
                    }
                    )
                }, {
                    key: "loadFromBuffer",
                    value: function(e) {
                        this.release(),
                        this.demuxer.inputBuffer({
                            chunkOffset: 0,
                            data: e
                        }),
                        this.remuxer.start(),
                        this.eventManager.trigger("loadstart", {
                            target: this.el,
                            type: "loadstart"
                        })
                    }
                }, {
                    key: "saveToLocal",
                    value: (i = r()(y.a.mark((function e(t, n) {
                        return y.a.wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    Ut.save(t, n);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    ))),
                    function(e, t) {
                        return i.apply(this, arguments)
                    }
                    )
                }, {
                    key: "exportFromLocal",
                    value: (n = r()(y.a.mark((function e(t) {
                        return y.a.wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    Ut.export(t);
                                case 2:
                                    return e.abrupt("return", e.sent);
                                case 3:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    ))),
                    function(e) {
                        return n.apply(this, arguments)
                    }
                    )
                }, {
                    key: "load",
                    value: (t = r()(y.a.mark((function e(t) {
                        return y.a.wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (this.downloader) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    if (this.downloader.url != t) {
                                        e.next = 4;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 4:
                                    this.release(),
                                    this.downloader.url = t,
                                    this.eventManager.trigger("loadstart", {
                                        target: this.el,
                                        type: "loadstart"
                                    }),
                                    this.downloader.start();
                                case 8:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e, this)
                    }
                    ))),
                    function(e) {
                        return t.apply(this, arguments)
                    }
                    )
                }, {
                    key: "pause",
                    value: function() {
                        this.mse.stop()
                    }
                }, {
                    key: "seek",
                    value: function(e) {
                        if (this.demuxer.moovReady) {
                            this.element.currentTime = e,
                            this.remuxer.pause();
                            var t = this.buffer.checkAvailable(e);
                            if (!t.isEnough) {
                                e = t.requestTime,
                                this.pause(),
                                this.downloader.pause(),
                                this.mse.clearPendingBuffers();
                                var n = this.conf.getDataOffsetWithTime(e);
                                n = this.memory.findNextBufferEndPos(n),
                                this.downloader.resume(n)
                            }
                        }
                    }
                }, {
                    key: "release",
                    value: function() {
                        c()(m()(u.prototype), "release", this).call(this),
                        this.downloader.release(),
                        this.demuxer.release(),
                        this.remuxer.release(),
                        this.mse.release(),
                        this.conf.release(),
                        this.memory.release(),
                        this.buffer.release()
                    }
                }, {
                    key: "metaChunkSize",
                    set: function(e) {
                        this.downloader.initChunkSize = e
                    }
                }, {
                    key: "dataChunkSize",
                    set: function(e) {
                        this.downloader.commonChunkSize = e
                    }
                }, {
                    key: "bufferEnoughTime",
                    set: function(e) {
                        this.buffer.enoughTime = e
                    }
                }, {
                    key: "element",
                    get: function() {
                        return this.el
                    }
                }, {
                    key: "data",
                    get: function() {
                        return this.memory.buffer
                    }
                }]),
                u
            }(L);
            Vt.storage = Ut;
            var jt = Vt
              , zt = [];
            var Xt = function(e) {
                d()(n, e);
                var t = function(e) {
                    var t = function() {
                        if ("undefined" == typeof Reflect || !Reflect.construct)
                            return !1;
                        if (Reflect.construct.sham)
                            return !1;
                        if ("function" == typeof Proxy)
                            return !0;
                        try {
                            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                            ))),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }();
                    return function() {
                        var n, i = m()(e);
                        if (t) {
                            var r = m()(this).constructor;
                            n = Reflect.construct(i, arguments, r)
                        } else
                            n = i.apply(this, arguments);
                        return p()(this, n)
                    }
                }(n);
                function n(e) {
                    var i;
                    return a()(this, n),
                    (i = t.call(this, "Basic", e, zt))._initEvents(),
                    i
                }
                return l()(n, [{
                    key: "_initEvents",
                    value: function() {
                        c()(m()(n.prototype), "_initEvents", this).call(this)
                    }
                }]),
                n
            }(L)
        }
        ])
    },
    97293: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.0003 8.5C19.3059 8.5 15.5003 12.3056 15.5003 17C15.5003 21.6944 19.3059 25.5 24.0003 25.5C28.6947 25.5 32.5003 21.6944 32.5003 17C32.5003 12.3056 28.6947 8.5 24.0003 8.5ZM24.0003 27.5C17.824 27.5 13.0161 31.3744 11.0087 36.877C10.5186 38.2204 11.5522 39.5363 12.88 39.5363H35.1186C36.4468 39.5363 37.4805 38.2196 36.9896 36.876C34.9805 31.3773 30.1772 27.5 24.0003 27.5Z"
            }))
        }
    }
    ,
    42278: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.0001 11.5C20.9625 11.5 18.5001 13.9624 18.5001 17C18.5001 20.0376 20.9625 22.5 24.0001 22.5C27.0377 22.5 29.5001 20.0376 29.5001 17C29.5001 13.9624 27.0377 11.5 24.0001 11.5ZM15.5001 17C15.5001 12.3056 19.3057 8.5 24.0001 8.5C28.6945 8.5 32.5001 12.3056 32.5001 17C32.5001 21.6944 28.6945 25.5 24.0001 25.5C19.3057 25.5 15.5001 21.6944 15.5001 17ZM24.0001 30.5C19.1458 30.5 15.0586 33.7954 13.8578 38.2712C13.7147 38.8046 13.2038 39.1741 12.6591 39.0827L11.6729 38.9173C11.1282 38.8259 10.7571 38.3085 10.8888 37.7722C12.3362 31.8748 17.6559 27.5 24.0001 27.5C30.3443 27.5 35.664 31.8748 37.1114 37.7722C37.2431 38.3085 36.872 38.8259 36.3273 38.9173L35.3411 39.0827C34.7964 39.1741 34.2855 38.8046 34.1424 38.2712C32.9416 33.7954 28.8544 30.5 24.0001 30.5Z"
            }))
        }
    }
    ,
    14178: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.7125 32.0323C24.3109 32.5525 23.5252 32.5505 23.1263 32.0282L14.4015 20.6071C13.8988 19.949 14.368 19 15.1962 19H32.7385C33.569 19 34.0375 19.9537 33.53 20.6111L24.7125 32.0323Z"
            }))
        }
    }
    ,
    6807: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M26.2627 5.14086C27.0249 4.83858 27.8944 5.03217 28.4564 5.62927L44.4564 22.6293C45.1812 23.3994 45.1812 24.6006 44.4564 25.3707L28.4564 42.3707C27.8944 42.9678 27.0249 43.1614 26.2627 42.8591C25.5005 42.5569 25 41.82 25 41V32.5621C19.365 32.9136 14.8898 34.7029 11.736 36.49C9.97604 37.4874 8.63311 38.4812 7.73929 39.2164C7.29282 39.5837 6.95983 39.8853 6.74434 40.0888C6.63664 40.1905 6.55845 40.2676 6.51025 40.316C6.48616 40.3402 6.46958 40.3572 6.46058 40.3665L6.4564 40.3707C6.45604 40.3711 6.45568 40.3715 6.45532 40.3719C6.45502 40.3722 6.45472 40.3725 6.45442 40.3728C6.454 40.3733 6.45358 40.3737 6.45316 40.3742C6.45305 40.3743 6.45326 40.3741 6.45316 40.3742C5.89108 40.9683 5.02332 41.1608 4.26271 40.8591C3.50049 40.5569 3 39.82 3 39C3 37.3105 3.71048 34.991 4.78949 32.6236C5.90132 30.1843 7.51673 27.4503 9.55935 24.8805C13.2198 20.2754 18.5168 15.8846 25 15.1179V7.00061C25 6.18065 25.5005 5.44313 26.2627 5.14086ZM29 12.0432V17C29 18.1046 28.1046 19 27 19C21.3967 19 16.4105 22.6897 12.6906 27.3695C11.0464 29.4381 9.71235 31.626 8.74629 33.6101C9.07093 33.411 9.41022 33.2104 9.76397 33.01C13.7457 30.7537 19.5829 28.5 27 28.5C28.1046 28.5 29 29.3954 29 30.5V35.9563L40.2535 24L29 12.0432Z"
            }))
        }
    }
    ,
    88344: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24 9C15.7157 9 9 15.7157 9 24C9 32.2843 15.7157 39 24 39C26.4159 39 28.6903 38.4311 30.7045 37.4227L31.5987 36.975C32.5864 36.4805 33.7879 36.8803 34.2824 37.868L35.1778 39.6564C35.6723 40.6441 35.2724 41.8457 34.2847 42.3402L33.3906 42.7878C30.5614 44.2043 27.3693 45 24 45C12.402 45 3 35.598 3 24C3 12.402 12.402 3 24 3C35.598 3 45 12.402 45 24V25.8C45 30.5382 40.9978 34.2 36.4594 34.2C34.1689 34.2 32.0924 33.2832 30.5771 31.7965C28.8019 33.2961 26.5073 34.2 24 34.2C18.3667 34.2 13.8 29.6333 13.8 24C13.8 18.3667 18.3667 13.8 24 13.8C29.6333 13.8 34.2 18.3667 34.2 24C34.2 24.5688 34.1531 25.1288 34.0625 25.6759C34.0605 25.7168 34.0594 25.7581 34.0594 25.8C34.0594 27.1255 35.1339 28.2 36.4594 28.2C37.8857 28.2 39 27.0265 39 25.8V24C39 15.7157 32.2843 9 24 9ZM24 19.8C21.6804 19.8 19.8 21.6804 19.8 24C19.8 26.3196 21.6804 28.2 24 28.2C26.056 28.2 27.7725 26.7197 28.1308 24.7661C28.176 24.5198 28.2 24.264 28.2 24C28.2 21.6804 26.3196 19.8 24 19.8Z"
            }))
        }
    }
    ,
    57481: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13.4375 11.9817L36.0183 34.5625C38.4977 31.7439 40 28.0482 40 24C40 15.1634 32.8366 8 24 8C19.9518 8 16.2561 9.50231 13.4375 11.9817ZM34.6067 35.9793L12.0207 13.3933C9.51807 16.2174 8 19.9306 8 24C8 32.8366 15.1634 40 24 40C28.0694 40 31.7826 38.4819 34.6067 35.9793ZM11.2941 11.2501C14.5486 8.00674 19.0409 6 24 6C33.9411 6 42 14.0589 42 24C42 28.9591 39.9933 33.4514 36.7499 36.7059C33.4919 39.9751 28.9815 42 24 42C14.0589 42 6 33.9411 6 24C6 19.0185 8.02491 14.5081 11.2941 11.2501Z"
            }))
        }
    }
    ,
    23319: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 32 32",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.6665 8C4.6665 6.52724 5.86041 5.33333 7.33317 5.33333H24.6665C26.1393 5.33333 27.3332 6.52724 27.3332 8V24C27.3332 25.4728 26.1393 26.6667 24.6665 26.6667H7.33317C5.86041 26.6667 4.6665 25.4728 4.6665 24V8ZM7.99984 17.6667C7.99984 17.4826 8.14908 17.3333 8.33317 17.3333H16.3332C16.5173 17.3333 16.6665 17.4826 16.6665 17.6667V19C16.6665 19.1841 16.5173 19.3333 16.3332 19.3333H8.33317C8.14908 19.3333 7.99984 19.1841 7.99984 19V17.6667ZM15.3332 21.6667C15.3332 21.4826 15.4824 21.3333 15.6665 21.3333H23.6665C23.8506 21.3333 23.9998 21.4826 23.9998 21.6667V23C23.9998 23.1841 23.8506 23.3333 23.6665 23.3333H15.6665C15.4824 23.3333 15.3332 23.1841 15.3332 23V21.6667ZM18.9998 17.3333C18.8157 17.3333 18.6665 17.4826 18.6665 17.6667V19C18.6665 19.1841 18.8157 19.3333 18.9998 19.3333H23.6665C23.8506 19.3333 23.9998 19.1841 23.9998 19V17.6667C23.9998 17.4826 23.8506 17.3333 23.6665 17.3333H18.9998ZM7.99984 21.6667C7.99984 21.4826 8.14908 21.3333 8.33317 21.3333H12.9998C13.1839 21.3333 13.3332 21.4826 13.3332 21.6667V23C13.3332 23.1841 13.1839 23.3333 12.9998 23.3333H8.33317C8.14908 23.3333 7.99984 23.1841 7.99984 23V21.6667Z"
            }))
        }
    }
    ,
    66721: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 32 32",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.33317 5.33333C5.86041 5.33333 4.6665 6.52724 4.6665 8V24C4.6665 25.4728 5.86041 26.6667 7.33317 26.6667H24.6665C26.1393 26.6667 27.3332 25.4728 27.3332 24V8C27.3332 6.52724 26.1393 5.33333 24.6665 5.33333H7.33317ZM5.99984 8C5.99984 7.26362 6.59679 6.66667 7.33317 6.66667H24.6665C25.4029 6.66667 25.9998 7.26362 25.9998 8V24C25.9998 24.7364 25.4029 25.3333 24.6665 25.3333H7.33317C6.59679 25.3333 5.99984 24.7364 5.99984 24V8ZM8.6665 18.3333C8.6665 18.1492 8.81574 18 8.99984 18H16.3332C16.5173 18 16.6665 18.1492 16.6665 18.3333V19C16.6665 19.1841 16.5173 19.3333 16.3332 19.3333H8.99984C8.81574 19.3333 8.6665 19.1841 8.6665 19V18.3333ZM15.3332 21.6667C15.3332 21.4826 15.4824 21.3333 15.6665 21.3333H22.9998C23.1839 21.3333 23.3332 21.4826 23.3332 21.6667V22.3333C23.3332 22.5174 23.1839 22.6667 22.9998 22.6667H15.6665C15.4824 22.6667 15.3332 22.5174 15.3332 22.3333V21.6667ZM18.9998 18C18.8157 18 18.6665 18.1492 18.6665 18.3333V19C18.6665 19.1841 18.8157 19.3333 18.9998 19.3333H22.9998C23.1839 19.3333 23.3332 19.1841 23.3332 19V18.3333C23.3332 18.1492 23.1839 18 22.9998 18H18.9998ZM8.6665 21.6667C8.6665 21.4826 8.81574 21.3333 8.99984 21.3333H12.9998C13.1839 21.3333 13.3332 21.4826 13.3332 21.6667V22.3333C13.3332 22.5174 13.1839 22.6667 12.9998 22.6667H8.99984C8.81574 22.6667 8.6665 22.5174 8.6665 22.3333V21.6667Z"
            }))
        }
    }
    ,
    73256: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M21.8788 33.1213L7.58586 18.8284C7.19534 18.4379 7.19534 17.8047 7.58586 17.4142L10.4143 14.5858C10.8048 14.1953 11.438 14.1953 11.8285 14.5858L24.0001 26.7574L36.1716 14.5858C36.5622 14.1953 37.1953 14.1953 37.5859 14.5858L40.4143 17.4142C40.8048 17.8047 40.8048 18.4379 40.4143 18.8284L26.1214 33.1213C24.9498 34.2929 23.0503 34.2929 21.8788 33.1213Z"
            }))
        }
    }
    ,
    12527: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.58579 22.5858L20.8787 6.29289C21.2692 5.90237 21.9024 5.90237 22.2929 6.29289L23.7071 7.70711C24.0976 8.09763 24.0976 8.7308 23.7071 9.12132L8.82843 24L23.7071 38.8787C24.0976 39.2692 24.0976 39.9024 23.7071 40.2929L22.2929 41.7071C21.9024 42.0976 21.2692 42.0976 20.8787 41.7071L4.58579 25.4142C3.80474 24.6332 3.80474 23.3668 4.58579 22.5858Z"
            }))
        }
    }
    ,
    91532: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("g", {
                opacity: "0.9",
                filter: "url(#CommentShadowColor_filter0_d)"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M38.4943 35.3128C42.6 31.2 45 26.9162 45 21.928C45 11.8056 35.733 3.60001 24.2999 3.60001C12.8671 3.60001 3.6 11.8056 3.6 21.9283C3.6 32.051 13.1669 39 24.6 39V42.3569C24.6 43.4205 25.7028 44.105 26.638 43.5983C29.5598 42.015 34.9741 38.8392 38.4943 35.3128ZM14.2446 19.4564C15.8786 19.4564 17.2031 20.7714 17.2031 22.3912C17.2031 24.0142 15.8786 25.3291 14.2446 25.3291C12.6134 25.3291 11.2888 24.0142 11.2888 22.3912C11.2888 20.7714 12.6134 19.4564 14.2446 19.4564ZM27.2572 22.3912C27.2572 20.7714 25.9332 19.4564 24.3 19.4564C22.667 19.4564 21.3429 20.7714 21.3429 22.3912C21.343 24.0142 22.6671 25.3291 24.3 25.3291C25.9332 25.3291 27.2572 24.0142 27.2572 22.3912ZM34.355 19.4564C35.9887 19.4564 37.3113 20.7714 37.3113 22.3912C37.3113 24.0142 35.9888 25.3291 34.355 25.3291C32.7213 25.3291 31.3969 24.0142 31.397 22.3912C31.397 20.7714 32.7214 19.4564 34.355 19.4564Z",
                fill: "white"
            })), i.createElement("path", {
                opacity: "0.1",
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.6001 38.9999C24.6001 38.9999 36.0669 38.1138 40.8601 31.9764C36.0669 38.7276 31.2737 42.4101 27.0796 43.6376C22.8855 44.8651 24.6001 38.9999 24.6001 38.9999Z",
                fill: "url(#CommentShadowColor_paint0_linear)"
            }), i.createElement("defs", null, i.createElement("filter", {
                id: "CommentShadowColor_filter0_d",
                x: "1.2001",
                y: "2.40001",
                width: "46.2",
                height: "44.9688",
                filterUnits: "userSpaceOnUse",
                colorInterpolationFilters: "sRGB"
            }, i.createElement("feFlood", {
                floodOpacity: "0",
                result: "BackgroundImageFix"
            }), i.createElement("feColorMatrix", {
                in: "SourceAlpha",
                type: "matrix",
                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            }), i.createElement("feOffset", {
                dy: "1.2"
            }), i.createElement("feGaussianBlur", {
                stdDeviation: "1.2"
            }), i.createElement("feColorMatrix", {
                type: "matrix",
                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0"
            }), i.createElement("feBlend", {
                mode: "normal",
                in2: "BackgroundImageFix",
                result: "effect1_dropShadow"
            }), i.createElement("feBlend", {
                mode: "normal",
                in: "SourceGraphic",
                in2: "effect1_dropShadow",
                result: "shape"
            })), i.createElement("linearGradient", {
                id: "CommentShadowColor_paint0_linear",
                x1: "20.4103",
                y1: "37.6698",
                x2: "22.3081",
                y2: "43.6335",
                gradientUnits: "userSpaceOnUse"
            }, i.createElement("stop", null), i.createElement("stop", {
                offset: "1",
                stopOpacity: "0.01"
            }))))
        }
    }
    ,
    67143: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 36 36",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M18 28.0547C23.553 28.0547 28.0547 23.5531 28.0547 18C28.0547 12.4469 23.553 7.94531 18 7.94531C12.4469 7.94531 7.94531 12.4469 7.94531 18C7.94531 23.5531 12.4469 28.0547 18 28.0547ZM30.375 18C30.375 24.8345 24.8345 30.375 18 30.375C11.1655 30.375 5.625 24.8345 5.625 18C5.625 11.1655 11.1655 5.625 18 5.625C24.8345 5.625 30.375 11.1655 30.375 18Z"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M20.3508 20.3864C20.712 20.1679 20.9645 19.8074 21.0462 19.3932L22.427 12.3948C22.5027 12.0113 22.0871 11.7204 21.7527 11.9226L15.6486 15.6137C15.2874 15.8322 15.0349 16.1928 14.9532 16.6069L13.5724 23.6053C13.4967 23.9888 13.9123 24.2797 14.2467 24.0775L20.3508 20.3864ZM16.5684 20.0442L18.9029 18.6325L19.431 15.9559L17.0965 17.3676L16.5684 20.0442Z"
            }))
        }
    }
    ,
    3418: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 36 36",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M18 30.375C24.8345 30.375 30.375 24.8345 30.375 18C30.375 11.1655 24.8345 5.625 18 5.625C11.1655 5.625 5.625 11.1655 5.625 18C5.625 24.8345 11.1655 30.375 18 30.375ZM21.3223 19.4671C21.2331 19.9188 20.9578 20.312 20.5638 20.5503L13.9071 24.5756C13.5424 24.7961 13.0892 24.4788 13.1717 24.0606L14.6776 16.4287C14.7667 15.977 15.042 15.5837 15.436 15.3455L22.0927 11.3202C22.4574 11.0997 22.9106 11.417 22.8281 11.8351L21.3223 19.4671Z"
            }), i.createElement("path", {
                d: "M16.4392 20.1662L18.9851 18.6267L19.5611 15.7077L17.0151 17.2473L16.4392 20.1662Z"
            }))
        }
    }
    ,
    60751: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4 24C4 21.7909 5.79086 20 8 20C10.2091 20 12 21.7909 12 24C12 26.2091 10.2091 28 8 28C5.79086 28 4 26.2091 4 24ZM20 24C20 21.7909 21.7909 20 24 20C26.2091 20 28 21.7909 28 24C28 26.2091 26.2091 28 24 28C21.7909 28 20 26.2091 20 24ZM36 24C36 21.7909 37.7909 20 40 20C42.2091 20 44 21.7909 44 24C44 26.2091 42.2091 28 40 28C37.7909 28 36 26.2091 36 24Z"
            }))
        }
    }
    ,
    84879: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24 48C37.2548 48 48 37.2548 48 24C48 10.7452 37.2548 0 24 0C10.7452 0 0 10.7452 0 24C0 37.2548 10.7452 48 24 48Z",
                fill: "#0DBEF3"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13.6327 14.8957C12.4779 14.8957 11.5417 15.8318 11.5417 16.9866V31.0131C11.5417 32.1679 12.4779 33.104 13.6327 33.104H34.3675C35.5223 33.104 36.4584 32.1679 36.4584 31.0131V16.9866C36.4584 15.8318 35.5223 14.8957 34.3675 14.8957H13.6327ZM33.7214 17.3809L24.0001 24.1142L14.2788 17.3809C13.9321 17.1407 13.4584 17.3889 13.4584 17.8106V19.0944L24.0001 26.396L34.5418 19.0944V17.8106C34.5418 17.3889 34.0681 17.1407 33.7214 17.3809Z",
                fill: "white"
            }))
        }
    }
    ,
    60652: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 24 24",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z",
                fill: "#161823",
                fillOpacity: "0.75"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12.313 7.96568C12.3665 7.65966 12.658 7.45498 12.964 7.50851C13.27 7.56203 13.4747 7.8535 13.4211 8.15951L12.0506 15.9952C11.997 16.3012 11.7056 16.5059 11.3996 16.4523C11.0936 16.3988 10.8889 16.1073 10.9424 15.8013L12.313 7.96568ZM16.2402 8.77448C15.96 8.48453 15.5058 8.48453 15.2256 8.77448C14.9454 9.06443 14.9454 9.53454 15.2256 9.82449L17.454 12.1307L15.2262 14.4364C14.946 14.7263 14.946 15.1964 15.2262 15.4864C15.5063 15.7763 15.9606 15.7763 16.2407 15.4864L19.4551 12.1598C19.4704 12.1439 19.4704 12.1182 19.4551 12.1023L19.2233 11.8623L19.2201 11.8586L19.2158 11.854L16.2402 8.77448ZM8.88972 15.4867C8.59977 15.7766 8.12966 15.7766 7.83971 15.4867L5.4207 13.0677L4.76017 12.4071L4.51191 12.1589C4.49603 12.143 4.49603 12.1173 4.51191 12.1014L7.83853 8.77477C8.12848 8.48482 8.59859 8.48482 8.88854 8.77477C9.17849 9.06472 9.17849 9.53482 8.88854 9.82478L6.58318 12.1301L8.88972 14.4367C9.17967 14.7266 9.17967 15.1967 8.88972 15.4867Z",
                fill: "white"
            }))
        }
    }
    ,
    71615: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 72 72",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M33.8531 13.6612C31.0541 12.975 28.9695 10.4434 28.9695 7.43671C28.9695 3.90499 31.8457 1.02881 35.3774 1.02881C38.9091 1.02881 41.7853 3.90499 41.7853 7.43671C41.7853 10.4433 39.7008 12.9748 36.902 13.6611V24.499H55.0788C59.7539 24.499 63.56 28.3052 63.56 32.9802V62.4891C63.5549 67.1641 59.7539 70.9703 55.0737 70.9703H15.6812C11.0061 70.9703 7.19998 67.1641 7.19998 62.4891V32.9802C7.19998 28.3052 11.0061 24.499 15.6812 24.499H33.8531V13.6612ZM35.3776 4.07761C33.5279 4.07761 32.0187 5.58684 32.0187 7.43655C32.0187 9.28625 33.5228 10.7955 35.3776 10.7955C37.2324 10.7955 38.7366 9.28625 38.7366 7.43655C38.7366 5.58684 37.2324 4.07761 35.3776 4.07761ZM15.6812 27.5475C12.6881 27.5475 10.2489 29.9816 10.2489 32.9797V62.4886C10.2489 65.4816 12.683 67.9208 15.6812 67.9208H55.0788C58.0719 67.9208 60.5111 65.4867 60.5111 62.4886V32.9797C60.5111 29.9866 58.077 27.5475 55.0788 27.5475H15.6812ZM22.6884 44.4865C22.6884 45.33 23.3694 46.011 24.2129 46.011C25.0565 46.011 25.7374 45.3249 25.7374 44.4865V39.8521C25.7374 39.0085 25.0565 38.3276 24.2129 38.3276C23.3694 38.3276 22.6884 39.0085 22.6884 39.8521V44.4865ZM46.7351 59.1878C46.3031 59.1878 45.8763 59.0048 45.5714 58.6491C43.0479 55.6833 39.3857 53.9656 35.4998 53.9289C35.4611 53.9319 35.422 53.9333 35.3826 53.9333C31.4494 53.9333 27.7347 55.6509 25.1838 58.6541C24.8789 59.0048 24.452 59.1877 24.0201 59.1877C23.6695 59.1877 23.3188 59.0708 23.0343 58.8269C22.394 58.2832 22.3127 57.3177 22.8615 56.6774C25.961 53.0295 30.4655 50.926 35.2403 50.885C35.2839 50.8813 35.328 50.8794 35.3726 50.8794C40.2001 50.8794 44.7634 52.9933 47.8937 56.6724C48.4374 57.3127 48.3612 58.2782 47.7209 58.8219C47.4363 59.0709 47.0857 59.1878 46.7351 59.1878ZM46.5417 46.011C45.6981 46.011 45.0172 45.33 45.0172 44.4865V39.8521C45.0172 39.0085 45.6981 38.3276 46.5417 38.3276C47.3852 38.3276 48.0662 39.0085 48.0662 39.8521V44.4865C48.0662 45.3249 47.3852 46.011 46.5417 46.011Z"
            }))
        }
    }
    ,
    6014: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M21.7764 10.5C16.1265 10.5 11.5 15.172 11.5 20.993C11.5 26.814 16.1265 31.486 21.7764 31.486C24.5005 31.486 26.9782 30.4054 28.8221 28.6314C30.8097 26.7191 32.0527 24.0079 32.0527 20.993C32.0527 15.172 27.4262 10.5 21.7764 10.5ZM8.5 20.993C8.5 13.5669 14.4184 7.5 21.7764 7.5C29.1344 7.5 35.0527 13.5669 35.0527 20.993C35.0527 24.2993 33.881 27.3328 31.9342 29.6817L38.3696 36.2355C38.7566 36.6296 38.7508 37.2627 38.3568 37.6497L37.6432 38.3503C37.2492 38.7373 36.616 38.7315 36.2291 38.3374L29.7742 31.7638C27.5523 33.4701 24.7814 34.486 21.7764 34.486C14.4184 34.486 8.5 28.4191 8.5 20.993Z"
            }))
        }
    }
    ,
    37801: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M24 47C36.7025 47 47 36.7025 47 24C47 11.2975 36.7025 1 24 1C11.2975 1 1 11.2975 1 24C1 36.7025 11.2975 47 24 47Z",
                fill: "white"
            }), i.createElement("path", {
                d: "M24 1C11.2964 1 1 11.2964 1 24C1 35.4775 9.40298 44.9804 20.3846 46.7205L20.3936 30.6629H14.5151V24.009H20.3936C20.3936 24.009 20.3665 20.2223 20.3936 18.5363C20.4206 16.8503 20.7542 15.2274 21.6288 13.7487C22.9722 11.4586 25.0639 10.3407 27.6335 10.0251C29.7432 9.76362 31.826 10.0521 33.9087 10.3407C34.0529 10.3587 34.125 10.3767 34.2693 10.4038C34.2693 10.4038 34.2783 10.6472 34.2693 10.8005C34.2603 12.4053 34.2693 16.0839 34.2693 16.0839C33.2685 16.0659 31.6096 15.9667 30.5096 16.138C28.6884 16.4175 27.6425 17.5806 27.6064 19.4108C27.5704 20.8354 27.5884 24.009 27.5884 24.009H33.9988L32.962 30.6629H27.5974V46.7205C38.597 44.9984 47.009 35.4775 47.009 24C47 11.2964 36.7036 1 24 1Z",
                fill: "#0075FA"
            }))
        }
    }
    ,
    22993: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M25.5 17C25.5 21.1421 22.1421 24.5 18 24.5C13.8579 24.5 10.5 21.1421 10.5 17C10.5 12.8579 13.8579 9.5 18 9.5C22.1421 9.5 25.5 12.8579 25.5 17Z"
            }), i.createElement("path", {
                d: "M7.10396 34.7906C8.78769 30.2189 12.8204 27 18.0009 27C23.1818 27 27.2107 30.2213 28.8958 34.7898C29.3075 35.906 28.6141 37 27.5 37H8.5C7.38629 37 6.69289 35.9067 7.10396 34.7906Z"
            }), i.createElement("path", {
                d: "M40.6308 37H32C31.2264 34.1633 30.0098 31.5927 28.144 29.7682C29.5384 28.9406 31.1829 28.5 33 28.5C37.239 28.5 40.536 30.8992 41.9148 35.0108C42.2516 36.0154 41.5423 37 40.6308 37Z"
            }), i.createElement("path", {
                d: "M33 26.5C36.0376 26.5 38.5 24.0376 38.5 21C38.5 17.9624 36.0376 15.5 33 15.5C29.9624 15.5 27.5 17.9624 27.5 21C27.5 24.0376 29.9624 26.5 33 26.5Z"
            }))
        }
    }
    ,
    52178: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M18 12.5C15.5897 12.5 13.5849 14.5018 13.5849 17.0345C13.5849 19.5672 15.5897 21.569 18 21.569C20.4103 21.569 22.4151 19.5672 22.4151 17.0345C22.4151 14.5018 20.4103 12.5 18 12.5ZM10.5849 17.0345C10.5849 12.9017 13.8766 9.5 18 9.5C22.1234 9.5 25.4151 12.9017 25.4151 17.0345C25.4151 21.1673 22.1234 24.569 18 24.569C13.8766 24.569 10.5849 21.1673 10.5849 17.0345ZM18 29.8793C14.0801 29.8793 10.7403 32.5616 9.69697 36.2673C9.5473 36.7989 9.03833 37.1708 8.49337 37.0811L7.50662 36.9189C6.96166 36.8292 6.58837 36.3131 6.72325 35.7776C8.00732 30.6788 12.5509 26.8793 18 26.8793C23.449 26.8793 27.9927 30.6788 29.2767 35.7776C29.4116 36.3131 29.0383 36.8292 28.4934 36.9189L27.5066 37.0811C26.9617 37.1708 26.4527 36.7989 26.303 36.2673C25.2597 32.5616 21.9199 29.8793 18 29.8793Z"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M33 31.5371C32.2445 31.5371 31.5198 31.668 30.8447 31.9093C30.3246 32.0951 29.7189 31.9243 29.4549 31.4392L28.9769 30.5608C28.713 30.0757 28.8907 29.463 29.4009 29.2516C30.513 28.791 31.7285 28.5371 33 28.5371C37.4554 28.5371 41.1594 31.6303 42.2706 35.7812C42.4135 36.3147 42.0386 36.8308 41.4935 36.9196L40.5065 37.0804C39.9614 37.1692 39.4546 36.7956 39.2894 36.2686C38.4217 33.5 35.91 31.5371 33 31.5371Z"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M33 18.5C31.6193 18.5 30.5 19.6193 30.5 21C30.5 22.3807 31.6193 23.5 33 23.5C34.3807 23.5 35.5 22.3807 35.5 21C35.5 19.6193 34.3807 18.5 33 18.5ZM27.5 21C27.5 17.9624 29.9624 15.5 33 15.5C36.0376 15.5 38.5 17.9624 38.5 21C38.5 24.0376 36.0376 26.5 33 26.5C29.9624 26.5 27.5 24.0376 27.5 21Z"
            }))
        }
    }
    ,
    30699: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 24 24",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("g", {
                clipPath: "url(#HeartFill_clip0)"
            }, i.createElement("g", {
                filter: "url(#HeartFill_filter0_d)"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.5 2.25C10.5 2.25 12 4.25 12 4.25C12 4.25 13.5 2.25 16.5 2.25C20 2.25 22.5 4.99999 22.5 8.5C22.5 12.5 19.2311 16.0657 16.25 18.75C14.4095 20.4072 13 21.5 12 21.5C11 21.5 9.55051 20.3989 7.75 18.75C4.81949 16.0662 1.5 12.5 1.5 8.5C1.5 4.99999 4 2.25 7.5 2.25Z"
            })), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.40179 12.1998C3.58902 14.6966 5.7592 16.9269 7.74989 18.75C9.5504 20.3989 10.9999 21.5 11.9999 21.5C12.9999 21.5 14.4094 20.4072 16.2499 18.75C19.231 16.0657 22.4999 12.5 22.4999 8.49997C22.4999 8.41258 22.4983 8.32566 22.4952 8.23923C20.5671 13.6619 13.6787 18.5 11.75 18.5C10.3127 18.5 5.61087 15.8131 2.40179 12.1998Z",
                fillOpacity: "0.03"
            })), i.createElement("defs", null, i.createElement("filter", {
                id: "HeartFill_filter0_d",
                x: "-0.9",
                y: "1.05",
                width: "25.8",
                height: "24.05",
                filterUnits: "userSpaceOnUse",
                colorInterpolationFilters: "sRGB"
            }, i.createElement("feFlood", {
                floodOpacity: "0",
                result: "BackgroundImageFix"
            }), i.createElement("feColorMatrix", {
                in: "SourceAlpha",
                type: "matrix",
                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
                result: "hardAlpha"
            }), i.createElement("feOffset", {
                dy: "1.2"
            }), i.createElement("feGaussianBlur", {
                stdDeviation: "1.2"
            }), i.createElement("feColorMatrix", {
                type: "matrix",
                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0"
            }), i.createElement("feBlend", {
                mode: "normal",
                in2: "BackgroundImageFix",
                result: "effect1_dropShadow"
            }), i.createElement("feBlend", {
                mode: "normal",
                in: "SourceGraphic",
                in2: "effect1_dropShadow",
                result: "shape"
            })), i.createElement("clipPath", {
                id: "HeartFill_clip0"
            }, i.createElement("rect", {
                width: "24",
                height: "24",
                fill: "white"
            }))))
        }
    }
    ,
    76943: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.9505 7.84001C24.3975 7.38666 23.6014 7.38666 23.0485 7.84003L6.94846 21.04C6.45839 21.4418 6.2737 22.1083 6.48706 22.705C6.70041 23.3017 7.26576 23.7 7.89949 23.7H10.2311L11.4232 36.7278C11.5409 38.0149 12.6203 39 13.9128 39H21.5C22.0523 39 22.5 38.5523 22.5 38V28.3153C22.5 27.763 22.9477 27.3153 23.5 27.3153H24.5C25.0523 27.3153 25.5 27.763 25.5 28.3153V38C25.5 38.5523 25.9477 39 26.5 39H34.0874C35.3798 39 36.4592 38.0149 36.577 36.7278L37.7691 23.7H40.1001C40.7338 23.7 41.2992 23.3017 41.5125 22.705C41.7259 22.1082 41.5412 21.4418 41.0511 21.04L24.9505 7.84001Z"
            }))
        }
    }
    ,
    16300: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M23.0484 7.84003C23.6014 7.38666 24.3975 7.38666 24.9504 7.84001L41.051 21.04C41.5411 21.4418 41.7258 22.1082 41.5125 22.705C41.2991 23.3017 40.7338 23.7 40.1 23.7H37.769L36.5769 36.7278C36.4592 38.0149 35.3798 39 34.0873 39H13.9127C12.6202 39 11.5409 38.0149 11.4231 36.7278L10.231 23.7H7.89943C7.2657 23.7 6.70035 23.3017 6.487 22.705C6.27364 22.1083 6.45833 21.4418 6.9484 21.04L23.0484 7.84003ZM23.9995 10.9397L12.0948 20.7H12.969L14.369 36H22.4994V28.3138C22.4994 27.7616 22.9471 27.3138 23.4994 27.3138H24.4994C25.0517 27.3138 25.4994 27.7616 25.4994 28.3138V36H33.631L35.031 20.7H35.9045L23.9995 10.9397Z"
            }))
        }
    }
    ,
    14496: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.4977 9C10.1195 9 9.0013 10.1153 8.99767 11.4934L8.94239 32.4934C8.93875 33.8767 10.0591 35 11.4424 35H18.7895L22.0656 39.004C23.0659 40.2265 24.9352 40.2264 25.9354 39.0039L29.2111 35H36.5587C37.942 35 39.0623 33.8767 39.0587 32.4934L39.0029 11.4934C38.9993 10.1152 37.8811 9 36.5029 9H11.4977ZM29 21H19C18.4477 21 18 21.4477 18 22V23C18 23.5523 18.4477 24 19 24H29C29.5523 24 30 23.5523 30 23V22C30 21.4477 29.5523 21 29 21Z"
            }))
        }
    }
    ,
    85767: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 72 72",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M34.4961 70.3557C34.7809 70.7422 35.2335 70.971 35.7166 70.971C36.1997 70.971 36.6522 70.7422 36.937 70.3557L45.7854 58.5121H65.6332C67.6978 58.5121 69.376 56.834 69.376 54.7693V4.77091C69.376 2.70629 67.6978 1.02815 65.6332 1.02815H5.79989C3.73527 1.02815 2.05713 2.70629 2.05713 4.77091V54.7693C2.05713 56.834 3.73527 58.5121 5.79989 58.5121H25.6477L34.4961 70.3557ZM5.10829 4.77135C5.10829 4.38996 5.4185 4.07976 5.79989 4.07976H65.6281C66.0095 4.07976 66.3197 4.38996 66.3197 4.77135V54.7749C66.3197 55.1562 66.0095 55.4665 65.6281 55.4665H45.0175C44.5395 55.4665 44.0869 55.6902 43.7971 56.0767L35.7166 66.8981L27.6361 56.0767C27.3513 55.6902 26.8987 55.4614 26.4156 55.4614H5.79989C5.4185 55.4614 5.10829 55.1512 5.10829 54.7698V4.77135Z"
            }), i.createElement("path", {
                d: "M49.6956 31.2955H21.7368C20.8926 31.2955 20.2112 30.6141 20.2112 29.7699C20.2112 28.9258 20.8926 28.2443 21.7368 28.2443H49.6956C50.5398 28.2443 51.2212 28.9258 51.2212 29.7699C51.2212 30.6141 50.5398 31.2955 49.6956 31.2955Z"
            }))
        }
    }
    ,
    88479: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 32 32",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.0362 21.3333H18.5243L15.9983 24.4208L13.4721 21.3333H7.96047L7.99557 8H24.0009L24.0362 21.3333ZM24.3705 23.3333H19.4721L17.2883 26.0026C16.6215 26.8176 15.3753 26.8176 14.7084 26.0026L12.5243 23.3333H7.62626C6.70407 23.3333 5.95717 22.5845 5.9596 21.6623L5.99646 7.66228C5.99887 6.74352 6.74435 6 7.66312 6H24.3333C25.2521 6 25.9975 6.7435 26 7.66224L26.0371 21.6622C26.0396 22.5844 25.2927 23.3333 24.3705 23.3333ZM12.6647 14C12.2965 14 11.998 14.2985 11.998 14.6667V15.3333C11.998 15.7015 12.2965 16 12.6647 16H19.3313C19.6995 16 19.998 15.7015 19.998 15.3333V14.6667C19.998 14.2985 19.6995 14 19.3313 14H12.6647Z"
            }))
        }
    }
    ,
    92662: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24 47.001C36.7026 47.001 47 36.7035 47 24.001C47 11.2984 36.7026 1.00098 24 1.00098C11.2975 1.00098 1 11.2984 1 24.001C1 36.7035 11.2975 47.001 24 47.001Z",
                fill: "#FBE300"
            }), i.createElement("path", {
                d: "M24.0825 10C15.6421 10 8.7998 15.3949 8.7998 22.0498C8.7998 26.3524 11.6603 30.1276 15.9633 32.2594C15.7292 33.0668 14.459 37.4532 14.4084 37.7978C14.4084 37.7978 14.378 38.0567 14.5457 38.1555C14.7133 38.2542 14.9105 38.1775 14.9105 38.1775C15.3914 38.1104 20.4862 34.5316 21.3681 33.9101C22.249 34.0349 23.1562 34.0997 24.0825 34.0997C32.523 34.0997 39.3652 28.7049 39.3652 22.0498C39.3652 15.3949 32.523 10 24.0825 10Z",
                fill: "black"
            }), i.createElement("path", {
                d: "M15.6327 26.2563C15.1464 26.2563 14.751 25.8786 14.751 25.4143V20.1763H13.3752C12.8981 20.1763 12.51 19.7889 12.51 19.3129C12.51 18.837 12.8982 18.4496 13.3752 18.4496H17.8901C18.3673 18.4496 18.7554 18.837 18.7554 19.3129C18.7554 19.7889 18.3671 20.1763 17.8901 20.1763H16.5144V25.4143C16.5144 25.8786 16.1189 26.2563 15.6327 26.2563ZM23.364 26.2448C22.9963 26.2448 22.715 26.0955 22.6303 25.8554L22.1937 24.7124L19.5051 24.7123L19.0682 25.856C18.9837 26.0957 18.7026 26.2448 18.3349 26.2448C18.1415 26.245 17.9504 26.2035 17.7745 26.1232C17.5314 26.011 17.2978 25.7027 17.5655 24.8711L19.6745 19.32C19.8231 18.8978 20.2744 18.4628 20.8486 18.4498C21.4245 18.4627 21.8758 18.8978 22.0247 19.3209L24.1328 24.8695C24.4011 25.703 24.1675 26.0115 23.9244 26.1233C23.7485 26.2035 23.5573 26.245 23.364 26.2448C23.364 26.2448 23.3638 26.2448 23.364 26.2448ZM21.73 23.1507L20.8494 20.6489L19.9687 23.1507H21.73ZM25.5518 26.1277C25.0858 26.1277 24.7068 25.765 24.7068 25.3195V19.3313C24.7068 18.8451 25.1106 18.4496 25.6069 18.4496C26.1031 18.4496 26.5069 18.8451 26.5069 19.3313V24.5113H28.3805C28.8465 24.5113 29.2255 24.8739 29.2255 25.3195C29.2255 25.765 28.8465 26.1277 28.3805 26.1277H25.5518ZM30.4502 26.2448C29.9639 26.2448 29.5685 25.8494 29.5685 25.3631V19.3313C29.5685 18.8451 29.9639 18.4496 30.4502 18.4496C30.9364 18.4496 31.3319 18.8451 31.3319 19.3313V21.2264L33.7918 18.7664C33.9183 18.6399 34.0921 18.5703 34.2808 18.5703C34.501 18.5703 34.722 18.6652 34.8876 18.8307C35.042 18.985 35.1342 19.1835 35.1468 19.3896C35.1596 19.5976 35.0904 19.7882 34.9522 19.9265L32.943 21.9354L35.1133 24.8106C35.1834 24.9028 35.2344 25.0081 35.2635 25.1202C35.2925 25.2323 35.299 25.3491 35.2826 25.4638C35.2669 25.5785 35.2285 25.689 35.1698 25.7888C35.1111 25.8886 35.0331 25.9758 34.9405 26.0453C34.788 26.1612 34.6017 26.2237 34.4101 26.2232C34.2735 26.2239 34.1387 26.1925 34.0164 26.1316C33.894 26.0708 33.7877 25.9821 33.7058 25.8728L31.6381 23.133L31.3321 23.439V25.3627C31.3319 25.5965 31.2389 25.8207 31.0735 25.9861C30.9082 26.1515 30.684 26.2445 30.4502 26.2448Z",
                fill: "#FFE812"
            }))
        }
    }
    ,
    40815: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24 47.001C36.7026 47.001 47 36.7035 47 24.001C47 11.2984 36.7026 1.00098 24 1.00098C11.2975 1.00098 1 11.2984 1 24.001C1 36.7035 11.2975 47.001 24 47.001Z",
                fill: "#00B900"
            }), i.createElement("path", {
                d: "M40.0001 22.4324C40.0001 15.2729 32.8228 9.44822 23.9999 9.44822C15.1782 9.44822 8 15.2729 8 22.4324C8 28.8509 13.6922 34.2263 21.3811 35.2427C21.9022 35.355 22.6114 35.5863 22.7908 36.0316C22.9522 36.4362 22.8963 37.0699 22.8423 37.4784C22.8423 37.4784 22.6546 38.6075 22.6141 38.848C22.5445 39.2525 22.2927 40.43 23.9999 39.7105C25.7078 38.9909 33.2145 34.2848 36.5713 30.421H36.5707C38.8895 27.8783 40.0001 25.2978 40.0001 22.4324Z",
                fill: "white"
            }), i.createElement("path", {
                d: "M20.7494 18.9727H19.6271C19.4551 18.9727 19.3152 19.1123 19.3152 19.2837V26.2556C19.3152 26.4273 19.4551 26.5666 19.6271 26.5666H20.7494C20.9215 26.5666 21.0611 26.4273 21.0611 26.2556V19.2837C21.0611 19.1123 20.9215 18.9727 20.7494 18.9727Z",
                fill: "#00B900"
            }), i.createElement("path", {
                d: "M28.4738 18.9727H27.3515C27.1794 18.9727 27.0399 19.1123 27.0399 19.2837V23.4257L23.845 19.1111C23.8377 19.1 23.8294 19.0896 23.8208 19.0795L23.8187 19.0776C23.8125 19.0706 23.8064 19.0644 23.7999 19.0583C23.7981 19.0565 23.7963 19.0549 23.7941 19.0531C23.7889 19.0482 23.7834 19.0436 23.7776 19.0393C23.7751 19.0368 23.7723 19.035 23.7696 19.0328C23.7641 19.0292 23.7588 19.0252 23.7533 19.0218C23.7503 19.0197 23.7472 19.0178 23.7438 19.0163C23.7383 19.0129 23.7328 19.0095 23.7272 19.0068C23.7239 19.0052 23.7208 19.0034 23.7174 19.0022C23.7116 18.9994 23.7058 18.9967 23.6996 18.9945C23.696 18.9933 23.6929 18.9921 23.6895 18.9908C23.6834 18.9887 23.6773 18.9865 23.6708 18.985C23.6674 18.9838 23.6638 18.9832 23.6601 18.9819C23.6539 18.9807 23.6481 18.9792 23.6423 18.9779C23.638 18.9773 23.6334 18.9767 23.6291 18.9764C23.6236 18.9752 23.6181 18.9749 23.6125 18.9743C23.6073 18.9737 23.6021 18.9737 23.5966 18.9733C23.5926 18.9733 23.5895 18.9727 23.5855 18.9727H22.4635C22.2915 18.9727 22.1516 19.1123 22.1516 19.2837V26.2556C22.1516 26.4273 22.2915 26.5666 22.4635 26.5666H23.5855C23.7579 26.5666 23.8975 26.4273 23.8975 26.2556V22.1148L27.0963 26.435C27.1184 26.4663 27.1457 26.4917 27.1754 26.512C27.1764 26.5126 27.1776 26.5135 27.1785 26.5144C27.1849 26.5184 27.1914 26.5224 27.1978 26.5261C27.2009 26.5279 27.2037 26.5292 27.2067 26.5307C27.2113 26.5335 27.2165 26.5359 27.2214 26.5381C27.2267 26.5402 27.2313 26.5424 27.2368 26.5445C27.2398 26.5457 27.2429 26.547 27.246 26.5479C27.2533 26.5506 27.2601 26.5528 27.2671 26.5549C27.2687 26.5549 27.2702 26.5555 27.2717 26.5559C27.2972 26.5626 27.3239 26.5666 27.3515 26.5666H28.4738C28.6462 26.5666 28.7854 26.4273 28.7854 26.2556V19.2837C28.7854 19.1123 28.6462 18.9727 28.4738 18.9727Z",
                fill: "#00B900"
            }), i.createElement("path", {
                d: "M18.0433 24.821H14.9939V19.2843C14.9939 19.1123 14.8543 18.9727 14.6825 18.9727H13.5599C13.3879 18.9727 13.2483 19.1123 13.2483 19.2843V26.2549V26.2555C13.2483 26.3393 13.2817 26.415 13.3354 26.4709C13.3366 26.4724 13.3379 26.4739 13.3397 26.4755C13.3412 26.477 13.3428 26.4782 13.3443 26.4798C13.4004 26.5337 13.4759 26.5669 13.5596 26.5669H13.5599H18.0433C18.2154 26.5669 18.3543 26.427 18.3543 26.2549V25.1326C18.3543 24.9606 18.2154 24.821 18.0433 24.821Z",
                fill: "#00B900"
            }), i.createElement("path", {
                d: "M34.6715 20.7186C34.8435 20.7186 34.9825 20.5793 34.9825 20.4069V19.2846C34.9825 19.1126 34.8435 18.9727 34.6715 18.9727H30.1881H30.1875C30.1034 18.9727 30.0277 19.0064 29.9715 19.0607C29.9703 19.062 29.9688 19.0629 29.9679 19.0641C29.966 19.0659 29.9645 19.0678 29.963 19.0696C29.9096 19.1254 29.8765 19.2009 29.8765 19.2843V19.2846V26.2552V26.2555C29.8765 26.3393 29.9099 26.415 29.9636 26.4709C29.9648 26.4724 29.9663 26.4742 29.9679 26.4755C29.9691 26.477 29.9709 26.4785 29.9725 26.4798C30.0283 26.5334 30.1041 26.5669 30.1875 26.5669H30.1881H34.6715C34.8435 26.5669 34.9825 26.427 34.9825 26.2552V25.1326C34.9825 24.9609 34.8435 24.821 34.6715 24.821H31.6223V23.6426H34.6715C34.8435 23.6426 34.9825 23.503 34.9825 23.3309V22.2086C34.9825 22.0366 34.8435 21.8967 34.6715 21.8967H31.6223V20.7186H34.6715Z",
                fill: "#00B900"
            }))
        }
    }
    ,
    77329: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24 47C36.7025 47 47 36.7025 47 24C47 11.2975 36.7025 1 24 1C11.2975 1 1 11.2975 1 24C1 36.7025 11.2975 47 24 47Z",
                fill: "#6784FF"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.5365 19.0811C24.375 19.2426 24.1132 19.2426 23.9517 19.0811L20.3255 15.4549C18.9159 14.0453 16.6307 14.0455 15.2205 15.4557C13.8102 16.866 13.8098 19.1509 15.2196 20.5608L19.7074 25.0485C20.9149 26.256 22.7958 26.4459 24.2123 25.5326L24.5942 25.2864C24.7861 25.1626 25.0421 25.2179 25.1658 25.4099L25.6583 26.1736C25.782 26.3656 25.7267 26.6215 25.5348 26.7453L25.1529 26.9915C23.0528 28.3455 20.2685 28.0644 18.4799 26.2759L13.9922 21.7882C11.9044 19.7003 11.905 16.3163 13.9931 14.2283C16.0811 12.1402 19.4654 12.1399 21.5529 14.2275L25.1791 17.8537C25.3406 18.0151 25.3406 18.277 25.1791 18.4385L24.5365 19.0811ZM23.5532 29.009C23.7147 28.8475 23.9765 28.8475 24.138 29.009L27.6744 32.5454C29.084 33.955 31.3692 33.9548 32.7795 32.5446C34.1897 31.1343 34.1902 28.8494 32.7803 27.4395L28.5565 23.2157C27.4291 22.0883 25.7072 21.8417 24.3192 22.575L23.9174 22.7872C23.7155 22.8939 23.4653 22.8166 23.3586 22.6147L22.9341 21.8112C22.8275 21.6092 22.9047 21.359 23.1066 21.2524L23.5084 21.0401C25.5651 19.9537 28.1143 20.3187 29.7839 21.9883L34.0077 26.2121C36.0956 28.3 36.0949 31.684 34.0069 33.772C31.9188 35.86 28.5345 35.8603 26.447 33.7728L22.9106 30.2364C22.7491 30.0749 22.7491 29.813 22.9106 29.6515L23.5532 29.009Z",
                fill: "white"
            }), i.createElement("path", {
                d: "M23.9517 19.0811L23.9827 18.9706L23.9827 18.9706L23.9517 19.0811ZM24.5365 19.0811L24.5056 18.9706L24.5365 19.0811ZM20.3255 15.4549L20.2946 15.5654L20.3255 15.4549ZM15.2205 15.4557L15.1895 15.3452L15.2205 15.4557ZM15.2196 20.5608L15.2506 20.4503L15.2196 20.5608ZM19.7074 25.0485L19.6764 25.1589L19.7074 25.0485ZM24.2123 25.5326L24.2337 25.6509L24.2123 25.5326ZM24.5942 25.2864L24.5728 25.1681L24.5942 25.2864ZM25.1658 25.4099L25.2078 25.3133L25.1658 25.4099ZM25.6583 26.1736L25.6163 26.2702L25.6583 26.1736ZM25.5348 26.7453L25.5562 26.8636L25.5348 26.7453ZM25.1529 26.9915L25.1315 26.8732L25.1529 26.9915ZM18.4799 26.2759L18.5109 26.1654L18.5109 26.1654L18.4799 26.2759ZM13.9922 21.7882L14.0232 21.6777L13.9922 21.7882ZM13.9931 14.2283L14.024 14.3388L13.9931 14.2283ZM21.5529 14.2275L21.522 14.3379L21.5529 14.2275ZM25.1791 17.8537L25.2101 17.7432L25.2101 17.7432L25.1791 17.8537ZM25.1791 18.4385L25.2101 18.5489L25.1791 18.4385ZM24.138 29.009L24.1689 28.8985L24.138 29.009ZM23.5532 29.009L23.5222 28.8985L23.5532 29.009ZM27.6744 32.5454L27.7054 32.4349L27.6744 32.5454ZM32.7795 32.5446L32.7485 32.4341L32.7795 32.5446ZM32.7803 27.4395L32.8112 27.329L32.7803 27.4395ZM28.5565 23.2157L28.5874 23.1052L28.5565 23.2157ZM24.3192 22.575L24.337 22.6953L24.337 22.6953L24.3192 22.575ZM23.9174 22.7872L23.8996 22.6668L23.9174 22.7872ZM23.3586 22.6147L23.3118 22.703L23.3586 22.6147ZM22.9341 21.8112L22.981 21.7229L22.9341 21.8112ZM23.1066 21.2524L23.0888 21.132L23.1066 21.2524ZM23.5084 21.0401L23.5262 21.1605L23.5262 21.1605L23.5084 21.0401ZM29.7839 21.9883L29.8148 21.8778L29.7839 21.9883ZM34.0077 26.2121L34.0387 26.1016L34.0077 26.2121ZM34.0069 33.772L34.0378 33.8824L34.0069 33.772ZM26.447 33.7728L26.478 33.6623L26.447 33.7728ZM22.9106 30.2364L22.8796 30.3468L22.9106 30.2364ZM22.9106 29.6515L22.9415 29.762L22.9106 29.6515ZM23.9827 18.9706C24.0515 19.0394 24.146 19.0772 24.2441 19.0772C24.3422 19.0772 24.4368 19.0394 24.5056 18.9706L24.5675 19.1915C24.4748 19.2842 24.3576 19.3272 24.2441 19.3272C24.1306 19.3272 24.0134 19.2842 23.9207 19.1915L23.9827 18.9706ZM20.3565 15.3444L23.9827 18.9706L23.9207 19.1915L20.2946 15.5654L20.3565 15.3444ZM15.1895 15.3452C15.9065 14.6282 16.8417 14.273 17.7732 14.2729C18.7047 14.2728 19.6397 14.6277 20.3565 15.3444L20.2946 15.5654C19.6017 14.8725 18.6893 14.5227 17.7732 14.5228C16.8571 14.523 15.9446 14.873 15.2514 15.5662L15.1895 15.3452ZM15.1887 20.6712C14.4732 19.9557 14.0962 18.9981 14.0963 18.0083C14.0965 17.0186 14.4738 16.0609 15.1895 15.3452L15.2514 15.5662C14.5569 16.2607 14.2288 17.1506 14.2287 18.0084C14.2285 18.8662 14.5562 19.7559 15.2506 20.4503L15.1887 20.6712ZM19.6764 25.1589L15.1887 20.6712L15.2506 20.4503L19.7383 24.938L19.6764 25.1589ZM24.2337 25.6509C22.802 26.5739 20.902 26.3845 19.6764 25.1589L19.7383 24.938C20.9278 26.1275 22.7895 26.3179 24.1909 25.4143L24.2337 25.6509ZM24.6156 25.4047L24.2337 25.6509L24.1909 25.4143L24.5728 25.1681L24.6156 25.4047ZM25.1238 25.5065C25.0753 25.4312 24.9943 25.3747 24.8981 25.3539C24.8029 25.3334 24.701 25.3496 24.6156 25.4047L24.5728 25.1681C24.6794 25.0994 24.8014 25.0814 24.9131 25.1056C25.0238 25.1295 25.1326 25.1966 25.2078 25.3133L25.1238 25.5065ZM25.6163 26.2702L25.1238 25.5065L25.2078 25.3133L25.7003 26.077L25.6163 26.2702ZM25.5134 26.627C25.6009 26.5706 25.6417 26.4933 25.6536 26.4378C25.6591 26.4126 25.6595 26.3893 25.6553 26.3656C25.6509 26.3403 25.64 26.307 25.6163 26.2702L25.7003 26.077C25.7384 26.1363 25.767 26.2069 25.781 26.2875C25.7953 26.3696 25.7931 26.454 25.7762 26.5322C25.7435 26.6836 25.6606 26.7962 25.5562 26.8636L25.5134 26.627ZM25.1315 26.8732L25.5134 26.627L25.5562 26.8636L25.1743 27.1098L25.1315 26.8732ZM18.5109 26.1654C20.2814 27.9359 23.0465 28.2175 25.1315 26.8732L25.1743 27.1098C23.0591 28.4735 20.2556 28.193 18.449 26.3864L18.5109 26.1654ZM14.0232 21.6777L18.5109 26.1654L18.449 26.3864L13.9613 21.8986L14.0232 21.6777ZM14.024 14.3388C12.9906 15.3722 12.493 16.7063 12.4929 18.0083C12.4927 19.3103 12.9898 20.6444 14.0232 21.6777L13.9613 21.8986C12.9068 20.8441 12.3603 19.4422 12.3605 18.0083C12.3607 16.5743 12.9075 15.1724 13.9621 14.1178L14.024 14.3388ZM21.522 14.3379C20.4902 13.3061 19.1335 12.7869 17.7732 12.787C16.4129 12.7872 15.0561 13.3067 14.024 14.3388L13.9621 14.1178C15.0181 13.0619 16.3975 12.5372 17.7732 12.5371C19.1489 12.5369 20.5282 13.0613 21.5839 14.117L21.522 14.3379ZM25.1481 17.9641L21.522 14.3379L21.5839 14.117L25.2101 17.7432L25.1481 17.9641ZM25.1481 18.328C25.2183 18.2578 25.2341 18.1859 25.2341 18.1461C25.2341 18.1062 25.2183 18.0343 25.1481 17.9641L25.2101 17.7432C25.3014 17.8345 25.3664 17.9743 25.3664 18.1461C25.3664 18.3179 25.3014 18.4576 25.2101 18.5489L25.1481 18.328ZM24.5056 18.9706L25.1481 18.328L25.2101 18.5489L24.5675 19.1915L24.5056 18.9706ZM24.107 29.1194C24.0382 29.0506 23.9437 29.0128 23.8456 29.0128C23.7474 29.0128 23.6529 29.0506 23.5841 29.1194L23.5222 28.8985C23.6149 28.8058 23.732 28.7629 23.8456 28.7629C23.9591 28.7629 24.0763 28.8058 24.1689 28.8985L24.107 29.1194ZM27.6434 32.6558L24.107 29.1194L24.1689 28.8985L27.7054 32.4349L27.6434 32.6558ZM32.8104 32.655C32.0934 33.3721 31.1582 33.7273 30.2267 33.7274C29.2952 33.7275 28.3602 33.3726 27.6434 32.6558L27.7054 32.4349C28.3982 33.1278 29.3106 33.4776 30.2267 33.4774C31.1428 33.4773 32.0553 33.1273 32.7485 32.4341L32.8104 32.655ZM32.8112 27.329C33.5268 28.0446 33.9038 29.0022 33.9036 29.9919C33.9034 30.9817 33.5261 31.9394 32.8104 32.655L32.7485 32.4341C33.4431 31.7395 33.7711 30.8496 33.7713 29.9919C33.7714 29.1341 33.4437 28.2443 32.7493 27.55L32.8112 27.329ZM28.5874 23.1052L32.8112 27.329L32.7493 27.55L28.5255 23.3261L28.5874 23.1052ZM24.3014 22.4546C25.703 21.7142 27.4427 21.9605 28.5874 23.1052L28.5255 23.3261C27.4154 22.216 25.7114 21.9693 24.337 22.6953L24.3014 22.4546ZM23.8996 22.6668L24.3014 22.4546L24.337 22.6953L23.9352 22.9076L23.8996 22.6668ZM23.4054 22.5264C23.4451 22.6015 23.5189 22.6643 23.613 22.6933C23.7055 22.7219 23.8087 22.7148 23.8996 22.6668L23.9352 22.9076C23.8242 22.9662 23.7013 22.9739 23.5916 22.94C23.4835 22.9066 23.3788 22.8299 23.3118 22.703L23.4054 22.5264ZM22.981 21.7229L23.4054 22.5264L23.3118 22.703L22.8873 21.8994L22.981 21.7229ZM23.1245 21.3727C23.0317 21.4217 22.9808 21.4974 22.9618 21.559C22.953 21.5875 22.9511 21.6119 22.953 21.6336C22.9549 21.6561 22.9619 21.6869 22.981 21.7229L22.8873 21.8994C22.853 21.8345 22.8296 21.7582 22.8224 21.6737C22.815 21.5884 22.8251 21.5057 22.8475 21.4331C22.8909 21.2924 22.9796 21.1897 23.0888 21.132L23.1245 21.3727ZM23.5262 21.1605L23.1245 21.3727L23.0888 21.132L23.4906 20.9198L23.5262 21.1605ZM29.7529 22.0987C28.1006 20.4464 25.5693 20.0812 23.5262 21.1605L23.4906 20.9198C25.5609 19.8261 28.128 20.1909 29.8148 21.8778L29.7529 22.0987ZM33.9767 26.3225L29.7529 22.0987L29.8148 21.8778L34.0387 26.1016L33.9767 26.3225ZM33.9759 33.6615C35.0094 32.6281 35.5069 31.294 35.5071 29.992C35.5072 28.69 35.0101 27.3559 33.9767 26.3225L34.0387 26.1016C35.0932 27.1561 35.6396 28.558 35.6394 29.992C35.6392 31.426 35.0924 32.8279 34.0378 33.8824L33.9759 33.6615ZM26.478 33.6623C27.5098 34.6942 28.8664 35.2134 30.2267 35.2133C31.5871 35.2131 32.9438 34.6936 33.9759 33.6615L34.0378 33.8824C32.9819 34.9384 31.6025 35.4631 30.2267 35.4632C28.851 35.4634 27.4717 34.939 26.416 33.8833L26.478 33.6623ZM22.9415 30.1259L26.478 33.6623L26.416 33.8833L22.8796 30.3468L22.9415 30.1259ZM22.9415 29.762C22.8714 29.8322 22.8556 29.9041 22.8556 29.944C22.8556 29.9838 22.8714 30.0557 22.9415 30.1259L22.8796 30.3468C22.7883 30.2555 22.7233 30.1158 22.7233 29.944C22.7233 29.7722 22.7883 29.6324 22.8796 29.5411L22.9415 29.762ZM23.5841 29.1194L22.9415 29.762L22.8796 29.5411L23.5222 28.8985L23.5841 29.1194Z",
                fill: "white"
            }))
        }
    }
    ,
    10594: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 24 24",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z",
                fill: "#FE2C55"
            }), i.createElement("path", {
                d: "M11.3028 15.2151C10.4934 16.0245 9.30444 16.016 8.6442 15.3557C7.98397 14.6955 7.97544 13.5065 8.78485 12.6971C9.06049 12.4215 9.06049 11.9745 8.78485 11.6989C8.5092 11.4232 8.06229 11.4232 7.78665 11.6989C6.49952 12.9861 6.36369 15.0716 7.646 16.354C8.92832 17.6363 11.0138 17.5005 12.301 16.2133L13.3248 15.1895C14.4068 14.1075 14.6713 12.4803 13.9787 11.2183C13.7911 10.8765 13.3621 10.7515 13.0203 10.9391C12.6786 11.1267 12.5536 11.5557 12.7412 11.8975C13.1094 12.5685 12.9986 13.5192 12.3266 14.1913L11.3028 15.2151ZM12.6972 8.7849C13.5066 7.97548 14.6956 7.984 15.3558 8.64425C16.016 9.30451 16.0246 10.4935 15.2152 11.3029C14.9395 11.5785 14.9395 12.0255 15.2152 12.3011C15.4908 12.5768 15.9377 12.5768 16.2134 12.3011C17.5005 11.0139 17.6363 8.92838 16.354 7.64603C15.0717 6.36368 12.9862 6.49951 11.699 7.78668L10.6752 8.8105C9.59325 9.89253 9.3287 11.5197 10.0213 12.7817C10.2089 13.1235 10.6379 13.2485 10.9797 13.0609C11.3214 12.8733 11.4464 12.4442 11.2588 12.1025C10.8906 11.4315 11.0014 10.4808 11.6734 9.80873L12.6972 8.7849ZM13.0336 12.6277C13.0186 12.3531 12.9459 12.0887 12.8178 11.8554C12.7737 11.7749 12.7493 11.6889 12.743 11.6029C12.7493 11.6889 12.7736 11.7749 12.8178 11.8554C12.9459 12.0888 13.0186 12.3531 13.0336 12.6277ZM13.2629 15.1276L12.2391 16.1514C10.9813 17.4093 8.95136 17.5356 7.70785 16.2921C7.11888 15.7031 6.83721 14.9377 6.8375 14.1615C6.8372 14.9377 7.11887 15.7031 7.70785 16.2921C8.95136 17.5357 10.9813 17.4093 12.2391 16.1515L13.2629 15.1277C13.8201 14.5704 14.1544 13.8662 14.2473 13.1452C14.1544 13.8661 13.8201 14.5704 13.2629 15.1276ZM8.90341 12.2276C8.89633 12.3759 8.8362 12.522 8.723 12.6352C8.28443 13.0738 8.07511 13.623 8.07481 14.147C8.07512 13.623 8.28444 13.0739 8.723 12.6353C8.83621 12.5221 8.89635 12.3759 8.90341 12.2276ZM12.6354 8.72306C13.4748 7.88361 14.7193 7.88401 15.4176 8.58241C15.6813 8.84604 15.8454 9.18748 15.9025 9.55557C15.8454 9.18746 15.6813 8.846 15.4176 8.58236C14.7193 7.88396 13.4748 7.88356 12.6354 8.72301L11.6116 9.74684C11.1715 10.1869 10.9613 10.7444 10.9635 11.2737C10.9613 10.7445 11.1715 10.187 11.6116 9.74689L12.6354 8.72306ZM11.2573 12.4817C11.244 12.6856 11.13 12.8786 10.9376 12.9842C10.6382 13.1485 10.2623 13.039 10.098 12.7396C9.88489 12.3514 9.76492 11.927 9.73407 11.4947C9.76493 11.9269 9.8849 12.3513 10.098 12.7396C10.2623 13.039 10.6382 13.1485 10.9376 12.9842C11.13 12.8786 11.244 12.6856 11.2573 12.4817ZM15.1103 11.9351C15.1348 12.0466 15.1903 12.1526 15.277 12.2393C15.5185 12.4808 15.91 12.4808 16.1515 12.2393C16.7 11.6908 17.0333 10.9955 17.1317 10.2827C17.0333 10.9955 16.6999 11.6908 16.1515 12.2392C15.91 12.4807 15.5185 12.4807 15.277 12.2392C15.1903 12.1526 15.1348 12.0466 15.1103 11.9351Z",
                fill: "white"
            }))
        }
    }
    ,
    1983: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("circle", {
                cx: "24",
                cy: "24",
                r: "24",
                fill: "#0A66C2"
            }), i.createElement("path", {
                d: "M25.2775 21.8588C25.5235 21.4456 25.8234 21.067 26.1692 20.7329C26.6685 20.2507 27.2585 19.8724 27.9051 19.6199C28.5518 19.3675 29.2421 19.246 29.936 19.2625C31.0487 19.2625 32.1351 19.3862 33.1478 19.8886C34.6419 20.6251 35.3363 21.9324 35.6888 23.4765C35.9239 24.6175 36.0298 25.7813 36.0044 26.946C36.0044 29.7685 36.0044 32.5909 36.0044 35.416C36.0044 35.6633 35.9387 35.7317 35.6914 35.729C34.242 35.729 32.7979 35.7159 31.3433 35.729C31.0803 35.729 31.0119 35.6659 31.0145 35.4029C31.025 32.7251 31.025 30.0482 31.0145 27.3722C31.0217 26.806 30.9679 26.2407 30.854 25.686C30.5252 24.1867 29.5835 23.5002 28.0553 23.6527C26.527 23.8053 25.6879 24.6891 25.4827 26.3384C25.4319 26.7652 25.4073 27.1948 25.409 27.6247C25.409 30.2183 25.409 32.8093 25.409 35.4029C25.409 35.6659 25.3354 35.7317 25.0776 35.729C23.6177 35.7159 22.1578 35.729 20.6979 35.729C20.4586 35.729 20.4033 35.6607 20.4033 35.4292C20.4033 30.2735 20.4033 25.1196 20.4033 19.9675C20.4033 19.7044 20.4849 19.6571 20.7242 19.6571C22.1105 19.6571 23.4967 19.6702 24.883 19.6571C25.146 19.6571 25.1986 19.7386 25.1933 19.978C25.1802 20.5935 25.1933 21.209 25.1933 21.8193L25.2775 21.8588Z",
                fill: "#FDFEFE"
            }), i.createElement("path", {
                d: "M17.2574 27.6825C17.2574 30.2525 17.2574 32.825 17.2574 35.395C17.2574 35.658 17.2022 35.7316 16.9312 35.729C15.474 35.7159 14.0141 35.729 12.5542 35.729C12.3254 35.729 12.2517 35.6817 12.2517 35.437C12.2517 30.2744 12.2517 25.1108 12.2517 19.9464C12.2517 19.736 12.2938 19.6544 12.5148 19.6571C13.9948 19.6676 15.4749 19.6676 16.9549 19.6571C17.218 19.6571 17.2443 19.7491 17.2443 19.9675C17.2548 22.54 17.2574 25.1126 17.2574 27.6825Z",
                fill: "#FDFDFE"
            }), i.createElement("path", {
                d: "M11.8755 14.5541C11.8755 13.9811 12.0456 13.4211 12.3642 12.9449C12.6829 12.4688 13.1357 12.0979 13.6654 11.8794C14.195 11.6608 14.7776 11.6045 15.3393 11.7174C15.901 11.8303 16.4165 12.1075 16.8206 12.5137C17.2246 12.92 17.4989 13.437 17.6088 13.9993C17.7186 14.5616 17.659 15.1439 17.4376 15.6723C17.2162 16.2008 16.8429 16.6516 16.365 16.9676C15.8871 17.2836 15.3261 17.4507 14.7532 17.4476C13.9896 17.44 13.2597 17.1322 12.7212 16.5907C12.1827 16.0493 11.8789 15.3177 11.8755 14.5541Z",
                fill: "#FDFDFE"
            }))
        }
    }
    ,
    78116: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 24 24",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z",
                fill: "#FE2C55"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M18.7913 7.1875C18.6796 6.99413 18.4733 6.875 18.25 6.875H5.75001C5.50258 6.875 5.27845 7.02097 5.17839 7.24727C5.07834 7.47356 5.1212 7.73758 5.28771 7.9206L8.55021 11.5065C8.72305 11.6965 8.9945 11.7614 9.23456 11.6702L13.7656 9.94799C13.8184 9.92795 13.8423 9.93624 13.8527 9.94039C13.871 9.94765 13.8971 9.96649 13.9177 10.0013C13.9382 10.0361 13.9421 10.0681 13.9396 10.0876C13.9382 10.0987 13.9339 10.1237 13.8909 10.1602L10.1707 13.3155C9.97902 13.4782 9.90339 13.7398 9.97878 13.9796L11.4038 18.5124C11.4781 18.749 11.6853 18.9192 11.9317 18.9463C12.1781 18.9734 12.4173 18.8522 12.5413 18.6375L18.7913 7.81251C18.9029 7.61913 18.9029 7.38088 18.7913 7.1875Z",
                fill: "white"
            }))
        }
    }
    ,
    67616: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.0002 3C17.9251 3 13.0002 7.92487 13.0002 14C13.0002 20.0751 17.9251 25 24.0002 25C30.0754 25 35.0002 20.0751 35.0002 14C35.0002 7.92487 30.0754 3 24.0002 3ZM10.4885 44C8.69328 44 7.28076 42.4175 7.8388 40.7112C10.0625 33.9118 16.4577 29 24 29C31.5424 29 37.9375 33.9118 40.1612 40.7112C40.7193 42.4175 39.3067 44 37.5115 44H10.4885Z"
            }))
        }
    }
    ,
    94353: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M24.0173 3C12.4102 3 3 12.3947 3 23.9827C3 32.8766 8.53541 40.4753 16.3542 43.5321C16.1639 41.8742 16.0082 39.3183 16.4234 37.5049C16.8039 35.8643 18.8797 27.074 18.8797 27.074C18.8797 27.074 18.257 25.8133 18.257 23.9655C18.257 21.0469 19.9522 18.8709 22.0626 18.8709C23.8616 18.8709 24.7265 20.2179 24.7265 21.824C24.7265 23.6201 23.5848 26.3141 22.9794 28.8183C22.4777 30.9079 24.0345 32.6176 26.093 32.6176C29.8294 32.6176 32.7009 28.6801 32.7009 23.0156C32.7009 17.9901 29.0856 14.4844 23.9135 14.4844C17.9283 14.4844 14.4168 18.9572 14.4168 23.5855C14.4168 25.3816 15.1087 27.3158 15.9736 28.3692C16.1466 28.5765 16.1639 28.7664 16.112 28.9737C15.9563 29.6299 15.5931 31.0633 15.5239 31.3569C15.4374 31.7368 15.2125 31.8232 14.8146 31.6332C12.1853 30.4071 10.542 26.5905 10.542 23.4992C10.542 16.8849 15.3509 10.8059 24.4324 10.8059C31.7149 10.8059 37.3887 15.9868 37.3887 22.9293C37.3887 30.1653 32.822 35.9852 26.4909 35.9852C24.3632 35.9852 22.3566 34.8799 21.682 33.5674C21.682 33.5674 20.6268 37.574 20.3673 38.5584C19.9003 40.389 18.6202 42.6686 17.7553 44.0674C19.7273 44.6719 21.8031 45 23.9827 45C35.5897 45 44.9999 35.6053 44.9999 24.0173C45.0345 12.3947 35.6243 3 24.0173 3Z",
                fill: "#E60019"
            }))
        }
    }
    ,
    91842: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M16 10.554V37.4459L38.1463 24L16 10.554ZM12 8.77702C12 6.43812 14.5577 4.99881 16.5569 6.21266L41.6301 21.4356C43.5542 22.6038 43.5542 25.3962 41.6301 26.5644L16.5569 41.7873C14.5577 43.0012 12 41.5619 12 39.223V8.77702Z"
            }))
        }
    }
    ,
    62289: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 16 16",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.74992 1.66699C1.96752 1.66699 1.33325 2.30125 1.33325 3.08366V14.3337C1.33325 14.6033 1.49568 14.8464 1.7448 14.9496C1.99391 15.0528 2.28066 14.9957 2.47132 14.8051L4.90106 12.3753H13.2499C14.0323 12.3753 14.6666 11.7411 14.6666 10.9587V3.08366C14.6666 2.30126 14.0323 1.66699 13.2499 1.66699H2.74992ZM8.0386 5.35482C7.75701 5.35482 7.49304 5.52578 7.31046 5.89816C7.24968 6.02213 7.11037 6.0943 6.97939 6.05064L6.18882 5.78712C6.05783 5.74346 5.98609 5.60139 6.04026 5.47438C6.35392 4.7389 7.00019 4.02148 8.0386 4.02148C9.1483 4.02148 10.0479 4.92107 10.0479 6.03076C10.0479 6.67737 9.65353 7.21121 9.24558 7.54935C8.89233 7.84214 8.42977 8.07353 7.95224 8.13552C7.81531 8.1533 7.70295 8.04 7.70295 7.90193V7.0686C7.70295 6.93053 7.81667 6.81693 7.94784 6.77384C8.09003 6.72713 8.24885 6.6437 8.39471 6.5228C8.64051 6.31907 8.71455 6.12567 8.71455 6.03076C8.71455 5.65745 8.41192 5.35482 8.0386 5.35482ZM8.83293 9.43848C8.83293 9.85269 8.49714 10.1885 8.08293 10.1885C7.66871 10.1885 7.33293 9.85269 7.33293 9.43848C7.33293 9.02426 7.66871 8.68848 8.08293 8.68848C8.49714 8.68848 8.83293 9.02426 8.83293 9.43848Z"
            }))
        }
    }
    ,
    53577: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 24 24",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M12 24C5.3736 24 0 18.6264 0 12C0 5.3736 5.3736 0 12 0C18.6264 0 24 5.3736 24 12C24 18.6264 18.6264 24 12 24Z",
                fill: "#FF4500"
            }), i.createElement("path", {
                d: "M14.5765 14.4872C13.9304 14.4872 13.4036 13.9552 13.4036 13.3027C13.4036 12.6502 13.9304 12.1182 14.5765 12.1182C15.2226 12.1182 15.7494 12.6502 15.7494 13.3027C15.7494 13.9552 15.2226 14.4872 14.5765 14.4872ZM14.7837 16.431C13.9822 17.2381 12.4491 17.3018 11.9989 17.3018C11.5486 17.3018 10.0133 17.2381 9.21409 16.431C9.09478 16.3105 9.09478 16.1173 9.21409 15.9968C9.33341 15.8763 9.52476 15.8763 9.64408 15.9968C10.1484 16.5061 11.2267 16.6879 11.9989 16.6879C12.7688 16.6879 13.8494 16.5061 14.3537 15.9968C14.473 15.8763 14.6643 15.8763 14.7837 15.9968C14.9007 16.1173 14.9007 16.3105 14.7837 16.431ZM8.24381 13.3027C8.24381 12.6502 8.7706 12.1182 9.4167 12.1182C10.0628 12.1182 10.5896 12.6502 10.5896 13.3027C10.5896 13.9552 10.0628 14.4872 9.4167 14.4872C8.7706 14.4872 8.24381 13.9552 8.24381 13.3027ZM19.5 12.1182C19.5 11.202 18.7661 10.4608 17.8588 10.4608C17.4154 10.4608 17.0146 10.6382 16.7197 10.9269C15.5986 10.1085 14.052 9.581 12.3298 9.51962L13.0772 5.96615L15.5198 6.49133C15.5491 7.11881 16.0579 7.61898 16.686 7.61898C17.3343 7.61898 17.8588 7.08926 17.8588 6.43449C17.8588 5.77972 17.3343 5.25 16.686 5.25C16.2244 5.25 15.8305 5.52055 15.6391 5.91159L12.9106 5.32503C12.8341 5.30911 12.7553 5.32275 12.69 5.36595C12.6247 5.40914 12.5797 5.47508 12.5639 5.55237L11.7445 9.45141C11.74 9.47415 11.7445 9.49461 11.7445 9.51735C9.99077 9.56282 8.4149 10.0925 7.27578 10.9224C6.98086 10.6359 6.5824 10.4608 6.14115 10.4608C5.2339 10.4608 4.5 11.2043 4.5 12.1182C4.5 12.7912 4.89847 13.3709 5.47028 13.6301C5.44552 13.7938 5.43201 13.962 5.43201 14.1325C5.43201 16.6834 8.37213 18.75 11.9989 18.75C15.6256 18.75 18.5657 16.6834 18.5657 14.1325C18.5657 13.9643 18.5522 13.7983 18.5275 13.6346C19.097 13.3755 19.5 12.7957 19.5 12.1182Z",
                fill: "white"
            }))
        }
    }
    ,
    75612: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.0002 47.001C36.7028 47.001 47.0002 36.7035 47.0002 24.001C47.0002 11.2984 36.7028 1.00098 24.0002 1.00098C11.2977 1.00098 1.00024 11.2984 1.00024 24.001C1.00024 36.7035 11.2977 47.001 24.0002 47.001Z",
                fill: "url(#SmsCircleColor_paint0_linear)"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M36.6501 23.569C36.6501 29.3645 30.9865 34.0628 24.0001 34.0628C23.1537 34.0628 22.3267 33.9938 21.5269 33.8623C20.826 33.7948 20.4086 33.8602 19.689 34.0827C19.4224 34.1652 19.1109 34.3318 18.7539 34.5226C17.9542 34.9503 16.9262 35.5 15.6626 35.5C15.6388 35.5 15.7188 35.4207 15.8558 35.285C16.3095 34.8358 17.3876 33.7682 17.3876 32.9125V32.5167C13.7656 30.6708 11.3501 27.3539 11.3501 23.569C11.3501 17.7735 17.0137 13.0753 24.0001 13.0753C30.9865 13.0753 36.6501 17.7735 36.6501 23.569Z",
                fill: "white"
            }), i.createElement("defs", null, i.createElement("linearGradient", {
                id: "SmsCircleColor_paint0_linear",
                x1: "73.7964",
                y1: "64.0399",
                x2: "58.9088",
                y2: "-4.65515",
                gradientUnits: "userSpaceOnUse"
            }, i.createElement("stop", {
                stopColor: "#43E6A2"
            }), i.createElement("stop", {
                offset: "1",
                stopColor: "#18D037"
            }))))
        }
    }
    ,
    92067: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M25 10.8685C25 8.47242 22.3296 7.04325 20.3359 8.37236L10.3944 15H6C4.34315 15 3 16.3431 3 18V30C3 31.6568 4.34314 33 6 33H10.3944L20.3359 39.6276C22.3296 40.9567 25 39.5276 25 37.1315V10.8685ZM29.2929 18.1213L35.1716 24L29.2929 29.8787C28.9024 30.2692 28.9024 30.9024 29.2929 31.2929L30.7071 32.7071C31.0976 33.0976 31.7308 33.0976 32.1213 32.7071L38 26.8284L43.8787 32.7071C44.2692 33.0976 44.9024 33.0976 45.2929 32.7071L46.7071 31.2929C47.0976 30.9024 47.0976 30.2692 46.7071 29.8787L40.8284 24L46.7071 18.1213C47.0976 17.7308 47.0976 17.0976 46.7071 16.7071L45.2929 15.2929C44.9024 14.9024 44.2692 14.9024 43.8787 15.2929L38 21.1716L32.1213 15.2929C31.7308 14.9024 31.0976 14.9024 30.7071 15.2929L29.2929 16.7071C28.9024 17.0976 28.9024 17.7308 29.2929 18.1213Z"
            }))
        }
    }
    ,
    3732: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M24 48C37.2548 48 48 37.2548 48 24C48 10.7452 37.2548 0 24 0C10.7452 0 0 10.7452 0 24C0 37.2548 10.7452 48 24 48Z",
                fill: "#37AEE2"
            }), i.createElement("path", {
                d: "M15.0708 25.1038L18.2549 33.5766C18.2549 33.5766 18.6529 34.3681 19.0782 34.3681C19.5035 34.3681 25.8443 28.0272 25.8443 28.0272L32.8947 14.9343L15.1822 22.9151L15.0708 25.1038Z",
                fill: "#C8DAEA"
            }), i.createElement("path", {
                d: "M19.2945 27.2772L18.6827 33.5219C18.6827 33.5219 18.428 35.4351 20.4158 33.5219C22.4035 31.6087 24.3117 30.1328 24.3117 30.1328",
                fill: "#A9C6D8"
            }), i.createElement("path", {
                d: "M15.1297 25.4063L8.5796 23.3553C8.5796 23.3553 7.79723 23.0492 8.04968 22.3583C8.10199 22.2161 8.20661 22.0937 8.51819 21.8838C9.96922 20.9108 35.378 12.1319 35.378 12.1319C35.378 12.1319 36.0967 11.9001 36.5198 12.0532C36.7131 12.1232 36.8382 12.2041 36.9405 12.4949C36.9792 12.5998 36.9996 12.8272 36.9974 13.0502C36.9951 13.212 36.9746 13.3607 36.9587 13.5969C36.8041 15.9977 32.1735 33.914 32.1735 33.914C32.1735 33.914 31.896 34.9614 30.9044 34.9985C30.5428 35.0116 30.1039 34.9417 29.5785 34.5066C27.6294 32.8951 20.8974 28.5439 19.41 27.5884C19.3258 27.5337 19.3031 27.4638 19.2872 27.396C19.2667 27.2954 19.3804 27.1708 19.3804 27.1708C19.3804 27.1708 31.1046 17.1522 31.4162 16.1004C31.4412 16.0195 31.3502 15.978 31.2274 16.013C30.4496 16.2885 16.9491 24.4836 15.4595 25.3888C15.373 25.4412 15.1297 25.4063 15.1297 25.4063Z",
                fill: "white"
            }))
        }
    }
    ,
    74133: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 12 12",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M1.25002 3.75C1.25002 2.36929 2.36931 1.25 3.75003 1.25H8.37503C9.6024 1.25 10.6123 2.18104 10.7371 3.37539C10.7514 3.51272 10.6381 3.625 10.5 3.625H10C9.86195 3.625 9.7524 3.51208 9.72758 3.37626C9.61052 2.73561 9.04948 2.25 8.37503 2.25H3.75003C2.9216 2.25 2.25003 2.92157 2.25003 3.75V7.21713C2.25003 7.4168 2.02749 7.5359 1.86135 7.42514L0.180687 6.3047C0.0658053 6.22811 0.0347618 6.07289 0.11135 5.95801L0.3887 5.54199C0.465288 5.42711 0.620506 5.39606 0.735388 5.47265L1.25002 5.81574V3.75Z",
                fill: "white",
                fillOpacity: "0.5"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6.98384 7.125L7.47479 8.29101C7.51382 8.38372 7.60461 8.444 7.7052 8.444H8.20592C8.34706 8.444 8.4438 8.30175 8.39192 8.17049L6.59908 3.63427C6.37578 3.10393 5.62427 3.10392 5.40096 3.63427L3.54639 8.16828C3.49257 8.29986 3.58935 8.444 3.7315 8.444H4.29484C4.39543 8.444 4.48622 8.38372 4.52525 8.29101L5.01621 7.125H6.98384ZM6.0461 4.89788C6.02893 4.85709 5.97112 4.85709 5.95394 4.89788L5.43726 6.125H6.56278L6.0461 4.89788Z",
                fill: "white",
                fillOpacity: "0.5"
            }), i.createElement("path", {
                d: "M8.25001 10.75C9.63072 10.75 10.75 9.63071 10.75 8.25V6.18426L11.2647 6.52735C11.3795 6.60394 11.5347 6.57289 11.6113 6.45801L11.8887 6.04199C11.9653 5.92711 11.9342 5.77189 11.8194 5.6953L10.1387 4.57486C9.97255 4.4641 9.75001 4.5832 9.75001 4.78287V8.25C9.75001 9.07843 9.07844 9.75 8.25001 9.75H3.62501C2.95055 9.75 2.38951 9.26439 2.27245 8.62374C2.24764 8.48792 2.13808 8.375 2.00001 8.375H1.50001C1.36194 8.375 1.24863 8.48728 1.26297 8.62461C1.38772 9.81896 2.39764 10.75 3.62501 10.75H8.25001Z",
                fill: "white",
                fillOpacity: "0.5"
            }))
        }
    }
    ,
    29690: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.0002 47.001C36.7028 47.001 47.0002 36.7035 47.0002 24.001C47.0002 11.2984 36.7028 1.00098 24.0002 1.00098C11.2977 1.00098 1.00024 11.2984 1.00024 24.001C1.00024 36.7035 11.2977 47.001 24.0002 47.001Z",
                fill: "#1DA1F2"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M38.2029 13.5327C37.3894 14.0824 35.5215 14.8813 34.6003 14.8813V14.8829C33.5484 13.7237 32.0675 13 30.4252 13C27.2353 13 24.6488 15.7287 24.6488 19.0925C24.6488 19.5598 24.7001 20.0157 24.795 20.4529H24.794C20.4671 20.3331 15.7348 18.0452 12.886 14.1294C11.1344 17.3277 12.6501 20.8848 14.6378 22.1809C13.9574 22.235 12.7049 22.0982 12.1153 21.4913C12.0758 23.6142 13.0434 26.4269 16.5714 27.4473C15.8919 27.8329 14.6892 27.7223 14.1662 27.6402C14.3497 29.4322 16.7285 31.775 19.3297 31.775C18.4026 32.9063 14.9144 34.9582 11 34.3054C13.6584 36.0118 16.7568 37 20.0362 37C29.3556 37 36.5929 29.0322 36.2034 19.2027C36.2019 19.1919 36.2019 19.1811 36.2009 19.1693C36.2019 19.144 36.2034 19.1187 36.2034 19.0925C36.2034 19.0619 36.2009 19.0331 36.2 19.0035C37.0484 18.3914 38.1868 17.3087 39 15.8836C38.5284 16.1577 37.1134 16.7064 35.7968 16.8426C36.6418 16.3615 37.8937 14.7858 38.2029 13.5327Z",
                fill: "white"
            }))
        }
    }
    ,
    95748: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 32 32",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z",
                fill: "#4D76A1"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15.4221 22.9074H16.7111C16.7111 22.9074 17.1005 22.8663 17.2993 22.6603C17.4823 22.4712 17.4764 22.1161 17.4764 22.1161C17.4764 22.1161 17.4512 20.4534 18.254 20.2086C19.0453 19.9674 20.0615 21.8155 21.1386 22.5261C21.9531 23.0639 22.572 22.946 22.572 22.946L25.4519 22.9074C25.4519 22.9074 26.9584 22.8182 26.2441 21.6796C26.1855 21.5864 25.8281 20.8373 24.1028 19.2979C22.2971 17.6868 22.5389 17.9474 24.7141 15.1604C26.0389 13.4632 26.5685 12.427 26.4031 11.9832C26.2453 11.5605 25.2709 11.6722 25.2709 11.6722L22.0283 11.6916C22.0283 11.6916 21.7879 11.6601 21.6096 11.7625C21.4355 11.863 21.3233 12.0971 21.3233 12.0971C21.3233 12.0971 20.8101 13.4105 20.1256 14.5275C18.6817 16.8844 18.1044 17.0088 17.8684 16.8625C17.3195 16.5214 17.4565 15.4922 17.4565 14.7611C17.4565 12.4771 17.8169 11.5247 16.7548 11.2782C16.4023 11.1963 16.1429 11.1423 15.2415 11.1335C14.0845 11.122 13.1052 11.1369 12.5507 11.3981C12.1818 11.5717 11.8972 11.9587 12.0706 11.9809C12.2849 12.0085 12.7703 12.1067 13.0276 12.4436C13.3599 12.8781 13.3482 13.8541 13.3482 13.8541C13.3482 13.8541 13.5391 16.5428 12.9023 16.8768C12.4652 17.1059 11.8656 16.6382 10.5783 14.4999C9.91875 13.4046 9.42076 12.1939 9.42076 12.1939C9.42076 12.1939 9.32474 11.9677 9.15347 11.8467C8.94561 11.7001 8.65519 11.6533 8.65519 11.6533L5.57386 11.6728C5.57386 11.6728 5.1113 11.6851 4.94149 11.8785C4.79043 12.0504 4.92949 12.4061 4.92949 12.4061C4.92949 12.4061 7.34186 17.8314 10.0733 20.5654C12.5779 23.0721 15.4221 22.9074 15.4221 22.9074Z",
                fill: "white"
            }))
        }
    }
    ,
    29098: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("circle", {
                cx: "24",
                cy: "24",
                r: "24",
                fill: "#20D5EC"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M37.1213 15.8787C38.2929 17.0503 38.2929 18.9497 37.1213 20.1213L23.6213 33.6213C22.4497 34.7929 20.5503 34.7929 19.3787 33.6213L10.8787 25.1213C9.70711 23.9497 9.70711 22.0503 10.8787 20.8787C12.0503 19.7071 13.9497 19.7071 15.1213 20.8787L21.5 27.2574L32.8787 15.8787C34.0503 14.7071 35.9497 14.7071 37.1213 15.8787Z",
                fill: "white"
            }))
        }
    }
    ,
    70363: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = (e.fill,
            e.style)
              , s = e.className
              , l = e.e2eTag
              , u = void 0 === l ? "" : l;
            return i.createElement("svg", {
                className: s,
                style: a,
                width: n,
                "data-e2e": u,
                height: o,
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24 47C36.7025 47 47 36.7025 47 24C47 11.2975 36.7025 1 24 1C11.2975 1 1 11.2975 1 24C1 36.7025 11.2975 47 24 47Z",
                fill: "#25D366"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M30.9028 25.6129C30.5802 25.4515 28.9944 24.6713 28.6988 24.5635C28.4031 24.4559 28.1881 24.4021 27.9731 24.7249C27.758 25.0478 27.1399 25.7744 26.9517 25.9897C26.7636 26.2049 26.5754 26.2319 26.2529 26.0704C25.9303 25.909 24.891 25.5684 23.659 24.4694C22.7002 23.6141 22.0528 22.5579 21.8647 22.235C21.6765 21.9121 21.8446 21.7375 22.0061 21.5767C22.1512 21.4321 22.3287 21.2 22.4899 21.0116C22.6512 20.8233 22.705 20.6887 22.8125 20.4735C22.92 20.2582 22.8663 20.0699 22.7855 19.9085C22.7049 19.747 22.0599 18.1593 21.7911 17.5134C21.5293 16.8845 21.2634 16.9697 21.0654 16.9598C20.8774 16.9504 20.6622 16.9484 20.4472 16.9484C20.2322 16.9484 19.8827 17.0291 19.587 17.352C19.2914 17.6749 18.4581 18.4553 18.4581 20.0428C18.4581 21.6306 19.6139 23.1643 19.7752 23.3795C19.9365 23.5949 22.0496 26.8528 25.2853 28.2499C26.0548 28.5823 26.6557 28.7807 27.1241 28.9293C27.8968 29.1749 28.5999 29.1402 29.1557 29.0572C29.7754 28.9646 31.064 28.277 31.3328 27.5235C31.6016 26.7699 31.6016 26.1242 31.521 25.9897C31.4404 25.8551 31.2253 25.7744 30.9028 25.6129ZM25.0178 33.6472H25.0134C23.0881 33.6465 21.1998 33.1292 19.5524 32.1517L19.1606 31.9191L15.0998 32.9844L16.1837 29.0251L15.9286 28.6191C14.8546 26.9109 14.2873 24.9365 14.2881 22.9091C14.2905 16.9934 19.1037 12.1805 25.022 12.1805C27.8879 12.1815 30.5817 13.299 32.6076 15.3271C34.6333 17.3551 35.7482 20.0509 35.7471 22.9178C35.7447 28.8339 30.9315 33.6472 25.0178 33.6472ZM34.1489 13.7858C31.7117 11.3458 28.4706 10.0014 25.0173 10C17.902 10 12.111 15.7906 12.1082 22.908C12.1073 25.1832 12.7017 27.4039 13.8313 29.3617L12 36.0509L18.8432 34.2559C20.7287 35.2843 22.8516 35.8264 25.0121 35.827H25.0174H25.0174C32.132 35.827 37.9234 30.0359 37.9263 22.9184C37.9276 19.4691 36.5861 16.2258 34.1489 13.7858Z",
                fill: "white"
            }))
        }
    }
    ,
    70873: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 72 72",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                d: "M36.2544 66.8965C38.3507 66.8965 40.05 65.1971 40.05 63.1008C40.05 61.0045 38.3507 59.3052 36.2544 59.3052C34.1581 59.3052 32.4587 61.0045 32.4587 63.1008C32.4587 65.1971 34.1581 66.8965 36.2544 66.8965Z"
            }), i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M44.0911 16.0463L41.8628 18.7804C39.935 18.56 37.9871 18.4349 36.0341 18.4349C24.1665 18.4349 12.6093 22.5961 3.48571 30.1523C3.20529 30.3826 2.86479 30.4978 2.52929 30.4978C2.09865 30.4978 1.66801 30.3125 1.37257 29.952C0.846784 29.3161 0.931911 28.3696 1.57286 27.8389C11.2322 19.8369 23.4755 15.4304 36.0392 15.4304C38.7482 15.4304 41.4372 15.6457 44.0911 16.0463ZM32.779 29.9221C25.0625 30.5381 17.8117 33.3573 11.6475 38.1594C10.9915 38.6702 10.8764 39.6116 11.3871 40.2675C11.8979 40.9235 12.8393 41.0387 13.4953 40.5279C18.3926 36.7123 24.0309 34.2536 30.0449 33.2771L32.779 29.9221ZM50.2049 48.4843C46.0137 45.6501 41.1114 44.1528 36.0338 44.1528C34.8821 44.1528 33.7454 44.233 32.6187 44.3832L29.5892 48.0987C31.6623 47.4778 33.8255 47.1523 36.0338 47.1523C40.5105 47.1523 44.8269 48.4693 48.5224 50.968C49.2134 51.4337 50.1448 51.2534 50.6105 50.5624C51.0762 49.8814 50.8909 48.95 50.2049 48.4843ZM60.4207 38.1653C55.4934 34.3245 49.875 31.7607 43.8811 30.5689L41.7079 33.2379C47.842 34.1793 53.5906 36.653 58.573 40.5338C58.8484 40.7491 59.1739 40.8493 59.4943 40.8493C59.94 40.8493 60.3857 40.649 60.6811 40.2684C61.1969 39.6174 61.0767 38.676 60.4207 38.1653ZM53.7655 18.4401C59.7944 20.5282 65.4529 23.6729 70.4253 27.779C71.0662 28.3048 71.1563 29.2512 70.6255 29.8972C70.0998 30.5331 69.1534 30.6232 68.5124 30.0975C63.53 25.9863 57.8215 22.8967 51.7374 20.9288L53.7655 18.4401Z"
            }), i.createElement("path", {
                d: "M14.4869 61.0034C14.1514 61.0034 13.8159 60.8932 13.5405 60.6679C12.8996 60.1421 12.7994 59.1957 13.3252 58.5547L56.3993 5.69607C56.9251 5.05512 57.8715 4.95497 58.5125 5.48075C59.1534 6.00653 59.2536 6.95294 58.7278 7.5939L15.6537 60.4526C15.3532 60.8181 14.9226 61.0034 14.4869 61.0034Z"
            }))
        }
    }
    ,
    73635: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => r
        });
        var i = n(40099);
        function r(e) {
            var t = e.width
              , n = void 0 === t ? "1em" : t
              , r = e.height
              , o = void 0 === r ? "1em" : r
              , a = e.fill
              , s = void 0 === a ? "currentColor" : a
              , l = e.style
              , u = e.className
              , c = e.e2eTag
              , h = void 0 === c ? "" : c;
            return i.createElement("svg", {
                className: u,
                style: l,
                width: n,
                "data-e2e": h,
                height: o,
                viewBox: "0 0 48 48",
                fill: s,
                xmlns: "http://www.w3.org/2000/svg"
            }, i.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M21.1718 23.9999L10.2931 13.1212C9.90261 12.7307 9.90261 12.0975 10.2931 11.707L11.7074 10.2928C12.0979 9.90228 12.731 9.90228 13.1216 10.2928L24.0002 21.1715L34.8789 10.2928C35.2694 9.90228 35.9026 9.90228 36.2931 10.2928L37.7073 11.707C38.0979 12.0975 38.0979 12.7307 37.7073 13.1212L26.8287 23.9999L37.7073 34.8786C38.0979 35.2691 38.0979 35.9023 37.7073 36.2928L36.2931 37.707C35.9026 38.0975 35.2694 38.0975 34.8789 37.707L24.0002 26.8283L13.1216 37.707C12.731 38.0975 12.0979 38.0975 11.7074 37.707L10.2931 36.2928C9.90261 35.9023 9.90261 35.2691 10.2931 34.8786L21.1718 23.9999Z"
            }))
        }
    }
    ,
    94810: (e, t, n) => {
        "use strict";
        function i(e, t) {
            return function(e) {
                if (Array.isArray(e))
                    return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var i, r, o, a, s = [], l = !0, u = !1;
                    try {
                        if (o = (n = n.call(e)).next,
                        0 === t) {
                            if (Object(n) !== n)
                                return;
                            l = !1
                        } else
                            for (; !(l = (i = o.call(n)).done) && (s.push(i.value),
                            s.length !== t); l = !0)
                                ;
                    } catch (e) {
                        u = !0,
                        r = e
                    } finally {
                        try {
                            if (!l && null != n.return && (a = n.return(),
                            Object(a) !== a))
                                return
                        } finally {
                            if (u)
                                throw r
                        }
                    }
                    return s
                }
            }(e, t) || o(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function r(e) {
            return function(e) {
                if (Array.isArray(e))
                    return a(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || o(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function o(e, t) {
            var n;
            if (e)
                return "string" == typeof e ? a(e, t) : "Map" === (n = "Object" === (n = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : n) || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? a(e, t) : void 0
        }
        function a(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function s() {
            return (1 < arguments.length && void 0 !== arguments[1] && !arguments[1] ? /^[0-9]+$/ : /^[0-9]*$/).test(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "")
        }
        function l() {
            var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "";
            return e && /[^a-zA-Z0-9\_\.]/.test(e)
        }
        function u() {
            var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "";
            return e && !s(e) && !l(e) && e.length <= 25
        }
        function c(e) {
            var t = e.uniqueId;
            return e = e.secUid,
            u(t) ? t : e
        }
        function h() {
            var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "";
            return e ? e.replace(/([\[\]\,.?"\(\)+_*\/\\&\$#^@!%~`<>:;\{\}？，。·！￥……（）+｛｝【】、|《》]|(?!\s)'\s+|\s+'(?!\s))/gi, "").trim().replace(/(\s+)-(\s+)/gi, " ").replace(/\s+|・/gi, "-") : ""
        }
        function d() {
            function e(e) {
                return h.test(e)
            }
            function t() {
                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "";
                return e ? e.replace(l, "").trim().replace(/(\s+)-(\s+)/gi, " ").replace(/\s+|・/gi, "-") : ""
            }
            function n() {
                var e = i(h.exec(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ""), 4);
                return e[0],
                {
                    name: e[1],
                    sign: e[2],
                    feat: e[3]
                }
            }
            function o() {
                var r, o, a, s, l = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", u = 1 < arguments.length ? arguments[1] : void 0, c = [];
                return u ? ((u = i(u.exec(l) || [], 3))[0],
                r = u[1],
                u = void 0 === (u = u[2]) ? "" : u,
                !e(r = void 0 === r ? "" : r) && e(u) ? (c.push(t(r)),
                s = (o = n(u)).sign,
                o = o.feat,
                s && c.push(t(s)),
                o && c.push(t(o))) : (e(r) && !e(u) ? (o = (s = n(r)).name,
                a = s.sign,
                s = s.feat,
                o && c.push(t(o)),
                a && c.push(t(a)),
                s && c.push(t(s))) : c.push(t(r)),
                c.push(t(u)))) : (a = (o = n(l)).name,
                s = o.feat,
                a && c.push(t(a)),
                s && c.push(t(s))),
                c
            }
            var a, s = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", l = /([\[\]\,.?"\(\)+_*\/\\&\$#^@!%~`<>:;\{\}？，。·！￥……（）+｛｝【】、|《》]|(?!\s)'\s+|\s+'(?!\s))/gi, u = /^(.*)\s?-\s?(.*)?/, c = /^(.*)\((.*)?\)/, h = /^(.*)(ft\.|feat\.)(.*)/;
            return a = s,
            (c.test(a) ? r(o(s, c)) : (a = s,
            u.test(a) ? r(o(s, u)) : e(s) ? r(o(s)) : [t(s)])).join("-")
        }
        n.d(t, {
            A: () => f,
            h: () => p
        });
        var f = Object.freeze({
            __proto__: null,
            isPureNumber: s,
            hasIllegalText: l,
            isRealUniqueId: u,
            getPureUniqueId: c,
            purifyPlainText: h,
            purifyMusicName: d
        })
          , p = Object.freeze({
            __proto__: null,
            getPureUserPath: function(e) {
                var t = e.uniqueId
                  , n = e.secUid
                  , i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return (t = c({
                    uniqueId: t,
                    secUid: n
                })) ? "/@".concat(t) : i
            },
            getPureVideoPath: function(e) {
                var t = e.uniqueId
                  , n = e.secUid
                  , i = e.videoId
                  , r = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return (t = c({
                    uniqueId: t,
                    secUid: n
                })) && i ? "/@".concat(t, "/video/").concat(i) : r
            },
            getPureTagPath: function(e) {
                var t = e.tagName
                  , n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return t ? "/tag/".concat(encodeURIComponent(t)) : n
            },
            getPureMusicPath: function(e) {
                var t = e.musicName
                  , n = e.musicId
                  , i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return t && n ? "/music/".concat(d(t), "-").concat(n) : i
            },
            getPureLivePath: function(e) {
                var t = e.uniqueId
                  , n = e.secUid
                  , i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return (t = c({
                    uniqueId: t,
                    secUid: n
                })) ? "/@".concat(t, "/live") : i
            },
            getPureStickerPath: function(e) {
                var t = e.stickerName
                  , n = e.stickerId
                  , i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return t && n ? "/sticker/".concat(h(t), "-").concat(n) : i
            },
            getPureQuestionPath: function(e) {
                var t = e.questionContent
                  , n = e.questionId
                  , i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return t && n ? "/question/".concat(h(t), "-").concat(n) : i
            },
            getPureCollectionPath: function(e) {
                var t = e.uniqueId
                  , n = e.title
                  , i = e.collectionId
                  , r = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "/";
                return t && n && i ? "/@".concat(t, "/collection/").concat(n, "-").concat(i) : r
            }
        })
    }
    ,
    25984: (e, t, n) => {
        "use strict";
        n.d(t, {
            p: () => a
        });
        var i = n(40099)
          , r = n(72192)
          , o = n(2256);
        const a = ({strategy: e={}, schemeParams: t={}, fallbackURLParams: n={}, experimentalFallbackTemplateURLParams: a={}, checkOpenTime: s, useNewRedirectPath: l, uniqueId: u, experimentalSkipSchemes: c, enableApiOptimization: h, onInstalledRelatedAppsLoad: d, children: f, enableClickS2S: p=!1, enableImpression: g=!1, useMarketSchemaForS2S: m=!1, experimentalReportClick: v, experimentalReportClickWaitTime: y, experimentalUseAppLink: _, experimentalUseBetterAppLink: T, onImpression: b, experimentalEnableCoinApiOptimization: S, jumpHook: w, disableAfdp: k, experimentalUseShortDl: C, autoFillWhiteList: M, enableImpAfdp: P}) => {
            const {relatedApps: R, initialized: x, costTime: E} = (0,
            r.xp)()
              , D = (0,
            i.useRef)(!1);
            (0,
            i.useEffect)(( () => {
                x && (null == d || d({
                    relatedApps: R,
                    initialized: x,
                    costTime: E
                }))
            }
            ), [R, x, E]);
            const L = (0,
            i.useMemo)(( () => ({
                strategy: e,
                schemeParams: t,
                fallbackURLParams: n,
                experimentalFallbackTemplateURLParams: a,
                checkOpenTime: s,
                uniqueId: u,
                useNewRedirectPath: l,
                experimentalSkipSchemes: c,
                enableApiOptimization: h,
                installedApps: R,
                initialized: x,
                enableClickS2S: p,
                enableImpression: g,
                impressionReported: D,
                onImpression: b,
                useMarketSchemaForS2S: m,
                experimentalEnableCoinApiOptimization: S,
                experimentalReportClick: v,
                experimentalReportClickWaitTime: y,
                experimentalUseBetterAppLink: T,
                experimentalUseAppLink: _,
                jumpHook: w,
                disableAfdp: k,
                experimentalUseShortDl: C,
                autoFillWhiteList: M,
                enableImpAfdp: P
            })), [e, t, n, a, s, u, l, c, h, R, x, p, g, D, b, m, S, v, T, y, _, w, k, C, M, P]);
            return i.createElement(o.J.Provider, {
                value: L
            }, f)
        }
    }
    ,
    93807: (e, t, n) => {
        "use strict";
        n.d(t, {
            F: () => P
        });
        var i = n(40099)
          , r = n(2256)
          , o = n(9983)
          , a = n(74406)
          , s = n(56669)
          , l = n(72192);
        function u(e, t="impression") {
            const n = new XMLHttpRequest
              , i = `${location.origin}/impression?onelink=${encodeURIComponent(e)}&type=${t}`;
            return n.open("GET", i),
            n.send(),
            n
        }
        function c(e, t="impression") {
            return new Promise((n => {
                u(e, t).onreadystatechange = function() {
                    4 === this.readyState && n()
                }
            }
            ))
        }
        let h;
        const d = !1
          , f = "onelink.me"
          , p = "/download-link/ol"
          , g = [f, p];
        function m(e) {
            return new Promise((t => setTimeout(t, e)))
        }
        const v = (e, t) => {
            const n = g.some((t => -1 !== e.indexOf(t))) && ("tiktok_app" === t || "tiktok_lite_app" === t);
            if (!n)
                return [void 0, !1];
            const i = (0,
            a.mX)(e);
            return [i, n && Boolean(i)]
        }
          , y = ({url: e, autofillSchemeUrl: t, autoFillParamList: n=a.Bw, needAppendSchemeUrl: i=!1}) => {
            if (!t)
                return e;
            try {
                const r = new URL(e)
                  , o = r.pathname.includes(p);
                let a = !1;
                for (const e of n)
                    r.searchParams.has(e) && (r.searchParams.set(e, ""),
                    a = !0);
                return i && a && o && r.searchParams.set("scheme_url", t),
                r.toString()
            } catch (e) {}
            return e
        }
        ;
        function _({processedSchemes: e, processedFallbackURL: t, enableClickS2S: n, region: i, useNewRedirectPath: r, launchType: o="tiktok_app", useMarketSchemaForS2S: s=!1, useShortDl: l=!1, autoFillWhiteList: u=a.Bw}) {
            var c;
            const h = e[0]
              , d = `${(i ? (0,
            a.dX)(i) : e.some((e => e.startsWith("snssdk1180")))) ? a.Yp : a.NC}/${r ? a.hQ.now_app : null !== (c = a.hQ[o]) && void 0 !== c ? c : a.hQ.tiktok_app}`
              , f = l ? "short_dl" : "dl"
              , p = l ? y({
                url: t,
                autofillSchemeUrl: h,
                autoFillParamList: u
            }) : t;
            let g = `${d}?redirect_url=${encodeURIComponent(h)}&${f}=${encodeURIComponent(p)}&decode_once=1`;
            if (n) {
                const [e,n] = v(t, o);
                n && (g += `&s2sAppType=${e}&s2s=1`),
                s && (g += "&useMarket=1")
            }
            return g
        }
        function T(e, t) {
            d ? console.log(`[matrix.......jump] location ${e}`) : t ? t(e) : location.href = e
        }
        function b() {
            const e = new URLSearchParams(window.location.search).get("ug_source");
            if (e)
                return {
                    ug_source: e
                };
            const {userAgent: t} = navigator;
            for (const [e,n] of Object.entries(a.E4))
                if (n.test(t))
                    return {
                        ug_source: e
                    };
            return {}
        }
        function S({strategy: e, buildInSchemeParams: t={}, buildInFallbackURLParams: n={}, customs: i={}}) {
            const {links: r, providerContext: o} = e;
            let {schemeParams: s={}, fallbackURLParams: l={}, experimentalFallbackTemplateURLParams: u={}} = e;
            const {disableAfdp: c=!1, addParamsUrl: h=!1} = i
              , {schemeParams: d, fallbackURLParams: f} = o;
            let {experimentalFallbackTemplateURLParams: p} = o;
            const {url_schemes: g, url_fallback: m, extra: v} = r
              , y = null != g ? g : [];
            if (!y[0])
                throw new Error("Schemes empty");
            const _ = y[0].startsWith("snssdk1180") ? "t" : y[0].startsWith("snssdk1233") ? "m" : "lite";
            let T = {
                appType: _
            };
            try {
                T = Object.assign(Object.assign({}, T), JSON.parse(null != v ? v : ""))
            } catch (e) {}
            if ("function" == typeof s)
                try {
                    s = s(T)
                } catch (e) {
                    s = {}
                }
            if ("function" == typeof l)
                try {
                    l = l(T)
                } catch (e) {
                    l = {}
                }
            if ("function" == typeof u)
                try {
                    u = u(T)
                } catch (e) {
                    u = {}
                }
            const b = (null != g ? g : []).map((e => (0,
            a.qE)(e, Object.assign(Object.assign(Object.assign(Object.assign({
                needlaunchlog: 1,
                ug_medium: "fe_component"
            }, o.uniqueId ? {
                wid: o.uniqueId
            } : {}), t), d), s))));
            let S = null != m ? m : "";
            const w = new URLSearchParams(y[0]).get("params_url");
            c && (S = S.replace("&af_dp={{schema}}", "")),
            h && w && (S = `${S}&params_url=${encodeURIComponent(w)}`),
            S = S.replace("{{schema}}", encodeURIComponent(b[0])),
            u = (0,
            a.PW)(Object.entries(u).map(( ([e,t]) => [e, (0,
            a.Kg)(t) ? t.replace("{{schema}}", encodeURIComponent(b[0])) : t]))),
            p && (p = (0,
            a.PW)(Object.entries(p).map(( ([e,t]) => [e, (0,
            a.Kg)(t) ? t.replace("{{schema}}", encodeURIComponent(b[0])) : t]))));
            const k = (0,
            a.qE)(S, Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({
                pid: "website"
            }, o.uniqueId ? {
                wid: o.uniqueId
            } : {}), n), p), u), f), l));
            return {
                appType: _,
                parsedExtra: T,
                processedSchemes: b,
                processedFallbackURL: k
            }
        }
        function w(e) {
            var t, n, i, r, d;
            return n = this,
            i = void 0,
            d = function*() {
                const {links: n, launchType: i="tiktok_app", jumpLinkType: r=a.wl.DEFAULT, jumpStartHandler: d, jumpFailHandler: g, jumpCheckHandler: w, jumpEventHandler: k, jumpHook: C, strategyContext: M, providerContext: P} = e
                  , {schemeParams: R={}, fallbackURLParams: x={}} = e
                  , {checkOpenTime: E, useNewRedirectPath: D, experimentalSkipSchemes: L=!1, installedApps: I, enableApiOptimization: O=!1, enableClickS2S: A=!1, useMarketSchemaForS2S: G=!1, experimentalEnableCoinApiOptimization: N=!0, experimentalReportClick: B, experimentalUseAppLink: $, experimentalUseBetterAppLink: F, disableAfdp: H, experimentalReportClickWaitTime: U, experimentalUseShortDl: V=!1, autoFillWhiteList: j} = P;
                h = Date.now();
                const z = (0,
                a.KJ)()
                  , X = (0,
                s.a)()
                  , K = null != H ? H : z && "facebook" === X;
                try {
                    const {parsedExtra: e, processedSchemes: s, processedFallbackURL: H} = S({
                        strategy: {
                            links: n,
                            providerContext: P,
                            schemeParams: R,
                            fallbackURLParams: x
                        },
                        buildInSchemeParams: Object.assign({
                            jump_time: h
                        }, b()),
                        buildInFallbackURLParams: Object.assign({
                            jump_time: h
                        }, b()),
                        customs: {
                            disableAfdp: K
                        }
                    })
                      , X = Object.assign(Object.assign({}, e), {
                        jumpTime: h,
                        getInstalledAppResult: null !== (t = null == I ? void 0 : I.length) && void 0 !== t ? t : -1,
                        getInstalledAppData: I,
                        jumpTriggerType: "manual"
                    });
                    null == d || d(Object.assign({
                        jumpTime: h
                    }, e)),
                    null == k || k(Object.assign({
                        eventType: o.Z.START
                    }, X));
                    let Q = !1;
                    if (O) {
                        const {mInstall: e, tInstall: t, liteInstall: n, coinInstall: r} = (0,
                        l.CW)(I);
                        "tiktok_lite_app" === i ? N && (Q = 0 === r) : Q = [e, t, n].every((e => 0 === e))
                    }
                    const W = $ && Q && F;
                    if ((0,
                    a.SC)()) {
                        const [e,t] = s[0].split("://");
                        return void T(`intent://${t}#Intent;scheme=${e};end`, C)
                    }
                    if (!z || r === a.wl.APP_LINK || $ && !W || z && /FBAN|FBAV/gi.test(navigator.userAgent) && !L) {
                        const e = _({
                            processedSchemes: s,
                            processedFallbackURL: H,
                            enableClickS2S: A,
                            useNewRedirectPath: D,
                            region: null == M ? void 0 : M.region,
                            launchType: i,
                            useMarketSchemaForS2S: G,
                            useShortDl: V,
                            autoFillWhiteList: j
                        });
                        if (B)
                            if (U)
                                try {
                                    yield Promise.race([c(H, B), m(U)])
                                } catch (e) {
                                    console.debug("experimentalReportClick error", e)
                                }
                            else
                                u(H, B);
                        return null == k || k(Object.assign({
                            eventType: o.Z.APP_LINK,
                            appLinkUrl: e
                        }, X)),
                        void T(e, C)
                    }
                    if (!L && !Q) {
                        if (B)
                            if (U)
                                try {
                                    yield Promise.race([c(H, B), m(U)])
                                } catch (e) {
                                    console.debug("experimentalReportClick error", e)
                                }
                            else
                                u(H, B);
                        for (const [t,n] of s.entries()) {
                            const i = Date.now();
                            let r;
                            if (null == k || k(Object.assign({
                                eventType: o.Z.SCHEME_START,
                                schemeIndex: t,
                                scheme: n
                            }, X)),
                            T(n, C),
                            "function" == typeof E)
                                try {
                                    r = E(n, t)
                                } catch (e) {}
                            else
                                r = E;
                            if (0 === r)
                                continue;
                            const s = yield(0,
                            a.hh)(r)
                              , l = Date.now() - i;
                            if (null == w || w(Object.assign({
                                jumpTime: h,
                                linkType: (0,
                                a.Aq)(n),
                                checkTime: l,
                                checkStatus: s
                            }, e)),
                            null == k || k(Object.assign({
                                eventType: o.Z.CHECK,
                                schemeIndex: t,
                                scheme: n,
                                checkTime: l,
                                checkStatus: s
                            }, X)),
                            s)
                                return
                        }
                    }
                    let q = H;
                    const [Z,Y] = v(H, i);
                    if (A && Y) {
                        const {host: e, pathname: t} = new URL(q);
                        t.includes(p) ? (q += `&s2sAppType=${Z}&s2s=1`,
                        G && (q += "&useMarket=1")) : e.includes(f) && (q = _({
                            processedSchemes: s,
                            processedFallbackURL: H,
                            enableClickS2S: A,
                            useNewRedirectPath: D,
                            region: null == M ? void 0 : M.region,
                            launchType: i,
                            useMarketSchemaForS2S: G,
                            useShortDl: V,
                            autoFillWhiteList: j
                        }))
                    }
                    if (V) {
                        const {pathname: e} = new URL(q);
                        e.includes(p) && (q = y({
                            url: q,
                            autofillSchemeUrl: s[0],
                            autoFillParamList: j,
                            needAppendSchemeUrl: !0
                        }))
                    }
                    null == g || g(Object.assign({
                        jumpTime: h,
                        fallbackUrl: q
                    }, e)),
                    null == k || k(Object.assign({
                        eventType: o.Z.FAIL,
                        fallbackUrl: q
                    }, X)),
                    T(q, C)
                } catch (e) {
                    return void console.warn(e)
                }
            }
            ,
            new ((r = void 0) || (r = Promise))((function(e, t) {
                function o(e) {
                    try {
                        s(d.next(e))
                    } catch (e) {
                        t(e)
                    }
                }
                function a(e) {
                    try {
                        s(d.throw(e))
                    } catch (e) {
                        t(e)
                    }
                }
                function s(t) {
                    var n;
                    t.done ? e(t.value) : (n = t.value,
                    n instanceof r ? n : new r((function(e) {
                        e(n)
                    }
                    ))).then(o, a)
                }
                s((d = d.apply(n, i || [])).next())
            }
            ))
        }
        var k = n(61978)
          , C = n.n(k)
          , M = function(e, t) {
            var n = {};
            for (var i in e)
                Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (n[i] = e[i]);
            if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                var r = 0;
                for (i = Object.getOwnPropertySymbols(e); r < i.length; r++)
                    t.indexOf(i[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e, i[r]) && (n[i[r]] = e[i[r]])
            }
            return n
        };
        const P = e => {
            var t, {customStyle: n={}, customClassNames: o=[], jumpStartHandler: a, jumpFailHandler: s, jumpCheckHandler: l, jumpEventHandler: c, jumpHook: h, onClick: d, target: f, children: p, schemeParams: g={}, fallbackURLParams: m={}, experimentalFallbackTemplateURLParams: y={}, type: T="div", withDefaultHref: b=!1} = e, k = M(e, ["customStyle", "customClassNames", "jumpStartHandler", "jumpFailHandler", "jumpCheckHandler", "jumpEventHandler", "jumpHook", "onClick", "target", "children", "schemeParams", "fallbackURLParams", "experimentalFallbackTemplateURLParams", "type", "withDefaultHref"]);
            const P = (0,
            i.useContext)(r.J)
              , {strategy: R} = P
              , x = M(P, ["strategy"])
              , E = null !== (t = x.jumpHook) && void 0 !== t ? t : h
              , D = (0,
            i.useMemo)(( () => {
                if (null == R ? void 0 : R.wrappers)
                    return R.wrappers.find((e => e.name === f))
            }
            ), [R, f])
              , L = (0,
            i.useMemo)(( () => D && D.wrapper_url ? function(e) {
                const {enableClickS2S: t=!1, useMarketSchemaForS2S: n=!1, experimentalUseShortDl: i=!1, autoFillWhiteList: r} = e.providerContext;
                try {
                    const {processedSchemes: o, processedFallbackURL: a} = S({
                        strategy: e
                    });
                    return _({
                        processedSchemes: o,
                        enableClickS2S: t,
                        processedFallbackURL: a,
                        launchType: e.launchType,
                        useMarketSchemaForS2S: n,
                        useShortDl: i,
                        autoFillWhiteList: r
                    })
                } catch (e) {
                    return console.warn(e),
                    ""
                }
            }({
                launchType: D.launch_type,
                links: D.wrapper_url,
                schemeParams: g,
                fallbackURLParams: m,
                experimentalFallbackTemplateURLParams: y,
                providerContext: x
            }) : ""), [D, g, m, y, x])
              , I = null == R ? void 0 : R.page_context;
            ( ({links: e, fallbackURLParams: t, experimentalFallbackTemplateURLParams: n, launchType: o=""}) => {
                const a = (0,
                i.useContext)(r.J)
                  , {impressionReported: s, enableImpression: l=!1, onImpression: c, enableImpAfdp: h} = a
                  , d = function(e, t) {
                    var n = {};
                    for (var i in e)
                        Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (n[i] = e[i]);
                    if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                        var r = 0;
                        for (i = Object.getOwnPropertySymbols(e); r < i.length; r++)
                            t.indexOf(i[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e, i[r]) && (n[i[r]] = e[i[r]])
                    }
                    return n
                }(a, ["impressionReported", "enableImpression", "onImpression", "enableImpAfdp"])
                  , f = (0,
                i.useMemo)(( () => e ? S({
                    strategy: {
                        links: e,
                        schemeParams: {},
                        fallbackURLParams: t,
                        experimentalFallbackTemplateURLParams: n,
                        providerContext: d
                    },
                    customs: {
                        disableAfdp: !h,
                        addParamsUrl: !0
                    }
                }).processedFallbackURL : ""), [e, t, n, d]);
                (0,
                i.useEffect)(( () => {
                    if (l && f && !1 === (null == s ? void 0 : s.current)) {
                        const [e,t] = v(f, o);
                        if (t) {
                            s.current = !0;
                            const t = `${f}&s2sAppType=${e}`;
                            null == c || c(t),
                            u(t)
                        }
                    }
                }
                ), [f, o, l])
            }
            )({
                links: null == D ? void 0 : D.wrapper_url,
                fallbackURLParams: m,
                experimentalFallbackTemplateURLParams: y,
                launchType: null == D ? void 0 : D.launch_type
            });
            const O = (0,
            i.useCallback)((e => {
                var t;
                null == d || d(e),
                b && e.preventDefault(),
                (null == D ? void 0 : D.wrapper_url) && w({
                    target: null !== (t = D.name) && void 0 !== t ? t : "",
                    jumpLinkType: D.jump_link_type,
                    launchType: D.launch_type,
                    links: D.wrapper_url,
                    jumpStartHandler: a,
                    jumpFailHandler: s,
                    jumpCheckHandler: l,
                    jumpEventHandler: c,
                    jumpHook: E,
                    schemeParams: g,
                    fallbackURLParams: m,
                    experimentalFallbackTemplateURLParams: y,
                    providerContext: x,
                    strategyContext: I
                })
            }
            ), [a, s, l, c, E, d, D, g, m, y, x, I, b]);
            return b ? i.createElement("a", Object.assign({
                style: n,
                className: C()("matrix-smart-wrapper", "matrix-smart-wrapper-a", o),
                onClick: O,
                href: L
            }, k), p) : i.createElement(T, Object.assign({
                style: n,
                className: C()("matrix-smart-wrapper", o),
                onClick: O
            }, k), p)
        }
    }
    ,
    2256: (e, t, n) => {
        "use strict";
        n.d(t, {
            J: () => i
        });
        const i = (0,
        n(40099).createContext)({
            strategy: {
                banners: [],
                buttons: [],
                popups: [],
                wrappers: []
            },
            schemeParams: {},
            fallbackURLParams: {},
            experimentalFallbackTemplateURLParams: {}
        })
    }
    ,
    72192: (e, t, n) => {
        "use strict";
        n.d(t, {
            CW: () => d,
            xp: () => c
        });
        var i = n(40099)
          , r = n(56669);
        const o = e => new Promise((t => setTimeout(t, e)));
        var a = n(74406);
        const s = 3e4
          , l = {
            yandex: !0
        }
          , u = e => {
            return t = void 0,
            n = void 0,
            a = function*() {
                var t, n;
                if (null === window || void 0 === window ? void 0 : window.__RELATED_APPS_CACHE)
                    return window.__RELATED_APPS_CACHE;
                const {ignores: i, timeout: a=s} = null != e ? e : {};
                return Object.assign(Object.assign({}, i), l).yandex && (0,
                r.W)(null === (t = null === window || void 0 === window ? void 0 : window.navigator) || void 0 === t ? void 0 : t.userAgent) ? Promise.resolve(void 0) : (null === (n = null === window || void 0 === window ? void 0 : window.navigator) || void 0 === n ? void 0 : n.getInstalledRelatedApps) ? (u = [window.navigator.getInstalledRelatedApps(), o(a)],
                new Promise(( (e, t) => {
                    u.forEach((n => {
                        Promise.resolve(n).then(e, t).catch(t)
                    }
                    ))
                }
                ))) : Promise.resolve(void 0);
                var u
            }
            ,
            new ((i = void 0) || (i = Promise))((function(e, r) {
                function o(e) {
                    try {
                        l(a.next(e))
                    } catch (e) {
                        r(e)
                    }
                }
                function s(e) {
                    try {
                        l(a.throw(e))
                    } catch (e) {
                        r(e)
                    }
                }
                function l(t) {
                    var n;
                    t.done ? e(t.value) : (n = t.value,
                    n instanceof i ? n : new i((function(e) {
                        e(n)
                    }
                    ))).then(o, s)
                }
                l((a = a.apply(t, n || [])).next())
            }
            ));
            var t, n, i, a
        }
          , c = e => {
            const [t,n] = (0,
            i.useState)()
              , [r,o] = (0,
            i.useState)(!1)
              , [a,s] = (0,
            i.useState)(0);
            return (0,
            i.useEffect)(( () => {
                const t = Date.now();
                u(e).then((e => n(e))).catch((e => {
                    console.warn("getRelatedApps failed", e)
                }
                )).then(( () => {
                    s(Date.now() - t),
                    o(!0)
                }
                ))
            }
            ), [e]),
            {
                relatedApps: t,
                initialized: r,
                costTime: a
            }
        }
          , h = (e, t) => {
            if (!t)
                return {
                    installed: -1,
                    version: void 0
                };
            const n = {
                m: a.uG,
                t: a.NK,
                lite: a.f,
                coin: a.k5
            }[e];
            for (const {id: e, version: i} of Object.values(t))
                if (e === n)
                    return {
                        installed: 1,
                        version: i
                    };
            return {
                installed: 0,
                version: void 0
            }
        }
          , d = e => {
            const {installed: t, version: n} = h("m", e)
              , {installed: i, version: r} = h("t", e)
              , {installed: o, version: a} = h("lite", e)
              , {installed: s, version: l} = h("coin", e);
            return {
                mInstall: t,
                mVersion: n,
                tInstall: i,
                tVersion: r,
                liteInstall: o,
                liteVersion: a,
                coinInstall: s,
                coinVersion: l
            }
        }
    }
    ,
    9983: (e, t, n) => {
        "use strict";
        var i;
        n.d(t, {
            Z: () => i
        }),
        function(e) {
            e.START = "jump_start",
            e.SCHEME_START = "jump_schema_start",
            e.CHECK = "jump_check",
            e.FAIL = "jump_fail",
            e.APP_LINK = "jump_app_link"
        }(i || (i = {}))
    }
    ,
    56669: (e, t, n) => {
        "use strict";
        n.d(t, {
            W: () => o,
            a: () => r
        });
        const i = {
            snapchat: [/(?:Safari\/[\d.]+)?Snapchat\/?([\d.]+)/, /CronetSnapDevSheldon/],
            line: [/Line(?:[ /]([\d.]+))/],
            google_search_app: [/(?:com.google.GoogleMobile|GSA|GoogleApp)\/([\d.]+)?/],
            instagram_app: [/Instagram[ /]([\d.]+)?/],
            facebook_messenger: [/(?:MessengerForiOS|MESSENGER|FB_IAB\/Orca-Android).(?:FBAV)(?:[ /]([\d.]+))?/],
            facebook_messenger_lite: [/(?:mLite|MessengerLite(?:ForiOS)?).(?:FBAV)(?:[ /]([\d.]+))?/],
            facebook_lite: [/FBAN\/EMA.+FBAV(?:[ /]([\d.]+))?/],
            facebook: [/(?:FBAV|com.facebook.katana)(?:[ /]([\d.]+))?/, /(?:FBAN|FBSV|FBID|FBBV)\//],
            hey_tab_browser: [/HeyTapBrowser\/([\d.]+)/],
            vivo_browser: [/VivoBrowser(?:\/(\d+[.\d]+))?/],
            yandex_browser: [/YaBrowser(?:\/(\d+[.\d]*))(?: \((alpha|beta)\))?/],
            yandex_browser_alisa: [/Ya(?:ndex)?SearchBrowser(?:\/(\d+[.\d]*))/],
            samsung_browser: [/Samsung ?Browser(?:[/ ](\d+[.\d]+))?/],
            opera: [/(?:Opera Tablet.*Version|Opera\/.+Opera Mobi.+Version|Mobile.+OPR)\/(\d+[.\d]+)/, /Opera\/(\d+\.[.\d]+) .*Opera Mobi/],
            chrome_webview: [/Version\/.* Chrome(?:\/(\d+[.\d]+))?/],
            chrome: [/CrMo(?:\/(\d+[.\d]+))?/, /CriOS(?:\/(\d+[.\d]+))?/, /Chrome(?:\/(\d+[.\d]+))? Mobile/],
            safari: [/(?:(?:iPod|iPad|iPhone).+Version|MobileSafari)\/(\d+[.\d]+)/, /(?:Version\/(\d+\.[.\d]+) .)?Mobile.Safari\//, /Version\/(\d+\.[.\d]+) .*Safari\/|(?:Safari|Safari(?:%20)?%E6%B5%8F%E8%A7%88%E5%99%A8)\/?\d+/],
            unknown: []
        };
        function r(e=(null === navigator || void 0 === navigator ? void 0 : navigator.userAgent)) {
            for (const [t,n] of Object.entries(i))
                if (n.some((t => null == t ? void 0 : t.test(e))))
                    return t;
            return "unknown"
        }
        function o(e) {
            const t = r(e);
            return "yandex_browser" === t || "yandex_browser_alisa" === t
        }
    }
    ,
    74406: (e, t, n) => {
        "use strict";
        n.d(t, {
            Aq: () => m,
            Bw: () => M,
            E4: () => g,
            KJ: () => l,
            Kg: () => u,
            NC: () => r,
            NK: () => w,
            PW: () => c,
            SC: () => h,
            Yp: () => i,
            dX: () => b,
            f: () => k,
            hQ: () => s,
            hh: () => f,
            k5: () => C,
            mX: () => y,
            qE: () => p,
            uG: () => S,
            wl: () => a
        });
        const i = "https://www.tiktokv.com"
          , r = "https://app-va.tiktokv.com";
        var o, a;
        !function(e) {
            e.I18N = "I18N",
            e.ALISG = "ALISG",
            e.MALIVA = "MALIVA",
            e["US-TTP"] = "US-TTP"
        }(o || (o = {})),
        function(e) {
            e.DEFAULT = "default",
            e.APP_LINK = "AppLink",
            e.ONE_LINK = "OneLink"
        }(a || (a = {})),
        o.I18N,
        o.ALISG,
        o.MALIVA,
        o["US-TTP"];
        const s = {
            tiktok_app: "redirect/",
            now_app: "now_redirect/",
            alligator_app: "alligator_redirect/",
            tiktok_lite_app: "lite_redirect/"
        };
        function l() {
            return "android" === function() {
                const e = navigator.userAgent;
                return /android/i.test(e) ? "android" : /iPhone|iPad|iPod|iOS/i.test(e) ? "ios" : /\(Macintosh; Intel /.test(e) ? "mac" : /Win\d{2}|Windows/.test(e) ? "windows" : "unknown"
            }()
        }
        function u(e) {
            return "string" == typeof e
        }
        function c(e) {
            return e.reduce(( (e, t) => (e[t[0]] = t[1],
            e)), {})
        }
        function h() {
            return void 0 !== window.melonapp
        }
        function d() {
            return Boolean(document.hidden || document.webkitHidden)
        }
        function f(e) {
            return new Promise((t => {
                const n = null != e ? e : 1e3;
                let i = 0;
                const r = Number(new Date)
                  , o = n / 20
                  , a = () => {
                    d() && (t(!0),
                    document.removeEventListener("visibilitychange", a))
                }
                ;
                document.addEventListener("visibilitychange", a);
                const s = setInterval(( () => {
                    i++;
                    const e = Number(new Date) - r
                      , l = Boolean(e > Math.max(2 * n, 1e3) || d());
                    (i >= o || l) && (clearInterval(s),
                    t(l),
                    document.removeEventListener("visibilitychange", a))
                }
                ), 20)
            }
            ))
        }
        function p(e, t={}) {
            const n = Object.assign({}, t)
              , i = e.replace(/\{\{([\w.]*)\}\}/g, (function(e, i) {
                const r = t[i];
                return delete n[i],
                null != r ? r : ""
            }
            ))
              , r = Object.entries(n).map(( ([e,t]) => `${e}=${t}`)).join("&");
            return `${i}${r ? i.includes("?") ? `&${r}` : `?${r}` : ""}`
        }
        const g = {
            Snapchat: /Snapchat/gi,
            WeChat: /MicroMessenger/gi,
            Band: /Band/gi,
            KakaoTalk: /KAKAOTALK/gi,
            Messenger: /Messenger/gi,
            Line: /Line/gi,
            Facebook: /FBAN|FBAV/gi
        };
        function m(e) {
            return function(e) {
                return null == e ? void 0 : e.startsWith("snssdk1340")
            }(e) ? "lite" : function(e) {
                return null == e ? void 0 : e.startsWith("snssdk1180")
            }(e) ? "t" : "m"
        }
        const v = {
            t: "BAuo",
            m: "bIdt",
            lite: "k3Nj",
            coin: "4P4E"
        };
        function y(e) {
            return function(e) {
                return e.startsWith("https://snssdk1180") || e.includes(`/${v.t}`)
            }(e) ? "t" : function(e) {
                return e.startsWith("https://snssdk1233") || e.includes(`/${v.m}`)
            }(e) ? "m" : function(e) {
                return e.startsWith("https://snssdk1340") || e.includes(`/${v.lite}`)
            }(e) ? "lite" : function(e) {
                return (null == e ? void 0 : e.startsWith("https://snssdk473824")) || e.includes(`/${v.coin}`)
            }(e) ? "coin" : void 0
        }
        const _ = ["MO", "TW", "JP", "KR", "ID", "MY", "KH", "MM", "LA", "PH", "TH", "VN", "SG", "PK", "LK", "NP"]
          , T = ["PK", "LK", "NP"];
        function b(e="") {
            return "t" === function(e) {
                return _.includes(e) && !T.includes(e) ? "t" : "m"
            }(e)
        }
        const S = "com.zhiliaoapp.musically"
          , w = "com.ss.android.ugc.trill"
          , k = "com.zhiliaoapp.musically.go"
          , C = "com.ss.android.ugc.tiktok.lite"
          , M = ["af_dp", "tt_target"]
    }
    ,
    53385: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => M
        });
        var i = function(e, t) {
            return i = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(e, t) {
                e.__proto__ = t
            }
            || function(e, t) {
                for (var n in t)
                    Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
            }
            ,
            i(e, t)
        };
        function r(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
            function n() {
                this.constructor = e
            }
            i(e, t),
            e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
            new n)
        }
        var o = function(e, t) {
            return o = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(e, t) {
                e.__proto__ = t
            }
            || function(e, t) {
                for (var n in t)
                    Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
            }
            ,
            o(e, t)
        }
          , a = function() {
            return a = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }
            ,
            a.apply(this, arguments)
        };
        function s(e, t, n, i) {
            return new (n || (n = Promise))((function(r, o) {
                function a(e) {
                    try {
                        l(i.next(e))
                    } catch (e) {
                        o(e)
                    }
                }
                function s(e) {
                    try {
                        l(i.throw(e))
                    } catch (e) {
                        o(e)
                    }
                }
                function l(e) {
                    var t;
                    e.done ? r(e.value) : (t = e.value,
                    t instanceof n ? t : new n((function(e) {
                        e(t)
                    }
                    ))).then(a, s)
                }
                l((i = i.apply(e, t || [])).next())
            }
            ))
        }
        function l(e, t) {
            var n, i, r, o, a = {
                label: 0,
                sent: function() {
                    if (1 & r[0])
                        throw r[1];
                    return r[1]
                },
                trys: [],
                ops: []
            };
            return o = {
                next: s(0),
                throw: s(1),
                return: s(2)
            },
            "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                return this
            }
            ),
            o;
            function s(s) {
                return function(l) {
                    return function(s) {
                        if (n)
                            throw new TypeError("Generator is already executing.");
                        for (; o && (o = 0,
                        s[0] && (a = 0)),
                        a; )
                            try {
                                if (n = 1,
                                i && (r = 2 & s[0] ? i.return : s[0] ? i.throw || ((r = i.return) && r.call(i),
                                0) : i.next) && !(r = r.call(i, s[1])).done)
                                    return r;
                                switch (i = 0,
                                r && (s = [2 & s[0], r.value]),
                                s[0]) {
                                case 0:
                                case 1:
                                    r = s;
                                    break;
                                case 4:
                                    return a.label++,
                                    {
                                        value: s[1],
                                        done: !1
                                    };
                                case 5:
                                    a.label++,
                                    i = s[1],
                                    s = [0];
                                    continue;
                                case 7:
                                    s = a.ops.pop(),
                                    a.trys.pop();
                                    continue;
                                default:
                                    if (!((r = (r = a.trys).length > 0 && r[r.length - 1]) || 6 !== s[0] && 2 !== s[0])) {
                                        a = 0;
                                        continue
                                    }
                                    if (3 === s[0] && (!r || s[1] > r[0] && s[1] < r[3])) {
                                        a.label = s[1];
                                        break
                                    }
                                    if (6 === s[0] && a.label < r[1]) {
                                        a.label = r[1],
                                        r = s;
                                        break
                                    }
                                    if (r && a.label < r[2]) {
                                        a.label = r[2],
                                        a.ops.push(s);
                                        break
                                    }
                                    r[2] && a.ops.pop(),
                                    a.trys.pop();
                                    continue
                                }
                                s = t.call(e, a)
                            } catch (e) {
                                s = [6, e],
                                i = 0
                            } finally {
                                n = r = 0
                            }
                        if (5 & s[0])
                            throw s[1];
                        return {
                            value: s[0] ? s[1] : void 0,
                            done: !0
                        }
                    }([s, l])
                }
            }
        }
        var u = function(e) {
            function t(t, n, i) {
                var r = e.call(this, n) || this;
                return r.code = t,
                r.message = n,
                r.originError = i,
                r.name = "StarlingError",
                r.code = t,
                r.message = n,
                r.originError = i,
                Error.captureStackTrace && Error.captureStackTrace(r, r.constructor),
                r
            }
            return function(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                function n() {
                    this.constructor = e
                }
                o(e, t),
                e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n)
            }(t, e),
            t
        }(Error)
          , c = {
            ERROR_CODE: 103,
            ERROR_MESSAGE: "Request failed, confirm your apiKey and namespace is correct"
        }
          , h = {
            ERROR_CODE: 110,
            ERROR_MESSAGE: "Check your params, parameter apiKey, namespace and zoneHost is required!"
        }
          , d = {
            ERROR_CODE: 111,
            ERROR_MESSAGE: "Check your params, parameter request and store is required!"
        }
          , f = 112
          , p = {
            ERROR_CODE: 120,
            ERROR_MESSAGE: "Version is not found, please check your param [version]!"
        }
          , g = {
            zone: "CN",
            locale: "zh",
            timeout: 15e3,
            test: !1,
            mode: "normal",
            format: "merged",
            lazyUpdate: !1,
            fallbackLang: ["zh"],
            tracker: function() {},
            cache: !0
        }
          , m = function() {
            function e(e) {
                this.options = e,
                this.options = e
            }
            return e.prototype.getText = function(e, t) {
                return s(this, void 0, void 0, (function() {
                    return l(this, (function(n) {
                        switch (n.label) {
                        case 0:
                            return [4, this._request(e, t)];
                        case 1:
                            return [2, n.sent()]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.getTexts = function(e) {
                var t = this;
                return Promise.all(e.map((function(e) {
                    var n = e[0]
                      , i = e[1];
                    return t.getText(n, i)
                }
                )))
            }
            ,
            e.prototype._request = function(e, t) {
                return s(this, void 0, void 0, (function() {
                    var n, i, r, o, a, s, h, d, f, g, m, v, y, _;
                    return l(this, (function(l) {
                        switch (l.label) {
                        case 0:
                            return n = this.options.getReleaseVersion,
                            i = n(e),
                            e && i && t ? [2, {}] : (r = this.getUrl(e, t),
                            o = this.options,
                            a = o.request,
                            s = o.timeout,
                            [4, a(r, {
                                timeout: s
                            })]);
                        case 1:
                            if (h = l.sent(),
                            d = h.data,
                            f = d.status,
                            g = d.message,
                            200 == +f)
                                return [2, this._mapResponse(g)];
                            if (1001 == +f)
                                throw v = (m = p).ERROR_CODE,
                                new u(v,m.ERROR_MESSAGE);
                            throw _ = (y = c).ERROR_CODE,
                            new u(_,y.ERROR_MESSAGE)
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.getUrl = function(e, t) {
                var n = this.options
                  , i = n.apiKey
                  , r = n.locale
                  , o = n.fallbackLang
                  , a = n.zoneHost
                  , s = n.mode
                  , l = n.getReleaseVersion
                  , u = [r].concat(o)
                  , c = a + "/check_and_get_text/" + i + "/" + s + "/" + e + "?lang=" + u
                  , h = l(e);
                return h && (c = a + "/text_by_release_version/" + i + "/" + s + "/" + e + "/" + h + "?lang=" + u),
                "string" == typeof t && (c += "&version=" + t),
                c
            }
            ,
            e.prototype._mapResponse = function(e) {
                return e ? Object.keys(e).reduce((function(t, n) {
                    return t[n.toLowerCase()] = e[n],
                    t
                }
                ), {}) : {}
            }
            ,
            e
        }()
          , v = function() {
            function e(e) {
                this.options = e,
                this.options = e
            }
            return e.prototype._setCache = function(e, t, n) {
                try {
                    return this.options.store.set(e, t)
                } catch (e) {
                    var i = f;
                    return this.options.tracker("cache_error", {
                        code: i,
                        message: e.message,
                        stack: e.stack
                    }),
                    void (n && n())
                }
            }
            ,
            e.prototype._getCache = function(e) {
                var t = this.options
                  , n = t.store
                  , i = t.cache;
                try {
                    return i && n.get(e)
                } catch (e) {
                    var r = f;
                    return void this.options.tracker("cache_error", {
                        code: r,
                        message: e.message,
                        stack: e.stack
                    })
                }
            }
            ,
            e.prototype.getVersion = function(e) {
                var t = this.options
                  , n = "version." + t.apiKey + "." + e + "." + t.locale
                  , i = (0,
                t.getReleaseVersion)(e);
                i && (n += "." + i);
                var r = this.getText(e);
                return r && "object" == typeof r ? "object" == typeof r && r.then ? this._getCache(n) : "object" == typeof r && 0 === Object.keys(r || {}).length ? null : this._getCache(n) : null
            }
            ,
            e.prototype.getVersions = function(e) {
                var t = this;
                return Promise.all(e.map((function(e) {
                    return t.getVersion(e)
                }
                )))
            }
            ,
            e.prototype.getText = function(e) {
                var t = this.options
                  , n = "text." + t.apiKey + "." + e + "." + t.locale
                  , i = (0,
                t.getReleaseVersion)(e);
                return i && (n += "." + i),
                this._getCache(n)
            }
            ,
            e.prototype.getTexts = function(e) {
                var t = this;
                return Promise.all(e.map((function(e) {
                    return t.getText(e)
                }
                )))
            }
            ,
            e.prototype.refresh = function(e, t, n, i) {
                return s(this, void 0, void 0, (function() {
                    var r, o, a, s, u, c = this;
                    return l(this, (function(l) {
                        switch (l.label) {
                        case 0:
                            return r = this.options,
                            o = r.apiKey,
                            a = r.getReleaseVersion,
                            s = r.cache,
                            u = [],
                            t.forEach((function(r, l) {
                                var h = "text." + o + "." + e[l] + "." + i[l]
                                  , d = "version." + o + "." + e[l] + "." + i[l]
                                  , f = a(e[l]);
                                f && (h += "." + f,
                                d += "." + f),
                                s && (u.push(c._setCache(h, t[l], (function() {
                                    c.options.store.set(h, {})
                                }
                                ))),
                                u.push(c._setCache(d, n[l])))
                            }
                            )),
                            [4, Promise.all(u)];
                        case 1:
                            return l.sent(),
                            [2, t.reduce((function(e, t) {
                                return Object.assign(e, t)
                            }
                            ), {})]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e
        }()
          , y = function() {
            function e(e) {
                void 0 === e && (e = []),
                this._list = [],
                this._list = e
            }
            return Object.defineProperty(e.prototype, "length", {
                get: function() {
                    return this._list.length
                },
                enumerable: !1,
                configurable: !0
            }),
            e.prototype.getList = function() {
                return this._list
            }
            ,
            e.prototype.getNamespaces = function() {
                return this._list.map((function(e) {
                    return e.namespace
                }
                ))
            }
            ,
            e.prototype.addNamespace = function(e) {
                this._list.push(e)
            }
            ,
            e.prototype.insertTexts = function(e) {
                this._list.forEach((function(t, n) {
                    t.texts = e[n]
                }
                ))
            }
            ,
            e.prototype.sortByPrior = function() {
                return this._list.sort((function(e, t) {
                    return e.prior - t.prior
                }
                )),
                this._list
            }
            ,
            e.prototype.concat = function(t) {
                return new e(this._list.concat(t.getList()))
            }
            ,
            e
        }()
          , _ = function() {
            function e(e, t, n) {
                this._promiseRefresh = Promise.resolve(null),
                this.remote = e,
                this.local = t,
                this.options = n
            }
            return e.prototype._checkVersions = function(e) {
                return s(this, void 0, void 0, (function() {
                    var t, n, i, r, o, a;
                    return l(this, (function(s) {
                        switch (s.label) {
                        case 0:
                            return t = this.options.locale,
                            [4, this.local.getVersions(e)];
                        case 1:
                            return n = s.sent(),
                            i = e.map((function(e, t) {
                                return [e, n[t]]
                            }
                            )),
                            [4, this.remote.getTexts(i)];
                        case 2:
                            return r = s.sent(),
                            o = new y,
                            a = new y,
                            e.forEach((function(e, i) {
                                var s = r[i]
                                  , l = s.updated
                                  , u = s.version
                                  , c = s.data
                                  , h = s.lang;
                                l ? a.addNamespace({
                                    namespace: e,
                                    prior: i,
                                    version: u,
                                    texts: c,
                                    lang: h
                                }) : o.addNamespace({
                                    namespace: e,
                                    prior: i,
                                    version: n[i],
                                    lang: t
                                })
                            }
                            )),
                            [2, {
                                equalNs: o,
                                diffNs: a
                            }]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.waitForRefresh = function() {
                return this._promiseRefresh
            }
            ,
            e.prototype._refresh = function(e) {
                var t = e.getList()
                  , n = []
                  , i = []
                  , r = []
                  , o = [];
                return t.forEach((function(e) {
                    n.push(e.namespace),
                    i.push(e.version),
                    r.push(e.texts),
                    o.push(e.lang)
                }
                )),
                this.local.refresh(n, r, i, o)
            }
            ,
            e.prototype._getLocalTexts = function(e) {
                return s(this, void 0, void 0, (function() {
                    var t;
                    return l(this, (function(n) {
                        switch (n.label) {
                        case 0:
                            return [4, this.local.getTexts(e.getNamespaces())];
                        case 1:
                            return t = n.sent(),
                            e.insertTexts(t),
                            [2, t]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.load = function(e) {
                return s(this, void 0, void 0, (function() {
                    var t, n, i, r, o;
                    return l(this, (function(a) {
                        switch (a.label) {
                        case 0:
                            return t = this.options.format,
                            [4, this._checkVersions(e)];
                        case 1:
                            return n = a.sent(),
                            i = n.equalNs,
                            r = n.diffNs,
                            i.length ? [4, this._getLocalTexts(i)] : [3, 3];
                        case 2:
                            return a.sent(),
                            [3, 4];
                        case 3:
                            a.label = 4;
                        case 4:
                            return o = this._formatTexts(t, r.concat(i)),
                            r.length ? [4, this._refresh(r)] : [3, 6];
                        case 5:
                            a.sent(),
                            a.label = 6;
                        case 6:
                            return [2, {
                                texts: o,
                                diffNs: r.getNamespaces(),
                                equalNs: i.getNamespaces()
                            }]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype._getCacheText = function(e) {
                return s(this, void 0, void 0, (function() {
                    var t, n, i, r, o, a, s;
                    return l(this, (function(l) {
                        switch (l.label) {
                        case 0:
                            return t = this.options,
                            n = t.locale,
                            i = t.format,
                            [4, this.local.getTexts(e)];
                        case 1:
                            return r = l.sent(),
                            [4, this.local.getVersions(e)];
                        case 2:
                            return o = l.sent(),
                            a = r.map((function(t, i) {
                                if (t)
                                    return {
                                        namespace: e[i],
                                        version: o[i],
                                        lang: n,
                                        texts: t
                                    }
                            }
                            )).filter((function(e) {
                                return !!e
                            }
                            )),
                            s = new y(a),
                            [2, {
                                texts: this._formatTexts(i, s),
                                cacheAllLoaded: a.length === r.length
                            }]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.lazyLoad = function(e) {
                return s(this, void 0, void 0, (function() {
                    var t, n, i, r, o;
                    return l(this, (function(a) {
                        switch (a.label) {
                        case 0:
                            return [4, this._getCacheText(e)];
                        case 1:
                            return t = a.sent(),
                            n = t.texts,
                            i = t.cacheAllLoaded,
                            r = 0 === Object.keys(n).length || !i,
                            this._promiseRefresh = this.load(e),
                            r ? [4, this._promiseRefresh] : [3, 3];
                        case 2:
                            o = a.sent(),
                            n = o.texts,
                            a.label = 3;
                        case 3:
                            return [2, {
                                texts: n,
                                diffNs: r ? o && o.diffNs : [],
                                equalNs: r ? o && o.equalNs : e
                            }]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype._formatTexts = function(e, t) {
                return "splitted" === e ? t.getList().reduce((function(e, t) {
                    var n = t.namespace
                      , i = t.lang
                      , r = t.texts
                      , o = t.version;
                    return e[n] = {
                        lang: i,
                        texts: r,
                        version: o
                    },
                    e
                }
                ), {}) : t.sortByPrior().map((function(e) {
                    return e.texts
                }
                )).reduce((function(e, t) {
                    return Object.assign(e, t)
                }
                ), {})
            }
            ,
            e
        }();
        "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
            value: function(e) {
                if (null == e)
                    throw new TypeError("Cannot convert undefined or null to object");
                for (var t = Object(e), n = 1; n < arguments.length; n++) {
                    var i = arguments[n];
                    if (null != i)
                        for (var r in i)
                            Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r])
                }
                return t
            },
            writable: !0,
            configurable: !0
        });
        var T, b = "client_load";
        !function(e) {
            e.AfterLoad = "afterLoad"
        }(T || (T = {}));
        var S = function() {
            function e(e) {
                this.afterLoadPlugins = [],
                this.setConfig(e)
            }
            return e.prototype._init = function(e) {
                var t = this;
                this.options = function(e) {
                    var t = (e = Object.assign({}, g, e)).namespace
                      , n = e.apiKey
                      , i = e.request
                      , r = e.store
                      , o = e.zoneHost;
                    if (e.test && (e.mode = "test"),
                    e.namespace = t = t ? Array.isArray(t) ? t : [t] : [],
                    e.apiKey = n = n || e.api_key,
                    !i || !r) {
                        var a = d.ERROR_CODE
                          , s = d.ERROR_MESSAGE;
                        throw new u(a,s,null)
                    }
                    if (!n || !t.length || !o) {
                        throw new u(a = h.ERROR_CODE,s = h.ERROR_MESSAGE,null)
                    }
                    return e
                }(e);
                var n = this.options
                  , i = n.apiKey
                  , r = n.locale
                  , o = n.zoneHost
                  , s = n.request
                  , l = n.timeout
                  , c = n.fallbackLang
                  , f = n.store
                  , p = n.lazyUpdate
                  , y = n.test
                  , T = n.mode
                  , b = n.format
                  , S = n.cache
                  , w = {
                    mode: p ? "lazy" : y ? "test" : "prod",
                    zone: o,
                    locale: r,
                    apiKey: i
                };
                this._tracker = function(e, n) {
                    try {
                        t.options.tracker(e, a(a({}, w), n))
                    } catch (e) {
                        console.log(e)
                    }
                }
                ;
                var k = this._getReleaseVersionByNamespace.bind(this)
                  , C = new m({
                    request: s,
                    timeout: l,
                    apiKey: i,
                    locale: r,
                    zoneHost: o,
                    fallbackLang: c,
                    mode: T,
                    getReleaseVersion: k
                })
                  , M = new v({
                    apiKey: i,
                    locale: r,
                    store: f,
                    tracker: this._tracker,
                    getReleaseVersion: k,
                    cache: S
                });
                this._textManager = new _(C,M,{
                    locale: r,
                    format: b
                }),
                this.initPlugin()
            }
            ,
            e.prototype.initPlugin = function() {
                var e = this
                  , t = this.options.plugins || [];
                Array.isArray(t) && t.every((function(e) {
                    return "object" == typeof e
                }
                )) && t.forEach((function(t) {
                    t.type === T.AfterLoad && e.afterLoadPlugins.push(t)
                }
                ))
            }
            ,
            e.prototype._getReleaseVersionByNamespace = function(e) {
                var t = this.options.namespace
                  , n = this.options.version
                  , i = null;
                return Array.isArray(n) ? i = n[t.findIndex((function(t) {
                    return t === e
                }
                ))] : n && "object" == typeof n ? i = n[e] : "string" == typeof n && (i = n),
                i
            }
            ,
            e.prototype.setConfig = function(e) {
                var t = Object.assign({}, this.options, e);
                this._init(t)
            }
            ,
            e.prototype.waitForRefresh = function() {
                return s(this, void 0, void 0, (function() {
                    var e;
                    return l(this, (function(t) {
                        switch (t.label) {
                        case 0:
                            return [4, this._textManager.waitForRefresh()];
                        case 1:
                            return [2, (e = t.sent()) ? e.texts : null]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype._load = function() {
                return s(this, void 0, void 0, (function() {
                    var e, t, n, i, r;
                    return l(this, (function(o) {
                        switch (o.label) {
                        case 0:
                            return e = this.options,
                            t = e.namespace,
                            n = e.lazyUpdate,
                            i = t,
                            n ? [4, this._textManager.lazyLoad(i)] : [3, 2];
                        case 1:
                            return r = o.sent(),
                            [3, 4];
                        case 2:
                            return [4, this._textManager.load(i)];
                        case 3:
                            r = o.sent(),
                            o.label = 4;
                        case 4:
                            return [2, r]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.load = function(e, t) {
                return s(this, void 0, void 0, (function() {
                    var n, i, r, o, a, s, u, c, h, d, f, p, g, m, v = this;
                    return l(this, (function(l) {
                        switch (l.label) {
                        case 0:
                            n = Date.now(),
                            i = this.options.namespace,
                            l.label = 1;
                        case 1:
                            return l.trys.push([1, 5, , 10]),
                            this._tracker(b, {
                                state: "start",
                                version: "0.5.13"
                            }),
                            [4, this._load()];
                        case 2:
                            return r = l.sent(),
                            o = r.diffNs,
                            a = r.equalNs,
                            s = r.texts,
                            u = this.afterLoadPlugins,
                            Array.isArray(u) && u.length ? [4, u.reduce((function(e, t) {
                                return e.then((function(e) {
                                    return "function" == typeof t.process ? t.process(e || s, v.options) : e
                                }
                                ))
                            }
                            ), Promise.resolve(s))] : [3, 4];
                        case 3:
                            c = l.sent(),
                            s = c || s,
                            l.label = 4;
                        case 4:
                            return e && e(s),
                            this._tracker("client_load_time", {
                                time: Date.now() - n
                            }),
                            this._tracker(b, {
                                state: "success",
                                version: "0.5.13"
                            }),
                            h = o.length,
                            d = a.length,
                            f = i.length,
                            p = (d / f).toFixed(2),
                            this._tracker("client_cache", {
                                diffLen: h,
                                diff: o.join(","),
                                equalLen: d,
                                equal: a.join(","),
                                namespaces: a.join(","),
                                namespacesLen: f,
                                ratio: p
                            }),
                            [2, s];
                        case 5:
                            if (g = l.sent(),
                            this._tracker(b, {
                                state: "fail"
                            }),
                            this._tracker("client_exception", {
                                code: g.code,
                                message: g.message,
                                stack: g.stack
                            }),
                            !(g || {}).useWebCache)
                                return [3, 9];
                            l.label = 6;
                        case 6:
                            return l.trys.push([6, 8, , 9]),
                            [4, this._textManager._getCacheText(i)];
                        case 7:
                            return m = l.sent().texts,
                            g.response.data = m && "object" == typeof m ? m : {},
                            [3, 9];
                        case 8:
                            return l.sent(),
                            [3, 9];
                        case 9:
                            return t ? (t(g),
                            [3, 10]) : [2, Promise.reject(g)];
                        case 10:
                            return [2]
                        }
                    }
                    ))
                }
                ))
            }
            ,
            e
        }()
          , w = new (function() {
            function e() {}
            return e.prototype.get = function(e) {
                if (localStorage && localStorage.getItem)
                    return function(e) {
                        if ("string" == typeof e)
                            try {
                                return JSON.parse(e)
                            } catch (t) {
                                return e || void 0
                            }
                    }(localStorage.getItem(e))
            }
            ,
            e.prototype.set = function(e, t) {
                localStorage && localStorage.setItem && localStorage.setItem(e, function(e) {
                    return JSON.stringify(e)
                }(t))
            }
            ,
            e
        }())
          , k = function(e) {
            function t(t, n, i, r, o, a) {
                var s = e.call(this, t) || this;
                return s.url = n,
                s.code = i,
                s.request = r,
                s.response = o,
                s.useWebCache = a,
                s.url = n,
                s.code = i,
                s.request = r,
                s.response = o,
                s.useWebCache = !!a,
                s
            }
            return r(t, e),
            t
        }(Error);
        function C(e, t) {
            var n = t.timeout;
            return new Promise((function(t, i) {
                var r = new XMLHttpRequest;
                r.open("GET", e),
                r.overrideMimeType("application/json; charset=utf-8"),
                r.withCredentials = !1,
                r.onreadystatechange = function() {
                    if (r && 4 === r.readyState && (0 !== r.status || r.responseURL && 0 === r.responseURL.indexOf("file:"))) {
                        var n, o = function(e) {
                            try {
                                return JSON.parse(e)
                            } catch (e) {
                                return {}
                            }
                        }(r.responseText), a = (n = o).message && "object" == typeof n.message ? n : null;
                        if (r.status < 200 || r.status >= 300 || !a)
                            return function(e, t, n, i) {
                                var r = (i || {}).message || "";
                                r = r ? ", reason is: ".concat(r) : "",
                                t(new k("Request failed with status code " + e.status + r,n,null,e,{
                                    data: {}
                                },!0))
                            }(r, i, e, o),
                            void (r = null);
                        var s = {
                            data: a,
                            status: r.status,
                            statusText: r.statusText,
                            request: r
                        };
                        t(s),
                        r = null
                    }
                }
                ,
                r.onerror = function() {
                    i(new k("Network Error",e,null,r,{
                        data: {}
                    },!0)),
                    r = null
                }
                ,
                r.timeout = n,
                r.ontimeout = function() {
                    i(new k("timeout of " + n + "ms exceeded",e,"ECONNABORTED",r,{
                        data: {}
                    },!0)),
                    r = null
                }
                ,
                r.send()
            }
            ))
        }
        var M = function(e) {
            function t(t) {
                return t.store || (t.store = w),
                t.request || (t.request = C),
                e.call(this, t) || this
            }
            return r(t, e),
            t
        }(S)
    }
    ,
    17283: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => i
        });
        const i = class {
            constructor(e) {
                this.type = "afterLoad",
                this.condition = {},
                this.tccUrl = e.tccUrl,
                this.condition = e.condition,
                this.tccKey = e.tccKey || "text_custom_config",
                this.expiredTime = e.expiredTime || 1e4
            }
            createRequest(e, t) {
                const {timeout: n} = t
                  , i = this.tccKey;
                return new Promise((function(t, r) {
                    e || r("[@ies/starling_client_text_replace_plugin]: tccUrl is required");
                    const o = new XMLHttpRequest;
                    o.open("GET", e),
                    o.withCredentials = !1,
                    o.onreadystatechange = function() {
                        if (!o || 4 !== o.readyState)
                            return;
                        let e = [];
                        try {
                            const t = JSON.parse(o.responseText);
                            e = JSON.parse(t.data[i])
                        } catch (e) {
                            r(e)
                        }
                        o.status < 200 || o.status >= 300 ? r("server error") : t({
                            data: e
                        })
                    }
                    ,
                    o.onerror = function(e) {
                        r(e)
                    }
                    ,
                    o.timeout = n,
                    o.ontimeout = function(e) {
                        r(e)
                    }
                    ,
                    o.send()
                }
                ))
            }
            async getWithCache(e) {
                const t = `starling_tcc_${e}`
                  , n = (e => {
                    try {
                        return JSON.parse(localStorage.getItem(e) || "")
                    } catch (e) {
                        return {}
                    }
                }
                )(t);
                try {
                    if (n && n.data && n.expiredTime && Date.now() - +n.expiredTime < this.expiredTime)
                        return n.data;
                    const e = await this.createRequest(this.tccUrl, {
                        timeout: 1e4
                    });
                    return ( (e, t) => {
                        try {
                            localStorage.setItem(e, JSON.stringify(t))
                        } catch (e) {
                            console.log(e)
                        }
                    }
                    )(t, {
                        data: e.data,
                        expiredTime: Date.now()
                    }),
                    e.data
                } catch (e) {
                    return n && n.data ? n.data : (console.error(e),
                    [])
                }
            }
            validate(e) {
                return Array.isArray(e) ? !(!this.condition || "object" != typeof this.condition || !Object.keys(this.condition).length) || (console.warn("condition should be an object"),
                !1) : (console.warn("tcc error: tcc config should be an array"),
                !1)
            }
            createRule(e) {
                return e.reduce(( (e, t) => {
                    if (!Array.isArray(t.condition))
                        return e;
                    const n = t.condition.reduce(( (e, t) => e || this.condition[t.type] == t.value), !1)
                      , i = Object.assign({}, e.replace, t.rule.replace || {})
                      , r = e.whitelist.concat(t.rule.whitelist || []);
                    return n ? {
                        replace: i,
                        whitelist: r
                    } : e
                }
                ), {
                    replace: {},
                    whitelist: []
                })
            }
            replaceByRule(e, t) {
                let n = "";
                if (Object.keys(e).forEach((e => {
                    RegExp(e, "i").test(t) && (n = e.length > n.length ? e : n)
                }
                )),
                n) {
                    const i = RegExp(n, "ig");
                    t = t.replace(i, e[n])
                }
                return t
            }
            async process(e, t) {
                const n = await this.getWithCache(t.apiKey || "");
                if (!this.validate(n))
                    return e;
                const {replace: i, whitelist: r} = this.createRule(n);
                return Object.keys(e).reduce(( (t, n) => {
                    let o = e[n];
                    return r.includes(n) || (o = this.replaceByRule(i, o)),
                    t[n] = o,
                    t
                }
                ), {})
            }
            processSync(e, t, n) {
                if (!this.validate(t))
                    return e;
                const {replace: i, whitelist: r} = this.createRule(t);
                return r.includes(n) || (e = this.replaceByRule(i, e)),
                e
            }
        }
    }
    ,
    77966: (e, t, n) => {
        "use strict";
        n.d(t, {
            Ay: () => xe
        });
        var i = n(87638)
          , r = n(24411)
          , o = n(57923)
          , a = n(78647)
          , s = n(16960)
          , l = n(14444)
          , u = n(61167)
          , c = n(51611)
          , h = {
            type: "logger",
            log: function(e) {
                this.output("log", e)
            },
            warn: function(e) {
                this.output("warn", e)
            },
            error: function(e) {
                this.output("error", e)
            },
            output: function(e, t) {
                console && console[e] && console[e].apply(console, t)
            }
        }
          , d = new (function() {
            function e(t) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                o.A)(this, e),
                this.init(t, n)
            }
            return (0,
            a.A)(e, [{
                key: "init",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    this.prefix = t.prefix || "i18next:",
                    this.logger = e || h,
                    this.options = t,
                    this.debug = t.debug
                }
            }, {
                key: "setDebug",
                value: function(e) {
                    this.debug = e
                }
            }, {
                key: "log",
                value: function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                        t[n] = arguments[n];
                    return this.forward(t, "log", "", !0)
                }
            }, {
                key: "warn",
                value: function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                        t[n] = arguments[n];
                    return this.forward(t, "warn", "", !0)
                }
            }, {
                key: "error",
                value: function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                        t[n] = arguments[n];
                    return this.forward(t, "error", "")
                }
            }, {
                key: "deprecate",
                value: function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                        t[n] = arguments[n];
                    return this.forward(t, "warn", "WARNING DEPRECATED: ", !0)
                }
            }, {
                key: "forward",
                value: function(e, t, n, i) {
                    return i && !this.debug ? null : ("string" == typeof e[0] && (e[0] = "".concat(n).concat(this.prefix, " ").concat(e[0])),
                    this.logger[t](e))
                }
            }, {
                key: "create",
                value: function(t) {
                    return new e(this.logger,(0,
                    r.A)({}, {
                        prefix: "".concat(this.prefix, ":").concat(t, ":")
                    }, this.options))
                }
            }]),
            e
        }())
          , f = function() {
            function e() {
                (0,
                o.A)(this, e),
                this.observers = {}
            }
            return (0,
            a.A)(e, [{
                key: "on",
                value: function(e, t) {
                    var n = this;
                    return e.split(" ").forEach((function(e) {
                        n.observers[e] = n.observers[e] || [],
                        n.observers[e].push(t)
                    }
                    )),
                    this
                }
            }, {
                key: "off",
                value: function(e, t) {
                    this.observers[e] && (t ? this.observers[e] = this.observers[e].filter((function(e) {
                        return e !== t
                    }
                    )) : delete this.observers[e])
                }
            }, {
                key: "emit",
                value: function(e) {
                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
                        n[i - 1] = arguments[i];
                    this.observers[e] && [].concat(this.observers[e]).forEach((function(e) {
                        e.apply(void 0, n)
                    }
                    )),
                    this.observers["*"] && [].concat(this.observers["*"]).forEach((function(t) {
                        t.apply(t, [e].concat(n))
                    }
                    ))
                }
            }]),
            e
        }();
        function p() {
            var e, t, n = new Promise((function(n, i) {
                e = n,
                t = i
            }
            ));
            return n.resolve = e,
            n.reject = t,
            n
        }
        function g(e) {
            return null == e ? "" : "" + e
        }
        function m(e, t, n) {
            function i(e) {
                return e && e.indexOf("###") > -1 ? e.replace(/###/g, ".") : e
            }
            function r() {
                return !e || "string" == typeof e
            }
            for (var o = "string" != typeof t ? [].concat(t) : t.split("."); o.length > 1; ) {
                if (r())
                    return {};
                var a = i(o.shift());
                !e[a] && n && (e[a] = new n),
                e = Object.prototype.hasOwnProperty.call(e, a) ? e[a] : {}
            }
            return r() ? {} : {
                obj: e,
                k: i(o.shift())
            }
        }
        function v(e, t, n) {
            var i = m(e, t, Object);
            i.obj[i.k] = n
        }
        function y(e, t) {
            var n = m(e, t)
              , i = n.obj
              , r = n.k;
            if (i)
                return i[r]
        }
        function _(e, t, n) {
            var i = y(e, n);
            return void 0 !== i ? i : y(t, n)
        }
        function T(e, t, n) {
            for (var i in t)
                "__proto__" !== i && "constructor" !== i && (i in e ? "string" == typeof e[i] || e[i]instanceof String || "string" == typeof t[i] || t[i]instanceof String ? n && (e[i] = t[i]) : T(e[i], t[i], n) : e[i] = t[i]);
            return e
        }
        function b(e) {
            return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
        }
        var S = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;"
        };
        function w(e) {
            return "string" == typeof e ? e.replace(/[&<>"'\/]/g, (function(e) {
                return S[e]
            }
            )) : e
        }
        var k = "undefined" != typeof window && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf("MSIE") > -1
          , C = function(e) {
            function t(e) {
                var n, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    ns: ["translation"],
                    defaultNS: "translation"
                };
                return (0,
                o.A)(this, t),
                n = (0,
                s.A)(this, (0,
                l.A)(t).call(this)),
                k && f.call((0,
                u.A)(n)),
                n.data = e || {},
                n.options = i,
                void 0 === n.options.keySeparator && (n.options.keySeparator = "."),
                n
            }
            return (0,
            c.A)(t, e),
            (0,
            a.A)(t, [{
                key: "addNamespaces",
                value: function(e) {
                    this.options.ns.indexOf(e) < 0 && this.options.ns.push(e)
                }
            }, {
                key: "removeNamespaces",
                value: function(e) {
                    var t = this.options.ns.indexOf(e);
                    t > -1 && this.options.ns.splice(t, 1)
                }
            }, {
                key: "getResource",
                value: function(e, t, n) {
                    var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}
                      , r = void 0 !== i.keySeparator ? i.keySeparator : this.options.keySeparator
                      , o = [e, t];
                    return n && "string" != typeof n && (o = o.concat(n)),
                    n && "string" == typeof n && (o = o.concat(r ? n.split(r) : n)),
                    e.indexOf(".") > -1 && (o = e.split(".")),
                    y(this.data, o)
                }
            }, {
                key: "addResource",
                value: function(e, t, n, i) {
                    var r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {
                        silent: !1
                    }
                      , o = this.options.keySeparator;
                    void 0 === o && (o = ".");
                    var a = [e, t];
                    n && (a = a.concat(o ? n.split(o) : n)),
                    e.indexOf(".") > -1 && (i = t,
                    t = (a = e.split("."))[1]),
                    this.addNamespaces(t),
                    v(this.data, a, i),
                    r.silent || this.emit("added", e, t, n, i)
                }
            }, {
                key: "addResources",
                value: function(e, t, n) {
                    var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {
                        silent: !1
                    };
                    for (var r in n)
                        "string" != typeof n[r] && "[object Array]" !== Object.prototype.toString.apply(n[r]) || this.addResource(e, t, r, n[r], {
                            silent: !0
                        });
                    i.silent || this.emit("added", e, t, n)
                }
            }, {
                key: "addResourceBundle",
                value: function(e, t, n, i, o) {
                    var a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {
                        silent: !1
                    }
                      , s = [e, t];
                    e.indexOf(".") > -1 && (i = n,
                    n = t,
                    t = (s = e.split("."))[1]),
                    this.addNamespaces(t);
                    var l = y(this.data, s) || {};
                    i ? T(l, n, o) : l = (0,
                    r.A)({}, l, n),
                    v(this.data, s, l),
                    a.silent || this.emit("added", e, t, n)
                }
            }, {
                key: "removeResourceBundle",
                value: function(e, t) {
                    this.hasResourceBundle(e, t) && delete this.data[e][t],
                    this.removeNamespaces(t),
                    this.emit("removed", e, t)
                }
            }, {
                key: "hasResourceBundle",
                value: function(e, t) {
                    return void 0 !== this.getResource(e, t)
                }
            }, {
                key: "getResourceBundle",
                value: function(e, t) {
                    return t || (t = this.options.defaultNS),
                    "v1" === this.options.compatibilityAPI ? (0,
                    r.A)({}, {}, this.getResource(e, t)) : this.getResource(e, t)
                }
            }, {
                key: "getDataByLanguage",
                value: function(e) {
                    return this.data[e]
                }
            }, {
                key: "toJSON",
                value: function() {
                    return this.data
                }
            }]),
            t
        }(f)
          , M = {
            processors: {},
            addPostProcessor: function(e) {
                this.processors[e.name] = e
            },
            handle: function(e, t, n, i, r) {
                var o = this;
                return e.forEach((function(e) {
                    o.processors[e] && (t = o.processors[e].process(t, n, i, r))
                }
                )),
                t
            }
        }
          , P = {}
          , R = function(e) {
            function t(e) {
                var n, i, r, a, c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return (0,
                o.A)(this, t),
                n = (0,
                s.A)(this, (0,
                l.A)(t).call(this)),
                k && f.call((0,
                u.A)(n)),
                i = ["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"],
                r = e,
                a = (0,
                u.A)(n),
                i.forEach((function(e) {
                    r[e] && (a[e] = r[e])
                }
                )),
                n.options = c,
                void 0 === n.options.keySeparator && (n.options.keySeparator = "."),
                n.logger = d.create("translator"),
                n
            }
            return (0,
            c.A)(t, e),
            (0,
            a.A)(t, [{
                key: "changeLanguage",
                value: function(e) {
                    e && (this.language = e)
                }
            }, {
                key: "exists",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        interpolation: {}
                    }
                      , n = this.resolve(e, t);
                    return n && void 0 !== n.res
                }
            }, {
                key: "extractFromKey",
                value: function(e, t) {
                    var n = void 0 !== t.nsSeparator ? t.nsSeparator : this.options.nsSeparator;
                    void 0 === n && (n = ":");
                    var i = void 0 !== t.keySeparator ? t.keySeparator : this.options.keySeparator
                      , r = t.ns || this.options.defaultNS;
                    if (n && e.indexOf(n) > -1) {
                        var o = e.match(this.interpolator.nestingRegexp);
                        if (o && o.length > 0)
                            return {
                                key: e,
                                namespaces: r
                            };
                        var a = e.split(n);
                        (n !== i || n === i && this.options.ns.indexOf(a[0]) > -1) && (r = a.shift()),
                        e = a.join(i)
                    }
                    return "string" == typeof r && (r = [r]),
                    {
                        key: e,
                        namespaces: r
                    }
                }
            }, {
                key: "translate",
                value: function(e, n, o) {
                    var a = this;
                    if ("object" !== (0,
                    i.A)(n) && this.options.overloadTranslationOptionHandler && (n = this.options.overloadTranslationOptionHandler(arguments)),
                    n || (n = {}),
                    null == e)
                        return "";
                    Array.isArray(e) || (e = [String(e)]);
                    var s = void 0 !== n.keySeparator ? n.keySeparator : this.options.keySeparator
                      , l = this.extractFromKey(e[e.length - 1], n)
                      , u = l.key
                      , c = l.namespaces
                      , h = c[c.length - 1]
                      , d = n.lng || this.language
                      , f = n.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
                    if (d && "cimode" === d.toLowerCase()) {
                        if (f) {
                            var p = n.nsSeparator || this.options.nsSeparator;
                            return h + p + u
                        }
                        return u
                    }
                    var g = this.resolve(e, n)
                      , m = g && g.res
                      , v = g && g.usedKey || u
                      , y = g && g.exactUsedKey || u
                      , _ = Object.prototype.toString.apply(m)
                      , T = void 0 !== n.joinArrays ? n.joinArrays : this.options.joinArrays
                      , b = !this.i18nFormat || this.i18nFormat.handleAsObject;
                    if (b && m && "string" != typeof m && "boolean" != typeof m && "number" != typeof m && ["[object Number]", "[object Function]", "[object RegExp]"].indexOf(_) < 0 && ("string" != typeof T || "[object Array]" !== _)) {
                        if (!n.returnObjects && !this.options.returnObjects)
                            return this.logger.warn("accessing an object - but returnObjects options is not enabled!"),
                            this.options.returnedObjectHandler ? this.options.returnedObjectHandler(v, m, n) : "key '".concat(u, " (").concat(this.language, ")' returned an object instead of string.");
                        if (s) {
                            var S = "[object Array]" === _
                              , w = S ? [] : {}
                              , k = S ? y : v;
                            for (var C in m)
                                if (Object.prototype.hasOwnProperty.call(m, C)) {
                                    var M = "".concat(k).concat(s).concat(C);
                                    w[C] = this.translate(M, (0,
                                    r.A)({}, n, {
                                        joinArrays: !1,
                                        ns: c
                                    })),
                                    w[C] === M && (w[C] = m[C])
                                }
                            m = w
                        }
                    } else if (b && "string" == typeof T && "[object Array]" === _)
                        (m = m.join(T)) && (m = this.extendTranslation(m, e, n, o));
                    else {
                        var P = !1
                          , R = !1
                          , x = void 0 !== n.count && "string" != typeof n.count
                          , E = t.hasDefaultValue(n)
                          , D = x ? this.pluralResolver.getSuffix(d, n.count) : ""
                          , L = n["defaultValue".concat(D)] || n.defaultValue;
                        !this.isValidLookup(m) && E && (P = !0,
                        m = L),
                        this.isValidLookup(m) || (R = !0,
                        m = u);
                        var I = E && L !== m && this.options.updateMissing;
                        if (R || P || I) {
                            if (this.logger.log(I ? "updateKey" : "missingKey", d, h, u, I ? L : m),
                            s) {
                                var O = this.resolve(u, (0,
                                r.A)({}, n, {
                                    keySeparator: !1
                                }));
                                O && O.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")
                            }
                            var A = []
                              , G = this.languageUtils.getFallbackCodes(this.options.fallbackLng, n.lng || this.language);
                            if ("fallback" === this.options.saveMissingTo && G && G[0])
                                for (var N = 0; N < G.length; N++)
                                    A.push(G[N]);
                            else
                                "all" === this.options.saveMissingTo ? A = this.languageUtils.toResolveHierarchy(n.lng || this.language) : A.push(n.lng || this.language);
                            var B = function(e, t, i) {
                                a.options.missingKeyHandler ? a.options.missingKeyHandler(e, h, t, I ? i : m, I, n) : a.backendConnector && a.backendConnector.saveMissing && a.backendConnector.saveMissing(e, h, t, I ? i : m, I, n),
                                a.emit("missingKey", e, h, t, m)
                            };
                            this.options.saveMissing && (this.options.saveMissingPlurals && x ? A.forEach((function(e) {
                                a.pluralResolver.getSuffixes(e).forEach((function(t) {
                                    B([e], u + t, n["defaultValue".concat(t)] || L)
                                }
                                ))
                            }
                            )) : B(A, u, L))
                        }
                        m = this.extendTranslation(m, e, n, g, o),
                        R && m === u && this.options.appendNamespaceToMissingKey && (m = "".concat(h, ":").concat(u)),
                        R && this.options.parseMissingKeyHandler && (m = this.options.parseMissingKeyHandler(m))
                    }
                    return m
                }
            }, {
                key: "extendTranslation",
                value: function(e, t, n, i, o) {
                    var a = this;
                    if (this.i18nFormat && this.i18nFormat.parse)
                        e = this.i18nFormat.parse(e, n, i.usedLng, i.usedNS, i.usedKey, {
                            resolved: i
                        });
                    else if (!n.skipInterpolation) {
                        n.interpolation && this.interpolator.init((0,
                        r.A)({}, n, {
                            interpolation: (0,
                            r.A)({}, this.options.interpolation, n.interpolation)
                        }));
                        var s, l = n.interpolation && n.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;
                        if (l) {
                            var u = e.match(this.interpolator.nestingRegexp);
                            s = u && u.length
                        }
                        var c = n.replace && "string" != typeof n.replace ? n.replace : n;
                        if (this.options.interpolation.defaultVariables && (c = (0,
                        r.A)({}, this.options.interpolation.defaultVariables, c)),
                        e = this.interpolator.interpolate(e, c, n.lng || this.language, n),
                        l) {
                            var h = e.match(this.interpolator.nestingRegexp);
                            s < (h && h.length) && (n.nest = !1)
                        }
                        !1 !== n.nest && (e = this.interpolator.nest(e, (function() {
                            for (var e = arguments.length, i = new Array(e), r = 0; r < e; r++)
                                i[r] = arguments[r];
                            return o && o[0] === i[0] && !n.context ? (a.logger.warn("It seems you are nesting recursively key: ".concat(i[0], " in key: ").concat(t[0])),
                            null) : a.translate.apply(a, i.concat([t]))
                        }
                        ), n)),
                        n.interpolation && this.interpolator.reset()
                    }
                    var d = n.postProcess || this.options.postProcess
                      , f = "string" == typeof d ? [d] : d;
                    return null != e && f && f.length && !1 !== n.applyPostProcessor && (e = M.handle(f, e, t, this.options && this.options.postProcessPassResolved ? (0,
                    r.A)({
                        i18nResolved: i
                    }, n) : n, this)),
                    e
                }
            }, {
                key: "resolve",
                value: function(e) {
                    var t, n, i, r, o, a = this, s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    return "string" == typeof e && (e = [e]),
                    e.forEach((function(e) {
                        if (!a.isValidLookup(t)) {
                            var l = a.extractFromKey(e, s)
                              , u = l.key;
                            n = u;
                            var c = l.namespaces;
                            a.options.fallbackNS && (c = c.concat(a.options.fallbackNS));
                            var h = void 0 !== s.count && "string" != typeof s.count
                              , d = void 0 !== s.context && "string" == typeof s.context && "" !== s.context
                              , f = s.lngs ? s.lngs : a.languageUtils.toResolveHierarchy(s.lng || a.language, s.fallbackLng);
                            c.forEach((function(e) {
                                a.isValidLookup(t) || (o = e,
                                !P["".concat(f[0], "-").concat(e)] && a.utils && a.utils.hasLoadedNamespace && !a.utils.hasLoadedNamespace(o) && (P["".concat(f[0], "-").concat(e)] = !0,
                                a.logger.warn('key "'.concat(n, '" for languages "').concat(f.join(", "), '" won\'t get resolved as namespace "').concat(o, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),
                                f.forEach((function(n) {
                                    if (!a.isValidLookup(t)) {
                                        r = n;
                                        var o, l, c = u, f = [c];
                                        for (a.i18nFormat && a.i18nFormat.addLookupKeys ? a.i18nFormat.addLookupKeys(f, u, n, e, s) : (h && (o = a.pluralResolver.getSuffix(n, s.count)),
                                        h && d && f.push(c + o),
                                        d && f.push(c += "".concat(a.options.contextSeparator).concat(s.context)),
                                        h && f.push(c += o)); l = f.pop(); )
                                            a.isValidLookup(t) || (i = l,
                                            t = a.getResource(n, e, l, s))
                                    }
                                }
                                )))
                            }
                            ))
                        }
                    }
                    )),
                    {
                        res: t,
                        usedKey: n,
                        exactUsedKey: i,
                        usedLng: r,
                        usedNS: o
                    }
                }
            }, {
                key: "isValidLookup",
                value: function(e) {
                    return !(void 0 === e || !this.options.returnNull && null === e || !this.options.returnEmptyString && "" === e)
                }
            }, {
                key: "getResource",
                value: function(e, t, n) {
                    var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(e, t, n, i) : this.resourceStore.getResource(e, t, n, i)
                }
            }], [{
                key: "hasDefaultValue",
                value: function(e) {
                    for (var t in e)
                        if (Object.prototype.hasOwnProperty.call(e, t) && "defaultValue" === t.substring(0, 12) && void 0 !== e[t])
                            return !0;
                    return !1
                }
            }]),
            t
        }(f);
        function x(e) {
            return e.charAt(0).toUpperCase() + e.slice(1)
        }
        var E = function() {
            function e(t) {
                (0,
                o.A)(this, e),
                this.options = t,
                this.whitelist = this.options.supportedLngs || !1,
                this.supportedLngs = this.options.supportedLngs || !1,
                this.logger = d.create("languageUtils")
            }
            return (0,
            a.A)(e, [{
                key: "getScriptPartFromCode",
                value: function(e) {
                    if (!e || e.indexOf("-") < 0)
                        return null;
                    var t = e.split("-");
                    return 2 === t.length ? null : (t.pop(),
                    "x" === t[t.length - 1].toLowerCase() ? null : this.formatLanguageCode(t.join("-")))
                }
            }, {
                key: "getLanguagePartFromCode",
                value: function(e) {
                    if (!e || e.indexOf("-") < 0)
                        return e;
                    var t = e.split("-");
                    return this.formatLanguageCode(t[0])
                }
            }, {
                key: "formatLanguageCode",
                value: function(e) {
                    if ("string" == typeof e && e.indexOf("-") > -1) {
                        var t = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"]
                          , n = e.split("-");
                        return this.options.lowerCaseLng ? n = n.map((function(e) {
                            return e.toLowerCase()
                        }
                        )) : 2 === n.length ? (n[0] = n[0].toLowerCase(),
                        n[1] = n[1].toUpperCase(),
                        t.indexOf(n[1].toLowerCase()) > -1 && (n[1] = x(n[1].toLowerCase()))) : 3 === n.length && (n[0] = n[0].toLowerCase(),
                        2 === n[1].length && (n[1] = n[1].toUpperCase()),
                        "sgn" !== n[0] && 2 === n[2].length && (n[2] = n[2].toUpperCase()),
                        t.indexOf(n[1].toLowerCase()) > -1 && (n[1] = x(n[1].toLowerCase())),
                        t.indexOf(n[2].toLowerCase()) > -1 && (n[2] = x(n[2].toLowerCase()))),
                        n.join("-")
                    }
                    return this.options.cleanCode || this.options.lowerCaseLng ? e.toLowerCase() : e
                }
            }, {
                key: "isWhitelisted",
                value: function(e) {
                    return this.logger.deprecate("languageUtils.isWhitelisted", 'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.'),
                    this.isSupportedCode(e)
                }
            }, {
                key: "isSupportedCode",
                value: function(e) {
                    return ("languageOnly" === this.options.load || this.options.nonExplicitSupportedLngs) && (e = this.getLanguagePartFromCode(e)),
                    !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(e) > -1
                }
            }, {
                key: "getBestMatchFromCodes",
                value: function(e) {
                    var t, n = this;
                    return e ? (e.forEach((function(e) {
                        if (!t) {
                            var i = n.formatLanguageCode(e);
                            n.options.supportedLngs && !n.isSupportedCode(i) || (t = i)
                        }
                    }
                    )),
                    !t && this.options.supportedLngs && e.forEach((function(e) {
                        if (!t) {
                            var i = n.getLanguagePartFromCode(e);
                            if (n.isSupportedCode(i))
                                return t = i;
                            t = n.options.supportedLngs.find((function(e) {
                                if (0 === e.indexOf(i))
                                    return e
                            }
                            ))
                        }
                    }
                    )),
                    t || (t = this.getFallbackCodes(this.options.fallbackLng)[0]),
                    t) : null
                }
            }, {
                key: "getFallbackCodes",
                value: function(e, t) {
                    if (!e)
                        return [];
                    if ("function" == typeof e && (e = e(t)),
                    "string" == typeof e && (e = [e]),
                    "[object Array]" === Object.prototype.toString.apply(e))
                        return e;
                    if (!t)
                        return e.default || [];
                    var n = e[t];
                    return n || (n = e[this.getScriptPartFromCode(t)]),
                    n || (n = e[this.formatLanguageCode(t)]),
                    n || (n = e[this.getLanguagePartFromCode(t)]),
                    n || (n = e.default),
                    n || []
                }
            }, {
                key: "toResolveHierarchy",
                value: function(e, t) {
                    var n = this
                      , i = this.getFallbackCodes(t || this.options.fallbackLng || [], e)
                      , r = []
                      , o = function(e) {
                        e && (n.isSupportedCode(e) ? r.push(e) : n.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)))
                    };
                    return "string" == typeof e && e.indexOf("-") > -1 ? ("languageOnly" !== this.options.load && o(this.formatLanguageCode(e)),
                    "languageOnly" !== this.options.load && "currentOnly" !== this.options.load && o(this.getScriptPartFromCode(e)),
                    "currentOnly" !== this.options.load && o(this.getLanguagePartFromCode(e))) : "string" == typeof e && o(this.formatLanguageCode(e)),
                    i.forEach((function(e) {
                        r.indexOf(e) < 0 && o(n.formatLanguageCode(e))
                    }
                    )),
                    r
                }
            }]),
            e
        }()
          , D = [{
            lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
            nr: [1, 2],
            fc: 1
        }, {
            lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
            nr: [1, 2],
            fc: 2
        }, {
            lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "kk", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
            nr: [1],
            fc: 3
        }, {
            lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
            nr: [1, 2, 5],
            fc: 4
        }, {
            lngs: ["ar"],
            nr: [0, 1, 2, 3, 11, 100],
            fc: 5
        }, {
            lngs: ["cs", "sk"],
            nr: [1, 2, 5],
            fc: 6
        }, {
            lngs: ["csb", "pl"],
            nr: [1, 2, 5],
            fc: 7
        }, {
            lngs: ["cy"],
            nr: [1, 2, 3, 8],
            fc: 8
        }, {
            lngs: ["fr"],
            nr: [1, 2],
            fc: 9
        }, {
            lngs: ["ga"],
            nr: [1, 2, 3, 7, 11],
            fc: 10
        }, {
            lngs: ["gd"],
            nr: [1, 2, 3, 20],
            fc: 11
        }, {
            lngs: ["is"],
            nr: [1, 2],
            fc: 12
        }, {
            lngs: ["jv"],
            nr: [0, 1],
            fc: 13
        }, {
            lngs: ["kw"],
            nr: [1, 2, 3, 4],
            fc: 14
        }, {
            lngs: ["lt"],
            nr: [1, 2, 10],
            fc: 15
        }, {
            lngs: ["lv"],
            nr: [1, 2, 0],
            fc: 16
        }, {
            lngs: ["mk"],
            nr: [1, 2],
            fc: 17
        }, {
            lngs: ["mnk"],
            nr: [0, 1, 2],
            fc: 18
        }, {
            lngs: ["mt"],
            nr: [1, 2, 11, 20],
            fc: 19
        }, {
            lngs: ["or"],
            nr: [2, 1],
            fc: 2
        }, {
            lngs: ["ro"],
            nr: [1, 2, 20],
            fc: 20
        }, {
            lngs: ["sl"],
            nr: [5, 1, 2, 3],
            fc: 21
        }, {
            lngs: ["he", "iw"],
            nr: [1, 2, 20, 21],
            fc: 22
        }]
          , L = {
            1: function(e) {
                return Number(e > 1)
            },
            2: function(e) {
                return Number(1 != e)
            },
            3: function(e) {
                return 0
            },
            4: function(e) {
                return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2)
            },
            5: function(e) {
                return Number(0 == e ? 0 : 1 == e ? 1 : 2 == e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5)
            },
            6: function(e) {
                return Number(1 == e ? 0 : e >= 2 && e <= 4 ? 1 : 2)
            },
            7: function(e) {
                return Number(1 == e ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2)
            },
            8: function(e) {
                return Number(1 == e ? 0 : 2 == e ? 1 : 8 != e && 11 != e ? 2 : 3)
            },
            9: function(e) {
                return Number(e >= 2)
            },
            10: function(e) {
                return Number(1 == e ? 0 : 2 == e ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4)
            },
            11: function(e) {
                return Number(1 == e || 11 == e ? 0 : 2 == e || 12 == e ? 1 : e > 2 && e < 20 ? 2 : 3)
            },
            12: function(e) {
                return Number(e % 10 != 1 || e % 100 == 11)
            },
            13: function(e) {
                return Number(0 !== e)
            },
            14: function(e) {
                return Number(1 == e ? 0 : 2 == e ? 1 : 3 == e ? 2 : 3)
            },
            15: function(e) {
                return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2)
            },
            16: function(e) {
                return Number(e % 10 == 1 && e % 100 != 11 ? 0 : 0 !== e ? 1 : 2)
            },
            17: function(e) {
                return Number(1 == e || e % 10 == 1 && e % 100 != 11 ? 0 : 1)
            },
            18: function(e) {
                return Number(0 == e ? 0 : 1 == e ? 1 : 2)
            },
            19: function(e) {
                return Number(1 == e ? 0 : 0 == e || e % 100 > 1 && e % 100 < 11 ? 1 : e % 100 > 10 && e % 100 < 20 ? 2 : 3)
            },
            20: function(e) {
                return Number(1 == e ? 0 : 0 == e || e % 100 > 0 && e % 100 < 20 ? 1 : 2)
            },
            21: function(e) {
                return Number(e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0)
            },
            22: function(e) {
                return Number(1 == e ? 0 : 2 == e ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3)
            }
        }
          , I = function() {
            function e(t) {
                var n, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                o.A)(this, e),
                this.languageUtils = t,
                this.options = i,
                this.logger = d.create("pluralResolver"),
                this.rules = (n = {},
                D.forEach((function(e) {
                    e.lngs.forEach((function(t) {
                        n[t] = {
                            numbers: e.nr,
                            plurals: L[e.fc]
                        }
                    }
                    ))
                }
                )),
                n)
            }
            return (0,
            a.A)(e, [{
                key: "addRule",
                value: function(e, t) {
                    this.rules[e] = t
                }
            }, {
                key: "getRule",
                value: function(e) {
                    return this.rules[e] || this.rules[this.languageUtils.getLanguagePartFromCode(e)]
                }
            }, {
                key: "needsPlural",
                value: function(e) {
                    var t = this.getRule(e);
                    return t && t.numbers.length > 1
                }
            }, {
                key: "getPluralFormsOfKey",
                value: function(e, t) {
                    return this.getSuffixes(e).map((function(e) {
                        return t + e
                    }
                    ))
                }
            }, {
                key: "getSuffixes",
                value: function(e) {
                    var t = this
                      , n = this.getRule(e);
                    return n ? n.numbers.map((function(n) {
                        return t.getSuffix(e, n)
                    }
                    )) : []
                }
            }, {
                key: "getSuffix",
                value: function(e, t) {
                    var n = this
                      , i = this.getRule(e);
                    if (i) {
                        var r = i.noAbs ? i.plurals(t) : i.plurals(Math.abs(t))
                          , o = i.numbers[r];
                        this.options.simplifyPluralSuffix && 2 === i.numbers.length && 1 === i.numbers[0] && (2 === o ? o = "plural" : 1 === o && (o = ""));
                        var a = function() {
                            return n.options.prepend && o.toString() ? n.options.prepend + o.toString() : o.toString()
                        };
                        return "v1" === this.options.compatibilityJSON ? 1 === o ? "" : "number" == typeof o ? "_plural_".concat(o.toString()) : a() : "v2" === this.options.compatibilityJSON || this.options.simplifyPluralSuffix && 2 === i.numbers.length && 1 === i.numbers[0] ? a() : this.options.prepend && r.toString() ? this.options.prepend + r.toString() : r.toString()
                    }
                    return this.logger.warn("no plural rule found for: ".concat(e)),
                    ""
                }
            }]),
            e
        }()
          , O = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                (0,
                o.A)(this, e),
                this.logger = d.create("interpolator"),
                this.options = t,
                this.format = t.interpolation && t.interpolation.format || function(e) {
                    return e
                }
                ,
                this.init(t)
            }
            return (0,
            a.A)(e, [{
                key: "init",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    e.interpolation || (e.interpolation = {
                        escapeValue: !0
                    });
                    var t = e.interpolation;
                    this.escape = void 0 !== t.escape ? t.escape : w,
                    this.escapeValue = void 0 === t.escapeValue || t.escapeValue,
                    this.useRawValueToEscape = void 0 !== t.useRawValueToEscape && t.useRawValueToEscape,
                    this.prefix = t.prefix ? b(t.prefix) : t.prefixEscaped || "{{",
                    this.suffix = t.suffix ? b(t.suffix) : t.suffixEscaped || "}}",
                    this.formatSeparator = t.formatSeparator ? t.formatSeparator : t.formatSeparator || ",",
                    this.unescapePrefix = t.unescapeSuffix ? "" : t.unescapePrefix || "-",
                    this.unescapeSuffix = this.unescapePrefix ? "" : t.unescapeSuffix || "",
                    this.nestingPrefix = t.nestingPrefix ? b(t.nestingPrefix) : t.nestingPrefixEscaped || b("$t("),
                    this.nestingSuffix = t.nestingSuffix ? b(t.nestingSuffix) : t.nestingSuffixEscaped || b(")"),
                    this.nestingOptionsSeparator = t.nestingOptionsSeparator ? t.nestingOptionsSeparator : t.nestingOptionsSeparator || ",",
                    this.maxReplaces = t.maxReplaces ? t.maxReplaces : 1e3,
                    this.alwaysFormat = void 0 !== t.alwaysFormat && t.alwaysFormat,
                    this.resetRegExp()
                }
            }, {
                key: "reset",
                value: function() {
                    this.options && this.init(this.options)
                }
            }, {
                key: "resetRegExp",
                value: function() {
                    var e = "".concat(this.prefix, "(.+?)").concat(this.suffix);
                    this.regexp = new RegExp(e,"g");
                    var t = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
                    this.regexpUnescape = new RegExp(t,"g");
                    var n = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
                    this.nestingRegexp = new RegExp(n,"g")
                }
            }, {
                key: "interpolate",
                value: function(e, t, n, i) {
                    var r, o, a, s = this, l = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
                    function u(e) {
                        return e.replace(/\$/g, "$$$$")
                    }
                    var c = function(e) {
                        if (e.indexOf(s.formatSeparator) < 0) {
                            var r = _(t, l, e);
                            return s.alwaysFormat ? s.format(r, void 0, n) : r
                        }
                        var o = e.split(s.formatSeparator)
                          , a = o.shift().trim()
                          , u = o.join(s.formatSeparator).trim();
                        return s.format(_(t, l, a), u, n, i)
                    };
                    this.resetRegExp();
                    var h = i && i.missingInterpolationHandler || this.options.missingInterpolationHandler
                      , d = i && i.interpolation && i.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;
                    return [{
                        regex: this.regexpUnescape,
                        safeValue: function(e) {
                            return u(e)
                        }
                    }, {
                        regex: this.regexp,
                        safeValue: function(e) {
                            return s.escapeValue ? u(s.escape(e)) : u(e)
                        }
                    }].forEach((function(t) {
                        for (a = 0; r = t.regex.exec(e); ) {
                            if (void 0 === (o = c(r[1].trim())))
                                if ("function" == typeof h) {
                                    var n = h(e, r, i);
                                    o = "string" == typeof n ? n : ""
                                } else {
                                    if (d) {
                                        o = r[0];
                                        continue
                                    }
                                    s.logger.warn("missed to pass in variable ".concat(r[1], " for interpolating ").concat(e)),
                                    o = ""
                                }
                            else
                                "string" == typeof o || s.useRawValueToEscape || (o = g(o));
                            if (e = e.replace(r[0], t.safeValue(o)),
                            t.regex.lastIndex = 0,
                            ++a >= s.maxReplaces)
                                break
                        }
                    }
                    )),
                    e
                }
            }, {
                key: "nest",
                value: function(e, t) {
                    var n, i, o = this, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, s = (0,
                    r.A)({}, a);
                    function l(e, t) {
                        var n = this.nestingOptionsSeparator;
                        if (e.indexOf(n) < 0)
                            return e;
                        var i = e.split(new RegExp("".concat(n, "[ ]*{")))
                          , o = "{".concat(i[1]);
                        e = i[0],
                        o = (o = this.interpolate(o, s)).replace(/'/g, '"');
                        try {
                            s = JSON.parse(o),
                            t && (s = (0,
                            r.A)({}, t, s))
                        } catch (t) {
                            return this.logger.warn("failed parsing options string in nesting for key ".concat(e), t),
                            "".concat(e).concat(n).concat(o)
                        }
                        return delete s.defaultValue,
                        e
                    }
                    for (s.applyPostProcessor = !1,
                    delete s.defaultValue; n = this.nestingRegexp.exec(e); ) {
                        var u = []
                          , c = !1;
                        if (n[0].includes(this.formatSeparator) && !/{.*}/.test(n[1])) {
                            var h = n[1].split(this.formatSeparator).map((function(e) {
                                return e.trim()
                            }
                            ));
                            n[1] = h.shift(),
                            u = h,
                            c = !0
                        }
                        if ((i = t(l.call(this, n[1].trim(), s), s)) && n[0] === e && "string" != typeof i)
                            return i;
                        "string" != typeof i && (i = g(i)),
                        i || (this.logger.warn("missed to resolve ".concat(n[1], " for nesting ").concat(e)),
                        i = ""),
                        c && (i = u.reduce((function(e, t) {
                            return o.format(e, t, a.lng, a)
                        }
                        ), i.trim())),
                        e = e.replace(n[0], i),
                        this.regexp.lastIndex = 0
                    }
                    return e
                }
            }]),
            e
        }()
          , A = function(e) {
            function t(e, n, i) {
                var r, a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                return (0,
                o.A)(this, t),
                r = (0,
                s.A)(this, (0,
                l.A)(t).call(this)),
                k && f.call((0,
                u.A)(r)),
                r.backend = e,
                r.store = n,
                r.services = i,
                r.languageUtils = i.languageUtils,
                r.options = a,
                r.logger = d.create("backendConnector"),
                r.state = {},
                r.queue = [],
                r.backend && r.backend.init && r.backend.init(i, a.backend, a),
                r
            }
            return (0,
            c.A)(t, e),
            (0,
            a.A)(t, [{
                key: "queueLoad",
                value: function(e, t, n, i) {
                    var r = this
                      , o = []
                      , a = []
                      , s = []
                      , l = [];
                    return e.forEach((function(e) {
                        var i = !0;
                        t.forEach((function(t) {
                            var s = "".concat(e, "|").concat(t);
                            !n.reload && r.store.hasResourceBundle(e, t) ? r.state[s] = 2 : r.state[s] < 0 || (1 === r.state[s] ? a.indexOf(s) < 0 && a.push(s) : (r.state[s] = 1,
                            i = !1,
                            a.indexOf(s) < 0 && a.push(s),
                            o.indexOf(s) < 0 && o.push(s),
                            l.indexOf(t) < 0 && l.push(t)))
                        }
                        )),
                        i || s.push(e)
                    }
                    )),
                    (o.length || a.length) && this.queue.push({
                        pending: a,
                        loaded: {},
                        errors: [],
                        callback: i
                    }),
                    {
                        toLoad: o,
                        pending: a,
                        toLoadLanguages: s,
                        toLoadNamespaces: l
                    }
                }
            }, {
                key: "loaded",
                value: function(e, t, n) {
                    var i = e.split("|")
                      , r = i[0]
                      , o = i[1];
                    t && this.emit("failedLoading", r, o, t),
                    n && this.store.addResourceBundle(r, o, n),
                    this.state[e] = t ? -1 : 2;
                    var a = {};
                    this.queue.forEach((function(n) {
                        var i, s, l, u, c;
                        i = n.loaded,
                        s = o,
                        (u = (l = m(i, [r], Object)).obj)[c = l.k] = u[c] || [],
                        u[c].push(s),
                        function(e, t) {
                            for (var n = e.indexOf(t); -1 !== n; )
                                e.splice(n, 1),
                                n = e.indexOf(t)
                        }(n.pending, e),
                        t && n.errors.push(t),
                        0 !== n.pending.length || n.done || (Object.keys(n.loaded).forEach((function(e) {
                            a[e] || (a[e] = []),
                            n.loaded[e].length && n.loaded[e].forEach((function(t) {
                                a[e].indexOf(t) < 0 && a[e].push(t)
                            }
                            ))
                        }
                        )),
                        n.done = !0,
                        n.errors.length ? n.callback(n.errors) : n.callback())
                    }
                    )),
                    this.emit("loaded", a),
                    this.queue = this.queue.filter((function(e) {
                        return !e.done
                    }
                    ))
                }
            }, {
                key: "read",
                value: function(e, t, n) {
                    var i = this
                      , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0
                      , o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 350
                      , a = arguments.length > 5 ? arguments[5] : void 0;
                    return e.length ? this.backend[n](e, t, (function(s, l) {
                        s && l && r < 5 ? setTimeout((function() {
                            i.read.call(i, e, t, n, r + 1, 2 * o, a)
                        }
                        ), o) : a(s, l)
                    }
                    )) : a(null, {})
                }
            }, {
                key: "prepareLoading",
                value: function(e, t) {
                    var n = this
                      , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
                      , r = arguments.length > 3 ? arguments[3] : void 0;
                    if (!this.backend)
                        return this.logger.warn("No backend was added via i18next.use. Will not load resources."),
                        r && r();
                    "string" == typeof e && (e = this.languageUtils.toResolveHierarchy(e)),
                    "string" == typeof t && (t = [t]);
                    var o = this.queueLoad(e, t, i, r);
                    if (!o.toLoad.length)
                        return o.pending.length || r(),
                        null;
                    o.toLoad.forEach((function(e) {
                        n.loadOne(e)
                    }
                    ))
                }
            }, {
                key: "load",
                value: function(e, t, n) {
                    this.prepareLoading(e, t, {}, n)
                }
            }, {
                key: "reload",
                value: function(e, t, n) {
                    this.prepareLoading(e, t, {
                        reload: !0
                    }, n)
                }
            }, {
                key: "loadOne",
                value: function(e) {
                    var t = this
                      , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
                      , i = e.split("|")
                      , r = i[0]
                      , o = i[1];
                    this.read(r, o, "read", void 0, void 0, (function(i, a) {
                        i && t.logger.warn("".concat(n, "loading namespace ").concat(o, " for language ").concat(r, " failed"), i),
                        !i && a && t.logger.log("".concat(n, "loaded namespace ").concat(o, " for language ").concat(r), a),
                        t.loaded(e, i, a)
                    }
                    ))
                }
            }, {
                key: "saveMissing",
                value: function(e, t, n, i, o) {
                    var a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};
                    this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(t) ? this.logger.warn('did not save key "'.concat(n, '" as the namespace "').concat(t, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!") : null != n && "" !== n && (this.backend && this.backend.create && this.backend.create(e, t, n, i, null, (0,
                    r.A)({}, a, {
                        isUpdate: o
                    })),
                    e && e[0] && this.store.addResource(e[0], t, n, i))
                }
            }]),
            t
        }(f);
        function G(e) {
            return "string" == typeof e.ns && (e.ns = [e.ns]),
            "string" == typeof e.fallbackLng && (e.fallbackLng = [e.fallbackLng]),
            "string" == typeof e.fallbackNS && (e.fallbackNS = [e.fallbackNS]),
            e.whitelist && (e.whitelist && e.whitelist.indexOf("cimode") < 0 && (e.whitelist = e.whitelist.concat(["cimode"])),
            e.supportedLngs = e.whitelist),
            e.nonExplicitWhitelist && (e.nonExplicitSupportedLngs = e.nonExplicitWhitelist),
            e.supportedLngs && e.supportedLngs.indexOf("cimode") < 0 && (e.supportedLngs = e.supportedLngs.concat(["cimode"])),
            e
        }
        function N() {}
        const B = new (function(e) {
            function t() {
                var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
                if ((0,
                o.A)(this, t),
                e = (0,
                s.A)(this, (0,
                l.A)(t).call(this)),
                k && f.call((0,
                u.A)(e)),
                e.options = G(n),
                e.services = {},
                e.logger = d,
                e.modules = {
                    external: []
                },
                i && !e.isInitialized && !n.isClone) {
                    if (!e.options.initImmediate)
                        return e.init(n, i),
                        (0,
                        s.A)(e, (0,
                        u.A)(e));
                    setTimeout((function() {
                        e.init(n, i)
                    }
                    ), 0)
                }
                return e
            }
            return (0,
            c.A)(t, e),
            (0,
            a.A)(t, [{
                key: "init",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                      , n = arguments.length > 1 ? arguments[1] : void 0;
                    function o(e) {
                        return e ? "function" == typeof e ? new e : e : null
                    }
                    if ("function" == typeof t && (n = t,
                    t = {}),
                    t.whitelist && !t.supportedLngs && this.logger.deprecate("whitelist", 'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.'),
                    t.nonExplicitWhitelist && !t.nonExplicitSupportedLngs && this.logger.deprecate("whitelist", 'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.'),
                    this.options = (0,
                    r.A)({}, {
                        debug: !1,
                        initImmediate: !0,
                        ns: ["translation"],
                        defaultNS: ["translation"],
                        fallbackLng: ["dev"],
                        fallbackNS: !1,
                        whitelist: !1,
                        nonExplicitWhitelist: !1,
                        supportedLngs: !1,
                        nonExplicitSupportedLngs: !1,
                        load: "all",
                        preload: !1,
                        simplifyPluralSuffix: !0,
                        keySeparator: ".",
                        nsSeparator: ":",
                        pluralSeparator: "_",
                        contextSeparator: "_",
                        partialBundledLanguages: !1,
                        saveMissing: !1,
                        updateMissing: !1,
                        saveMissingTo: "fallback",
                        saveMissingPlurals: !0,
                        missingKeyHandler: !1,
                        missingInterpolationHandler: !1,
                        postProcess: !1,
                        postProcessPassResolved: !1,
                        returnNull: !0,
                        returnEmptyString: !0,
                        returnObjects: !1,
                        joinArrays: !1,
                        returnedObjectHandler: !1,
                        parseMissingKeyHandler: !1,
                        appendNamespaceToMissingKey: !1,
                        appendNamespaceToCIMode: !1,
                        overloadTranslationOptionHandler: function(e) {
                            var t = {};
                            if ("object" === (0,
                            i.A)(e[1]) && (t = e[1]),
                            "string" == typeof e[1] && (t.defaultValue = e[1]),
                            "string" == typeof e[2] && (t.tDescription = e[2]),
                            "object" === (0,
                            i.A)(e[2]) || "object" === (0,
                            i.A)(e[3])) {
                                var n = e[3] || e[2];
                                Object.keys(n).forEach((function(e) {
                                    t[e] = n[e]
                                }
                                ))
                            }
                            return t
                        },
                        interpolation: {
                            escapeValue: !0,
                            format: function(e, t, n, i) {
                                return e
                            },
                            prefix: "{{",
                            suffix: "}}",
                            formatSeparator: ",",
                            unescapePrefix: "-",
                            nestingPrefix: "$t(",
                            nestingSuffix: ")",
                            nestingOptionsSeparator: ",",
                            maxReplaces: 1e3,
                            skipOnVariables: !1
                        }
                    }, this.options, G(t)),
                    this.format = this.options.interpolation.format,
                    n || (n = N),
                    !this.options.isClone) {
                        this.modules.logger ? d.init(o(this.modules.logger), this.options) : d.init(null, this.options);
                        var a = new E(this.options);
                        this.store = new C(this.options.resources,this.options);
                        var s = this.services;
                        s.logger = d,
                        s.resourceStore = this.store,
                        s.languageUtils = a,
                        s.pluralResolver = new I(a,{
                            prepend: this.options.pluralSeparator,
                            compatibilityJSON: this.options.compatibilityJSON,
                            simplifyPluralSuffix: this.options.simplifyPluralSuffix
                        }),
                        s.interpolator = new O(this.options),
                        s.utils = {
                            hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
                        },
                        s.backendConnector = new A(o(this.modules.backend),s.resourceStore,s,this.options),
                        s.backendConnector.on("*", (function(t) {
                            for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                                i[r - 1] = arguments[r];
                            e.emit.apply(e, [t].concat(i))
                        }
                        )),
                        this.modules.languageDetector && (s.languageDetector = o(this.modules.languageDetector),
                        s.languageDetector.init(s, this.options.detection, this.options)),
                        this.modules.i18nFormat && (s.i18nFormat = o(this.modules.i18nFormat),
                        s.i18nFormat.init && s.i18nFormat.init(this)),
                        this.translator = new R(this.services,this.options),
                        this.translator.on("*", (function(t) {
                            for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                                i[r - 1] = arguments[r];
                            e.emit.apply(e, [t].concat(i))
                        }
                        )),
                        this.modules.external.forEach((function(t) {
                            t.init && t.init(e)
                        }
                        ))
                    }
                    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
                        var l = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
                        l.length > 0 && "dev" !== l[0] && (this.options.lng = l[0])
                    }
                    this.services.languageDetector || this.options.lng || this.logger.warn("init: no languageDetector is used and no lng is defined"),
                    ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach((function(t) {
                        e[t] = function() {
                            var n;
                            return (n = e.store)[t].apply(n, arguments)
                        }
                    }
                    )),
                    ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach((function(t) {
                        e[t] = function() {
                            var n;
                            return (n = e.store)[t].apply(n, arguments),
                            e
                        }
                    }
                    ));
                    var u = p()
                      , c = function() {
                        var t = function(t, i) {
                            e.isInitialized && e.logger.warn("init: i18next is already initialized. You should call init just once!"),
                            e.isInitialized = !0,
                            e.options.isClone || e.logger.log("initialized", e.options),
                            e.emit("initialized", e.options),
                            u.resolve(i),
                            n(t, i)
                        };
                        if (e.languages && "v1" !== e.options.compatibilityAPI && !e.isInitialized)
                            return t(null, e.t.bind(e));
                        e.changeLanguage(e.options.lng, t)
                    };
                    return this.options.resources || !this.options.initImmediate ? c() : setTimeout(c, 0),
                    u
                }
            }, {
                key: "loadResources",
                value: function(e) {
                    var t = this
                      , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : N
                      , i = "string" == typeof e ? e : this.language;
                    if ("function" == typeof e && (n = e),
                    !this.options.resources || this.options.partialBundledLanguages) {
                        if (i && "cimode" === i.toLowerCase())
                            return n();
                        var r = []
                          , o = function(e) {
                            e && t.services.languageUtils.toResolveHierarchy(e).forEach((function(e) {
                                r.indexOf(e) < 0 && r.push(e)
                            }
                            ))
                        };
                        i ? o(i) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((function(e) {
                            return o(e)
                        }
                        )),
                        this.options.preload && this.options.preload.forEach((function(e) {
                            return o(e)
                        }
                        )),
                        this.services.backendConnector.load(r, this.options.ns, n)
                    } else
                        n(null)
                }
            }, {
                key: "reloadResources",
                value: function(e, t, n) {
                    var i = p();
                    return e || (e = this.languages),
                    t || (t = this.options.ns),
                    n || (n = N),
                    this.services.backendConnector.reload(e, t, (function(e) {
                        i.resolve(),
                        n(e)
                    }
                    )),
                    i
                }
            }, {
                key: "use",
                value: function(e) {
                    if (!e)
                        throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
                    if (!e.type)
                        throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
                    return "backend" === e.type && (this.modules.backend = e),
                    ("logger" === e.type || e.log && e.warn && e.error) && (this.modules.logger = e),
                    "languageDetector" === e.type && (this.modules.languageDetector = e),
                    "i18nFormat" === e.type && (this.modules.i18nFormat = e),
                    "postProcessor" === e.type && M.addPostProcessor(e),
                    "3rdParty" === e.type && this.modules.external.push(e),
                    this
                }
            }, {
                key: "changeLanguage",
                value: function(e, t) {
                    var n = this;
                    this.isLanguageChangingTo = e;
                    var i = p();
                    this.emit("languageChanging", e);
                    var r = function(e) {
                        var r = "string" == typeof e ? e : n.services.languageUtils.getBestMatchFromCodes(e);
                        r && (n.language || (n.language = r,
                        n.languages = n.services.languageUtils.toResolveHierarchy(r)),
                        n.translator.language || n.translator.changeLanguage(r),
                        n.services.languageDetector && n.services.languageDetector.cacheUserLanguage(r)),
                        n.loadResources(r, (function(e) {
                            !function(e, r) {
                                r ? (n.language = r,
                                n.languages = n.services.languageUtils.toResolveHierarchy(r),
                                n.translator.changeLanguage(r),
                                n.isLanguageChangingTo = void 0,
                                n.emit("languageChanged", r),
                                n.logger.log("languageChanged", r)) : n.isLanguageChangingTo = void 0,
                                i.resolve((function() {
                                    return n.t.apply(n, arguments)
                                }
                                )),
                                t && t(e, (function() {
                                    return n.t.apply(n, arguments)
                                }
                                ))
                            }(e, r)
                        }
                        ))
                    };
                    return e || !this.services.languageDetector || this.services.languageDetector.async ? !e && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect(r) : r(e) : r(this.services.languageDetector.detect()),
                    i
                }
            }, {
                key: "getFixedT",
                value: function(e, t) {
                    var n = this
                      , o = function e(t, o) {
                        var a;
                        if ("object" !== (0,
                        i.A)(o)) {
                            for (var s = arguments.length, l = new Array(s > 2 ? s - 2 : 0), u = 2; u < s; u++)
                                l[u - 2] = arguments[u];
                            a = n.options.overloadTranslationOptionHandler([t, o].concat(l))
                        } else
                            a = (0,
                            r.A)({}, o);
                        return a.lng = a.lng || e.lng,
                        a.lngs = a.lngs || e.lngs,
                        a.ns = a.ns || e.ns,
                        n.t(t, a)
                    };
                    return "string" == typeof e ? o.lng = e : o.lngs = e,
                    o.ns = t,
                    o
                }
            }, {
                key: "t",
                value: function() {
                    var e;
                    return this.translator && (e = this.translator).translate.apply(e, arguments)
                }
            }, {
                key: "exists",
                value: function() {
                    var e;
                    return this.translator && (e = this.translator).exists.apply(e, arguments)
                }
            }, {
                key: "setDefaultNamespace",
                value: function(e) {
                    this.options.defaultNS = e
                }
            }, {
                key: "hasLoadedNamespace",
                value: function(e) {
                    var t = this
                      , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    if (!this.isInitialized)
                        return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages),
                        !1;
                    if (!this.languages || !this.languages.length)
                        return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages),
                        !1;
                    var i = this.languages[0]
                      , r = !!this.options && this.options.fallbackLng
                      , o = this.languages[this.languages.length - 1];
                    if ("cimode" === i.toLowerCase())
                        return !0;
                    var a = function(e, n) {
                        var i = t.services.backendConnector.state["".concat(e, "|").concat(n)];
                        return -1 === i || 2 === i
                    };
                    if (n.precheck) {
                        var s = n.precheck(this, a);
                        if (void 0 !== s)
                            return s
                    }
                    return !!this.hasResourceBundle(i, e) || !this.services.backendConnector.backend || !(!a(i, e) || r && !a(o, e))
                }
            }, {
                key: "loadNamespaces",
                value: function(e, t) {
                    var n = this
                      , i = p();
                    return this.options.ns ? ("string" == typeof e && (e = [e]),
                    e.forEach((function(e) {
                        n.options.ns.indexOf(e) < 0 && n.options.ns.push(e)
                    }
                    )),
                    this.loadResources((function(e) {
                        i.resolve(),
                        t && t(e)
                    }
                    )),
                    i) : (t && t(),
                    Promise.resolve())
                }
            }, {
                key: "loadLanguages",
                value: function(e, t) {
                    var n = p();
                    "string" == typeof e && (e = [e]);
                    var i = this.options.preload || []
                      , r = e.filter((function(e) {
                        return i.indexOf(e) < 0
                    }
                    ));
                    return r.length ? (this.options.preload = i.concat(r),
                    this.loadResources((function(e) {
                        n.resolve(),
                        t && t(e)
                    }
                    )),
                    n) : (t && t(),
                    Promise.resolve())
                }
            }, {
                key: "dir",
                value: function(e) {
                    return e || (e = this.languages && this.languages.length > 0 ? this.languages[0] : this.language),
                    e ? ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e)) >= 0 ? "rtl" : "ltr" : "rtl"
                }
            }, {
                key: "createInstance",
                value: function() {
                    return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},arguments.length > 1 ? arguments[1] : void 0)
                }
            }, {
                key: "cloneInstance",
                value: function() {
                    var e = this
                      , n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                      , i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : N
                      , o = (0,
                    r.A)({}, this.options, n, {
                        isClone: !0
                    })
                      , a = new t(o);
                    return ["store", "services", "language"].forEach((function(t) {
                        a[t] = e[t]
                    }
                    )),
                    a.services = (0,
                    r.A)({}, this.services),
                    a.services.utils = {
                        hasLoadedNamespace: a.hasLoadedNamespace.bind(a)
                    },
                    a.translator = new R(a.services,a.options),
                    a.translator.on("*", (function(e) {
                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
                            n[i - 1] = arguments[i];
                        a.emit.apply(a, [e].concat(n))
                    }
                    )),
                    a.init(o, i),
                    a.translator.options = a.options,
                    a.translator.backendConnector.services.utils = {
                        hasLoadedNamespace: a.hasLoadedNamespace.bind(a)
                    },
                    a
                }
            }]),
            t
        }(f));
        var $, F = n(58632), H = n(60657), U = n(9829);
        !function(e) {
            e.MISSING_VALUE = "MISSING_VALUE",
            e.INVALID_VALUE = "INVALID_VALUE",
            e.MISSING_INTL_API = "MISSING_INTL_API"
        }($ || ($ = {}));
        var V, j = function(e) {
            function t(t, n, i) {
                var r = e.call(this, t) || this;
                return r.code = n,
                r.originalMessage = i,
                r
            }
            return (0,
            F.C6)(t, e),
            t.prototype.toString = function() {
                return "[formatjs Error: " + this.code + "] " + this.message
            }
            ,
            t
        }(Error), z = function(e) {
            function t(t, n, i, r) {
                return e.call(this, 'Invalid values for "' + t + '": "' + n + '". Options are "' + Object.keys(i).join('", "') + '"', $.INVALID_VALUE, r) || this
            }
            return (0,
            F.C6)(t, e),
            t
        }(j), X = function(e) {
            function t(t, n, i) {
                return e.call(this, 'Value for "' + t + '" must be of type ' + n, $.INVALID_VALUE, i) || this
            }
            return (0,
            F.C6)(t, e),
            t
        }(j), K = function(e) {
            function t(t, n) {
                return e.call(this, 'The intl string context variable "' + t + '" was not provided to the string "' + n + '"', $.MISSING_VALUE, n) || this
            }
            return (0,
            F.C6)(t, e),
            t
        }(j);
        function Q(e) {
            return "function" == typeof e
        }
        function W(e, t, n, i, r, o, a) {
            if (1 === e.length && (0,
            H.eW)(e[0]))
                return [{
                    type: V.literal,
                    value: e[0].value
                }];
            for (var s = [], l = 0, u = e; l < u.length; l++) {
                var c = u[l];
                if ((0,
                H.eW)(c))
                    s.push({
                        type: V.literal,
                        value: c.value
                    });
                else if ((0,
                H.jA)(c))
                    "number" == typeof o && s.push({
                        type: V.literal,
                        value: n.getNumberFormat(t).format(o)
                    });
                else {
                    var h = c.value;
                    if (!r || !(h in r))
                        throw new K(h,a);
                    var d = r[h];
                    if ((0,
                    H.Im)(c))
                        d && "string" != typeof d && "number" != typeof d || (d = "string" == typeof d || "number" == typeof d ? String(d) : ""),
                        s.push({
                            type: "string" == typeof d ? V.literal : V.object,
                            value: d
                        });
                    else if ((0,
                    H.tv)(c)) {
                        var f = "string" == typeof c.style ? i.date[c.style] : (0,
                        H.Tu)(c.style) ? c.style.parsedOptions : void 0;
                        s.push({
                            type: V.literal,
                            value: n.getDateTimeFormat(t, f).format(d)
                        })
                    } else if ((0,
                    H.Qh)(c))
                        f = "string" == typeof c.style ? i.time[c.style] : (0,
                        H.Tu)(c.style) ? c.style.parsedOptions : void 0,
                        s.push({
                            type: V.literal,
                            value: n.getDateTimeFormat(t, f).format(d)
                        });
                    else if ((0,
                    H.oF)(c))
                        (f = "string" == typeof c.style ? i.number[c.style] : (0,
                        H.N1)(c.style) ? c.style.parsedOptions : void 0) && f.scale && (d *= f.scale || 1),
                        s.push({
                            type: V.literal,
                            value: n.getNumberFormat(t, f).format(d)
                        });
                    else {
                        if ((0,
                        H.xm)(c)) {
                            var p = c.children
                              , g = c.value
                              , m = r[g];
                            if (!Q(m))
                                throw new X(g,"function",a);
                            var v = m(W(p, t, n, i, r, o).map((function(e) {
                                return e.value
                            }
                            )));
                            Array.isArray(v) || (v = [v]),
                            s.push.apply(s, v.map((function(e) {
                                return {
                                    type: "string" == typeof e ? V.literal : V.object,
                                    value: e
                                }
                            }
                            )))
                        }
                        if ((0,
                        H.Jp)(c)) {
                            if (!(y = c.options[d] || c.options.other))
                                throw new z(c.value,d,Object.keys(c.options),a);
                            s.push.apply(s, W(y.value, t, n, i, r))
                        } else if ((0,
                        H.N6)(c)) {
                            var y;
                            if (!(y = c.options["=" + d])) {
                                if (!Intl.PluralRules)
                                    throw new j('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',$.MISSING_INTL_API,a);
                                var _ = n.getPluralRules(t, {
                                    type: c.pluralType
                                }).select(d - (c.offset || 0));
                                y = c.options[_] || c.options.other
                            }
                            if (!y)
                                throw new z(c.value,d,Object.keys(c.options),a);
                            s.push.apply(s, W(y.value, t, n, i, r, d - (c.offset || 0)))
                        }
                    }
                }
            }
            return (T = s).length < 2 ? T : T.reduce((function(e, t) {
                var n = e[e.length - 1];
                return n && n.type === V.literal && t.type === V.literal ? n.value += t.value : e.push(t),
                e
            }
            ), []);
            var T
        }
        function q(e) {
            return {
                create: function() {
                    return {
                        has: function(t) {
                            return t in e
                        },
                        get: function(t) {
                            return e[t]
                        },
                        set: function(t, n) {
                            e[t] = n
                        }
                    }
                }
            }
        }
        !function(e) {
            e[e.literal = 0] = "literal",
            e[e.object = 1] = "object"
        }(V || (V = {}));
        const Z = function() {
            function e(t, n, i, r) {
                var o, a = this;
                if (void 0 === n && (n = e.defaultLocale),
                this.formatterCache = {
                    number: {},
                    dateTime: {},
                    pluralRules: {}
                },
                this.format = function(e) {
                    var t = a.formatToParts(e);
                    if (1 === t.length)
                        return t[0].value;
                    var n = t.reduce((function(e, t) {
                        return e.length && t.type === V.literal && "string" == typeof e[e.length - 1] ? e[e.length - 1] += t.value : e.push(t.value),
                        e
                    }
                    ), []);
                    return n.length <= 1 ? n[0] || "" : n
                }
                ,
                this.formatToParts = function(e) {
                    return W(a.ast, a.locales, a.formatters, a.formats, e, void 0, a.message)
                }
                ,
                this.resolvedOptions = function() {
                    return {
                        locale: Intl.NumberFormat.supportedLocalesOf(a.locales)[0]
                    }
                }
                ,
                this.getAst = function() {
                    return a.ast
                }
                ,
                "string" == typeof t) {
                    if (this.message = t,
                    !e.__parse)
                        throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
                    this.ast = e.__parse(t, {
                        ignoreTag: null == r ? void 0 : r.ignoreTag
                    })
                } else
                    this.ast = t;
                if (!Array.isArray(this.ast))
                    throw new TypeError("A message must be provided as a String or AST.");
                this.formats = function(e, t) {
                    return t ? Object.keys(e).reduce((function(n, i) {
                        var r, o;
                        return n[i] = (r = e[i],
                        (o = t[i]) ? (0,
                        F.Cl)((0,
                        F.Cl)((0,
                        F.Cl)({}, r || {}), o || {}), Object.keys(r).reduce((function(e, t) {
                            return e[t] = (0,
                            F.Cl)((0,
                            F.Cl)({}, r[t]), o[t] || {}),
                            e
                        }
                        ), {})) : r),
                        n
                    }
                    ), (0,
                    F.Cl)({}, e)) : e
                }(e.formats, i),
                this.locales = n,
                this.formatters = r && r.formatters || (void 0 === (o = this.formatterCache) && (o = {
                    number: {},
                    dateTime: {},
                    pluralRules: {}
                }),
                {
                    getNumberFormat: (0,
                    U.A)((function() {
                        for (var e, t = [], n = 0; n < arguments.length; n++)
                            t[n] = arguments[n];
                        return new ((e = Intl.NumberFormat).bind.apply(e, (0,
                        F.fX)([void 0], t)))
                    }
                    ), {
                        cache: q(o.number),
                        strategy: U.W.variadic
                    }),
                    getDateTimeFormat: (0,
                    U.A)((function() {
                        for (var e, t = [], n = 0; n < arguments.length; n++)
                            t[n] = arguments[n];
                        return new ((e = Intl.DateTimeFormat).bind.apply(e, (0,
                        F.fX)([void 0], t)))
                    }
                    ), {
                        cache: q(o.dateTime),
                        strategy: U.W.variadic
                    }),
                    getPluralRules: (0,
                    U.A)((function() {
                        for (var e, t = [], n = 0; n < arguments.length; n++)
                            t[n] = arguments[n];
                        return new ((e = Intl.PluralRules).bind.apply(e, (0,
                        F.fX)([void 0], t)))
                    }
                    ), {
                        cache: q(o.pluralRules),
                        strategy: U.W.variadic
                    })
                })
            }
            return Object.defineProperty(e, "defaultLocale", {
                get: function() {
                    return e.memoizedDefaultLocale || (e.memoizedDefaultLocale = (new Intl.NumberFormat).resolvedOptions().locale),
                    e.memoizedDefaultLocale
                },
                enumerable: !1,
                configurable: !0
            }),
            e.memoizedDefaultLocale = null,
            e.__parse = H.qg,
            e.formats = {
                number: {
                    integer: {
                        maximumFractionDigits: 0
                    },
                    currency: {
                        style: "currency"
                    },
                    percent: {
                        style: "percent"
                    }
                },
                date: {
                    short: {
                        month: "numeric",
                        day: "numeric",
                        year: "2-digit"
                    },
                    medium: {
                        month: "short",
                        day: "numeric",
                        year: "numeric"
                    },
                    long: {
                        month: "long",
                        day: "numeric",
                        year: "numeric"
                    },
                    full: {
                        weekday: "long",
                        month: "long",
                        day: "numeric",
                        year: "numeric"
                    }
                },
                time: {
                    short: {
                        hour: "numeric",
                        minute: "numeric"
                    },
                    medium: {
                        hour: "numeric",
                        minute: "numeric",
                        second: "numeric"
                    },
                    long: {
                        hour: "numeric",
                        minute: "numeric",
                        second: "numeric",
                        timeZoneName: "short"
                    },
                    full: {
                        hour: "numeric",
                        minute: "numeric",
                        second: "numeric",
                        timeZoneName: "short"
                    }
                }
            },
            e
        }();
        var Y, J = function() {
            return J = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }
            ,
            J.apply(this, arguments)
        };
        function ee(e, t, n) {
            function i(e) {
                return e && e.indexOf("###") > -1 ? e.replace(/###/g, ".") : e
            }
            function r() {
                return !e || "string" == typeof e
            }
            void 0 === n && (n = null);
            for (var o = "string" != typeof t ? [].concat(t) : t.split("."); o.length > 1; ) {
                if (r())
                    return {};
                var a = i(o.shift());
                !e[a] && n && (e[a] = new n),
                e = e[a]
            }
            return r() ? {} : {
                obj: e,
                k: i(o.shift())
            }
        }
        !function(e) {
            e.keepRaw = "keepRaw",
            e.replaceAnyway = "replaceAnyway"
        }(Y || (Y = {})),
        Y.replaceAnyway;
        var te = {
            memoize: !1,
            memoizeFallback: !1,
            bindI18n: !1,
            bindI18nStore: !1,
            onParseError: Y.replaceAnyway
        }
          , ne = function() {
            function e() {
                this.mem = {}
            }
            return e.staticInit = function(t) {
                e._i18nextInstance = t
            }
            ,
            e.prototype.init = function(t, n) {
                var i = this;
                void 0 === t && (t = e._i18nextInstance);
                var r = {};
                if ((null == t ? void 0 : t.options) && (t.options.i18nFormat && (r = t.options.i18nFormat),
                r.onParseError = t.options.onParseError,
                r.missingInterpolationHandler = t.options.missingInterpolationHandler,
                r.icuConfig = t.options.icuConfig,
                r.ignoreWarning = !!t.options.ignoreWarning),
                this.options = Object.assign(te, n, r),
                this.formats = this.options.formats,
                t) {
                    var o = this.options
                      , a = o.bindI18n
                      , s = o.bindI18nStore
                      , l = o.memoize;
                    t.IntlMessageFormat = Z,
                    this.IntlMessageFormat = Z,
                    t.ICU = this,
                    l && (a && t.on(a, (function() {
                        return i.clearCache()
                    }
                    )),
                    s && t.store.on(s, (function() {
                        return i.clearCache()
                    }
                    )))
                }
                this.options.localeData && ("[object Array]" === Object.prototype.toString.apply(this.options.localeData) ? this.options.localeData.forEach((function(e) {
                    return i.addLocaleData(e)
                }
                )) : this.addLocaleData(this.options.localeData))
            }
            ,
            e.prototype.addLocaleData = function(e) {
                ("[object Array]" === Object.prototype.toString.apply(e) ? e : [e]).forEach((function(e) {
                    e && e.locale && Z.__addLocaleData(e)
                }
                ))
            }
            ,
            e.prototype.addUserDefinedFormats = function(e) {
                this.formats = this.formats ? J(J({}, this.formats), e) : e
            }
            ,
            e.prototype.checkMissingInterpolation = function(e, t, n, i, r) {
                if (!1 === (this.options.icuConfig || {}).strict)
                    return n;
                for (var o = {}, a = 0, s = e; a < s.length; a++) {
                    var l = s[a];
                    if (1 === l.type) {
                        var u = l.value;
                        if (null === n[u] || void 0 === n[u]) {
                            if ("function" == typeof this.options.missingInterpolationHandler) {
                                var c = this.options.missingInterpolationHandler({
                                    key: r,
                                    text: t,
                                    locale: i,
                                    interpolation: {
                                        key: u,
                                        val: n[u]
                                    }
                                });
                                if ("string" == typeof c) {
                                    o[u] = c;
                                    continue
                                }
                            }
                            switch (this.options.onParseError) {
                            case Y.keepRaw:
                                throw new Error;
                            case Y.replaceAnyway:
                                o[u] = "{" + u + "}";
                                continue
                            }
                            if ("function" == typeof this.options.onParseError) {
                                console.warn("[DEPRECATED] onParseError is deprecated, please use 'missingInterpolationHandler' instead of");
                                var h = this.options.onParseError(t, u, i, this.IntlMessageFormat);
                                if (!0 === h)
                                    throw new Error;
                                o[u] = "string" == typeof h ? h : "{" + u + "}"
                            } else
                                this.options.ignoreWarning || console.warn('[Starling ICU Warning] The interpolation parameter "{' + u + '}" is missing in the translation text "' + t + '" for the key "' + r + "\"\nSuggestions: check whether the value is null or undefined. Try using empty string '' as fallback! e.g I18n.t('key', { apple: count || '' })"),
                                o[u] = "{" + u + "}"
                        }
                    }
                }
                return Object.assign({}, n, o)
            }
            ,
            e.prototype.parse = function(e, t, n, i, r, o) {
                var a, s, l, u, c = o && o.resolved && o.resolved.res, h = this.options.memoize && n + "." + i + "." + r.replace(/\./g, "###");
                !c && t.thirdParamFallback && t.fallbackText && (e = t.fallbackText),
                this.options.memoize && (a = function(e, t) {
                    var n = ee(e, t)
                      , i = n.obj
                      , r = n.k;
                    if (i)
                        return i[r]
                }(this.mem, h));
                try {
                    return a || (a = new this.IntlMessageFormat(e,n,this.formats,(this.options.icuConfig || {}).formatOptions),
                    this.options.memoize && (this.options.memoizeFallback || !o || c) && (s = this.mem,
                    l = a,
                    (u = ee(s, h, Object)).obj[u.k] = l)),
                    a.format(this.checkMissingInterpolation(a.getAst(), e, t || {}, n, r))
                } catch (t) {
                    return e
                }
            }
            ,
            e.prototype.addLookupKeys = function(e, t, n, i, r) {
                return e
            }
            ,
            e.prototype.clearCache = function() {
                this.mem = {}
            }
            ,
            e.type = "i18nFormat",
            e._i18nextInstance = null,
            e
        }()
          , ie = (ne.name,
        function() {
            return ie = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }
            ,
            ie.apply(this, arguments)
        }
        )
          , re = /^\s*\[\[__starling_(\d+)_(.*)__\]\]\s*$/;
        "undefined" != typeof window && (window.__STARLING_INCONTEXT_GLOBAL__HOOK__ = ie({}, window.__STARLING_INCONTEXT_GLOBAL__HOOK__ || {
            payload: {}
        }));
        var oe = {
            name: "inContext",
            type: "postProcessor",
            process: function(e, t, n, i) {
                if (window && document.getElementById("INCONTEXT-KEY-MATCH") && !n.__STARLING_INCONTEXT_FLAG__) {
                    window.__STARLING_INCONTEXT_GLOBAL_I18N__ || (window.__STARLING_INCONTEXT_GLOBAL_I18N__ = i),
                    delete n.keySeparator,
                    delete n.lngs;
                    var r, o = 0;
                    if (t = t.toString(),
                    re.test(t) && ((r = t.match(re))[0],
                    o = r[1],
                    t = r[2]),
                    re.test(e))
                        (r = e.match(re))[0],
                        r[1],
                        e = r[2];
                    if (window.__STARLING_INCONTEXT_GLOBAL__HOOK__.payload[t]) {
                        var a = window.__STARLING_INCONTEXT_GLOBAL__HOOK__.payload[t].findIndex((function(e) {
                            return JSON.stringify(e.options) === JSON.stringify(n)
                        }
                        ));
                        a > -1 ? (window.__STARLING_INCONTEXT_GLOBAL__HOOK__.payload[t][a].default = e,
                        o = a) : o = window.__STARLING_INCONTEXT_GLOBAL__HOOK__.payload[t].push({
                            options: n,
                            default: e
                        }) - 1
                    } else
                        window.__STARLING_INCONTEXT_GLOBAL__HOOK__.payload[t] = [{
                            options: n,
                            default: e
                        }],
                        o = 0;
                    return "[[__starling_" + o + "_" + t + "__]]"
                }
                return e
            }
        };
        function ae(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function se(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, i.key, i)
            }
        }
        function le(e, t, n) {
            return t && se(e.prototype, t),
            n && se(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function ue(e) {
            return function(e) {
                if (Array.isArray(e))
                    return he(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || ce(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function ce(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return he(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? he(e, t) : void 0
            }
        }
        function he(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        for (var de = ["AFN", "EUR", "ALL", "DZD", "USD", "AOA", "XCD", "ARS", "AMD", "AWG", "AUD", "AZN", "BSD", "BHD", "BDT", "BBD", "BYN", "BZD", "XOF", "BMD", "INR", "BTN", "BOB", "BOV", "BAM", "BWP", "NOK", "BRL", "BND", "BGN", "BIF", "CVE", "KHR", "XAF", "CAD", "KYD", "CLP", "CLF", "CNY", "COP", "COU", "KMF", "CDF", "NZD", "CRC", "HRK", "CUP", "CUC", "ANG", "CZK", "DKK", "DJF", "DOP", "EGP", "SVC", "ERN", "ETB", "FKP", "FJD", "XPF", "GMD", "GEL", "GHS", "GIP", "GTQ", "GBP", "GNF", "GYD", "HTG", "HNL", "HKD", "HUF", "ISK", "IDR", "XDR", "IRR", "IQD", "ILS", "JMD", "JPY", "JOD", "KZT", "KES", "KPW", "KRW", "KWD", "KGS", "LAK", "LBP", "LSL", "ZAR", "LRD", "LYD", "CHF", "MOP", "MKD", "MGA", "MWK", "MYR", "MVR", "MRO", "MUR", "XUA", "MXN", "MXV", "MDL", "MNT", "MAD", "MZN", "MMK", "NAD", "NPR", "NIO", "NGN", "OMR", "PKR", "PAB", "PGK", "PYG", "PEN", "PHP", "PLN", "QAR", "RON", "RUB", "RWF", "SHP", "WST", "STD", "SAR", "RSD", "SCR", "SLL", "SGD", "XSU", "SBD", "SOS", "SSP", "LKR", "SDG", "SRD", "SZL", "SEK", "CHE", "CHW", "SYP", "TWD", "TJS", "TZS", "THB", "TOP", "TTD", "TND", "TRY", "TMT", "UGX", "UAH", "AED", "USN", "UYU", "UYI", "UZS", "VUV", "VEF", "VND", "YER", "ZMW", "ZWL", "XBA", "XBB", "XBC", "XBD", "XTS", "XXX", "XAU", "XPD", "XPT", "XAG"], fe = {}, pe = 0; pe < de.length; pe++)
            fe[de[pe]] = {
                style: "currency",
                currency: de[pe]
            };
        var ge = {
            number: fe
        }
          , me = "languageTransformer";
        function ve(e) {
            return function(t) {
                return t.type === e
            }
        }
        function ye(e, t) {
            var n = e;
            return (t || []).map((function(t) {
                n = t.process(e) || n
            }
            )),
            n
        }
        var _e, Te = {
            lng: "zh-CN",
            fallbackLng: ["en-US"],
            inContext: !0
        }, be = [ne, oe], Se = function() {
            function e(t, n) {
                var i = this;
                ae(this, e),
                this._waitingToAddResourceBundle = [],
                this.t = function(e, t, n) {
                    var r = Array.isArray(e) ? Array.from(e).map((function() {
                        return " "
                    }
                    )).join("") : Array(e.length).fill(" ")
                      , o = Object.assign({
                        keySeparator: r,
                        nsSeparator: r
                    }, t);
                    return "thirdParamFallback"in i.config && i.config.thirdParamFallback && (o.thirdParamFallback = !0),
                    i.instance.t(e, n, o)
                }
                ,
                this._handlePlugins(n),
                this._handleConfigs(t),
                this.instance = B.createInstance(),
                this.instance.isInitialized = !1
            }
            return le(e, [{
                key: "_handlePlugins",
                value: function(e) {
                    var t, n;
                    !1 === (null === (t = this.config) || void 0 === t || null === (n = t.icuConfig) || void 0 === n ? void 0 : n.open) && be.shift(),
                    this.plugins = Array.isArray(e) ? e.concat(be) : be
                }
            }, {
                key: "_handleConfigs",
                value: function(e) {
                    this.userLng = (null == e ? void 0 : e.lng) || null,
                    this.config = Object.assign({}, Te, e || {})
                }
            }, {
                key: "language",
                get: function() {
                    return (this.instance || {}).language
                }
            }, {
                key: "createInstance",
                value: function() {
                    var e = this;
                    return new Promise((function(t, n) {
                        "undefined" != typeof window && !window.CocosEngine && e.config.inContext && (e.config.postProcess = [].concat(["inContext"], e.config.postProcess || []),
                        window.__STARLING_DEVTOOLS_I18N = e.instance),
                        e.plugins.map((function(t) {
                            "IES_INTL_ICU_PLUGIN" === t.name && t.staticInit(e.instance),
                            e.instance.use(t)
                        }
                        ));
                        var i = e.config;
                        e.config.formats = Object.assign({}, e.config.formats, ge);
                        var r = ye(i.lng, e.plugins.filter(ve(me)));
                        e.instance.init(Object.assign({}, i, {
                            lng: r,
                            i18nFormat: {
                                formats: e.config.formats
                            }
                        }), (function(i, r) {
                            try {
                                var o, a = function(e) {
                                    var t = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                    if (!t) {
                                        if (Array.isArray(e) || (t = ce(e))) {
                                            t && (e = t);
                                            var n = 0
                                              , i = function() {};
                                            return {
                                                s: i,
                                                n: function() {
                                                    return n >= e.length ? {
                                                        done: !0
                                                    } : {
                                                        done: !1,
                                                        value: e[n++]
                                                    }
                                                },
                                                e: function(e) {
                                                    throw e
                                                },
                                                f: i
                                            }
                                        }
                                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                    }
                                    var r, o = !0, a = !1;
                                    return {
                                        s: function() {
                                            t = t.call(e)
                                        },
                                        n: function() {
                                            var e = t.next();
                                            return o = e.done,
                                            e
                                        },
                                        e: function(e) {
                                            a = !0,
                                            r = e
                                        },
                                        f: function() {
                                            try {
                                                o || null == t.return || t.return()
                                            } finally {
                                                if (a)
                                                    throw r
                                            }
                                        }
                                    }
                                }(e._waitingToAddResourceBundle);
                                try {
                                    for (a.s(); !(o = a.n()).done; ) {
                                        var s, l = o.value;
                                        (s = e.instance).addResourceBundle.apply(s, ue(l))
                                    }
                                } catch (i) {
                                    a.e(i)
                                } finally {
                                    a.f()
                                }
                                e._waitingToAddResourceBundle = []
                            } catch (i) {}
                            i || (e._updateLanguages(),
                            t({
                                t: r,
                                err: i
                            })),
                            e.init = !0,
                            n({
                                t: r,
                                err: i
                            })
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "_updateLanguages",
                value: function() {
                    this.languages = this.instance ? Array.from(new Set([this.instance.language].concat(ue(this.instance.languages)))) : null
                }
            }, {
                key: "getLanguages",
                value: function() {
                    return this.languages
                }
            }, {
                key: "changeLanguage",
                value: function(e, t) {
                    var n = this;
                    this.config.lng = e,
                    this.instance.changeLanguage(e, (function(e, i) {
                        e || n._updateLanguages(),
                        t && t(e, i)
                    }
                    ))
                }
            }, {
                key: "changeLanguageWithPromise",
                value: function(e) {
                    var t = this;
                    return new Promise((function(n, i) {
                        t.config.lng = e,
                        t.instance.changeLanguage(e, (function(e, r) {
                            e && i({
                                err: e,
                                t: r
                            }),
                            t._updateLanguages(),
                            n({
                                err: e,
                                t: r
                            })
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "getDir",
                value: function(e) {
                    return this.instance.dir(e)
                }
            }, {
                key: "addResourceBundle",
                value: function(e, t, n, i, r) {
                    return this.instance.isInitialized ? this.instance.addResourceBundle(e, t, n, i, r) : (this._waitingToAddResourceBundle.push([e, t, n, !!i, !!r]),
                    this.instance)
                }
            }]),
            e
        }(), we = "Starling_intl:", ke = function() {
            for (var e, t = "".concat(we, " [ERROR]"), n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                i[r] = arguments[r];
            (e = console).error.apply(e, [t].concat(i))
        };
        function Ce(e, t, n) {
            return n ? t ? t(e) : e : (e && e.then || (e = Promise.resolve(e)),
            t ? e.then(t) : e)
        }
        function Me() {}
        function Pe(e) {
            return function() {
                for (var t = [], n = 0; n < arguments.length; n++)
                    t[n] = arguments[n];
                try {
                    return Promise.resolve(e.apply(this, t))
                } catch (e) {
                    return Promise.reject(e)
                }
            }
        }
        !function(e) {
            e.intl3rdParty = "intl3rdParty",
            e.backend = "backend",
            e.logger = "logger",
            e.languageDetector = "languageDetector",
            e.postProcessor = "postProcessor",
            e.i18nFormat = "i18nFormat",
            e["3rdParty"] = "3rdParty"
        }(_e || (_e = {}));
        var Re = function() {
            function e() {
                var t = this;
                ae(this, e),
                this.t = function(e, n, i) {
                    return t.ignoreWarning || t.i18nInstance && t.i18nInstance.init ? !e || "string" == typeof e && !e.trim() ? "" : t.i18nInstance.t(e, n, i) : (ke("The instance has not been initialized: i18n.t('".concat(e, "'").concat(n ? "," + JSON.stringify(n) : "", ");")),
                    null != i ? i : Array.isArray(e) ? e[0] : e)
                }
                ,
                this.plugins = [],
                this.i18nInstance = new Se
            }
            return le(e, [{
                key: "use",
                value: function(e) {
                    return this.plugins.includes(e) ? (function() {
                        for (var e, t = "".concat(we, " [WARNING]"), n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                            i[r] = arguments[r];
                        (e = console).warn.apply(e, [t].concat(i))
                    }("Plugin: ".concat(e.name, " has beeninit installed.")),
                    this) : (this.plugins.push(e),
                    this)
                }
            }, {
                key: "init",
                value: function(e, t) {
                    try {
                        var n = this;
                        return n.ignoreWarning = e.ignoreWarning,
                        n.i18nInstance._handleConfigs(e),
                        n.i18nInstance._handlePlugins(n.plugins),
                        Ce(function(e, i) {
                            try {
                                var r = Ce(n.i18nInstance.createInstance(), (function(e) {
                                    var i, r = e.err, o = e.t, a = n.plugins.filter((function(e) {
                                        return e.type === _e.intl3rdParty
                                    }
                                    ));
                                    return Ce((i = a.map(Pe((function(e) {
                                        if (e && "function" == typeof e.init)
                                            return (t = (e.init instanceof Promise ? e.init : Pe((function(t) {
                                                return Promise.resolve(e.init(t))
                                            }
                                            )))(n)) && t.then ? t.then(Me) : Promise.resolve();
                                        var t
                                    }
                                    ))),
                                    new Promise((function(e, t) {
                                        if (Array.isArray(i) || (i = Array.from(i)),
                                        i.length <= 0)
                                            return e([]);
                                        var n = [];
                                        i = i.map((function(r, o) {
                                            return function() {
                                                ("function" == typeof r ? new Promise(r) : Promise.resolve(r)).then((function(t) {
                                                    n[o] = t,
                                                    o === i.length - 1 ? e(n) : i[o + 1]()
                                                }
                                                ), t)
                                            }
                                        }
                                        )),
                                        i[0]()
                                    }
                                    ))), (function() {
                                        return "function" == typeof t && t(r, o),
                                        {
                                            err: r,
                                            t: o
                                        }
                                    }
                                    ))
                                }
                                ))
                            } catch (e) {
                                return i(e)
                            }
                            return r && r.then ? r.then(void 0, i) : r
                        }(0, (function(e) {
                            return ke("The instance init error: ".concat(e)),
                            {
                                err: e,
                                t: function(e) {
                                    return e
                                }
                            }
                        }
                        )))
                    } catch (e) {
                        return Promise.reject(e)
                    }
                }
            }, {
                key: "language",
                get: function() {
                    return (this.i18nInstance || {}).language
                }
            }, {
                key: "setLang",
                value: function(e, t) {
                    var n = ye(e, this.plugins.filter(ve(me)));
                    this.i18nInstance.changeLanguage(n, t)
                }
            }, {
                key: "getLanguages",
                value: function() {
                    return this.i18nInstance.getLanguages()
                }
            }, {
                key: "setLangWithPromise",
                value: function(e) {
                    var t = ye(e, this.plugins.filter(ve(me)));
                    return this.i18nInstance.changeLanguageWithPromise(t)
                }
            }, {
                key: "dir",
                value: function(e) {
                    return this.i18nInstance.getDir(e)
                }
            }, {
                key: "addResourceBundle",
                value: function(e, t, n, i, r) {
                    return this.i18nInstance.addResourceBundle(e, t, n, i, r)
                }
            }]),
            e
        }();
        const xe = new Re
    }
    ,
    93545: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => V
        });
        var i = n(55371)
          , r = n(95689)
          , o = n(57923)
          , a = n(78647)
          , s = n(51611)
          , l = n(16960)
          , u = n(14444)
          , c = n(40099)
          , h = n(18499);
        function d(e) {
            var t = [];
            return c.Children.forEach(e, (function(e) {
                t.push(e)
            }
            )),
            t
        }
        function f(e, t) {
            var n = null;
            return e && e.forEach((function(e) {
                n || e && e.key === t && (n = e)
            }
            )),
            n
        }
        function p(e, t, n) {
            var i = null;
            return e && e.forEach((function(e) {
                if (e && e.key === t && e.props[n]) {
                    if (i)
                        throw new Error("two child with same key for <rc-animate> children");
                    i = e
                }
            }
            )),
            i
        }
        var g = n(33726);
        const m = function(e) {
            return e.transitionName && e.transitionAppear || e.animation.appear
        }
          , v = function(e) {
            return e.transitionName && e.transitionEnter || e.animation.enter
        }
          , y = function(e) {
            return e.transitionName && e.transitionLeave || e.animation.leave
        }
          , _ = function(e) {
            return e.transitionAppear || e.animation.appear
        }
          , T = function(e) {
            return e.transitionEnter || e.animation.enter
        }
          , b = function(e) {
            return e.transitionLeave || e.animation.leave
        };
        var S = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var i = t[n];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, n, i) {
                return n && e(t.prototype, n),
                i && e(t, i),
                t
            }
        }()
          , w = {
            enter: "transitionEnter",
            appear: "transitionAppear",
            leave: "transitionLeave"
        };
        const k = function(e) {
            function t() {
                return function(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, t),
                function(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" != typeof t && "function" != typeof t ? e : t
                }(this, (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments))
            }
            return function(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }(t, e),
            S(t, [{
                key: "componentWillUnmount",
                value: function() {
                    this.stop()
                }
            }, {
                key: "componentWillEnter",
                value: function(e) {
                    v(this.props) ? this.transition("enter", e) : e()
                }
            }, {
                key: "componentWillAppear",
                value: function(e) {
                    m(this.props) ? this.transition("appear", e) : e()
                }
            }, {
                key: "componentWillLeave",
                value: function(e) {
                    y(this.props) ? this.transition("leave", e) : e()
                }
            }, {
                key: "transition",
                value: function(e, t) {
                    var n = this
                      , i = h.findDOMNode(this)
                      , r = this.props
                      , o = r.transitionName
                      , a = "object" == typeof o;
                    this.stop();
                    var s = function() {
                        n.stopper = null,
                        t()
                    };
                    if ((g._ || !r.animation[e]) && o && r[w[e]]) {
                        var l = a ? o[e] : o + "-" + e
                          , u = l + "-active";
                        a && o[e + "Active"] && (u = o[e + "Active"]),
                        this.stopper = (0,
                        g.A)(i, {
                            name: l,
                            active: u
                        }, s)
                    } else
                        this.stopper = r.animation[e](i, s)
                }
            }, {
                key: "stop",
                value: function() {
                    var e = this.stopper;
                    e && (this.stopper = null,
                    e.stop())
                }
            }, {
                key: "render",
                value: function() {
                    return this.props.children
                }
            }]),
            t
        }(c.Component);
        var C = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
            }
            return e
        }
          , M = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var i = t[n];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, n, i) {
                return n && e(t.prototype, n),
                i && e(t, i),
                t
            }
        }()
          , P = "rc_animate_" + Date.now();
        function R(e) {
            var t = e.children;
            return c.isValidElement(t) && !t.key ? c.cloneElement(t, {
                key: P
            }) : t
        }
        function x() {}
        var E = function(e) {
            function t(e) {
                !function(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, t);
                var n = function(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" != typeof t && "function" != typeof t ? e : t
                }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
                return D.call(n),
                n.currentlyAnimatingKeys = {},
                n.keysToEnter = [],
                n.keysToLeave = [],
                n.state = {
                    children: d(R(e))
                },
                n.childrenRefs = {},
                n
            }
            return function(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }(t, e),
            M(t, [{
                key: "componentDidMount",
                value: function() {
                    var e = this
                      , t = this.props.showProp
                      , n = this.state.children;
                    t && (n = n.filter((function(e) {
                        return !!e.props[t]
                    }
                    ))),
                    n.forEach((function(t) {
                        t && e.performAppear(t.key)
                    }
                    ))
                }
            }, {
                key: "componentWillReceiveProps",
                value: function(e) {
                    var t = this;
                    this.nextProps = e;
                    var n = d(R(e))
                      , i = this.props;
                    i.exclusive && Object.keys(this.currentlyAnimatingKeys).forEach((function(e) {
                        t.stop(e)
                    }
                    ));
                    var r, o, a, s, l = i.showProp, u = this.currentlyAnimatingKeys, h = i.exclusive ? d(R(i)) : this.state.children, g = [];
                    l ? (h.forEach((function(e) {
                        var t, i, r, o, a = e && f(n, e.key);
                        (o = a && a.props[l] || !e.props[l] ? a : c.cloneElement(a || e, (r = !0,
                        (i = l)in (t = {}) ? Object.defineProperty(t, i, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : t[i] = r,
                        t))) && g.push(o)
                    }
                    )),
                    n.forEach((function(e) {
                        e && f(h, e.key) || g.push(e)
                    }
                    ))) : (r = n,
                    o = [],
                    a = {},
                    s = [],
                    h.forEach((function(e) {
                        e && f(r, e.key) ? s.length && (a[e.key] = s,
                        s = []) : s.push(e)
                    }
                    )),
                    r.forEach((function(e) {
                        e && Object.prototype.hasOwnProperty.call(a, e.key) && (o = o.concat(a[e.key])),
                        o.push(e)
                    }
                    )),
                    g = o = o.concat(s)),
                    this.setState({
                        children: g
                    }),
                    n.forEach((function(e) {
                        var n = e && e.key;
                        if (!e || !u[n]) {
                            var i = e && f(h, n);
                            if (l) {
                                var r = e.props[l];
                                i ? !p(h, n, l) && r && t.keysToEnter.push(n) : r && t.keysToEnter.push(n)
                            } else
                                i || t.keysToEnter.push(n)
                        }
                    }
                    )),
                    h.forEach((function(e) {
                        var i = e && e.key;
                        if (!e || !u[i]) {
                            var r = e && f(n, i);
                            if (l) {
                                var o = e.props[l];
                                r ? !p(n, i, l) && o && t.keysToLeave.push(i) : o && t.keysToLeave.push(i)
                            } else
                                r || t.keysToLeave.push(i)
                        }
                    }
                    ))
                }
            }, {
                key: "componentDidUpdate",
                value: function() {
                    var e = this.keysToEnter;
                    this.keysToEnter = [],
                    e.forEach(this.performEnter);
                    var t = this.keysToLeave;
                    this.keysToLeave = [],
                    t.forEach(this.performLeave)
                }
            }, {
                key: "isValidChildByKey",
                value: function(e, t) {
                    var n = this.props.showProp;
                    return n ? p(e, t, n) : f(e, t)
                }
            }, {
                key: "stop",
                value: function(e) {
                    delete this.currentlyAnimatingKeys[e];
                    var t = this.childrenRefs[e];
                    t && t.stop()
                }
            }, {
                key: "render",
                value: function() {
                    var e = this
                      , t = this.props;
                    this.nextProps = t;
                    var n = this.state.children
                      , i = null;
                    n && (i = n.map((function(n) {
                        if (null == n)
                            return n;
                        if (!n.key)
                            throw new Error("must set key for <rc-animate> children");
                        return c.createElement(k, {
                            key: n.key,
                            ref: function(t) {
                                e.childrenRefs[n.key] = t
                            },
                            animation: t.animation,
                            transitionName: t.transitionName,
                            transitionEnter: t.transitionEnter,
                            transitionAppear: t.transitionAppear,
                            transitionLeave: t.transitionLeave
                        }, n)
                    }
                    )));
                    var r = t.component;
                    if (r) {
                        var o = t;
                        return "string" == typeof r && (o = C({
                            className: t.className,
                            style: t.style
                        }, t.componentProps)),
                        c.createElement(r, o, i)
                    }
                    return i[0] || null
                }
            }]),
            t
        }(c.Component);
        E.isAnimate = !0,
        E.defaultProps = {
            animation: {},
            component: "span",
            componentProps: {},
            transitionEnter: !0,
            transitionLeave: !0,
            transitionAppear: !1,
            onEnd: x,
            onEnter: x,
            onLeave: x,
            onAppear: x
        };
        var D = function() {
            var e = this;
            this.performEnter = function(t) {
                e.childrenRefs[t] && (e.currentlyAnimatingKeys[t] = !0,
                e.childrenRefs[t].componentWillEnter(e.handleDoneAdding.bind(e, t, "enter")))
            }
            ,
            this.performAppear = function(t) {
                e.childrenRefs[t] && (e.currentlyAnimatingKeys[t] = !0,
                e.childrenRefs[t].componentWillAppear(e.handleDoneAdding.bind(e, t, "appear")))
            }
            ,
            this.handleDoneAdding = function(t, n) {
                var i = e.props;
                if (delete e.currentlyAnimatingKeys[t],
                !i.exclusive || i === e.nextProps) {
                    var r = d(R(i));
                    e.isValidChildByKey(r, t) ? "appear" === n ? _(i) && (i.onAppear(t),
                    i.onEnd(t, !0)) : T(i) && (i.onEnter(t),
                    i.onEnd(t, !0)) : e.performLeave(t)
                }
            }
            ,
            this.performLeave = function(t) {
                e.childrenRefs[t] && (e.currentlyAnimatingKeys[t] = !0,
                e.childrenRefs[t].componentWillLeave(e.handleDoneLeaving.bind(e, t)))
            }
            ,
            this.handleDoneLeaving = function(t) {
                var n = e.props;
                if (delete e.currentlyAnimatingKeys[t],
                !n.exclusive || n === e.nextProps) {
                    var i, r, o, a, s = d(R(n));
                    if (e.isValidChildByKey(s, t))
                        e.performEnter(t);
                    else {
                        var l = function() {
                            b(n) && (n.onLeave(t),
                            n.onEnd(t, !1))
                        };
                        i = e.state.children,
                        r = s,
                        o = n.showProp,
                        (a = i.length === r.length) && i.forEach((function(e, t) {
                            var n = r[t];
                            e && n && (e && !n || !e && n || e.key !== n.key || o && e.props[o] !== n.props[o]) && (a = !1)
                        }
                        )),
                        a ? l() : e.setState({
                            children: s
                        }, l)
                    }
                }
            }
        };
        const L = function(e) {
            var t = e.prototype;
            if (!t || !t.isReactComponent)
                throw new Error("Can only polyfill class components");
            return "function" != typeof t.componentWillReceiveProps ? e : c.Profiler ? (t.UNSAFE_componentWillReceiveProps = t.componentWillReceiveProps,
            delete t.componentWillReceiveProps,
            e) : e
        }(E);
        var I = n(61978)
          , O = n.n(I);
        var A = function(e) {
            (0,
            s.A)(d, e);
            var t, n, i = (t = d,
            n = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                if (Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
                    ))),
                    !0
                } catch (e) {
                    return !1
                }
            }(),
            function() {
                var e, i = (0,
                u.A)(t);
                if (n) {
                    var r = (0,
                    u.A)(this).constructor;
                    e = Reflect.construct(i, arguments, r)
                } else
                    e = i.apply(this, arguments);
                return (0,
                l.A)(this, e)
            }
            );
            function d() {
                var e;
                return (0,
                o.A)(this, d),
                (e = i.apply(this, arguments)).closeTimer = null,
                e.close = function(t) {
                    t && t.stopPropagation(),
                    e.clearCloseTimer();
                    var n = e.props.onClose;
                    n && n()
                }
                ,
                e.startCloseTimer = function() {
                    e.props.duration && (e.closeTimer = window.setTimeout((function() {
                        e.close()
                    }
                    ), 1e3 * e.props.duration))
                }
                ,
                e.clearCloseTimer = function() {
                    e.closeTimer && (clearTimeout(e.closeTimer),
                    e.closeTimer = null)
                }
                ,
                e
            }
            return (0,
            a.A)(d, [{
                key: "componentDidMount",
                value: function() {
                    this.startCloseTimer()
                }
            }, {
                key: "componentDidUpdate",
                value: function(e) {
                    (this.props.duration !== e.duration || this.props.update) && this.restartCloseTimer()
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    this.clearCloseTimer()
                }
            }, {
                key: "restartCloseTimer",
                value: function() {
                    this.clearCloseTimer(),
                    this.startCloseTimer()
                }
            }, {
                key: "render",
                value: function() {
                    var e = this
                      , t = this.props
                      , n = t.prefixCls
                      , i = t.className
                      , o = t.closable
                      , a = t.closeIcon
                      , s = t.style
                      , l = t.onClick
                      , u = t.children
                      , d = t.holder
                      , f = "".concat(n, "-notice")
                      , p = Object.keys(this.props).reduce((function(t, n) {
                        return "data-" !== n.substr(0, 5) && "aria-" !== n.substr(0, 5) && "role" !== n || (t[n] = e.props[n]),
                        t
                    }
                    ), {})
                      , g = c.createElement("div", Object.assign({
                        className: O()(f, i, (0,
                        r.A)({}, "".concat(f, "-closable"), o)),
                        style: s,
                        onMouseEnter: this.clearCloseTimer,
                        onMouseLeave: this.startCloseTimer,
                        onClick: l
                    }, p), c.createElement("div", {
                        className: "".concat(f, "-content")
                    }, u), o ? c.createElement("a", {
                        tabIndex: 0,
                        onClick: this.close,
                        className: "".concat(f, "-close")
                    }, a || c.createElement("span", {
                        className: "".concat(f, "-close-x")
                    })) : null);
                    return d ? h.createPortal(g, d) : g
                }
            }]),
            d
        }(c.Component);
        A.defaultProps = {
            onClose: function() {},
            duration: 1.5,
            style: {
                right: "50%"
            }
        };
        var G = n(83100)
          , N = n(54042);
        function B(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, i)
            }
            return n
        }
        function $(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? B(Object(n), !0).forEach((function(t) {
                    (0,
                    r.A)(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : B(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        var F = 0
          , H = Date.now()
          , U = function(e) {
            (0,
            s.A)(r, e);
            var t, n, i = (t = r,
            n = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                if (Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
                    ))),
                    !0
                } catch (e) {
                    return !1
                }
            }(),
            function() {
                var e, i = (0,
                u.A)(t);
                if (n) {
                    var r = (0,
                    u.A)(this).constructor;
                    e = Reflect.construct(i, arguments, r)
                } else
                    e = i.apply(this, arguments);
                return (0,
                l.A)(this, e)
            }
            );
            function r() {
                var e;
                return (0,
                o.A)(this, r),
                (e = i.apply(this, arguments)).state = {
                    notices: []
                },
                e.hookRefs = new Map,
                e.add = function(t, n) {
                    var i;
                    t.key = t.key || (i = F,
                    F += 1,
                    "rcNotification_".concat(H, "_").concat(i));
                    var r = t.key
                      , o = e.props.maxCount;
                    e.setState((function(e) {
                        var i = e.notices
                          , a = i.map((function(e) {
                            return e.notice.key
                        }
                        )).indexOf(r)
                          , s = i.concat();
                        return -1 !== a ? s.splice(a, 1, {
                            notice: t,
                            holderCallback: n
                        }) : (o && i.length >= o && (t.updateKey = s[0].notice.updateKey || s[0].notice.key,
                        s.shift()),
                        s.push({
                            notice: t,
                            holderCallback: n
                        })),
                        {
                            notices: s
                        }
                    }
                    ))
                }
                ,
                e.remove = function(t) {
                    e.setState((function(e) {
                        return {
                            notices: e.notices.filter((function(e) {
                                return e.notice.key !== t
                            }
                            ))
                        }
                    }
                    ))
                }
                ,
                e
            }
            return (0,
            a.A)(r, [{
                key: "getTransitionName",
                value: function() {
                    var e = this.props
                      , t = e.prefixCls
                      , n = e.animation
                      , i = this.props.transitionName;
                    return !i && n && (i = "".concat(t, "-").concat(n)),
                    i
                }
            }, {
                key: "render",
                value: function() {
                    var e = this
                      , t = this.state.notices
                      , n = this.props
                      , i = n.prefixCls
                      , r = n.className
                      , o = n.closeIcon
                      , a = n.style
                      , s = t.map((function(n, r) {
                        var a = n.notice
                          , s = n.holderCallback
                          , l = Boolean(r === t.length - 1 && a.updateKey)
                          , u = a.updateKey ? a.updateKey : a.key
                          , h = function() {
                            var e = [].slice.call(arguments, 0);
                            return 1 === e.length ? e[0] : function() {
                                for (var t = 0; t < e.length; t++)
                                    e[t] && e[t].apply && e[t].apply(this, arguments)
                            }
                        }(e.remove.bind(e, a.key), a.onClose)
                          , d = $($($({
                            prefixCls: i,
                            closeIcon: o
                        }, a), a.props), {}, {
                            key: u,
                            update: l,
                            onClose: h,
                            onClick: a.onClick,
                            children: a.content
                        });
                        return s ? c.createElement("div", {
                            key: u,
                            className: "".concat(i, "-hook-holder"),
                            ref: function(t) {
                                void 0 !== u && (t ? (e.hookRefs.set(u, t),
                                s(t, d)) : e.hookRefs.delete(u))
                            }
                        }) : c.createElement(A, Object.assign({}, d))
                    }
                    ));
                    return c.createElement("div", {
                        className: O()(i, r),
                        style: a
                    }, c.createElement(L, {
                        transitionName: this.getTransitionName()
                    }, s))
                }
            }]),
            r
        }(c.Component);
        U.defaultProps = {
            prefixCls: "rc-notification",
            animation: "fade",
            style: {
                top: 65,
                left: "50%"
            }
        },
        U.newInstance = function(e, t) {
            var n = e || {}
              , r = n.getContainer
              , o = (0,
            i.A)(n, ["getContainer"])
              , a = document.createElement("div");
            r ? r().appendChild(a) : document.body.appendChild(a);
            var s = !1;
            h.render(c.createElement(U, Object.assign({}, o, {
                ref: function(e) {
                    s || (s = !0,
                    t({
                        notice: function(t) {
                            e.add(t)
                        },
                        removeNotice: function(t) {
                            e.remove(t)
                        },
                        component: e,
                        destroy: function() {
                            h.unmountComponentAtNode(a),
                            a.parentNode && a.parentNode.removeChild(a)
                        },
                        useNotification: function() {
                            return t = e,
                            n = c.useRef({}),
                            i = c.useState([]),
                            o = (r = (0,
                            N.A)(i, 2))[0],
                            a = r[1],
                            [function(e) {
                                t.add(e, (function(e, t) {
                                    var i = t.key;
                                    if (e && !n.current[i]) {
                                        var r = c.createElement(A, Object.assign({}, t, {
                                            holder: e
                                        }));
                                        n.current[i] = r,
                                        a((function(e) {
                                            return [].concat((0,
                                            G.A)(e), [r])
                                        }
                                        ))
                                    }
                                }
                                ))
                            }
                            , c.createElement(c.Fragment, null, o)];
                            var t, n, i, r, o, a
                        }
                    }))
                }
            })), a)
        }
        ;
        const V = U
    }
    ,
    37037: (e, t, n) => {
        "use strict";
        function i(e) {
            return "object" == typeof e && "[object Object]" === Object.prototype.toString.call(e)
        }
        function r() {
            const e = arguments.length;
            let t = arguments[0];
            i(t) || (t = {});
            for (let n = 1; n < e; n++) {
                const e = arguments[n];
                if (i(e))
                    for (const n in e)
                        "__proto__" === n || t === e[n] || (i(e[n]) && "instance" !== n ? t[n] = r(t[n], e[n]) : t[n] = e[n])
            }
            return t
        }
        n.d(t, {
            C: () => o,
            a: () => a,
            d: () => r
        });
        const o = "g_ven"
          , a = "g_exp"
    }
    ,
    70180: (e, t, n) => {
        "use strict";
        n.d(t, {
            V: () => d,
            _: () => y,
            a: () => _,
            b: () => v,
            g: () => m,
            p: () => p
        });
        var i = n(37037);
        const r = /ANGLE\s+\((?:[^,]+,\s+)?(?:[^:]*:)?([^,/]+)?(?:[^,]*)(?:[,\s]+)(Direct\S+|OpenGL[\d.\s]+|Unspecified)/
          , o = /ANGLE\s+\((?:[^,]+,\s+)?([^,]+)?(?:[,\s]+)(Direct\S+|OpenGL[\d.\s]+)/
          , a = /ANGLE\s+\((?:[^,]+,\s+)?(?:[^:]+:\s+)?([^,]+)?(?:[,\s]+)(Direct\S+|OpenGL[\d.\s]+)?/
          , s = "OpenGL Engine"
          , l = "Unknow"
          , u = 4318
          , c = 32902
          , h = 4098;
        var d = (e => (e.CpuDeriver = "CpuDeriver",
        e.Intel = "Intel",
        e.Nvidia = "NVIDIA",
        e.Amd = "AMD",
        e.Apple = "Apple",
        e.Adreno = "Adreno",
        e[e.Unknow = l] = "Unknow",
        e))(d || {});
        function f(e) {
            return "NVIDIA" === e ? u : "AMD" === e ? h : "Intel" === e ? c : 0
        }
        function p(e) {
            const t = function(e) {
                const t = /(SwiftShader|Intel|NVIDIA|AMD|Radeon|Apple|Adreno)/.exec(e);
                return t ? "Radeon" === t[0] ? "AMD" : "SwiftShader" === t[0] ? "CpuDeriver" : t[0] : d.Unknow
            }(e);
            return t === d.Unknow || "CpuDeriver" === t ? {
                vendor: t,
                vendorId: 0,
                model: e,
                backupModel: e,
                api: l,
                origin: e
            } : /^ANGLE/.test(e) ? function(e, t) {
                let n, i = l, u = l, c = l;
                return ("Intel" === e || "NVIDIA" === e) && (n = r.exec(t)),
                ("AMD" === e || "Adreno" === e) && (n = o.exec(t)),
                "Apple" === e && (n = a.exec(t)),
                null != n && n[1] && (i = n[1].replace(/(AMD|NVIDIA)/, "").trim()),
                null != n && n[2] && (c = n[2].trim()),
                i = i.split("(0x00")[0].trim(),
                u = "Intel" === e ? i = i.split(s)[0].trim() : i.split(s)[0].trim(),
                {
                    vendor: e,
                    vendorId: f(e),
                    model: i,
                    backupModel: u,
                    api: c,
                    origin: t
                }
            }(t, e) : "Intel" === t ? {
                vendor: t,
                vendorId: f(t),
                model: e.split(s)[0].trim(),
                backupModel: e.split(s)[0].trim(),
                api: l,
                origin: e
            } : {
                vendor: t,
                vendorId: f(t),
                model: e.replace(/(AMD|NVIDIA)/, "").trim(),
                backupModel: e.split(s)[0].replace(/(AMD|NVIDIA)/, "").trim(),
                api: l,
                origin: e
            }
        }
        let g = "";
        function m(e) {
            if (g)
                return g;
            g = localStorage.getItem(i.C) || "";
            const t = Number(localStorage.getItem(i.a));
            if (g) {
                const n = t ? Date.now() - t : 0;
                if (null == e || !e.expiration || n < e.expiration)
                    return g;
                n > e.expiration && (localStorage.removeItem(i.C),
                localStorage.removeItem(i.a))
            }
            return g = function() {
                try {
                    let e, t;
                    const n = document.createElement("canvas").getContext("webgl");
                    if (n)
                        return t = n.getExtension("WEBGL_debug_renderer_info"),
                        e = t ? n.getParameter(t.UNMASKED_RENDERER_WEBGL) : "",
                        e
                } catch {}
                return ""
            }(),
            localStorage.setItem(i.C, g),
            localStorage.setItem(i.a, "" + Date.now()),
            g
        }
        function v(e, t) {
            let n = [];
            switch (t) {
            case d.Intel:
                n = e.split("\n").map((e => `Intel(R) ${e}`.replace("#", "Graphics").replace("*", "HD")));
                break;
            case d.Amd:
                n = e.split("\n").map((e => e.replace("@", "Radeon").replace("*", "HD").replace("^", "RX")));
                break;
            case d.Nvidia:
                n = e.split("\n").map((e => e.replace("$", "GeForce").replace("%", "RTX").replace("&", "GTX")))
            }
            return n.map((e => e.split("|")))
        }
        function y(e, t) {
            let n = e.filter((e => e[0] === t.model));
            n.length || (n = e.filter((e => e[0] === t.backupModel))),
            !n.length && t.vendor === d.Intel && !/^Intel(R)/.test(t.model) && (n = e.filter((e => e[0] === "Intel(R) " + t.model)));
            let i = "-1";
            if (n.length) {
                const e = n[0][1];
                i = "-1" === e ? "0" : e
            }
            return parseInt(i)
        }
        function _(e) {
            return 0 === e ? 0 : -1 === e ? -1 : parseFloat(Math.log2(e).toFixed(2))
        }
    }
    ,
    91122: (e, t, n) => {
        "use strict";
        n.d(t, {
            lg: () => h,
            Zo: () => c
        });
        var i = n(70180)
          , r = Object.defineProperty;
        let o = []
          , a = []
          , s = [];
        const l = class e {
            static setConfig(t) {
                e.cfg = t
            }
            static getGPUVendor() {
                return (0,
                i.g)(e.cfg)
            }
            static getGPUParsedVendor(t) {
                return (0,
                i.p)(t || e.getGPUVendor())
            }
            static parseVendorAsync(t) {
                const n = e.getGPUParsedVendor(t);
                if (!n)
                    return Promise.resolve(null);
                if (!e.cfg)
                    throw new Error("need specify config, call setConfig() method");
                return function(e, t) {
                    return e ? async function(e, t) {
                        let n;
                        if (e === i.V.Intel) {
                            if (o.length)
                                return o;
                            n = t.intelPath
                        }
                        if (e === i.V.Nvidia) {
                            if (a.length)
                                return a;
                            n = t.nvidiaPath
                        }
                        if (e === i.V.Amd) {
                            if (s.length)
                                return s;
                            n = t.amdPath
                        }
                        if (!n)
                            return Promise.resolve([]);
                        try {
                            const t = await fetch(n).then((e => e.text()))
                              , r = (0,
                            i.b)(t, e);
                            return e === i.V.Intel && (o = r),
                            e === i.V.Nvidia && (a = r),
                            e === i.V.Amd && (s = r),
                            r
                        } catch {}
                        return []
                    }(e.vendor, t).then((t => (0,
                    i._)(t, e))).then(i.a) : Promise.resolve(0)
                }(n, e.cfg).then((e => ({
                    ...n || {},
                    score: e
                }))).catch(( () => null))
            }
        }
        ;
        ( (e, t) => {
            t in e ? r(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: null
            }) : e[t] = null
        }
        )(l, "cfg");
        let u = l;
        function c() {
            let e = !1;
            if (typeof MediaSource > "u" || !MediaSource.isTypeSupported || function() {
                if (typeof navigator > "u")
                    return !1;
                const e = navigator.userAgent.match(/Edg\/(\d+)\./);
                if (e && e.length >= 2) {
                    const t = parseInt(e[1]);
                    return t >= 117 && t <= 122
                }
                return !1
            }())
                return e;
            if (e = MediaSource.isTypeSupported('video/mp4;codecs="hev1.1.6.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.2.4.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.3.E.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.4.10.L120.90"'),
            e) {
                const t = u.getGPUParsedVendor();
                e = !!t && t.vendor !== i.V.CpuDeriver
            }
            return e
        }
        async function h(e) {
            const {url: t, minDroppedFramesRate: n, minTotalVideoFrames: i} = Object.assign({
                url: "",
                minDroppedFramesRate: 0,
                minTotalVideoFrames: 0
            }, e);
            let r, o, a, s;
            const l = new Promise((e => {
                function l(t=1001, n) {
                    e({
                        status: !1,
                        errCode: t,
                        robustErr: 2101 === t || 2001 === t || 3e3 === t,
                        ...n || {}
                    })
                }
                !t || 0 === n && 0 === i ? l(1e3) : (o = () => {
                    let t = "";
                    try {
                        if (!r.getVideoPlaybackQuality)
                            return l(2001);
                        const {totalVideoFrames: t, droppedVideoFrames: o} = r.getVideoPlaybackQuality()
                          , a = o / t
                          , s = {
                            droppedFrameRate: a,
                            droppedVideoFrames: o,
                            totalVideoFrames: t
                        };
                        return void ((n ? a <= n : i && t > i) ? e({
                            status: !0,
                            ...s
                        }) : l(3e3, s))
                    } catch (e) {
                        t = (null == e ? void 0 : e.message) || e || "empty err msg"
                    }
                    l(2200, {
                        errMsg: t
                    })
                }
                ,
                a = () => {
                    const e = r.error;
                    l(2e3, {
                        errMsg: `${e.code}-${e.message}`
                    })
                }
                ,
                s = () => {
                    const e = r.play();
                    e && e.then((e => {}
                    )).catch((e => {
                        const t = e.message;
                        let n = 2100;
                        /no supported source/gi.test(t) || /The media resource indicated by the src attribute or assigned media provider object was not suitable/gi.test(t) || /NotSupportedError/gi.test(t) ? n = 2101 : /video-only background media was paused to save power/gi.test(t) ? n = 2103 : (/the user didn't interact with the document first/gi.test(t) || /user denied permission/gi.test(t)) && (n = 2102),
                        l(n, {
                            errMsg: t
                        })
                    }
                    ))
                }
                ,
                r = function(e) {
                    const t = document.createElement("video");
                    return t.style.cssText = "width:50px;height:50px;position:absolute;top:0;left:0;z-index:999999;opacity:.001;pointer-events:none;",
                    t.muted = !0,
                    t.autoplay = !1,
                    t.src = e,
                    t
                }(t),
                r.addEventListener("loadedmetadata", s, !1),
                r.addEventListener("ended", o, !1),
                r.addEventListener("error", a, !1),
                r.load(),
                document.body.append(r))
            }
            ));
            return l.finally(( () => {
                r && (o && a && s && (r.removeEventListener("loadedmetadata", s, !1),
                r.removeEventListener("ended", o, !1),
                r.removeEventListener("error", a, !1),
                o = null,
                a = null,
                s = null),
                document.body.removeChild(r),
                r = null)
            }
            )),
            await l
        }
    }
    ,
    86848: (e, t, n) => {
        "use strict";
        n.d(t, {
            C: () => i
        });
        class i {
            constructor() {
                this._events = [],
                this._callbacks = {}
            }
            register(e) {
                this._events.includes(e) || this._events.push(e)
            }
            on(e, t) {
                return !!this._events.includes(e) && (this._callbacks[e] || (this._callbacks[e] = []),
                this._callbacks[e].push(t),
                !0)
            }
            off(e, t) {
                if (!this._events.includes(e))
                    return !1;
                const n = this._callbacks[e].indexOf(t);
                return this._callbacks[e].splice(n, 1),
                !0
            }
            bind(e, t) {
                if (!this._events.includes(e))
                    return !1;
                this._callbacks[e] = [],
                this._callbacks[e].push(t)
            }
            clear(e) {
                this._callbacks[e] = []
            }
            trigger(e, t) {
                if (!this._callbacks[e] || !this._callbacks[e].length)
                    return !1;
                let n = null;
                return this._callbacks[e].forEach(( (e, i) => {
                    0 == i ? n = e(t) : e(t)
                }
                )),
                n
            }
            set events(e) {
                e.forEach((e => {
                    this.register(e)
                }
                ))
            }
            get events() {
                return this._events
            }
        }
    }
    ,
    74e3: (e, t, n) => {
        "use strict";
        n.d(t, {
            M: () => te,
            a: () => J,
            b: () => re
        });
        var i = n(91122)
          , r = n(70180)
          , o = Object.defineProperty;
        const a = "Arc(TM) A770M #|995\nArc(TM) A770 #|980\nArc(TM) A770 #|970\nArc(TM) A580 #|940\nArc(TM) A730M #|820\nArc(TM) A750 #|770\nArc(TM) A750 #|770\nArc(TM) A550M #|660\nArc(TM) A550M #|630\nXe # ReleaseInternal|560\nArc(TM) A770M #|500\nArc(TM) A380 #|470\nArc(TM) A380 #|470\nArc(TM) A370M #|340\nArc(TM) A370M #|340\nXe #|320\nHD # 630 GT2|310\nArc(TM) A350M #|280\nIris(R) Xe MAX #|210\nIris(R) Xe # RI|205\nIris(R) Xe # ReleaseInternal|180\nIris(R) Xe #|180\nGen12 Desktop # Controller|180\nIris(R) Xe #|180\nIris(R) Xe MAX #|170\nCorporation Iris Xe #|170\nCorporation TigerLake-LP GT2 [Iris Xe #]|160\nXe #|160\nArc(TM) A350M #|150\nCorporation TigerLake GT2 [Iris Xe #]|150\nUHD # 770|140\nUHD # ReleaseInternal|140\nIris(R) Pro # P580|140\nIris(R) Plus #|130\nIris Plus #|130\nIris(R) Pro # 580|130\nUHD # 770|125\nUHD # 750|125\nRadeong 0.4 on AMD TONGA (DRM 3.1.0, LLVM 3.9.0)|120\nCorporation Iris Plus # G7|120\nIris(R) Plus #|120\nIris(R) Plus # 940|120\nIris(R) Plus # 650|120\nIris(R) Plus # 655|120\nIris(R) Plus # 655|120\nHD # P4600|120\nIris(TM) Pro # 6200|120\nIris(R) Plus #|120\nIris(R) Plus # 650|120\nIris(R) Plus # 655|115\nIris(R) Pro # 580|110\nCorporation Iris Pro # 580|110\nIris(R) Plus # 645|110\nIris(TM) Pro # 6200|110\nIris(TM) Pro # P580|110\nCorporation Iris Plus # 655|110\nArc(TM) # RI|110\nIris(R) Plus # 655|110\nIris(R) Plus # 655|110\nIris(R) Plus #|110\nUHD #|110\nIris Plus # 655|110\nIris(R) Plus # 650|110\nIris(R) Plus # 650|110\nIris(TM) Pro # 580|110\nIris(TM) Pro # 6200|110\nIris # 6100|110\nIris(TM) Pro # 6200|110\nIris(R) Plus # 645|110\nUHD # 730|110\nIris(TM) Pro # 6200|100\nIris Pro # 580|100\nCorporation Iris Pro # 6200|100\nIris(R) Plus # gfx-driver-user-comp_media-21486 DC ReleaseInternal|100\nIris(R) Pro # 580|100\nIris Plus # 645|100\nUHD # 750|100\nIris(TM) Pro # 580|100\nIris(TM) # 550|100\nIris(TM) Pro # P6300|100\nIris(R) Plus # 650|100\nIris(TM) Pro # 5200|100\nIris(R) # 550|100\nIris(R) Plus #|100\nIris(R) Plus # 650|100\nIris(R) Plus # 655|100\nIris(R) # 550|100\nIris(R) Plus # 645|95\nIris Plus # 650|95\nIris(R) # 550|95\nIris # 550|90\nIris(R) Plus # 650|90\nIris(R) Pro # 580|90\nIris(TM) Plus # 650|90\nIris(TM) # 550|90\nIris(R) Plus # 640|90\nIris(TM) Plus # 650|90\nIris(TM) Pro # P6300|90\nIris(TM) Plus # 650|90\nIris(TM) # 550|90\nUHD # 730|90\nCorporation Iris Plus # 650|90\nIris(TM) Pro # 5200|90\nCorporation CometLake-H GT2 [UHD #]|90\nIris(R) # 540|90\nUHD # P630|90\nUHD # 630|85\nIris(TM) # 540|85\nIris(TM) Plus # 640|80\nIris(TM) # 540|80\nUHD # 630|80\nUHD # 630|80\nUHD # P630|80\nIris(TM) Plus # 640|80\nUHD # 630|80\nUHD # 630|80\nIris Plus # 640|80\nIris(TM) # 540|80\nUHD # 630|80\nUHD # 630|80\nIris(TM) Pro # 5200|80\nUHD # 630|80\nHD # 630|80\nUHD # 630|80\nUHD # 630|80\nUHD # 630|80\nUHD # 630|80\nUHD # 630|80\nIris Pro # 6200|80\nUHD # 630|80\nIris # 540|80\nHD # 630|80\nIris(TM) # 540|80\nIris(TM) Pro # 5200|79\nUHD # 630|79\nUHD # 630|79\nUHD # 630|79\nIris # 540|79\nUHD # 630|79\nUHD #|78\nCorporation Sky Lake Integrated #|78\nIris(TM) Pro # 6200|78\nCorporation WhiskeyLake-U GT2 [UHD # 620]|78\nRadeong 0.4 on AMD BONAIRE (DRM 2.43.0, LLVM 3.8.0)|78\nUHD # 710|78\nUHD # 630|78\nUHD # P630|77\nUHD # 630|77\nUHD # 630 (Desktop 9 Series)|77\nUHD # 630|77\nCoffee Lake UHD #|77\nIris(TM) Pro # 5200|77\nUHD # 630|76\nIris(R) Plus # 640|76\nIris(TM) Pro # 5200|76\nUHD # 630|76\nUHD #|76\nUHD # 630|76\nIris(TM) Pro # 5200|75\nUHD # 630|75\nUHD # P630|75\nHD # P530|75\nHD # 630|75\nIris(TM) Pro # 5200|75\nUHD # 630|75\nIris(TM) Pro # 5200|75\nHD # 620|74\nUHD # 630|74\nHD # 630|74\nHD # 630|74\nCoffee Lake HD #|74\nUHD # 630|74\nIris(TM) # 540|74\nUHD 630|74\nIris(R) # 540|73\nUHD # 620|73\nIris # 6200|73\nCorporation CoffeeLake-H GT2 [UHD # 630]|73\nUHD # 630 (Desktop)|73\nHD # ICL RVP|73\nUHD # 630|73\nHD # 630|72\nIris Pro|72\nKBL Unknown|72\nUHD # 630|72\nIris(TM) Pro # 5200|72\nHD # 530|72\nCorporation UHD # 630 (Desktop 9 Series)|72\nRadeon Pro Vega 16|72\nIris(TM) # 540|72\nIris(R) # 540|72\nUHD # 630|71\nHD # 630|71\nIris(TM) Pro # 5200|71\nUHD # 630|71\nIris Pro|71\nCometLake UHD # 630|71\nHD # 630|71\nUHD #|71\nIris(TM) Plus # 640|71\nUHD #|71\nCorporation UHD #|70\nIris Pro # 6200|70\nIris(R) # 540|70\n#|70\nUHD # 630|70\nHD # ICL RVP BigSur|70\nUHD # ReleaseInternal|70\nHD # 530|70\nUHD # 630|70\nUHD #|70\nUHD # gfx-driver-user-comp_core-23599|70\nUHD # 630|69\nUHD #|69\nIris(TM) Pro # 5200|69\nCorporation Iris Plus # G1 (Ice Lake)|69\nHD # 630|69\nHD # 630|69\nIris(R) Plus #|69\nIris(TM) Pro # 5200|69\nUHD # 620|69\nUHD #|69\nIris(R) Plus # 640|69\nIris Pro # 6200|69\nHD # 630|69\nUHD # 630 (Mobile)|68\nIris(TM) Pro # 5200|68\nCorporation UHD # 630 (Desktop)|68\nHD # 630|68\nUHD # 630|68\nUHD # 620|68\nUHD # 630|68\nIris(TM) Plus # 640|68\nUHD #|67\nIris Pro # 580|67\nIris(TM) # 540|67\nUHD # 620|67\nIris(TM) Pro # 5200|67\nUHD #|66\nHD # P530|66\nCorporation UHD # 630 (Mobile)|66\nIris(R) Plus # 640|66\nUHD # 630|66\nIris(R) Plus # 640|65\nHD # 630|65\nHD 530|65\nUHD # 620|65\nSKL Unknown|65\nHD # 630|64\nIris(TM) # 540|64\nMesa DRI Intel(R) UHD # 620 (Kabylake GT2)|64\nUHD # 630|64\nHD # 530|63\nHD # 530|63\nHD # 530|63\nMesa Intel(R) HD # 530 (SKL GT2)|63\nUHD #|63\nHD # 530|63\nIris # 550|63\nHD # 530|63\nIris Plus # 655|63\nHD # 630|63\nUHD #, Gen11 LP|63\nCorporation 8th Gen Core Processor Gaussian Mixture Model|63\nUHD # 630|63\nIris(TM) # 650|63\nIris(R) Plus # 640|62\nHD # 530|62\nMesa DRI Intel(R) Iris # 540 (Skylake GT3e)|62\nIris(R) Plus #|61\nIris(TM) Pro # 5200|61\nIris Pro|61\nHD # 620|61\nUHD # 620|61\nUHD # 630|61\nUHD #|61\nHD # 530|60\nIris Plus # G1|60\nIris(TM) Pro # 5200|60\nIris Plus # 650|60\nUHD #|60\nHD # 620|60\nUHD # 620|60\nUHD # 630|60\nMesa DRI Intel(R) HD # 630 (Kaby Lake GT2)|60\nUHD # 620|60\nHD # 630|60\nHD # 630|59\nIris # 540|59\nIris Plus # 640|59\nCoffeeLake-H GT2 [UHD # 630]|59\nHD # 630|59\nUHD #|59\nHD # 620|59\nUHD # 620|59\nHD # 630|59\nCorporation UHD # 620 (Whiskey Lake)|59\nIris(R) Plus # 650|59\nUHD # 620|59\nMesa Intel(R) HD # 520 (SKL GT2)|58\nHD # 630|58\nHD # P530|58\nIris(TM) Plus # 640|58\nCorporation HD # 630|58\nUHD # 620|58\nUHD # 630|58\nHD # P630|58\nMesa DRI Intel(R) UHD # 630 (Coffeelake 3x8 GT2)|58\nCorporation CometLake-S GT2 [UHD # 630]|58\nHD # 530|58\nIris # 540|58\nHD # 530|58\nCorporation Device|58\nHD # CFL CRB|57\nHD # 620 macOS Edition|57\nHD # 530|57\nMesa DRI Intel(R) HD # 520 (SKL GT2)|57\nIris Pro #|56\nIris(TM) Pro # 5200|56\nIris(R) Plus # 655|56\nCoffee Lake UHD #|56\nIris(TM) # 640|55\nIris Pro|55\nUHD # 630|55\nUHD # 620|55\nHD # 530|55\nHD # 520|54\nHD # 530|54\nUHD # 620|54\nHD # 530|54\nCorporation UHD # 620|54\nUHD #|54\nIris Plus # G7|54\nCorporation Skylake GT2 [HD # 520]|53\nUHD # 630|53\nHD # 630|53\nCorporation HD # 530|53\nUHD # 617|53\nHD # 520|52\nHD # 620|52\nHD # 620|52\nHD # 620|52\nHD # 620|52\nHD # 630|52\nHD # 630|52\nHD # 5600|51\nHD # 530|51\nHD # 630|51\nUHD # 615|51\nMesa DRI Intel(R) HD # 520 (Skylake GT2)|51\nHD # 630|50\nHD # 620|50\nUHD #|50\nHD # P4600/P4700|50\nHD # 520|50\nHD # 530|50\nHD # 620|50\nHD # 530|50\nCorporation HD # 620|50\nHD # 530|50\nUHD # 620|49\nUHD # 620|49\nHD # 530|49\nIris(TM) # 6100|49\nHD # 4600|49\nHD # 630|49\nUHD # 617|49\nUHD # RI|48\nHD # 520|48\nUHD # 617|48\nHD # 5600|48\nHD # 620|48\nUHD #, Gen11 LP|47\nUHD # 617|47\nMesa DRI Intel(R) HD # 620 (Kaby Lake GT2)|47\nHD # 615|47\nUHD # RI|47\nHD # 630|47\nHD # 4600|46\nHD # 520|46\nCorporation Skylake GT2 [HD # 520]|46\nHD # 520|46\nCorporation Device|46\nHD # 4600|46\nHD # 615|45\nHD # 4600|45\nIris(TM) # 6100|45\nHD # 615|45\nUHD # 615|45\nHD # 630 GT2|45\nHD # 4600|45\nHD # 630|45\nIris(TM) # 6100|45\nHD # 4600|45\nHD # 620|45\nIris(TM) # 6100|45\nHD # 520|45\nHD # 4600|45\nIris(TM) # 540|44\nHD # 530|44\nHD # 4600|44\nIris(TM) # 5100|44\nKabylake HD # ULT GT2|44\nIris # 6100|44\nUHD # 630|44\nHD # 520|44\nHD # KBL CRB|44\nHD # 530 (Skylake GT2)|44\nCorporation HD # 620|44\nHD # 515|44\nUHD #|44\nUHD # 620|44\nIris(TM) Pro # P580|43\nUHD # 615|43\nHD # 4600|43\nHD # 4600|43\nCorporation Skylake Integrated #|43\nHD # 530|43\nUHD # 615|43\nUHD # 630|43\nHD # 615|42\nHD # 620|42\nHD # 4600|42\nHD # 615|42\nHD # 4600|42\nHD # 4600|42\nMesa DRI Intel(R) Kabylake GT2|42\nHD # 620|42\nCorporation HD # 6000|42\nUHD # 615|42\nHD # 4600|41\nCorporation HD # 520|41\nHD # P4600/P4700|41\nCorporation, Series Chipset Iris Plus # 655|41\nHD # 4600|41\nMesa DRI Intel(R) HD # 530 (Skylake GT2)|41\nHD # 4600|41\nIris(TM) # 640|41\nHD # 4600|41\nHD # 630|40\nIris(TM) # 5100|40\nIris(TM) # 6100|40\nUHD # 610|40\nHD # 4600|40\nHD # 4600|40\nUHD # 615|40\nUHD # 610|40\nHD # 530|40\nUHD # 605|40\nHD # 615|40\nHD # 4600|40\nUHD # 615|40\nHD # 505|39\nPHDGD Ivy 4|39\nUnknown|39\nIris(TM) # 5100|39\nIris|39\nCorporation Iris # 6100|39\nHD # 6000|39\nIris(TM) # 5100|39\nHD # 615|39\nHD # 5500|39\nSkylake GT2 [HD # 520]|39\nCorporation Broadwell-U Integrated #|38\nHD # 615|38\nHD # 5500|38\nHD # 4600|38\nMesa DRI Intel(R) HD # P4000 (IVB GT2)|38\nHD # 4600|38\nHD # 615|38\nCorporation HD # 610|38\nHD # 4600|38\nHD # 4600|38\nIris(TM) # 5100|38\nIris # 6100|38\nHD # 515|38\nHD # 6000|38\nUHD #, Gen11 LP|38\nIris(TM) # 5100|38\nHD # 4600|37\nHD # 610|37\nHD # 4600|37\nHD # 515|37\nHD # 4600|37\nHD # 4600|37\nIris # P580|37\nIris(TM) Pro # P6300|37\nHD # 5500|37\nHD # 4600|37\nIris # 6100|37\nUHD # 610|37\nHD # 4600|37\nHD # 4600|37\nUHD # 610|37\nHD # 530|37\nHD # 5500|37\nHD # 515|36\nHD # P4600/P4700|36\nHD # 515|36\nHD # 4600|36\nUHD # 615|36\nIris # 6100|36\nHD # 4600|36\nHD # 4600|36\nHD # 4600|36\nHD # 520|36\nHD # 520|36\nHD # 5500|36\nCorporation HD # 5500|35\nIris|35\nHD5500 # PG7|35\nHD # 515|35\nIris|35\n# gfx-driver-user-feature_dg1_poweron-27723 DCH ReleaseInternal|35\nHD # 615|35\nHD # P630|35\nHD # 510|35\nHD # 6000|35\nHD # 5000|35\nCorporation HD # 5300|35\nHD # 6000|35\nHD # 4600|35\nHD5500 Broadwell PG7|35\n# HD 4600|35\nHD # 6000|35\nHD # 510|34\nHD # 610|34\nHD # 4600|34\nHD # Family (PHDGD Skylake v2.9)|34\nCorporation Device|34\nHD # 610|34\nUHD # 610|34\nHD # 5300|34\nHD # 5000|34\nHD # 4600|34\nUHD # 610|33\nHD # 4600|33\nUHD # 620|33\nCorporation UHD # 615|33\nHD # 5000|33\nKabylake HD # ULX GT2|33\nHD # 620|33\nUHD # 615|33\nHD # 4600|33\nHD # 5500|33\nHD # 515|33\nUHD #|33\nHD # 4600|33\nHD # 520|33\nHD # 6000|33\nHD # 615|33\nHD # KBL CRB|33\nHD # 4600|33\nUHD # 610|33\nIris # 6100|33\nHD # 515|33\nIris|32\nIris|32\nHD # 5000|32\nIris|32\nHD # 5000|32\nIris(TM) # 5100|32\nHD # 4600|32\nHD # 4600|32\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|32\nHD # 5500 (PHDGD Skylake v2.9)|32\nHD # 610|32\nHD # 6000|31\nHD # 5500|31\nIris|31\nHD # 6000|31\nUHD # 610|31\nHD # 510|31\nHD #|31\nHD # 6000|31\nHD # 4400|31\nHD # 5000|31\nHD # 4600|30\nHD # 515|30\nHD # 5600|30\nHD # 4600|30\nHD # 4400|30\nHD # 530|30\nGeForce GTX 960|30\nUHD # 610|30\nGeForce GTX 960|30\nHD # 510|30\nHD # 6000|30\nCorporation HD # 515|30\nHD # 610|29\nHD # 510|29\nHD # 5000|29\nHD # 4600|29\nIris(TM) Pro # 6200|29\nHD # 510|29\nHD # 5000|29\nHD # 6000|29\nIris|29\nHD # 4400|29\nHD # 4400|29\nHD # 4000|29\nHD # 510|29\nHD # 5000|29\nHD # 4400|28\nHD # 610|28\nHD # 5300|28\nHD # 510|28\nHD #|28\nHD # 610|28\nHD # 4400|28\nHD # 610|28\nHD # 4600|28\nHD # 4600|28\nHD # 5000|28\nHD # 4400|28\nHD # 4400|28\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|28\nHD # 4400|28\nHD # 5300|28\nHD # 5000|28\nUHD # 605|28\nHD # 4400|28\nHD # 5500|28\nHD # 4000|28\nHD # 4400|27\nHD # 615|27\nHD # Family(PHDGD Skylake v2.0)|27\nHD # 4400|27\nHD # 4400|27\nHD # 610|27\nCorporation HD # 510|27\nIris|27\nHD # 520|27\nHD # 5000|27\nHD # 5300|27\nHD # 6000|27\nHD # 4000|27\nHD # 610|27\nHD # 5000|27\nHD # 4600|27\nMesa DRI Intel(R) HD # 505 (Broxton)|27\nHD # 5500|27\nHD #|27\nHD # 5000|26\nUHD # 600|26\nHD # 4600|26\nMesa DRI Intel(R) Haswell Mobile|26\nHD # 4000|26\nHD # 5300|26\nIris(TM) # 540|26\nHD # 4000|26\nHD # 4600|26\nHD #|26\nHD # 4400|26\nHD # 4600|26\nHD # 6000|26\nCorporation Celeron N3350/Pentium N4200/Atom E3900 Series Integrated # Controller|26\nHD # 530|26\nHD # 5500|25\nBroxton-P HD #|25\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|25\nHD 4000|25\nHD # 4400|25\nHD # 4600|25\nHD # 5500|25\nHD 4000|25\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|25\nCorporation HD #|25\nHD # 4400|25\nMesa DRI Intel(R) HD # 5500 (Broadwell GT2)|25\nHD # 4400|25\nHD #|25\nUHD # 600|24\nArc(TM) #|24\nHD # 4600|24\nHD # 5300|24\nHD # 4400|24\nHD # 4400|24\nHD # 4400|24\nHD # 4000|24\nUHD # 605|24\nHD # 5000|23\nCorporation Xeon E3-1200 v2/3rd Gen Core processor # Controller|23\nUHD #, LKF|23\nUHD # 605|23\nHD # 4400|23\nHD # 4400|23\nHD # 4000|23\nHD # 4400|23\nMesa DRI Intel(R) Ivybridge Desktop|23\n0x496e74656c2048442047726170686963000732034343|23\nHD # 5300|22\nHD # 615|22\nKabylake HD # ULX GT2|22\nHD # 5300|22\nHD #|22\nHD #|22\nHD # 4000|22\nHD #|22\nHD # 515|22\nHD #|22\nHD # 5300|22\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|22\nHD # 5300|22\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|22\nHD # 4000|21\nUHD # 605|21\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|21\nHD # 4400|21\nHD #|21\nHD # 4400|21\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|21\nHD #|21\nHD # 5300|21\nHD # 4400|21\nHD # 5300|21\nHD # P4600/P4700|21\nHD #|21\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|21\nCorporation UHD # 605|20\nUHD # 600|20\nHD # 4000|20\nHD #|20\nUHD # 600 Universal|20\nHD # 4600|20\nHD # 500|20\nUHD # 600|20\nHD #|20\nHD # 5000|20\nHD # 4400|20\nHD # 5300|19\nHD # 4000|19\nMesa DRI Intel(R) Sandybridge Mobile|19\nHD # 505|19\nHD # 4000|19\nHD # 4400|19\nUHD # 600|19\nHD # 3000|19\nHD # 615|19\nHD #|19\nCorporation Atom/Celeron/Pentium Processor N4200/N3350/E3900 Series Integrated # Controller|19\nHD # 4000|19\nHD #|19\nUHD # 600|19\nHD #|19\nCorporation Haswell-ULT Integrated # Controller|19\nHD # 4400|19\nCorporation GeminiLake [UHD # 600]|19\nHD # 4000|18\nHD #|18\nHD #|18\nHD # 500|18\nHD # 4000|18\nCherryView HD #|17\nCorporation Xeon E3-1200 v2/3rd Gen Core processor # Controller|17\nXeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|17\nCorporation Xeon E3-1200 v3/4th Gen Core Processor Integrated # Controller|17\nUHD # 600|17\nUHD # 600|17\nCorporation Xeon E3-1200 v2/3rd Gen Core processor # Controller|16\nHD #|16\nUHD # 600|16\nHD #|16\nHD # 5000 (Android)|16\nHD #|16\nUHD # 600|16\nHD #|16\nHD #, Gen10|16\nHD # (PHDGD IvyDrive 3.0)|16\nHD #|15\nUHD # 600|15\nCorporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Integrated # Controller|15\nHD # 500|15\nHD # 505|15\nHD #|15\nCorporation 3rd Gen Core processor # Controller|15\nHD # 4400|15\nHD #|14\nHD #|14\nHD #|14\nHD # 505|14\nHD #|14\nHD #|14\nHD #|14\nHD #|13\nHD # 530|13\nHD # 500|13\nCorporation 3rd Gen Core processor # Controller|13\nHD # 4400|12\nHD # 5500|12\nHD #|12\nHD #|12\nCorporation HD # 500|12\nHD # 500|12\n3rd Gen Core processor # Controller|12\nHD #|11\nCorporation Atom/Celeron/Pentium Processor x5-E8000/J3xxx/N3xxx Series PCI Configuration Registers|11\nCorporation 2nd Gen Core Processor Family Integrated # Controller|11\nHD # 510|11\nHD # 4600 (PHDGD Skylake v2.9)|9\nCorporation Atom Processor Z36xxx/Z37xxx Series # & Display|8\nCorporation Atom Processor Z36xxx/Z37xxx Series # & Display|8\nMesa DRI Intel(R) Bay Trail|8\nUHD #, Gen12 LP ReleaseInternal|5\nCorporation D3D12 (Intel(R) UHD # 630)|3\nHD # 3000|2\n(PE64) Intel(R) 4th Generation Haswell HD # Family|-1\n4 Series Internal Chipset|-1\n7 Series/C216 Chipset Family MEI Controller #1|-1\nB43 Express Chipset|-1\nCometLake-S GT2 [UHD # 630]|-1\nHD # 5500|-1\nHD # 620|-1\nG35 Express Chipset Family|-1\nG41 Express Chipset|-1\nG45/G43 Express Chipset|-1\n# Media Accelerator HD|-1\nHD # (PHDGD Omega 5.0)|-1\nHD # 4400|-1\nHD # P3000|-1\nHD # P3000 (PHDGD Omega 5.0)|-1\nIncrediblE HD # 3000|-1\nIris Pro # 5200|-1\nMesa DRI Intel(R) HD # (CHV)|-1\nMesa DRI Intel(R) Ivybridge Mobile|-1\nMobile Intel(R) 4 Series Express Chipset Family|-1\nMobile Intel(R) 965 Express Chipset Family|-1\nMobile Intel(R) HD #|-1\nPHDGD Quantic C3|-1\nQ45/Q43 Express Chipset|-1\nRadeong 0.4 on AMD CAPE VERDE (DRM 2.43.0, LLVM 3.7.0)|-1\nRadeong 0.4 on AMD CAPE VERDE (DRM 3.9.0 / 4.9.0-rc1+, LLVM 4.0.0)|-1\nRadeong 0.4 on AMD FIJI (DRM 3.2.0 / 4.7.0-rc5+, LLVM 4.0.0)|-1\nUHD #, Gen12 LP ReleaseInternal|-1"
          , s = "\n$ % 4090|1950\n$ % 4090 Laptop GPU|1790\n$ % 4070 Ti|1520\n$ % 3090 Ti|1465\n$ % 4080|1430\n$ % 4060 Laptop GPU|1410\n$ % 3080 Ti Laptop GPU|1390\n$ % 3080|1325\n$ % 3080 Ti|1300\n% A5500 Laptop GPU|1240\n$ % 3090|1235\n$ % 3070 Ti|1230\n$ % 3070|1230\n$ % 3060 Ti|1160\n$ % 3080 Laptop GPU|1140\n% A4000 Laptop GPU|1130\n$ % 2080 Ti|1120\n$ % 3070 Laptop GPU|1080\nTITAN V|1070\n$ % 2080 SUPER|1060\nQuadro % 8000|1050\n% A6000|1050\nTITAN %|1050\n$ % 3070 Ti Laptop GPU|1030\n% A5000 Laptop GPU|1030\n$ % 4090 Laptop GPU|1020\n$ % 3060|1015\nTITAN X (Pascal)|1010\nTITAN Xp|995\n$ & 1080 Ti|990\n$ % 4070 Laptop GPU|990\n$ % 4090|980\n$ % 2070 SUPER|980\n$ % 4080|975\n$ % 3060|970\n$ % 2080|970\n$ % 4080 Laptop GPU|970\n$ % 3060 Laptop GPU|910\n$ % 2060 SUPER|890\n$ % 4060 Laptop GPU|880\n$ % 2070|880\n$ % 2080 Super with Max-Q Design|870\n$ % 2080 with Max-Q Design|870\nQuadro % 5000|870\n$ % 3080 Ti Laptop GPU|860\nQuadro % 5000 with Max-Q Design|840\nAsus $ & 1080|840\n$ & 1080|840\n$ % 2070 Super with Max-Q Design|840\n% A3000 Laptop GPU|835\nQuadro % 4000 with Max-Q Design|830\n$ % 3070 Ti Laptop GPU|830\nQuadro % 4000|820\n% A6000|810\n$ & 1070 Ti|785\n$ % 4070 Ti|784\n$ % 4050 Laptop GPU|784\n% A5500 Laptop GPU|780\nTITAN Xp COLLECTORS EDITION|770\n$ % 2070 with Max-Q Design|765\n$ % 3050|760\n$ % 2060|760\n$ & 980 Ti|755\nQuadro P6000|750\n$ & 1080|750\nQuadro % 6000|744\n$ & 1070|740\n% A4000|740\n$ % 3090|740\n$ % 3080 Ti|730\n$ & 1080 Ti|730\nQuadro P4200|710\n$ & 1080 with Max-Q Design|707\n$ % 3060 Lite Hash Rate|705\nEIZO MED-XN83|700\n$ % 3080 Ti|700\n$ & 1660 SUPER|700\nTITAN Xp|700\nEVGA $ & 1070|700\n$ % 3090 Ti|700\nQuadro GV100|695\nQuadro P4000|695\n$ & 1660 Ti|690\n$ % 3070 Ti|690\n% 6000 Ada Generation|690\n$ % 3070|690\nQuadro % 8000|685\n% A2000 12GB|680\n$ % 2080|680\n$ & TITAN X|680\nQuadro M6000 24GB|680\n$ & 1660 SUPER|670\nTITAN V|670\nQuadro % 3000|670\nGraphics Device|670\n% A5000|670\n$ % 3090|670\nTITAN Xp COLLECTORS EDITION|670\n$ & 1070 A17|670\n$ % 3080 Laptop GPU|667\n% A4500 Embedded GPU|660\n% A5000 Laptop GPU|660\n$ % 3080|660\n$ % 3050 Ti Laptop GPU|650\n$ & 1070 with Max-Q Design|650\n$ % 3060 Ti|650\nQuadro P4200 with Max-Q Design|650\n$ % 3080|650\n$ % 2080 SUPER|650\n$ & 1070 Ti|648\n$ & 1070 with MaxQ Design|642\n% A3000 Laptop GPU|641\n$ % 3070 Laptop GPU|641\n$ & 1070|640\nGA104GL [% A4000]|639\n$ & 980 Ti|637\n$ % 2070 Mobile / Max-Q Refresh|637\n% A4000 Laptop GPU|634\n$ % 3060|633\nMicrosoft Virtual Render Driver|633\n$ % 3050 Laptop GPU|631\n% A2000|629\n$ % 2070 Mobile / Max-Q|626\n$ % 3070|625\nQuadro P5000|625\nQuadro P4000|621\n$ % 3060 Laptop GPU|621\n$ % 2060 with Max-Q Design|618\nGV102|614\n$ % 2070 SUPER|612\n$ & 1660|606\n$ % 2070|604\n$ & 1660 Ti with Max-Q Design|601\n$ & TITAN X|598\n% A2000 8GB Laptop GPU|598\n$ & TITAN Xp|595\n$ & 980|593\n$ % 2080 SUPER|591\n& 1060 HL|589\nTesla T4|589\nGRID P4-1Q|585\n% A4000|581\n$ % 2080 Ti|577\n$ % 2080 Super with Max-Q Design|576\nQuadro % 4000 Mobile / Max-Q|576\nTU102 [TITAN %]|574\n$ & 1060 with Max-Q Design|571\n$ % 2070 SUPER|570\n$ & 1060 6GB|570\n$ % 2080 Mobile|568\n$ % 2060|568\nQuadro P3200|565\nP106-100|564\nGRID V100DX-1Q|564\n% A2000|562\n$ % 2080 Ti Rev. A|561\n$ % 2080 Rev. A|559\nGV100 [TITAN V]|557\n$ % 2080|556\n$ & 1650 SUPER|554\nP106-100 Custom|553\n$ % 2070 Super with Max-Q Design|553\nGV100|553\n$ % 2070 Mobile|550\nGP102 [TITAN X]|548\n% A2000 12GB|546\n$ & 1060 5GB|542\nMSI $ & 1060|542\n$ % 2060 SUPER|542\nGRID T4-1Q|539\nQuadro % 5000 Mobile / Max-Q|538\n$ % 3050|538\n$ & 1060 3GB|538\nQuadro % 5000 with Max-Q Design|537\nQuadro M6000|536\n% A2000 Laptop GPU|536\n$ & 1660 SUPER|533\nA10-2B|530\nTITAN X (Pascal)|530\nQuadro P5000|527\n$ % 2070|526\n$ & 1080|525\n$ % 2060 Mobile|524\nPNY $ & 980|524\n$ & 1080 Mobile|523\n$ % 2060 SUPER|520\n$ & 780 Ti|518\n% A4500|516\n$ % 2060 Rev. A|515\nMSI $ & 980|515\nQuadro P3200 with Max-Q Design|513\n$ % 2070 with Max-Q Design|513\n$ % 3050 Ti Laptop GPU|510\nQuadro % 3000 Mobile / Max-Q|509\n$ & 1660 SUPER|508\nQuadro % 4000|508\n$ & 1060|506\n$ % 2080 with Max-Q Design|505\n$ & 1080 Ti|505\n$ & 1660 Ti Rev. A|504\n$ & 1660 Ti Mobile|504\n$ % 3050 Laptop GPU|503\n$ % 2060|503\nQuadro % 4000 with Max-Q Design|500\nEIZO MED-XN83|499\n$ & 970|499\n$ & 1080|495\n$ & 1070 Ti|492\n$ & 980|491\nA100-PCIE-40GB|489\n$ & 1070|487\n$ & 1660 Ti|487\nQuadro P2200|485\n$ & TITAN Black|484\nTITAN Xp COLLECTORS EDITION|483\nTITAN %|482\nQuadro P5200|482\n$ & 1060 with Max-Q Design|480\n% A1000 Laptop GPU|479\n$ & 1060 6GB|479\nQuadro % 5000|475\nTITAN V|475\nGRID P100-4Q|474\nEVGA $ & 970|472\n$ & 1650 SUPER|471\n$ & 1650 Ti|470\nQuadro % 3000|470\nQuadro M5000|469\nQuadro % 3000 with Max-Q Design|468\n$ & 980 Ti|467\n$ & TITAN|467\nQuadro P4200|466\n$ & 1070 with Max-Q Design|466\nQuadro M5000|466\n$ & 1080 Ti|466\nTesla M60|462\n$ & 1660|457\n$ & 1660|455\n$ % 2050|453\n$ & 1060|453\n$ % 2060 with Max-Q Design|453\nQuadro P3200 with Max-Q Design|452\nQuadro P4000|450\n$ & 1060 3GB|449\n$ & 1070|448\n$ & 1060 6GB Rev. 2|447\nGigabyte $ & 780 Ti|447\nTITAN Xp|444\n$ & 980M|440\nA10-4Q|439\n$ & 1080 with Max-Q Design|437\n$ & 1650 SUPER|435\nQuadro P5000|435\nQuadro P3000|434\n% A6000|434\n$ & 1060 3GB|433\n$ & 1070 Ti|432\n$ & 780|432\n$ & 1060 Mobile|432\nGigabyte $ & 970|431\n$ & TITAN Z|431\nQuadro K6000|429\n$ & 1650|425\n$ & 970|421\nTesla K20m|420\nQuadro GV100|419\nQuadro P4000|419\nQuadro P3200|417\n& 1060 HL|415\n% A2000 Laptop GPU|415\n$ & 780 by St3Phl3|414\nP102-100|412\nT1200 Laptop GPU|412\n$ & 780 Ti|411\n$ & 1060 6GB|408\n$ & 1650 Ti with Max-Q Design|407\nQuadro T2000 with Max-Q Design|407\nQuadro P2000|406\nQuadro P2200|406\n$ % 2060 Max-Q|405\n$ & 1650 Ti Mobile|403\n$ & 1060 Mobile 6GB|403\n$ & 1060 with Max-Q Design|401\n$ & 980|398\n$ % 2070 Rev. A|397\n$ & TITAN X|397\nTesla T4|395\nQuadro P6000|394\n$ & 1060 3GB|394\nQuadro M5000|393\n$ & 1060 with Max-Q Design|392\nPNY $ & 970|392\nQuadro T2000|391\nQuadro T1000 with Max-Q Design|391\nGRID P40-8Q|390\n$ & 780 Rev. 2|389\nQuadro GP100|387\n$ & 980|387\nP104-100|387\n$ & 1650 Ti|386\nGRID P40-4Q|384\n$ & 780 Ti|383\nDevice|383\nTU117M|381\nQuadro P2000|380\nQuadro % 6000|379\n$ & 1070 Mobile|378\nQuadro T1000|377\n$ % 3070 Mobile / Max-Q|376\n$ & 1060|376\nGRID V100-1Q|375\n$ & 780 Rev. 2|372\n$ % 2050|370\n$ & 770|370\n$ & 970|368\n$ & 1650 Ti|368\nGRID T4-2B4|368\nAsus $ & 780|366\nP106-100|365\nQuadro % 8000|365\n$ & TITAN Black|365\nGRID RTX6000-2Q|365\n$ & TITAN Black|363\nQuadro M4000|363\n$ & 1060 6GB|362\nQuadro P5000|361\n$ & 1650|361\nQuadro M5500|361\n$ & 780|360\n$ & 780|360\n$ & 980M|358\n$ & 1650|358\n$ & 1050 Ti|357\nQuadro P3200 Mobile|357\n$ & 1650 with Max-Q Design|356\nTesla T4|356\nQuadro P2000|356\n$ & TITAN|355\n$ & 970|355\n$ & 980 Ti|354\n$ & 1660 Ti with Max-Q Design|354\n$ & 780 Rev. 2|352\nGRID P4-4Q|351\n$ & TITAN X|351\nT1200 Laptop GPU|350\nGRID T4-8Q|350\n$ & 1060|349\n$ & 1050 Ti with Max-Q Design|348\n$ & 970M|346\nT1000 8GB|346\n$ % 3080 Mobile / Max-Q 8GB/16GB|346\n$ & 780 Ti|346\n$ & 680|346\n$ & 1660 Ti|345\n$ & 780|345\nQuadro M6000|344\nGRID T4-16Q|344\n$ % 2080 Ti|344\nGRID T4-1B|343\nQuadro K5200|342\nQuadro P2200|341\nT1000 8GB|341\nTesla K80|341\nQuadro T2000 Mobile / Max-Q|338\nTU107|337\n$ & 780 Mac|336\n$ & TITAN|336\n$ & 980M|335\nGRID P40-2Q|335\nEVGA $ & 780|334\n$ & TITAN Z|334\nTITAN X (Pascal)|332\n$ & 960|331\nTesla P40|331\n$ & 1650 Ti with Max-Q Design|330\nTesla P40|330\n$ & 1060se 3GB|329\n$ & 1650 Mobile / Max-Q|329\nQuadro T2000 with Max-Q Design|328\nT1000|327\n% A5500|326\nA40-8Q|326\n$ % 3060 Mobile / Max-Q|326\n$ & 690|326\nTesla V100-SXM2-16GB|326\nQuadro M5000|325\nA16-2B|323\n$ & 1050 Ti with Max-Q Design|321\n$ & 1050 Ti Mobile|321\n$ & 980M|319\nQuadro M3000M|318\n$ & 1650 with Max-Q Design|318\n$ & 670|316\nQuadro P3000|316\nT600 Laptop GPU|315\nQuadro T1000 with Max-Q Design|313\nTesla K80|312\nTesla K20m|311\n$ & 770|311\nTesla P100-PCIE-16GB|311\nQuadro M5000M|311\nTesla K80|309\nEVGA $ & 1070|309\nQuadro T1000|309\n$ & 1050 Ti|309\n$ & TITAN Z|308\nQuadro T2000|308\nQuadro M6000 24GB|308\n$ & 760 Ti|308\n$ % 2080 SUPER Mobile / Max-Q|308\n$ & 1050 Ti|307\nQuadro P2000|304\nQuadro P6000|304\n$ & 770 Mac Edition|303\nMSi $ & 1050 Ti|303\nA40|303\nT600|303\nP106-090|302\nP106-090|301\nQuadro K5200|300\n$ & 770|299\n$ & 680|299\n$ & TITAN|299\n$ & 680|297\nGRID M60-4Q|296\nQuadro M4000|296\nGRID M60-2Q|295\n$ & 760|294\nGRID V100DX-16Q|293\nQuadro % 6000/8000|293\n$ & 770|293\nGP104|292\n$ & 780 Rev. 2|290\n$ & 1050 Ti|288\n$ & 950|288\nEVGA $ & 1050 Ti|288\n$ & 1650 with Max-Q Design|286\n$ & 880M|285\n%NVIDIA_DEV.13D7.0580.1028%|283\nGP104GL|283\nGigabyte $ & 960|282\nQuadro K5200|281\n$ & 660 Ti|281\n$ & 670|281\nQuadro M4000|280\n$ & 580|280\nMSi $ & 960|280\nTesla M6|278\nPNY $ & 680|278\nT500|277\n$ & 1050|276\n$ & 1050 Ti with Max-Q Design|276\n$ & 690|276\n$ & 680|276\n$ & 670|275\n$ & 760 Ti|274\n$ & 1050 3GB|272\n$ & 880M|272\nTesla M60|272\nAsus $ & 960|271\nQuadro M4000|269\nT600|268\nTesla K20m|268\n$ & 760|268\nGP102 [TITAN Xp]|267\n$ & 960|267\n$ & 670|265\nQuadro T1000 Mobile|265\n$ & 1050|264\nTesla M60|264\nEVGA $ & 1080 Ti|263\n$ & 970M|263\n$ & 780M|262\n$ & 690|262\nAsus $ & 770|261\n$ & 1070 with MaxQ Design|261\nEVGA $ & 960|261\n$ & 960|260\nGRID T4-2Q|259\n$ & 970M|259\n$ & 960|259\nQuadro M3000M|258\n$ & 1060se 3GB|257\nTesla K10|257\nQuadro M3000M|257\nQuadro M2200|256\n$ & 690|255\n$ & 760|254\n$ & 880M|254\nQuadro K4200|253\nQuadro P2000 with Max-Q Design|253\nT550 Laptop GPU|253\nQuadro K5200|252\nMSI $ & 760|250\n$ & 580|249\n$ & 780M Mac Edition|249\n$ & 570|249\nTesla V100-PCIE-16GB|248\n$ GTX880M|248\n$ & 760|247\n$ & 570 Rev. 2|247\nAsus $ & 670|246\n$ & 580|246\n$ & 1050|245\nTesla P4|244\n$ & 680MX|244\n$ & 480|242\n$ & 1050|242\nQuadro 7000|241\nQuadro M4000M|241\n$ & 1050 Mobile|240\n$ & 660|240\n$ & 760 (192-bit)|239\nQuadro K5000|239\n$ & 760 OEM|238\n$ & 660 Ti|238\n$ & 775M Mac Edition|238\n$ & 965M|237\n$ & 870M|236\n$ & 950|236\n$ & 560 Ti 448 Cores|236\n$ & 780M|236\nQuadro P2000 with Max-Q Design|234\nMSI $ & 980 TI|234\nGRID K2|233\n$ & 1060 6GB OpenGL Engine|233\nPNY $ & 1060|233\nEVGA $ & 980|232\nGRID RTX6000P-6Q|232\n$ & 950|232\n$ & 950|232\n$ & 590|231\n$ & 1070 OpenGL Engine|231\nTITAN X (Pascal)|229\n$ & 1050 with Max-Q Design|229\n$ & TITAN Black|228\nQuadro K4200|227\n$ & 660 OEM|227\n$ MX450|225\n$ & 1050 with Max-Q Design|225\nQuadro P1000|225\nGraphics Device|225\nQuadro M2000|222\n$ & 1630|222\nQuadro M4000M|221\nQuadro K5100M|221\nEVGA $ & 760|221\n$ & 1070 Ti|221\n$ & 660 Ti|220\n$ & 570|220\n$ & 660 Ti|219\nQuadro K6000|219\n$ & 570 Rev. 2|219\n$ & 1050 with Max-Q Design|219\nTesla M40|218\n$ & 680M|217\n$ & 780M by Nick[D]vB|217\nAsus $ & 980 TI|217\n$ & 1060 3GB|217\nGraphics Device|217\n$ & 570 Rev. 2|216\n$ & 1060 3GB OpenGL Engine|216\n$ & 660|215\nPoint of View $ & 660 Ti|214\nGigabyte $ & 980|214\nQuadro K5000|213\nQuadro P1000|213\n$ & 480|213\n$ MX450|212\nQuadro K4200|211\nGRID K280Q|211\nAsus $ & 760|210\nQuadro P1000|210\n$ & 680MX|209\n$ & 1060 6GB|209\n$ & 660|209\n$ & 750 Ti|208\n$ & 780M Mac Edition|208\n$ & 775M Mac Edition|208\nGRID K520|208\nQuadro M2200|207\nGRID M60-8Q|207\nGRID K2|207\n$ & 775M Mac Edition|206\n$ & 560 Ti 448 Cores|205\n$ & 760 (192-bit)|205\nQuadro K5000|205\nGigabyte $ & 980 TI|204\n$ & 780M Mac Edition|204\nAsus $ & 660|204\nGRID M60-1B|202\n$ & 650 Ti BOOST|202\n$ & 480|202\n$ & 960M|201\n$ & 660 OEM|201\n$ & 780 Ti|201\nQuadro K5000|201\n$ & 780M Mac Edition|201\n$ & 870M|200\n$ & 680MX|200\n$ & 680MX|199\nQuadro P1000|198\nTesla P100 PCIe 16GB|198\nQuadro K5100M|198\n$ & 470|198\nQuadro P620|197\nAsus $ & 780|197\nQuadro 6000|196\nQuadro M1200|195\nQuadro K2200|195\n$ & 590|195\nQuadro M2000M|194\nQuadro M4000 OpenGL Engine|194\n$ & 870M|194\n$ & 1070|194\nEVGA $ & 750 Ti|194\nZotac $ & 680|193\nQuadro % 3000 with Max-Q Design|193\nT400|193\nQuadro M2200|193\nQuadro K4100M by nikey22|192\nGRID K2|192\n& 865M by iMacGFX|191\nQuadro M2000|191\n$ & 980M|190\n$ & 560 Ti|190\nPalit $ & 660|190\nGRID K260Q|189\nGRID M10-2Q|189\n$ & 660|189\n$ & 965M|189\n$ & 650 Ti BOOST|188\n$ & 675MX Mac Edition|188\nQuadro K5100M by nikey22|187\n$ & 680M|187\nZotac $ & 660|186\n$ & 650 Ti BOOST|186\n$ & 760 (192-bit)|185\nGRID M60-1Q|184\nGigabyte $ & 960|184\nQuadro M2000M Special Edition|184\n$ & 560 Ti|184\nInno3D $ GTX660|183\n$ & 1060|183\n$ & 675MX Mac Edition|182\nQuadro P600|181\n$ & 1080|181\n$ & 675MX Mac Edition|181\nQuadro P620|180\nGK104 Board - 20530501|180\nAshley|180\nQuadro M2000|179\n$ & 860M|179\nMSi $ & 1050 Ti|179\nAsus $ & 750 Ti|178\n$ & 750 Ti|178\n$ & 750 Ti|177\nEVGA $ & 980 TI|177\nAsus $ & 770|177\n$ & 760 OEM|176\n$ & 750|176\nQuadro P2000 Mobile|176\nQuadro K4100M|175\nT400 4GB|174\n$ & 1080 Ti OpenGL Engine|174\nQuadro K5000M|173\n$ & 960A|173\n$ & 560 Ti|172\nTesla M10|172\n$ & 1080 Ti|172\nGRID RTX6000P-6|172\nGK104 Board - 2051b502|172\n$ & 770M|172\n$ & 960M|172\n$ & 970|172\nGRID M10-2Q|171\n$ & 560 Ti OEM|171\nMSi $ & 970|171\nGK104GL [GRID K2]|171\n$ & 470|170\n$ & 560 Ti|170\nTITAN Xp|170\n$ & 870M|170\n$ MX350|169\nMSi $ & 580|169\n$ & 960M|169\nEVGA $ & 760|169\nQuadro K4000M|169\nT400|169\n$ MX350|168\n$ & 470|168\n$ & 560|167\nQuadro 6000|167\n$ & 1050 Ti OpenGL Engine|167\nQuadro M1200|167\nGigabyte $ & 970|166\n$ GT 1030|166\n$ GTX780M by nikey22|166\n$ GTX870M by nikey22|166\nTesla V100-PCIE-32GB|165\nQuadro K2200|165\nQuadro M1000M|165\nQuadro K2200|165\nAsus $ & 970|164\n$ & 750 Ti|164\nQuadro M2000M|164\n$ & 1050|164\n$ & 1050 Ti|163\nQuadro K5000|163\nGraphics Device|162\n$ MX250|162\nT500|161\nEVGA $ & 570|161\nQuadro M2000M|161\nQuadro K1200|159\n$ & 860M|159\n$ & 770M|159\nQuadro M1200|158\n$ & 675MX|158\n$ MX330|158\nQuadro K2200M|157\nQuadro K4000|157\n$ & 690|157\n$ & 860M|157\nMSi $ & 670|156\nQuadro K2200|156\nQuadro K4100M|156\n$ & 770M by Nick[D]vB|155\nTesla V100-SXM2-32GB|155\n$ & 1080 OpenGL Engine|155\nGigabyte $ & 670|155\nEVGA $ & 960|155\n$ & 750|155\n$ Pre-Release TITAN X (Pascal) OpenGL Engine|154\n$ & TITAN Xp|154\nAsus $ & 950|154\nQuadro K4100M|153\n$ & 960|153\n$ & 770M|153\n$ MX330|153\nQuadro M2200 Mobile|153\n$ MX250|153\n$ Pre-Release TITAN Xp OpenGL Engine|153\nQuadro P600|153\nQuadro M620|152\n$ & 1070 Ti OpenGL Engine|152\n$ & 770|152\n$ GT 1030|152\nTesla C2070|152\n$ & 650 Ti|152\nGRID K240Q|151\n$ & 480 OpenGL Engine|151\n$ & 750|151\n$ & TITAN|151\n$ & 760 (192-bit)|151\n$ & 560|151\n$ GT 1030|151\nQuadro K5000M|151\nQuadro P1000 Mobile|151\nZotac $ & 660|151\n$ & 460 v2|150\nGRID & P40-6|150\nMSi $ & 660|149\n$ & 780M|149\nMSI $ & 760|149\nP106-090|149\n$ & 950A|149\n$ MX150|149\nAsus $ & 1060|149\nUnknown|149\n$ & 980 Ti|148\nGRID T4-4Q|148\n$ & 465|147\nColorful $ & 960|147\nGigabyte $ & 750|147\nQuadro M1000M|147\n$ & 780 Mac|147\n$ & 460|146\nMSi $ & 960|146\n$ & 560|146\nQuadro K4000|145\n$ & 970M|145\nQuadro M1000M|145\nUnknown|145\n$ & 980|144\n$ & 950|144\n$ & 675M|144\nZotac $ & 960|144\n$ Pre-Release Graphics Device|144\n$ & 670 OpenGL Engine|143\nQuadro K4000|143\nEVGA $ & 580|143\n$ & 950M|143\n$ & TITAN Black OpenGL Engine|142\n$ & 760|142\nQuadro 5000|142\nMSI $ & 570 HD|142\n$ Pre-Release TITAN Xp COLLECTORS EDITION OpenGL E|142\n$ & 1050 OpenGL Engine|142\n$ & TITAN X|142\n$ & 880M|141\nGV-N660OC-2GD|141\n$ & 750|141\nQuadro M5000M|140\n$ & 970 OpenGL Engine|140\n$ & 675MX|140\nAsus $ & 760|140\nQuadro P5000 OpenGL Engine|139\n$ & 580|139\n$ & 675MX|139\nZotac $ & 750|139\nQuadro K1200|139\n$ MX150|139\n$ & 650 Ti|139\nQuadro K1200|139\n$ & 980 Ti OpenGL Engine|139\n$ & 580M|138\nAsus $ & 580|138\n$ & 770 OpenGL Engine|138\n$ GT 1010|138\n$ & 780 Rev. 2|138\nQuadro P2000 OpenGL Engine|138\n$ MX250|138\nQuadro K4000|137\n$ & 460 v2|137\n$ & 770M|137\nGigabyte $ & 570 HD|136\n$ & 465|136\n$ & 460 v2|136\n$ & 670|136\n$ & 590 OpenGL Engine|136\n$ & 780|135\n$ & TITAN Black|135\n$ & 660 Ti|135\nZotac $ & 560 Ti|134\n$ & 880M OpenGL Engine|134\n$ & 650 Ti|134\n$ & 760 OpenGL Engine|134\nnull Graphics Device|134\nQuadro M620|133\n$ & 780M Mac Edition|133\n$ MX150|132\nAsus $ & 570 HD|132\n$ & 775M OpenGL Engine|132\n$ & 850M|132\nAsus $ & 570|132\nQuadro K6000 OpenGL Engine|131\n$ & 850M|131\n$ & 460|131\n$ & 950A|130\n$ & 780M OpenGL Engine|130\nPoint of View $ & 660 Ti|130\n$ & 775M Mac Edition|130\nEVGA $ & 650 Ti|130\nEVGA $ & 750 Ti|129\n$ & 460|129\nQuadro P520|129\nGainward $ & 570|129\nAsus $ & 750 Ti|129\nQuadro K3100M|128\nQuadro K2200|128\nAsus $ & 560 Ti|127\n$ & 680|127\n$ & 680 OpenGL Engine|127\n$ & 950M|127\nGRID V100-2B|127\nGigabyte $ & 660 Ti|127\nN15E-GT|126\nQuadro K1200|126\n$ & 650 Ti|126\nGigabyte $ & 770|126\n$ & 660|126\nQuadro 5000|125\n$ GT 1030|125\n$ & 950M|125\n$ & 765M|125\nQuadro M5000|125\nGigabyte $ & 560 Ti|125\n$ & 580M|125\nQuadro M2000|124\n$ & 850M|124\n$ & 570 OpenGL Engine|123\nGainward $ & 750 Ti|123\nQuadro K2200M|123\n$ & 780M Mac Edition|123\n$ & 680MX OpenGL Engine|123\nQuadro K4200|123\n$ & 460 OEM|122\n$ & 670MX|122\nMSi $ & 560 Ti|122\n$ & 460 SE|122\nQuadro M4000|122\n$ GTX880M OpenGL Engine|122\nQuadro P620|121\n$ & 560 SE|121\n$ GTX880M by nikey22|121\n$ & 555|121\n$ & 965M OpenGL Engine|121\n$ & 850A|121\nQuadro K5000 OpenGL Engine|120\n$ & 580 OpenGL Engine|120\nQuadro K3100M|120\n$ & 650 Ti BOOST|119\n$ & 570M|119\n$ & 675MX OpenGL Engine|119\n$ & 775M Mac Edition|119\nZotac $ & 1050 Ti|118\n$ & 965M|117\nQuadro M600M|117\n$ & 780M by Nick[D]vB|117\n$ & 460 SE|117\n$ & 555|116\n$ & 670M|116\nQuadro K3000M|116\n$ & 780 Ti OpenGL Engine|116\nQuadro K4000M|115\n$ & 860M|115\nAsus $ & 660|115\nTesla C2075|114\n$ & 675MX Mac Edition|114\nZotac $ & 770|114\nGigabyte $ & 750 Ti|114\n$ MX330|114\n$ GT 1030|113\n$ & TITAN OpenGL Engine|113\n$ & 590|113\nQuadro K620|113\n$ & 780M|112\n$ & 560 Ti|112\nQuadro 6000|112\nEVGA $ & 560 Ti|112\nAsus $ & 960|112\nQuadro K5000|112\nPoint of View $ & 470|111\nPNY $ & 580|111\n$ & 770M|111\n$ GT 120|111\nMSi $ & 660|111\nGigabyte $ & 560|111\n$ & 680MX|110\n$ 945M|110\n$ & 765M|110\n$ & 950 OpenGL Engine|110\n$ Pre-Release Tesla C2075 OpenGL Engine|109\n$ & 550 Ti|109\n$ & 765M|108\nPNY $ & 750|108\n$ & 560 Ti 448 Cores|108\nQuadro P500|108\n$ & 670MX|108\n$ & 680MX|107\n$ & 460 SE|107\n$ & 675MX Mac Edition|107\n$ & 770M OpenGL Engine|107\n$ 945M|107\n$ & 675MX|107\nPNY $ & 570 HD|106\n$ & 745|106\n$ MX230|106\n$ & 670MX|106\n$ 845M|106\nQuadro K3100M OpenGL Engine|105\nQuadro P2000|105\n$ MX570 A|105\n$ & 750 Ti|104\n$ & 660 OEM|104\nQuadro M600M|104\n$ & 750|104\n$ & 645|104\nGP108|104\nQuadro P520|104\nZotac $ & 460|103\nChip Model|103\n$ & 670M|103\nQuadro T1000|103\n$ & 670M|103\n$ & 650|103\nZotac $ & 750|102\n$ & 460 OpenGL Engine|102\n$ & 860M OpenGL Engine|102\nQuadro 4000|102\nAsus $ & 480|102\nZotac $ & 650 Ti|102\n$ GT 755M|101\nGF100 Board - 10220000|101\n$ & 470M|101\n$ & 570 Rev. 2|101\n$ & 775M by iDopt Mac|101\n$ & 765M by Nick[D]vB|101\n$ & 570|101\n$ & 645|101\n$ & 550 Ti|100\n$ & 760M|100\n$ GT 1030 OpenGL Engine|100\n$ & 650|100\nQuadro P400|100\n$ & 480|99\nEVGA $ & 650|99\nEVGA $ & 560|99\n$ MX130|99\n$ MX130|98\nAsus $ & 460|98\nElitegroup $ & 460|98\nTesla V100-SXM2-32GB|98\n$ GT 755M|98\n$ & 760 Ti OpenGL Engine|98\nQuadro P520|97\n$ GT 755M Mac Edition|97\n$ & 1060 5GB|97\nPalit $ & 650 Ti|97\nMSi $ & 460|96\n$ & 650|96\nGigabyte $ & 580|96\nGigabyte $ & 460|96\n$ & 745|96\nEVGA $ & 550 Ti|96\n$ & 465|96\n$ & 460 SE|96\n$ & 765M|96\n$ GT 755M Mac Edition|96\nQuadro M520|95\nQuadro K620|95\nT1000|95\n$ & 745|95\nQuadro K620|95\n$ GT 755M|94\n$ & 660 Ti OpenGL Engine|94\nQuadro K3000M|94\nQuadro K4000|94\nQuadro K4000 OpenGL Engine|94\n$ & 560|94\n$ & 650 Ti OpenGL Engine|94\nZotac $ & 560|94\nAsus $ & 560|93\n$ & 650 Ti|93\n$ GPU|92\n$ & 460|92\nMSi $ & 650 Ti|92\n$ & 645|92\nGigabyte $ & 760|92\n$ & 660M|92\n$ GTS 450|92\n$ & 765M|92\nQuadro K2000D|92\nQuadro K2000|91\n$ GT 740|91\n$ & 650|91\nGRID M6-0B|91\nHP Quadro K620|91\n$ MX130|91\nQuadro K3000M by ST3PHL3|91\nQuadro 4000|90\n$ MX230|90\nQuadro K620|90\nQuadro K2100M by Nick[D]vB|90\nQuadro K3000M by nikey22|89\n$ GT 650M OpenGL Engine|89\nQuadro 4000|89\nQuadro K3000M|88\n$ & 660M|88\nQuadro K6000|87\n$ GT 755M Mac Edition|87\nPalit $ & 650|87\nQuadro P500|87\n$ & 570M|86\nGainward $ & 460|86\n$ & 950M|86\nQuadro K2000D|86\n$ & 650 Ti BOOST|86\nQuadro K2100M|86\n$ & 470|85\nQuadro K2000|85\nQuadro K2000|85\n$ GT 750M Mac Edition|85\n$ & 745|85\nGRID K220Q|85\n$ & 750 OpenGL Engine|85\nQuadro 5000M|84\nQuadro P400|84\n$ GTS 450|84\n$ GT 640 Rev. 2|84\n$ & 660M Mac Edition|84\nQuadro P400|84\nAsus $ & 560 SE|84\nPNY $ & 460|83\n$ GT 640 Rev. 2|83\n$ GTS 450 Rev. 2|83\n$ GTS 450|83\n$ GTS 450 Rev. 2|83\n$ & 645|82\n$ GPU|82\n$ & 560M|82\nQuadro K3000M|82\nQuadro K2100M by nikey22|82\nGigabyte $ & 750|82\n$ GT 740|82\n$ GT 750M Mac Edition|82\n$ & 765M OpenGL Engine|82\n$ & 645 OpenGL Engine|82\nQuadro K620|81\n$ & 550 Ti OpenGL Engine|81\nQuadro 4000M|81\nPNY $ & 550 Ti|81\n$ MX110|80\n$ & 760M|80\nMSi $ & 745|80\nQuadro K2100M OpenGL Engine|80\nQuadro K2000|80\nQuadro 5000|80\nQuadro K620 OpenGL Engine|80\nMSi $ & 745|80\n$ GT 755M OpenGL Engine|80\n$ & 660M|79\nGigabyte $ & 550 Ti|79\nMSi $ & 650|79\n$ & 560M|79\nQuadro P400|78\nQuadro K2100M|78\nQuadro K2100M|78\nZotac $ & 1050 Ti|78\nQuadro 3000M|77\n$ 940A|77\n$ & 460M|77\n$ & 550 Ti|77\n$ GT 545|77\n$ GT 650M Mac Edition|77\n$ 940MX|76\n$ & 650 OEM|76\n$ & 550 Ti|76\n$ GT 755M Mac Edition|76\n$ GT 740 OpenGL Engine|75\nGainward $ & 550 Ti|75\nQuadro K1200|75\n$ GT 650M Mac Edition|75\nEVGA $ & 650|75\n$ GT 750M Mac Edition|74\n$ & 745|73\n$ & 555|73\n$ & 650|73\nGainward $ GTS 450|73\n$ GT 650M|73\n$ GT 755M Mac Edition|73\n$ & 460M|72\n$ 930A|72\n$ 930MX|72\n$ 940MX|72\n$ MX110|72\n$ GT 750M Mac Edition|72\nQuadro 2000|72\n$ 845M|71\nQuadro 2000D|71\n$ GT 640 Rev. 2|71\n$ MX110|71\n$ GT 1010|71\n$ GT 545|71\nQuadro K1200 OpenGL Engine|71\n$ 940MX|71\n$ & 650 OpenGL Engine|71\nEVGA $ & 650 Ti BOOST|71\nQuadro K2100M|70\n$ GT 1010|70\nQuadro M500M|70\n$ GT 650M Mac Edition|70\n$ GT 640 OEM|70\nQuadro K2000D|70\nQuadro K2000 OpenGL Engine|70\n$ GT 750M Mac Edition|70\n$ GT 650M|69\nQuadro K1100M by Nick[D]vB|69\n$ GT 650M|69\n$ 940M|69\n$ GT 650M|69\nQuadro 4000|69\n$ GT 650M Mac Edition|69\n$ GT 745M|69\nGainward $ & 560 Ti|68\n$ 920MX|68\nQuadro M520|68\n$ GT 640|68\n$ 840M|68\n$ 9800 & / 9800 &+|68\n$ & 770M by Nick[D]vB|67\nZotac $ & 650|67\nAsus $ & 550 Ti|67\n$ GT 750M|67\nQuadro K3100M by nikey22|67\n$ GT 750M|67\n$ & 760 (192-bit) OpenGL Engine|67\nHP Quadro 4000|67\nQuadro K2000|67\n$ GTS 450 Rev. 2|67\n$ 930MX|67\n$ & 660M Mac Edition|66\n$ & 570|66\n$ GT 750M|66\n$ GT 650M Mac Edition|66\n$ GT 650M OpenGL Engine|65\n$ & 660M OpenGL Engine|65\n$ 930M|65\nPalit $ & 650|65\n$ & 760M|65\n$ GT 650M Mac Edition|65\n$ 940M|65\n$ GT 750M Mac Edition|64\n$ 940M|64\n$ GT 740|63\n$ 930MX|63\nQuadro 3000M|63\n$ GT 730|63\nQuadro K1100M|63\n$ GT 750M|63\n$ 840M|63\n$ GT 640 OEM|63\n$ 840M|63\n$ GT 640 Rev. 2|62\n$ GTS 450|62\nQuadro 2000|62\n$ GT 745M|62\n$ GT 740|62\n$ GT 640|62\nQuadro 2000|62\n$ & 660M Mac Edition|62\nQuadro K1100M OpenGL Engine|62\nQuadro K2000M|62\n$ & 680MX OpenGL Engine|61\nEVGA $ GT 730|61\nQuadro 2000D|61\n$ 840A|61\nMSi $ & 660 Ti|61\nQuadro K1100M|61\n$ GT 645M|61\n$ & 780M OpenGL Engine|61\nHP $ GT 730|61\nQuadro K5000M OpenGL Engine|61\nEVGA $ GT 640|61\n$ 920MX|60\nQuadro M500M|60\nQuadro K620M|60\n$ 930M|60\n$ 930A|60\n$ GT 640 OEM|60\n$ GT 640|60\nQuadro 2000M|60\n$ GT 640|60\n$ GT 640M Mac Edition|60\n$ GT 640M Mac Edition|60\n$ GT 640M Mac Edition|59\n$ GT 645M|59\n$ 930M|59\nGigabyte $ & 650 Ti|59\n$ GT 640 OEM|59\n$ 830M|59\nAsus $ GT 640|58\nMSI $ & 1070|58\n$ GT 555M|58\nQuadro K2000M|58\nQuadro K1100M|57\n$ GT 650M Mac Edition|57\nQuadro K2000M by Nick[D]vB|57\nEVGA $ & 650 Ti|57\n$ GT 640M|56\n$ GT 650M Mac Edition|56\n$ GT 445M|56\n$ 830A|56\n$ 9800 GT|56\nAsus $ GTS 450|55\n$ 830M|55\n$ 920MX|55\nQuadro 2000|55\nEVGA $ GT 545|54\nQuadro K2000M|54\n$ GT 650M Mac Edition|54\n$ & 280|54\n$ GT 640|53\nQuadro FX 2800M|53\nQuadro 3000M OpenGL Engine|53\n$ GT 740|53\nnull $ 920A|53\n$ GT 640M Mac Edition|52\n$ GT 635|52\nGraphics Device|52\n$ GT 640M|52\n$ & 660M Mac Edition|52\nQuadro 2000M|52\nQuadro 5010M|52\n$ GTS 250|52\n$ GT 445M|51\n$ GT 640M OpenGL Engine|51\n$ GT 640M|50\nEVGA $ GT 740|50\n$ GT 640M Mac Edition|50\n$ 730A|50\n$ 920M|49\nHP Quadro 2000|49\n$ GT 730M|49\nnull $ 920A|49\n$ GT 555M|49\n$ GT 640M LE|49\n$ GT 730M|49\n$ GT 730M|48\n$ GT 640M Mac Edition|48\nQuadro K2000M OpenGL Engine|48\n$ GT 640M LE|48\n$ GT 740M|47\n$ & 460M|47\n$ GT 440|47\n$ GT 440|46\n$ GT 640M Mac Edition|46\nQuadro P400|46\n$ GT 730|46\nDell Quadro 2000M|45\n$ GT 740M|45\n$ GT 740M|45\n$ GTS 450 Rev. 2|45\n$ 920M|45\n$ 920M|45\n$ 910M|44\n$ & 680M|44\n$ GT 730|44\nQuadro 2000M|44\n$ GT 635|43\n$ GT 720 OpenGL Engine|43\n$ GT 635|43\nQuadro K5200 OpenGL Engine|43\nZotac $ & 650|43\n$ GT 440|43\n$ GT 435M|42\n$ GT 735M|42\nGainward $ GT 630|42\nQuadro 1000M|42\n$ 820M|41\n$ & 680M OpenGL Engine|41\nMSI $ GT 635|41\n$ 820A|41\nTesla M10|41\nAsus $ GT 440|40\nAsus $ GT 630|40\n$ GT 820M|40\n$ 910M|40\n$ GT 820M|40\n$ GT 730|40\n$ GT 550M|40\n$ GT 430|40\n$ GT 540M|39\nAsus $ GT 720|39\n$ GT 630|39\n$ GT 530|39\n$ GT 635M|39\n$ GT 620M/630M/635M/640M LE|39\nNVS 5400M|39\nQuadro K600|39\nQuadro K610M|39\nAsus $ GT 730|39\n$ GT 630|39\n$ GT 440|39\n$ GT 630M|38\n$ 820M|38\nQuadro K420|38\nQuadro K610M|38\n$ GT 625M|38\nQuadro K1000M|38\nNVS 5200M|38\nGRID K1|38\nQuadro K600|38\nQuadro K420|38\n$ GT 630|38\nQuadro K600|37\nQuadro 600|37\nHP Quadro 600|37\nQuadro K1000M|37\nQuadro K610M|37\nGRID K180Q|37\nGRID K160Q|37\n$ GT 635M|37\nGigabyte $ GT 440|37\n$ 820M|37\n$ GT 530|37\n$ GT 540M|37\n$ GT 630 OEM|37\nQuadro K610M by Nick[D]vB|37\nNVS 510|37\n$ GT 630M|37\nQuadro 1000M|37\n$ GT 540M|37\n$ GT 530|37\nQuadro K1100M|37\nQuadro K620M|37\nQuadro 1000M|36\n$ GT 730|36\n$ 820M|36\n$ GT 430|36\nGRID K1|36\n$ GT 525M|36\nNVS 5200M|36\nNVS 510|36\nZotac $ GT 430|36\nQuadro K600|36\nAsus $ GT 730|36\nHP Quadro K4000|35\n$ GT 755M Mac Edition|35\n$ GT 630|35\nNVS 5400M|35\nNVS 5400M|35\n$ GT 640 OpenGL Engine|35\n$ GT 625M|35\n$ GT 630|35\n$ GT 430|35\nQuadro K600 OpenGL Engine|35\nQuadro K1000M|35\nZotac $ GT 630|35\nGigabyte $ GT 630|35\nGRID K140Q vGPU|35\n$ GT 710M|35\n$ GT 620M|35\n$ GT 720M|34\n$ 710M|34\nQuadro 1000M,|34\nQuadro K510M|34\n$ 9400 GT|34\nQuadro K1000M|34\n$ GT 635M|34\nQuadro K420|34\nGRID K180Q|34\nAsus $ GT 430|34\nQuadro K4100M|34\nGigabyte $ GT 730|34\n$ GT 620M|34\n$ GT 525M|34\nQuadro K420|34\nDell NVS 5200M|34\n$ 710A|34\n$ GT 425M|33\n$ GT 710B|33\n$ GT 525M|33\nQuadro 600|33\n$ GT 620M|33\nQuadro K600|33\nQuadro 600|33\n$ 610M/710M/810M/820M / GT 620M/625M/630M/720M|33\nMSI $ GT 730|33\n$ GT 710|33\n$ GT 435M|33\nNVS 510|33\nAsus $ GT 710|33\nNVS 510|32\n$ 710M|32\n$ GT 720M|32\n$ GT 730A|32\n$ GT 710M|32\nGIGABYTE $ & 660|31\nEVGA $ GT 710|31\n$ GT 710|31\n$ GT 710|31\n$ GT 425M|31\n$ GT 720|31\nEVGA $ GT 710|31\nQuadro K1000M by Nick[D]vB|31\nAsus $ GT 710|31\n$ GT 720|31\n$ GT 420M|30\n$ GT 710|30\nnull Graphics Device|30\n$ GT 240|30\n$ 810M|29\n$ GT 720M|29\n$ GT 710|29\nQuadro 600|29\n$ 810M|29\n$ GT 420M|28\nQuadro 410|28\n$ & 660M|28\nMSI $ GT 710|28\n$ GT 720|28\n$ GT 735M|27\n$ GT 720|27\n$ GT 720|27\n$ GT 630 OpenGL Engine|27\nQuadro 410|27\n$ GT 330M|26\n$ GT 420M|26\n$ GT 430|26\n$ 615|25\n$ & 760A|25\nToshiba $ GT 525M|25\n$ GT 520MX|25\n$ GT 620|25\n$ GT 625|25\n$ GT 710|24\nQuadro NVS 4200M|24\n$ 840A|24\n$ 610M|24\n$ 800M|24\n$ GT 420|24\n$ 705M|23\n$ GT 705|23\n$ 800M|23\n$ 610M|23\n$ GT 620 OEM|23\n$ GT 625|23\n$ GT 420|23\nQuadro NVS 4200M|23\n$ GT 520M|22\nNVS 4200M|22\n$ GT 620 OEM|22\nNVS 5200M|22\n$ GT 620 OEM|22\n$ GT 620|22\n$ GT 705|21\n$ GT 620|21\n$ GT 630 Rev. 2|21\nQuadro NVS 4200M|21\n$ GT 520M|20\n& 980M SLI|20\n$ GT 620|20\n$ GT 520M|20\n$ GT 520|19\n$ 410M|19\n$ 730A|19\n$ GT 520|19\n$ GT 610|19\nAsus $ GT 610|19\nNVS 310|18\n$ 410M|18\nNVS 315|18\n$ 605|18\n$ GT 610|18\n$ GT 520|17\n$ MX550|17\nNVS 4200M|17\nNVS 315|17\nNVS 310|17\n$ 410M|17\nPalit $ & 660|17\n$ 605|17\nNVS 310|17\n$ GT 415M|17\nZotac $ GT 610|17\n$ & 675M|17\n$ GT 610|16\nQuadro 4000M|16\nPNY $ GT 610|16\n$ GT 610|16\n$ 510|15\nMSi $ GT 610|15\n$ GT 735M|15\n$ GT 520|15\n$ 510|15\n$ GT 320M|14\n$ 9600M GT|14\n$ & 570M|14\nCorporation D3D12 (NVIDIA $ % 3080 Ti)|13\n$ 510|13\nQuadro FX 1800M|12\nAsus $ GT 520|12\n$ GT 705|12\nMSi $ GT 630|11\nQuadro 3000M|10\nGigabyte $ GT 610|10\nPegatron $ GT 420|9\n$ 210|8\n$ 9300 / nForce 730i|7\nNVS 3100M|7\n$ 8600 GT|5\n$ 8400 GS Rev. 3|4\n$ 8400 GS|3\n$ 9600 GT|2\n$ GT 550M|-1\n$ 8600 GTS|-1\n$ GT 520MX|-1\nEVGA $ & 460|-1\nEVGA $ & 970|-1\nGP106|-1\nGRID P4-2B|-1\nGainward $ & 650|-1\n$ 210|-1\n$ 310|-1\n$ 310M|-1\n$ 315|-1\n$ 315M|-1\n$ 320M|-1\n$ 405|-1\n$ 610M|-1\n$ 820A|-1\n$ 8300 GS|-1\n$ 8400 GS|-1\n$ 8400 GS Rev. 2|-1\n$ 8400 GS Rev. 3|-1\n$ 8400M GS|-1\n$ 8400M GT|-1\n$ 8500 GT|-1\n$ 8600 GT|-1\n$ 8600M GS|-1\n$ 8600M GT|-1\n$ 8700M GT|-1\n$ 8800 GT|-1\n$ 8800 GTS|-1\n$ 8800 GTS 512|-1\n$ 8800 &|-1\n$ 8800M &|-1\n$ 9200M GE|-1\n$ 9200M GS|-1\n$ 9300 / nForce 730i|-1\n$ 9300 GE|-1\n$ 9300 GS|-1\n$ 9300M GS|-1\n$ 9400|-1\n$ 9400M|-1\n$ 9500 GT|-1\n$ 9500M GS|-1\n$ 9600 GS|-1\n$ 9600 GSO|-1\n$ 9600 GSO 512|-1\n$ 9600 GT|-1\n$ 9600M GS|-1\n$ 9600M GT|-1\n$ 9600M GT / $ GT 220M|-1\n$ 9800 GT|-1\n$ 9800 &+|-1\n$ 9800 &/9800 &+|-1\n$ 9800M GTS|-1\n$ G 103M|-1\n$ G 105M|-1\n$ G105M|-1\n$ G205M|-1\n$ G210|-1\n$ G210M|-1\n$ GT 120|-1\n$ GT 120M|-1\n$ GT 130|-1\n$ GT 130M|-1\n$ GT 220|-1\n$ GT 220M|-1\n$ GT 230|-1\n$ GT 230M|-1\n$ GT 240|-1\n$ GT 240M|-1\n$ GT 240M|-1\n$ GT 320|-1\n$ GT 320M|-1\n$ GT 325M|-1\n$ GT 330|-1\n$ GT 330M|-1\n$ GT 335M|-1\n$ GT 435M|-1\n$ GT 520M|-1\n$ GT 525M|-1\n$ GT 555M/635M|-1\n$ GTS 240|-1\n$ GTS 250|-1\n$ GTS 360M|-1\n$ & 1180|-1\n$ & 260|-1\n$ & 260M|-1\n$ & 275|-1\n$ & 280|-1\n$ & 285|-1\n$ & 295|-1\n$ & 560 SE|-1\n$ & 750 v2|-1\n$ % T10-16|-1\n$ % T10-8|-1\nGigabyte $ & 1050 Ti|-1\nION|-1\nMSI $ GT 710|-1\nNVS 300|-1\nNVS 3100M|-1\nNVS 4200M|-1\nNVS 5100M|-1\nPalit & 680 JetStream|-1\nQuadro FX 1700|-1\nQuadro FX 1700M|-1\nQuadro FX 1800|-1\nQuadro FX 1800M|-1\nQuadro FX 2700M|-1\nQuadro FX 2800M|-1\nQuadro FX 3600M|-1\nQuadro FX 360M|-1\nQuadro FX 370|-1\nQuadro FX 3700|-1\nQuadro FX 3700M|-1\nQuadro FX 380 LP|-1\nQuadro FX 3800|-1\nQuadro FX 3800M|-1\nQuadro FX 4600|-1\nQuadro FX 4800|-1\nQuadro FX 4800|-1\nQuadro FX 5600|-1\nQuadro FX 570M|-1\nQuadro FX 580|-1\nQuadro FX 770M|-1\nQuadro FX 880M|-1\nQuadro K1100M by Nick[D]vB|-1\nQuadro K2000D|-1\nQuadro K2000M|-1\nQuadro K2100M by Nick[D]vB|-1\nQuadro NVS 135M|-1\nQuadro NVS 140M|-1\nQuadro NVS 160M|-1\nQuadro NVS 290|-1\nQuadro NVS 295|-1\nQuadro NVS 4200M|-1\nQuadro P4000 OpenGL Engine|-1\nSony $ 410M|-1\nZotac $ & 780|-1\n"
          , l = "\n@ ^ 7900 XT|2200\n@ ^ 7900 XT|1970\n^ 6800 XT|1960\n@ ^ 6900 XT (XTXH)|1930\n@ ^ 6900XT|1925\n@ PRO W6900X|1890\n^ 6900 XT|1850\n@ ^ 6900|1810\n@ ^ 7900 XTX|1770\nRX6800|1690\nFreddyVGA|1600\n@ PRO W6800|1560\n@ ^ 7900 XTX|1430\n@ ^ 6950 XT|1380\n@ ^ 6800 XT|1360\n@ ^ 6750 XT|1310\n@(TM) ^ 6850M XT|1290\n@ ^ 6700|1290\n@ ^ 6900 XT|1270\nSapphire Nitro+ ^ 6800|1260\n@ PRO W6800X|1250\n@ PRO W6800X Duo|1220\n@ ^ 6700|1210\n@ ^ 6800 XT|1180\nSapphire Nitro @ RX6650XT|1180\n@(TM) ^ 6750 XT|1160\n@ ^ 6800|1160\n@ ^ 6900 XT|1160\nASRock ^ 6650 XT Phantom Gaming|1160\n@ Navi23|1140\n@ ^ 6650 XT|1130\n@ ^ 6950 XT|1130\n@ 6800|1120\n@ ^ 6700 XT|1110\n@ Pro W6600X|1100\n@ ^ 6700M|1080\n@ ^ 6800M|1080\n@ ^ 5700 XT PJM|1060\n@ ^ 6800|1050\n@ ^ 6600 XT|1040\n@ ^ 6600 XT|1030\nASUS ^ 6600XT macOS Edition|1020\n@ ^ 6800M|1020\n@ Pro Vega II Duo|1015\n@ ^ 5700 Series|960\n@ ^ 6800/6800 XT / 6900 XT|960\n@ ^ 6600 XT|960\n@ Pro Vega II|955\n@ ^ 6650 XT|950\nNavi 10 5700 XT|950\n@ Pro Vega II|950\n@ ^ 5700 Series|950\n@ Pro W5700X|930\n@ ^ 6600|930\nASUS @ ^ 5700 XT|930\n@ Pro W5700X|920\n@ Pro 5700 XT|920\n@ ^ 6900 XT|920\n@ ^ 5700 XT|910\n@ Pro W5700|895\n@ ^ 6600/6600 XT/6600M|890\n@ ^ 6750 XT|880\n@ ^ 6600|870\n@ ^ 5700|855\n@ ^ 5700 XT 50th Anniversary|850\n@ VII|850\n@ ^ 5700 XT 50th Anniversary|840\n@ PRO W6800|840\n@ Pro Vega 64|820\n@ Navi10|820\n@ ^ 5600 XT|820\n@ ^ 6600M|800\n@ ^ 6800S|790\n@ Pro 5700 XT|780\n@ ^ Vega 64 8GB|770\n@ Pro 5700|770\n@ Vega Frontier Edition|770\n@ ^ Vega|760\n@ ^ Vega 56/64|760\n@(TM) ^ Vega|760\n@ Pro Vega 64X|740\n@ ^ 5600 XT|740\n@ PRO W6600|740\n@ Vega 64 LC|735\n@ ^ Vega 64.1|730\n@ ^ 6600M|730\n@ Pro 5700|720\n@ Vega Frontier Edition|710\n@ Vega Frontier|700\n@ Vega FE|700\n@ ^ 5700 XT|690\n@ Pro Vega 64|670\n@ Vega 64|670\n@ VII|660\n@ Pro WX9100|660\nSapphire @ ^ Vega 64 8GB|650\n@(TM) PRO W6600M|650\n@ ^ 5700 XT 50th Anniversary|650\n@ ^ 5700|640\n@ Pro W5700|640\n@(TM) Pro WX 9100|635\n@ ^ Vega 56|630\n@ ^ Vega 56|620\n@ Pro 5500 XT|620\n@ ^ 5600 OEM/5600 XT / 5700/5700 XT|620\n@ ^ 5500|620\n@ ^ 5500 XT|620\n@ Vega Frontier Edition|620\n@ ^ 5500M Series|610\n^ xxx|610\n@ Pro Vega 64X|610\n@ ^ Vega 64|610\n@ ^ 5600 XT|610\n@ Pro Vega 64|610\n@ ^ 6500 XT|600\n@ Vega|600\n@ Pro W5500|600\n@ ^ 5600M|600\n@ Pro Vega 56|600\n@ Pro Vega 64|590\n@ Pro 5600M|590\n@ Pro Vega 48|590\n@ Pro Vega II Duo|590\n@ ^ 590 Series|590\n@ ^ Vega 56 8GB|590\n@ Pro 5600M|590\n@ Pro WX 9100|590\n@ Pro 5300|580\n@(TM) R9 Fury Series|580\n@ ^ 6800 XT 16GB|570\n@ Pro 5600M|570\n@ Pro W5500X|560\n@(TM) ^ 5500M|560\n@ * 7870|560\n@ Pro W5500|550\n@ ^ 5500M|550\n@ R9 290X Series|550\n66AF:F0|550\n@ Pro 5500 XT|550\n@ ^ 580 Series|550\n@ ^ 5500XT|550\n@(TM) ^ 580X|540\n@ Pro 5500 XT|540\n@(TM) Pro W5500M|540\n@ Pro W5500X|540\n@ Pro W5500|540\nRadeonT ^ 5300|540\n@(TM) ^ 570 Graphics|520\n@ Pro 5300|520\n@(TM) ^ 6500M|520\n@ ^ Vega M GL|520\nASUS @ ^ 570 Series|520\nASUS @ ^ 580 Series|520\n@(TM) ^ 580|520\n@(TM) Pro V7350x2|520\n@(TM) ^ 480 Graphics|520\n@(TM) ^ 570 Graphics|515\n@ ^ 6400|510\n@ Pro 580X|510\n@(TM) R9 390 Series|500\n@ Pro 5300|500\n@ ^ 580 2048SP|500\n@ PRO W6400|500\n@ ^ 570 Series|500\n@ PRO W6800X Duo|500\n@ Pro 580|500\n@ ^ 5500 XT|500\n@ ^ 6400|490\n@ Pro 580|485\n@(TM) Pro WX 7100 Graphics|485\n@(TM) R9 290X|480\nSapphire @ ^ 580 Pulse|480\n@ ^ 6700/6700 XT / 6800M|470\n@(TM) ^ 580|475\n@ ^ 6700S|475\n@ R9 290X|470\n@(TM) ^ 470 Graphics|470\n@ R9 FURY / NANO Series|470\n@ Embedded E9560|470\nKamen Rider Black ^|460\n@(TM) E9550|460\n@(TM) ^ 580 Graphics|460\n@ ^ Vega 56/64|460\n@(TM) ^ 480|460\n@ ^ 6800 XT|460\n@ ^ 470 Series|460\n@ RX480|455\n66AF:F1|455\n@ Pro 480/575|455\n@ Embedded E9560|450\n@ FURY|450\n@ ^ 5600 OEM/5600 XT / 5700/5700 XT|450\n@ ^ 6600 XT|450\n@ * 6800 Series|445\n@ Pro 570X|440\n@(TM) ^ 470 Graphics|440\n@ Pro 575X|440\n@ ^ 470/480/570/570X/580/580X/590|440\n@ ^ 6600|440\n@ ^ Vega M GH Graphics|440\n^ 580|440\n@ ^ 570|440\n@ Pro 570|440\n@ ^ 590|440\n@(TM) ^ 470 Series|435\n@ ^ 6900 XT|435\n@ FURY X|430\n^ 590|430\n@ Pro 5500M|430\n???|430\n@(TM) ^ 570|430\n@ ^ 580|430\n@ * 8xxx|430\n@ R9 290|425\n@ Pro 5500M|420\n@ Pro 580X|420\n@ ^ 6700 XT|420\n@ ^ 480|420\n@ R9 290/390|420\n@ Pro 580X|420\n@(TM) Pro Duo|415\nEllesmere @ ^ 570|410\n@ R9-290X|410\n@ Pro 580|410\n@ R9 200 Series|400\n@ ^ 570|400\n@ Pro 470/570|400\n@ ^ 6800M|400\n@ ^ 5300M|400\n@ ^ 580 Series (POLARIS10, DRM 3.40.0, 5.11.9-141-tkg-pds, LLVM 11.1.0)|400\n@ Pro 5300M|400\n@ R9 285|400\n@ ^ 470|400\n@ Pro 575|390\n@ Pro 575X|390\n@ Pro WX 7100|390\n@ ^ 6700M|390\n@ ^ 470/480/570/570X/580/580X/590|380\n@ PRO W6600|380\n@ Polaris|370\n@ ^ 6500 XT|370\n@ Pro Vega 20|370\n@ * 7970|370\n@ Pro Vega 16|370\n@ ^ 6800|370\n@ Pro Vega 64 OpenGL Engine|370\n@(TM) R9 380 Series|360\n@ ^ 5700XT|360\nFirePro W8100|360\n@ Pro Vega 64|365\n@ Pro 570|365\n@ Pro 570X|360\n@ Pro Vega 64 OpenGL Engine|360\n@ R9 280x|360\n@ R9 380|360\n@ R9 280x|360\n@ R9 280x|360\n@ Pro Vega 56|360\nR9 280X Dual-X|360\n@ Pro Vega 56 OpenGL Engine|350\n@ * 7970|350\n@ * 7970X/8970/R9 280X|350\n@ R9 285|350\n@ R9 380X|350\n@ ^ 480|350\n@ ^ 5700 XT Series|350\nASUS @ ^ 470 Series|350\n@ Pro Vega 64|350\n@ R9 200 / * 7900 Series|340\nASUS @ ^ 470 Series|340\n@ Vega 56|340\n@ ^ 580 Series (AMD POLARIS10 / DRM 3.15.0 / 4.12.0-1-amd64, LLVM 4.0.1)|340\n@ Pro Vega 20|340\nR9 380|340\n@ * 7970|340\n@ ^ 5700 XT|330\n@ D700|330\nAsus @ R9 280|330\n@ R9 285|330\n@ R9 M395X|330\n@ ^ 5600 XT|330\nPowerColor @ R9 280|330\n@ R9 280|330\nFirePro W7100 Graphics Adapter|330\n@ R9 M295X Mac Edition|330\nASUS @ ^ 5700|330\n@ R9 380|330\n@ Pro Vega 16|325\n@ R9 290X|325\n@ RX5600|320\nASUS @ ^ 5500 XT|320\n@ R9 280|320\n@ * 7950/8950 / R9 280|320\n@ R9 M395|320\n@ ^ 6800/6800 XT / 6900 XT|320\nFirePro D700 (FireGL V)|320\n@ ^ 5500/5500M / Pro 5500M|320\nMSI @ ^ 6600 XT Gaming X|320\nFirePro W8000|315\n@ * 7950|315\n@ Pro W5700|315\nFirePro W7170M|310\n@ PRO W6800|310\n@ ^ 5500|310\n@ ^ 580 Special Edition|310\nRadeonT ^ 5500M|310\n@ R9 M395 (Bootcamp XG edition by bootcampdrivers.com)|310\n@ R9 360|310\n@ Pro WX 7100|310\n@ Pro WX 7100 Mobile|310\n@ ^ 5700 XT 50th Anniversary|310\nR9 xxx|300\n@ ^ 5700XT|300\n@ PRO W6400|300\n@(TM) R9 370 Series|300\n@ ^ 470/480/570/570X/580/580X/590|300\n@(TM) PRO W6600M|300\n@ * 8950|300\n@ R9 M395X|300\n@ R9 M395X|300\n^ Vega 64|300\n@ ^ Vega 11 Graphics|295\n@ Pro 270X|290\n@ ^ 580 2048SP|290\n@ * 7950|290\nVideo Controller (VGA Compatible)|290\n@(TM) R7 370 Series Graphics|290\n@ * 7950|290\nAsus @ R9 270X|290\n@ ^ 580X Series|290\n@(TM) ^ 5500M|285\n@ R9 270X|285\n^ xxx|285\nASUS R7 265 Series|280\n@(TM) R9 270|280\n731F:C1|280\n@ R9 M395X|280\n@(TM) R7 370 Series|280\n@ Pro V520 MxGPU|280\n@ R9 M395|280\nFirePro D700|280\n@ R9 270X|280\n@(TM) R9 200 Series|270\n@ ^ 5700|275\nRadeong 0.4 on AMD POLARIS10 (DRM 3.8.0 / 4.9.11-1-ARCH, LLVM 3.9.1)|270\n@ * 7870 XT|270\n@ R9 390X|270\n@(TM) ^ 570 Graphics|270\n@ * 7870 GHz Edition|270\n@ R9 390|270\nFirePro D700|270\n@ R9 M395|270\n@ R9 270|270\n@ ^ 5700 / 5700 XT|270\nASUS R7 370 Series|270\nFirePro W7000|270\n@(TM) Pro V7350x2|270\n@(TM) ^ 470 Series|270\n@ ^ Vega 64 OpenGL Engine|270\n@ ^ 5500M|265\n@ * 7950/8950 OEM / R9 280|265\n@ Vega Frontier Edition OpenGL Engine|265\n@ 7950 x2|263\n@ R9 270|263\n@ VII|263\n@ * 7xxx|262\nVideo Controller (VGA Compatible)|262\n@(TM) ^ 570|261\n@ ^ 5500 XT|261\n@ R9 M295X|261\nFirePro W7000 (FireGL V) Graphics Adapter|260\n@ R9 M390|260\n@ * 7870 GHz Edition|260\n@ R9 M390 (Bootcamp edition by bootcampdrivers.com)|260\n@ R9 370|259\nMetal|259\n@ * 7870|259\n@ ^ 470/570|258\n@(TM) R9 370|257\n@(TM) ^ 460|257\n@ ^ 560 Series|256\n@ R9 290|255\n@(TM) ^ 560 Series|255\n@ ^ 5300M|254\nFirePro W7000|254\n@ R9 290X|253\n67EF:E7|253\n@ * 7850|253\n@(TM) ^ 460 Graphics|253\nMSI @ ^ 580|251\n@ R9 290/390|250\nFirePro W8100 (FireGL V)|249\n@ Pro WX 9100 OpenGL Engine|248\n@(TM) ^ 560|247\n@(TM) ^ 560 Series|247\n@ Pro Vega II Duo|247\n@ * 7970M|246\n@ R9 290|245\n@ ^ 5600M|245\nFirePro D300|245\n@(TM) ^ 5600M Series|244\n@ ^ 590 Series|244\n@ R7 370 Series|244\n@(TM) ^ 560|243\nFirePro D300|243\n@ R9 390|243\n@ ^ 470/480/570/570X/580/580X|243\nFirePro D300|243\n@(TM) R7 370 Series|242\n@ R9 M390|241\n@ ^ 560X Series|241\nFirePro D300|241\n@ ^ 560|240\n@ R9 M290X|240\nGigabyte Vega 64 macOS Edition|239\n@ Pro 580|238\n@ Pro WX 4100|236\n@ Pro WX 7100 OpenGL Engine|236\n@ * - FirePro D300|235\nFirePro D500|234\n@ Pro 580 OpenGL Engine|234\n@(TM) E9260|234\n@ Pro WX 2100|233\nFirePro D500|232\nFirePro D500|232\n@(TM) ^ 6500 XT|232\n@ Pro 580X|231\n@ * 7850|231\n@ Pro 575|231\n@ Pro Vega 64X|231\nASUS R9 270 Series|230\n@ Pro 450|230\n@(TM) ^ 560 Graphics|230\n@ R9 M290|229\n@ Pro 560X|228\n@ Pro 480/575|228\nPitcairn PRO @ * 7850|228\nASUS @ ^ 5700 XT|227\n@ * 7870|227\n@(TM) Pro WX 5100 Graphics|226\n@ R9 370X|225\n@(TM) ^ 480|224\n@ HD7970M|224\nFirePro S9000 (FireGL V)|223\n@ ^ 550 640SP / ^ 560/560X|222\nMSI / AMD ^ 560 4G|222\n@ ^ 570 OpenGL Engine|222\nMSI RX650|222\n^ 480|221\nMSI / AMD ^ 560|221\nBaffin AMD @ ^ 560|221\nMSI Baffin RX650|220\n@ Pro 5700 XT|220\n@ Pro 570|220\n@ Pro 575 OpenGL Engine|219\nAsus @ R9 270X|219\n@ ^ ^ 560|218\n@ ^ 560 [Baffin]|218\n^ 460|218\n@ R9 370X|218\n@(TM) Pro WX 4100|217\nASUS R9 390 Series|217\n@ Pro 5600M|217\nR9 xxx|217\n@ * 7870 Series|217\n@ Pro ^ 560|216\nR9 280X Dual-X|215\n@ Pro 570 OpenGL Engine|214\n^ 560|213\n@ Pro WX 5100|213\nFirePro D700|213\n@(TM) R9 390 Series|213\n@ ^ 480|212\n@ ^ 560|212\n@ ^ 5500/5500M / Pro 5500M|212\n@ ^ 550 640SP / ^ 560/560X|211\n@ R9 FURY / NANO Series|211\nSapphire @ ^ 560|211\n@ ^ 460|210\n@ RX550/550 Series|210\ninc. @ ^ 480|209\n@(TM) ^ 550|208\n@ R9 M290X|206\n@ Pro 560 (Bootcamp XG edition by bootcampdrivers.com)|206\n@ RX460|206\n@ ^ 550 Series|205\nCustom GPU 0405|204\n@(TM) ^ 460|204\nASUS AMD @ R9-990X|204\n@ Pro 555X|203\n@ ^ 460/560|203\n@ * 7970X/8970/R9 280X|202\nASUS @ ^ 550 Series|201\n@ * 8950|201\nFirePro D500 (FireGL V)|201\n^ 5700XT|200\n@ 550 Series|200\n@ * 8470 + 7660D Dual Graphics|200\n@ * 7990|200\n@ ^ 560X|199\n@ ^ Vega|199\n@ * 7950 Series|198\n@(TM) ^ 540|197\n@ * 6970|197\n@ * 7970/8970 / R9 280X|197\n@ Navi14|197\n@ Pro 560|197\n@ ^ 550|197\n@ R9 285|196\n@ Pro W5500|195\n@ Pro Vega 56|195\n@ Pro 460|195\n@ ^ 470/480|194\n@ PRO Graphics|194\n@(TM) RX550|194\n@ Pro 560X|193\n@ Pro 570X|192\n66AF:F1|192\n@ ^ Vega M GH|190\n@ R9 M280X|190\n@ ^ 460/560D / Pro 450/455/460/555/555X/560/560X|189\n@ R9 280,|188\nCustom GPU 0405|188\n@ * 7790|187\n@(TM) ^ 480 Graphics|187\n@ Pro 455|186\n@ R9 260|186\n@ ^ 580 Series|186\n@ * 7950/8950 OEM / R9 280|186\n@ R9 290X|185\n@ R9 M290X|184\n@(TM) R9 370 Series|184\n@ Pro 555|184\n@ R7 260X|184\n@ * 6950|183\nFirePro W5000|183\n@(TM) R9 390X|182\nR9 270X Devil|182\n@(TM) ^ 470 Graphics (AMD POLARIS10 / DRM 3.23.0 / 4.15.0-1-MANJARO, LLVM 5.0.0)|182\n@ R9 380|182\n@(TM) Pro WX 9100|182\n@(TM) R7 360 Series|181\n@ ^ 570 Series|181\n@(TM) R9 M470X|181\n@(TM) R7 360 Series|181\n@ RX480|180\n@ R7 200 Series|180\n@ Pro WX 4150|180\n@ Pro WX 4100|179\n@ * 8xxx|179\nASUS R9 295X2 Series|179\n@ R9 390X|178\n@ * 5870|176\n@ Pro 560|176\n@ ^ 580 OpenGL Engine|175\n@ * 8950|175\nFirePro V(FireGL V) Graphics Adapter|175\nASUS @ ^ 580 Series|174\n@ Pro WX 4100|174\n@ Pro 460|173\n@ * 2600 XT|173\n@ Pro WX 4100|172\n@ * 8280|172\n@ Pro 575|171\n@ Pro 555X|171\n@ Pro WX 4130/4150|170\n@ ^ Vega M GH Graphics|170\nFirePro W5100|170\n@(TM) PRO WX 8200|169\n@ Vega Frontier Edition|169\n@ Pro 555X|168\nFirePro D700|168\n@ * 6990|167\n@ ^ 470 OpenGL Engine|167\n@ * 7870 XT|167\n@ ^ 580|167\n@ Polaris|167\nFirePro V8800 (FireGL V)|166\n@ ^ 550|165\n@ * 6900 Series|165\nFirePro W9100 (FireGL V)|164\n^ 580|163\n@(TM) ^ 580X|163\n@ ^ 550|163\n@ * 6870|163\n@ R9 M395X OpenGL Engine|163\n@(TM) R9 360|163\n@(TM) * 8490|162\n@ R9 M295X|162\n@ * 7970M|162\n@ R9 M380|161\nFirePro W5100 (FireGL V) Graphics Adapter|161\nASUS HD7850 Series|161\nFirePro M6100 FireGL V|161\n@ Pro 455|160\n@ ^ 460/560D / Pro 450/455/460/555/555X/560/560X|160\n@ R9 M395X|159\n@ ^ 560X|159\n@ Pro 555|158\nRadeonT ^ 560X|158\n@ Pro Vega 48|158\nASUS @ ^ Vega|158\n@ Pro WX 9100|158\n@ Pro Vega 64|157\nPowered By QiongB A9999999999|157\n@(TM) Pro Duo|157\nFirePro D700|157\n@ Pro WX 7100|156\n@ ^ 460|156\n@ * - FirePro D700 OpenGL Engine|156\n@ R9 M290X|156\n@ R9 M395 OpenGL Engine|155\n@ Pro SSG|155\nFirePro D300|155\nASUS R9 380 Series|155\n@(TM) R9 Series|153\n@ ^ 470/480/570/580|153\nFirePro W8000|153\nCezanne|153\n@(TM) Graphics|153\nFirePro D300|153\n@(TM) R9 Fury Series|153\n@ R9 M395|152\n@ ^ 570|152\n@ R9 270X Series|152\n@ Pro 5300M|152\nR9 xxx|152\n@ Pro 555|152\nFirePro D500|151\n@ * 5850|151\nFirePro D300|150\n@(TM) R9 290X|150\n66AF:F0|149\n@(TM) ^ 560|149\n@ R9 M290|148\n@ Instinct MI25 MxGPU|148\nFirePro V7800 (FireGL) Graphics Adapter|148\n@(TM) R9 M470|147\nAdvanced Micro Devices, Inc. [AMD/ATI] Fiji [@ R9 FURY / NANO Series]|147\n@ * 5870 Series|147\n@(TM) E9550|147\n@ * 7850|147\n@ * 7770|147\n@ Pro Vega 20|146\n@ R9 290/390|146\n@ Pro 450|146\n@ ^ 560X Series|146\n@ * 6850|146\n@ R9 270 1024SP|145\nASUS R9 280X Series|145\n@ Pro 450|145\n@(TM) R9 390 Series|145\nFirePro V7900 (FireGL V)|145\n@ R9 370X|145\n@(TM) ^ 560 Series|144\nASUS R7 250X|144\n@ ^ 480 OpenGL Engine|144\n@ R9 290X|144\n@ ^ 550X|144\n@(TM) ^ 580|144\nASUS @(TM) ^ 470 Series|143\nBaffin @ ^ 560|143\n@ R9 M295X (Bootcamp edition by bootcampdrivers.com)|143\n@ R9 M295X Mac Edition|143\n@ R7 Series / * 9000 Series|142\nAdvanced Micro Devices [AMD] nee ATI Device|142\n@(TM) Pro WX 7100 Graphics|142\n@ ^ 640|142\nFirePro D500|141\n@ * 7900 Series|141\n@ R9 290|141\n@ R7 250X|141\n@(TM) ^ Vega|140\n@ 630 Series|140\nFirePro W8100 Graphic Adapter|140\n@ R9 FURY / NANO Series|140\n@ R9 M390|140\n@ Pro WX 3100|140\n@ R9 290|140\n@(TM) R9 370|140\nFirePro V7900|139\n@ * 7970|139\n@ * - FirePro D500 OpenGL Engine|139\n@ * - FirePro D300 OpenGL Engine|139\n@ Pro 580|139\n@ * 7770|139\n@ * - FirePro D500 OpenGL Engine|139\n@ 540/540X/550/550X / ^ 540X/550/550X|138\nFirePro S9050|138\n@(TM) ^ 480 Graphics|138\n@(TM) R9 M390X|137\n@ Vega 64|137\n@(TM) Graphics|137\nTonga PRO GL [FirePro W7100]|136\nHD7950 Martin Ver.|136\n@ * 7990|135\n@ R9 280x|135\n@ RX550/550 Series|135\nHD7950 MARTIN REV.|134\n@ RX560|134\n@ R7 250X Series|134\n@ R9 M390 OpenGL Engine|134\nASUS R7 250X|134\n@ HD6870|134\n@ R9 270X|134\n@ Pro 5500 XT|134\n@(TM) ^ 480|133\n@ R9 270|133\nASUS HD7970 Series|133\n@ ^ 540|133\n@ 500 Series|132\n@ * 5970|132\n@ * 7770 GHz Edition|132\n@ * 5870|132\n@ 540X Series|132\n@ * 6870 Series|132\n@(TM) ^ 470 Graphics|132\n@ * - FirePro D300 OpenGL Engine|132\n@ * 7xxx|131\n@ * 5970|131\nRadeonT 540X|131\n@ R7 Graphics + R7 350 Dual Graphics|131\n@ R9 M295X Mac Edition / R9 380X|131\nFirepro M5100|131\n@(TM) R9 M375X|131\n@ R9 280x|130\n@(TM) ^ 560X|130\n@ * 6990|130\n@ Pro 5500M|130\n@ Pro WX 5100 OpenGL Engine|129\n@ R9 M395X (Bootcamp edition by bootcampdrivers.com)|129\n@ R9 M380|128\nFirePro W5170M|128\n@ R9 280|128\nFirePro W5000 (FireGL V)|128\n@(TM) ^ 5600M Series|128\n@ ^ 560D|128\nFirePro D500 (FireGL V)|128\n@(TM) Pro WX 5100 Graphics|128\n@(TM) ^ Vega 11 Graphics|128\n@ * 7970|127\n@ R9 370|127\n@ * 7770|127\n@ R9 M395X|126\n@ * 7660D|126\n@ * 8970|126\n@ R9 200 Series|126\n@ Pro WX 3200 Series|126\n@ * 7800 Series|125\n@ R9 285/380|125\n@ R9 270X|124\nFirePro W2100|124\nFirePro W7170M|124\n@ * 7870 GHz Edition|123\nRadeong 0.4 on AMD TONGA (DRM 3.1.0, LLVM 3.9.0)|123\n@ ^ 460|123\n@ * 5970 Series|123\n@ R9 M380|122\n@ R9 M395|122\nAsus @ R9 280|122\n@ * 6850 Series|122\n@(TM) ^ 540|122\n@ * 6900 Series|122\nDevice|122\n67DF:C4|121\n@ * 6950|121\nFirePro D300 (FireGL V)|121\n@ ^ 570|121\n@ * 5850 Series|121\n@ * 7870 XT|121\n@ * 7950|121\nFirePro V7800 (FireGL) Graphics Adapter|121\n@ * 6850|121\n@ * 7950|120\n@ * 7870 GHz Edition|120\n@ R7 370 / R9 270X/370X|120\n@ * 6870|120\n@ Pro V340|120\nASUS @ ^ 570 Series|119\n@(TM) R7 370 Series Graphics|119\n@(TM) ^ 580 Graphics|119\n@(TM) ^ 470 Graphics|119\n@ * 5870|119\n@ * 7950/8950 / R9 280|119\n@ * 6790|119\n@(TM) RX580|119\nASUS ARES2|119\n@(TM) R9 380 Series|118\n@ * 7750|118\n@ Pro 560X|118\n@ R7 250E|118\n@ 550 Series|118\n@ ^ 560|118\n@ Pro WX 5100|117\n@ R7 370 / R9 270X/370|117\n@ * 7800 Series|117\nFirePro W5000 (FireGL V) Graphics Adapter|117\n@ * 7750 Series|116\n@ * 5870|116\n@ R7 450|115\nFirePro R5000|115\n@ R7 370 Series|115\nFirePro W9100|114\n@ R7 370 / R9 270/370|114\n@(TM) 540 Graphics|114\n@ * 6510 Series|114\n@(TM) R7 370 Series|113\nSapphire @ HD6870|113\nFirepro M5100|113\n@(TM) ^ 550|113\n@(TM) Pro Duo|113\n@ 540/540X/550/550X / ^ 540X/550/550X|113\n@ Pro 570|112\n@ R9 280|112\nFirePro D700 (FireGL V)|112\n(ATI) FirePro M6000 (FireGL V) Mobility Pro Graphics|112\nRenoir|112\n@ 540X Series (POLARIS12, DRM 3.40.0, 5.10.56-1-MANJARO, LLVM 12.0.1)|112\n@ * 6970|112\n@ * 8770|112\n@ Pro WX3200 Graphics|112\n@(TM) R9 270|111\n@ R9 270X|111\n@ R9 285|111\n@ * 7800M Series|111\n@(TM) R7 370 Series|111\n@ * 7870M Series|111\n@ Pro 450/550|110\n@ * 7000 series|110\n@ * 7870|110\n@ Pro 555X|110\n@ RX590 GME|109\nFirePro S10000|109\n@ * 7870M|109\n@ * 5800 Series|109\n@ * 6970M|108\nASUS HD7770 Series|108\n@(TM) R9 M360|108\n@(TM) ^ 550X|107\n@ R9 285|107\n@ * 6900M Series|107\n@ * 7870 GHz Edition|107\nFirePro S7000|107\n@ R9 M370X|106\n@ Pro WX 4100|106\n@ * 6800 Series|106\n@ * 7750|106\n@ Pro 455 OpenGL Engine|106\nASUS R7 370 Series|106\n@ Pro 560|105\n@ * 6870|105\nFirePro D300 (FireGL V)|105\n@ * 6970M|105\n@ * 7850|105\n@(TM) R9 200 Series|104\nASUS HD7750 Series|104\n@ * 6970M OpenGL Engine|104\nAsus @ R7 250|104\n@ R7 370 / R9 270X/370|104\n@ R9 M395X (Bootcamp XG edition by bootcampdrivers.com)|103\n@(TM) ^ 560|103\n@ ^ Vega|103\n@(TM) Pro W5500M|103\n@ R9 270|103\n@ Pro 560X|103\n@ * 5850|103\nFirePro S7150|103\n@(TM) ^ 580|103\n@(TM) R9 370 Series|103\nASUS @(TM) ^ 480 Series|102\n@ Graphics Processor|102\n@ R9 M370X|102\nFirePro W7100|102\n@ R9 M370X|101\n@ Pro 460 OpenGL Engine|101\n@ ^ 580 Series|101\n@ 500 Series|100\n@ Pro 555|100\n@(TM) Pro WX 4100|100\nAsus @ R7 260X|100\n@(TM) ^ Vega 10 Graphics|100\n@ * 7790|99\n@ Pro 450 OpenGL Engine|99\n@ * 7790/8770 / R7 360 / R9 260/360|99\nFirePro M4000 Mobility Pro Graphics|99\n@ * 7970M|99\n@ R9 M270X|99\n@ ^ 550|98\n@ * 6850|98\n@(TM) ^ 460|98\n@(TM) ^ Vega11 Graphics|98\n@(TM) ^ 460 Graphics|98\n@ Pro 460|97\n@ * 7800 Series|97\nMatrox C680 PCIe x16|97\n@(TM) ^ 550|97\n@ * 5770|96\n@ * 8670D + 7700 Dual Graphics|96\n@ * 7790|96\n@ 630 Series|96\n@ ^ 560 Series|96\nFirepro M6100|95\n@ * 6700 Series|95\n67EF:E7|95\n@(TM) Vega 10 Graphics|95\n@ * 6900M Series|94\n@ Pro 455|94\nFirePro M4000|94\n@ R9 260|94\nFirePro W7000|94\n@ Instinct MI25|93\n@ * 8870M|93\n@(TM) Vega 11 Graphics|93\n@ Pro 450|93\nFirePro W5000|92\n@ * 6770|92\n@(TM) RX560|92\n@(TM) Graphics|91\nASUS @(TM) ^ 460 Series|91\n@(TM) Vega 8 Graphics|91\n@(TM) Graphics|91\nFirePro W5100 Graphics Adapter|90\n@(TM) Pro WX Series|90\nRenoir|90\nSTRATO XT (6646)|89\n@(TM) Pro WX 4150 Graphics|89\n@ E8870MXM|89\n@ * 8970M|89\nFirePro M6100 FireGL V|89\n@ * 7770|89\nFirePro W5100 (FireGL V) Graphics Adapter|89\n@ * 6970M|89\n@ Pro 460|88\n@ ^ Vega 8 Graphics|88\n@ * 7700 Series|88\n@(TM) R9 M360|88\nASUS R7 265 Series|88\n@ ^ Vega M GL Graphics|88\nASUS @ ^ 550 Series|88\n@ R7 360 / R9 360|88\n@ * 6950|86\n@ * 6790|86\n@ Pro WX 2100|86\nASUS @ ^ 560 Series|86\n@ * 5750|86\n@(TM) ^ 640|86\n@ * 8870M|85\n@ R7 260X|85\n@ Pro WX 7100|85\n@(TM) R7 360 Series|85\n@ Infoshock™ ^ 460 Graphics|85\nFirePro W5170M|85\n@ R9 M295X|85\nFirePro W8100|85\n@ * 6750|85\nFirePro W5170M|85\nFirePro V5800 (FireGL) Graphics Adapter|84\nASUS R7 250X|84\n67E8:00|84\n@(TM) ^ 550X|84\n@(TM) R7 350|84\n@(TM) E9260|84\n@ Sky 500|84\n@ R9 M270X|83\n@(TM) R9 350|83\n@(TM) ^ Vega 11 Graphics|83\nFirepro M6100|83\n@ R9 360|82\nFirePro V7900|82\nFirePro V5800 (FireGL V)|82\n@ * 8830M|82\n@ Pro 450|82\n@ * 8950|82\n6980:00|82\nFirePro W5100 (FireGL V)|81\n@ E8870|81\n@ * 7750 Series|81\n@ * 7850 / R7 265 / R9 270 1024SP|81\nFirePro™ W4190M|80\n@ * 5770|80\n@(TM) R7 360 Series|80\nFirePro M5100 FireGL V|80\n@ ^ 470/480/580|80\n@(TM) ^ 460 Graphics|79\n@ * 6700 Series|79\nMobility @ * 5870|79\n@ R9 255|79\n@ 535 Series|79\n@ R9 M380 OpenGL Engine|78\n@(TM) ^ 550|78\n@ R9 M380|78\n@ R7 250X|78\nSaphire @ ^ 580|78\nRadeong 0.4 on AMD BONAIRE (DRM 2.43.0, LLVM 3.8.0)|78\n@ * 5000|78\n@ * 5770|77\n@ ^ 460|77\nFirePro W4300|77\n@ 530 Series|77\n@(TM) 540X|77\n@ R9 M370X OpenGL Engine|77\nFirePro V5900 (FireGL V)|77\n@ Pro WX 4100|77\nSAPPHIRE * 5770|77\n@ Pro WX 3100|76\nFirePro W5100|76\n@(TM) Pro Graphics|76\n@ Pro WX 3100|76\n67FF:C8|76\n@(TM) HD8970M|76\nFirepro M5100|76\n@(TM) R9 M375X|75\n@ 550X Series|75\n@ R9 M390|75\n@(TM) Vega 9 Graphics|75\nFirePro V5900 (FireGL V) Graphics Adapter|74\n@ * 8570|74\n@(TM) ^ 475M|74\n@ * 6770|74\n@ ^ 550 Series|74\n@ ^ 550|74\nFirePro M4000|74\n@ ^ 460/560D / Pro 450/455/460/560|74\n@ Pro 560|74\n@ Vega Series / @ Vega Mobile Series|74\n@ Pro 455|74\n@ * 7870M Series|74\n@(TM) R7 430|74\n@ 620 Series|73\n@ * 7770 GHz Edition|73\n@ * 7770|73\n@(TM) R9 360 Series|73\n@ * 7770/8760 / R7 250X|73\n@(TM) 530|73\n15DD Graphics|73\n@ ^ Vega M GL Graphics|73\n@(TM) R9 380|72\n@(TM) 530 series|72\n@ R7 200 Series|72\nEmbedded @ E9171|72\n@ Pro WX3200 Graphics|71\n@ * 8800M Series|71\n@ R9 M375|70\n@ * 5770|70\n@ Pro 555|70\n@ R7 250E|70\n@ * 7750|70\n@ Pro 555X|70\n@(TM) Vega 8 Mobile Graphics|70\n@(TM) R9 M380|69\n@ R7 260X/360|69\nBarco MXRT 7600 (WDDM)|69\n@(TM) Vega 10 Graphics|69\n@ * 7750|69\n@ R9 M370X|69\n@(TM) R2E Graphics|69\n@ R9™ M370X|68\nFirePro V4900 (FireGL V)|68\n@(TM) ^ Vega11 Graphics|68\n@ * 5770|68\n@(TM) Renoir Graphics D1|68\n@ * 7600 Series|67\n@ R5 340|67\n@(TM) Vega 9 Graphics|67\nFirePro W4100 (FireGL V) Graphics Adapter|67\n694E:C0|67\n694C:C0|67\n@ R7 250|66\n@ * 6750|66\nRAVEN (DRM 3.36.0, 5.6.5-AMD, LLVM 9.0.1)|66\nFirePro W600|66\n@ R9 255|66\n@ ^ 470|66\n@(TM) R7 250|66\nFirePro V5900|65\n@(TM) 530|65\n@ Pro WX Vega M GL Graphics|65\n@ ^ 470/480|65\n@ * 5750|65\n@ R7 260X|65\nFirePro V5900 (FireGL V) Graphics Adapter|65\nFirePro W4100 Graphics Adapter|65\n@ * 6700 Green Edition|65\n@ R9 M370X|65\n@(TM) R7 350X|64\n@(TM) R7 350X|64\n@ * 7670|64\n@ R9 M200X Series|64\n@ R9 M370X|64\n@ * 6670|63\n@(TM) * 8350|63\n@ 530X Series|63\n@(TM) R9 360|63\n@(TM) Pro WX 4150 Graphics|63\n67EF:C5|63\n@ R7 Graphics + R5 340 Dual Graphics|62\n@ * 5670|62\n@ ^ 470/570|62\n@ 530 Series|62\n@ R7 250 Series|62\n@ R7 430|62\n@ * 6750 Graphics|62\n@(TM) R9 M385X|62\n@(TM) Vega 10 Mobile Graphics|62\nFirePro V5900 (FireGL V)|61\nFirePro V5800 (FireGL V)|61\n@(TM) Vega 8 Graphics|61\nFirePro V4800 (FireGL V)|61\n@ * 7600 Series|61\n@(TM) Vega 6 Graphics|61\n@(TM) R9 200 Series|61\n@ * 8850M|61\n@ RX460|61\n@ R7 M460|61\n@ ^ 640 Series|60\n@ 530|60\n@ * 5600/5700|60\n@ * 5750 Series|60\n@ R7 Graphics + R7 200 Dual Graphics|60\n@ R7 450|60\nFirePro V4900|60\nFirepro W6150M|60\nASUS R7 250 Series|60\n@(TM) ^ 560 Graphics|60\n@(TM) R7 M370|59\nFirePro M4000 Mobility Pro Graphics|59\n@ R5 430|59\n@ R9 M275X|59\nFirePro V5800 (FireGL) Graphics Adapter|59\nMobility @ * 5870|59\n@(TM) R9 M385X|58\n@ * 7750M|58\n@ * 5670|58\n@ * 8850M|58\n@ * 7700M Series|58\n@ * 8670D + R7 200 Dual Graphics|58\n@ R7 Series / * 9000 Series|57\n@ * 6730M/6770M|57\n@(TM) 625|57\n@(TM) R9 M385|57\n@ * 5870M|56\n@ 610 Series|56\nFirePro W4100|56\nFirePro M6000 Mobility Pro Graphics|56\n@ ^ 540 Series|56\n@ R7 240|56\n@ * 7560D + * 7700 Dual Graphics|56\n@ R9 M370X (Bootcamp XG edition by bootcampdrivers.com)|56\nFirePro V4900 (ATI FireGL)|55\n@(TM) R7 M350|55\nFirePro M6000 Mobility Pro Graphics|55\n67FF:08|55\n@ * 5750|55\n@ * 7570|55\n@(TM) Vega 11 Graphics|55\n@ R7 M460|55\n@ * 5750 OpenGL Engine|55\n@(TM) R7 M370|55\n@ * 6730M/6770M/7690M XT|55\n@ E8860|55\n@ * 8790M|54\n@ * 6770M|54\n@ R7 M440|54\n@(TM) R7 350|54\n@(TM) R7 350X|54\n@ * 7870 XT|54\n@ * 7800M Series|54\n@ 520|54\n@ R7 M370|53\nFirePro W4150M FireGL V|53\n(ATI) FirePro M4000 (FireGL V) Mobility Pro Graphics|53\n@ R9 M200X Series|53\n@ * 6700M/7700M/7900M Series|53\n@(TM) 620|53\nPicasso|53\n@(TM) ^ Vega 10 Graphics|53\n67EF:CF|53\n@(TM) Vega 3 Graphics|53\n@ R7 250|53\nFirePro W4190M|53\n@(TM) Vega 8 Graphics|53\n694C:C0|52\n@ * 5670 Series|52\n@(TM) ^ Vega 11 Graphics|52\n@ * 6770M OpenGL Engine|52\n@(TM) M535DX|52\nFirePro V4800 (FireGL V)|52\n@ R7 350 Series|52\nBarco MXRT 5600 (WDDM)|51\n@ 630|51\nFirePro V4900 (FireGL V)|51\nFirePro V4900 (FireGL V) Graphics Adapter|51\n@(TM) Vega 3 Mobile Graphics|51\n@ 535 Series|51\n@ R7 Graphics|51\n@ * 5670|51\nFirePro W4170M|50\n@ * 8700M Series|50\n@ * 8670 / R7 250/350|50\nPicasso|50\nFirePro V4800 (FireGL) Graphics Adapter|50\nMobility @ * 5850|49\nOPAL XT/GL (6604)|49\n@ R5 M335|49\nMatrox C900 PCIe x16|49\n@ * 7670|49\n@ * 6750M|49\n@(TM) 535|49\n@ 540X Series|49\n@ R9 M275|49\n@(TM) ^ 640|49\n@ * 5700 Series|48\n@ R5 M230 Series|48\nFirepro M6100|48\n@(TM) R9 M375|48\n@ R5 430|48\n@(TM) R7 250|47\n@ R9 M265X|47\n@ * 6730M/6770M|47\n@ * 8670D|47\n@ R5 340|47\n@ 520|47\n@(TM) 520|47\nFirePro V (FireGL V) Graphics Adapter|47\nFirePro M5100 FireGL V|46\n@ * 6670|46\n@ R7 M260X|46\n@ * 8550|46\nFirePro M4150|46\n@ * 6670|46\n@ * 7700 Series|46\nFirePro M4170|46\n@ * 7570|46\n@ * 8670D + * 6670 Dual Graphics|45\n699F:C1|45\n@ R7 Graphics|45\n@(TM) R7 M340|45\nFirePro W4170M (FireGL V)|45\n@(TM) * 8500M/8700M|45\n@ R7 M340|44\nFirePro M5950|44\n@ * 8570D + R7 240 Dual Graphics|44\n@ * 6770M|44\n@ * 7730M|44\n@ * 8790M|44\n@ * 7750|44\n@ * 8690A|44\nMobility @ * 5730 / 6570M|44\n@ R9 A375|44\n@(TM) R8 M445DX|43\nFirePro V (FireGL V) Graphics Adapter|43\n@ * 7750/8740 / R7 250E|43\nFirePro V3900|43\n@ * 7600A Series|43\n@(TM) R7 200 Series Graphics|43\n@ R7 Graphics|43\n@ * 6770M|43\n@ R7 M260 Series|43\n@ R7 M360|43\n@ * 8970M|43\n@(TM) Vega 6 Graphics|43\n@ * 8570|42\n@ R7 M440|42\n@ * 8670A/8670M/8750M|42\nMobility @ * 5850|42\n@ * 8750M|42\nEmbedded @ E9173|42\n@(TM) R7 M440|42\n@ * 8730M|42\n@ R7 240 + * 8570D Dual Graphics|42\nFirePro V3900|42\n@(TM) 535DX|42\n@(TM) 520|42\n@(TM) Vega 8 Mobile Graphics|42\n@(TM) Vega 8 Graphics|42\n@(TM) Vega 2 Graphics|42\n@(TM) R9 M375|42\n@(TM) R8 M445DX|41\n@ * 6750M|41\nRadeonT 540X|41\n@(TM) 530|41\n@ * 7560D + * 6670 Dual Graphics|41\n@ R7 240|41\n@(TM) R7 M360|41\n@ R9 M280X|41\n@ * 7520G + * 7600M Dual Graphics|41\n@(TM) R7 M445|41\n@ Vega 8 Mobile|40\n@(TM) R9 255|40\n@ R7 M260X|40\n@ R8 M535DX|40\n@ R7 240/340|40\n@(TM) R9 M375|40\n@(TM) R7 Graphics|40\n@(TM) R5 M420|40\n@ * 6750M|40\n@ R9 M265X|40\n@ R7 M340|40\n@ * 6570|40\n@ * 7500/7600 Series|39\n@ R7 430|39\nFirePro W2100|39\n@ * 7730M|39\n@ * 8670D|39\n@ R5 M255|39\n@ * 7560D + * 6570 Dual Graphics|39\n@ ^ Vega|39\n@ R7 240 Series|39\n@(TM) R7 M445|39\n@ * 6800M Series|39\n@ * 8690M|39\n@ * 7660D + * 6570 Dual Graphics|39\n@ R7 M370|39\n@(TM) * 6650M|38\n@ R5 M435|38\n@ * 6500 Series|38\n@ R7 Graphics|38\nFirePro M7820|38\n@(TM) R8 M445DX Graphics|38\n@ * 5570|38\n@ * 8650G + 8750M Dual Graphics|38\n@ * 8670A/8670M/8750M|38\n@ * 6650M|38\n@ R7 M260 Series|38\n@ * 7660G + 7600M Dual Graphics|38\n@ * 7600M Series|38\n@ * 7670M|37\n@. * 7670M|37\n@(TM) R7 M265|37\nMobility @ * 5000|37\n@ * 7500M/7600M Series|37\n@ R5/R6/R7 Graphics|37\n@ R7 M270|37\n@ * 8650G + * 7600M Dual Graphics|37\nFirepro M5100|37\n@ * 7730M|37\n@ * 8570D|37\n@(TM) * 7650A Graphics|37\n@ R7 Graphics|37\n@(TM) ^ Vega 10 Graphics|37\n@ * 7600A Series|36\n@ R7 M270|36\n@ * 7660D + * 6670 Dual Graphics|36\n@ * 7570M/* 7670M Graphics|36\n@ 6600M and 6700M Series|36\n@ R7 Graphics + R7 200 Dual Graphics|36\n@ * 7570 Series|36\n@ * 8750M|36\n@ * 6550D|36\nFirePro M5950|36\n@ * 7660G + 7600M Dual Graphics|36\n@ * 6550D|36\n@ * 7600M/7700M Series|36\n@(TM) Vega 3 Graphics|36\n@(TM) 625|36\nMobility @ * 5570|36\n@ HD8730|36\n@(TM) R9 M380|36\n@(TM) R5 240|36\n@ * 7650M|35\n@ * 7560D|35\n@ * 8690M|35\n@ * 8650G + 8750M Dual Graphics|35\n@ * 8650G + * 8750M Dual Graphics|35\n@ * 8650G + * 8570M Dual Graphics|35\n@ * 6570|35\n@ * 7650M|35\n@ * 6630M/6650M/6750M/7670M/7690M|35\n@ * 6500 Series|35\n@(TM) 520|35\n@ * 8570D|35\n@ * 7600M Series|35\n@ R7 Graphics|35\n@ * 7660G + 8670M Dual Graphics|35\n@ R7 200 Series|35\n@ * 6630M/6650M/6750M/7670M/7690M|35\n@ R7 M265|35\n@ * 8650G + * 8750M Dual Graphics|35\n@ * 8650G + 8670M Dual Graphics|35\n@ R7 Graphics|34\n@ * 6630M Series|34\n@(TM) 520|34\n@ * 7660D|34\nASUS R7 240 Series|34\n@ R9 M280X|34\n@(TM) R5 340|34\n@ * 8550G + 8600/8700M Dual Graphics|34\n@ R7 Graphics|34\n@(TM) * 8500M/8700M|34\n@ * 7660G + * 7600M Dual Graphics|34\n@ * 7670M|34\n@(TM) R5 M430|34\n@ * 8650G + 8500M Dual Graphics|34\n@(TM) R5 340X|34\n@(TM) R5 230 series|34\n@ * 8550|34\nFirePro W2100 (FireGL V)|34\nFirepro M4100 FireGL V|34\n@ * 6550D|34\n@ * 6630M|34\n@(TM) R9 M375|34\n@ * 5670 OpenGL Engine|33\n@ * 5670|33\n@ R7 Graphics|33\n@ * 7660G|33\n@ * 5570|33\n@ * 7550M/7650M Graphics|33\n@ * 7660D|33\n@ * 7560D|33\n@ * 7560D|33\n@ R5 M445 Series|33\n@ R5 M315|33\n@ * 8570D|33\n@ R7 M265|33\n@ * 7640G + * 7500/7600 Dual Graphics|33\n@ R7 Graphics|33\n@ * 8500M Series|33\nMobility @ * 5000|33\n@(TM) R7 M360|33\nFirepro M4100|33\n@(TM) Vega 10 Graphics|32\n@ * 7500M/7600M Series|32\n@ * 8550G + * 8600/8700M Dual Graphics|32\n@ * 7660G|32\n@ * 7350|32\n@ * 8470D + * 6450 Dual Graphics|32\n@ R7 Graphics|32\n@ * 8730M|32\n@ * 7640G + * 7400M Dual Graphics|32\n@ * 8690A|32\n@ * 8650G + 8600/8700M Dual Graphics|32\n@ R7|32\n@(TM) Vega 11 Graphics|32\n@(TM) Vega 8 Graphics|32\n@ R5 M200 Series|32\n@(TM) R5 M335|32\n@(TM) R5 M430|32\n@ * 8550G + * 8570M Dual Graphics|32\n@ * 7650M Series|32\n@ R7 250 Series|32\n@(TM) R7 M460|32\n@ * 6550D|32\n@ * 7660G + * 7600M Dual Graphics|32\n@(TM) Vega 3 Graphics|32\n@ * 8470D|32\n@ R8 M365DX|31\nMadison [Mobility @ * 5650/5750 / 6530M/6550M]|31\n@ * 6630M/6650M/6750M/7670M/7690M|31\n@ R7 Graphics|31\n@ E6760|31\n@ R7 Graphics|31\n@(TM) Vega 8 Graphics|31\n@(TM) R5 M330|31\n@ * 8670A/8670M/8690M|31\n@ R7 A360|31\n@ * 8650G + * 8600M Dual Graphics|31\n@ R5 M200 / * 8500M Series|31\n@(TM) R8 M435DX|30\n@ * 7640G + * 7670M Dual Graphics|30\n@(TM) Vega 10 Mobile Graphics|30\n@ R7 Graphics|30\n@ Pro 450/550|30\n@ * 8800M Series|30\n@ * 8470D|30\n@ * 7660D|30\n@ * 8610G + * 8600M Dual Graphics|30\n@ * 7660G + 7670M Dual Graphics|30\n@(TM) Vega 8 Mobile Graphics|30\n@ 610 Series|30\n@(TM) R5 M330|30\n@ * 7660G|30\n@ * 7640G|30\n@ R8 M365DX|30\n@ * 8550G|29\n@ * 7540D|29\n@ * 7640G|29\n@ * 8650G|29\n@(TM) R7 Graphics|29\n@(TM) ^ Vega 11 Graphics|29\n@ * 6650M|29\n@ * 7660G|29\n@ 6600M and 6700M Series|29\n@ * 7640G + * 7400M Dual Graphics|29\n@(TM) R5 340X|29\n@ R5 435|29\n@ * 6500M/5600/5700 Series|29\nFirepro M4100 FireGL V|29\n@ R7 Graphics|29\n@(TM) 535|29\n@ R7 240 Series|29\n@(TM) R7|29\n@ * 8550G + 8500M Dual Graphics|28\n@(TM) 530|28\n@ * 5650 Series|28\n@ * 7570M|28\n@ * 7570M|28\nASUS R7 240 Series|28\n@ * 6570|28\n@(TM) Vega 8 Graphics|28\n@ E8860|28\n@(TM) 530 series|28\n@(TM) R5 M315|28\n@ * 5500 Series|28\n@ * 8610G + * 8670M Dual Graphics|28\n@(TM) R6|28\n@ R9 M275X|28\n@ * 8550G + R5 M230 Dual Graphics|28\n@ * 8470D|28\n@ * 8670D|28\n@ * 7620G|28\n@(TM) R8 M350DX|28\n@ * 8470D|27\n@(TM) R8 M445DX|27\n@(TM) R7 Graphics|27\n@(TM) R5 Graphics|27\n@(TM) R7 M340|27\n@(TM) R6 Graphics|27\n@ R6 Graphics|27\n@ R5 M230 Series|27\n@ * 8650G|27\n@ * 7480D|27\n@(TM) R8 M445DX Graphics|27\n@(TM) R6 Graphics|27\n@ R7 Graphics|27\n@ R6|27\n@ R5 M255|27\n@(TM) Vega 3 Graphics|27\n@ 550X|27\n@(TM) Vega 3 Graphics|27\n@ * 7500/7600 Series|27\n@ * 8650G|27\n@ * 5500 Series|27\n@ * 7610M|27\n@ Instinct MI25 MxGPU|27\n@(TM) HD8530M|27\n@ R7 M260|27\n@(TM) R8 M445DX|27\n@ R7 Graphics|26\n@ * 8500M|26\n@(TM) R7 M260DX|26\n@ * 8410G|26\n@ * 8670A/8670M/8690M|26\n@(TM) R7 M360|26\n@(TM) R7 M360|26\n@ * 8670D|26\n@ R9 M275|26\n@ * 7640G|26\n@(TM) R7 Graphics|26\nMxGPU|26\n@ * 8370D|26\n@ * 6620G|25\n@ * 7560D|25\n@ * 8570 / R5 430 / R7 240/340 / @ 520|25\n@ R4 Graphics|25\n@ R6 Graphics|25\n@ R7 Graphics|25\n@(TM) 535DX|25\n@(TM) 540 Graphics|25\n@(TM) R5 M330|25\n@ * 6530D|25\n@ R6 Graphics|25\n@ * 8510G|25\n@ * 6620G|25\n@ R7 M360|24\n@(TM) R6 Graphics|24\n@ R7 M260|24\n@ * 8610G + * 8600M Dual Graphics|24\n@(TM) R6 Graphics|24\n@ R5 M200 / * 8500M Series|24\n@ R7 Graphics|24\n@ * 7600G|24\n@ R7 Graphics|24\n@ * 6620G|24\n@ R5 M330|24\n@(TM) R5 240|24\n@(TM) * 6620G|24\nFirePro V3800 (FireGL V)|24\n@ * 6520G|24\n@ R7 Graphics|24\n@ * 7520G|24\n@(TM) R6 Graphics|24\n@(TM) R7 M260|24\n@ ^ 540 Series|24\n@(TM) R5 M320|24\n@ * 8500M|23\n@ R5 M230|23\n@ * 8670M|23\n@ * 8550G + * 8750M Dual Graphics|23\n@ * 8600M Series (HAINAN, DRM 3.40.0, 5.11.13-arch1-1, LLVM 11.1.0)|23\n@ * 8550G|23\n@ R5 M240|23\n@ R5 M240 Series|23\n@ * 7540D|23\n@(TM) R5 M430|23\n@ R5 Graphics|23\n@(TM) R5 M430|23\n@ R6 Graphics|23\n@ * 7520G|23\n@ R7 Graphics|23\n@ * 8610G|22\nFirePro 3800 (FireGL) Graphics Adapter|22\n@ * 7570M/* 7670M Graphics|22\n@ * 7480D|22\n@(TM) R7 Graphics|22\n@ * 8650G + * 8600M Dual Graphics|22\n@(TM) Vega 6 Graphics|22\n@ R7 Graphics|22\n@ R5 Graphics|22\n@ * 7660G + * 8600M Dual Graphics|22\nFirePro M2000|22\n@ R7 Graphics|22\n@ * 7870M|22\n@ R5 M335|22\n@ R5|22\n@ * 8500M Series|22\n@(TM) * 8490|22\n@ * 8670M|22\n@ * 7660G + * 7670M Dual Graphics|22\n@ 7500M/7600M Series|22\n@ R5 Graphics|21\n@(TM) R4 Graphics|21\n@ * 8490|21\n@ * 8490|21\n@ R7 Graphics|21\n@ * 8570M|21\n@(TM) R5 M320|21\n@ R2|21\n@ * 6530D|21\n@(TM) * 6470M|21\nMxGPU|21\n@ * 7000 series|21\n@ * 7470|21\n@(TM) R8 M350DX|21\n@ R7 Graphics|21\n@ * 7520G + * 7400M Dual Graphics|21\n@(TM) R5 M335|21\n@ * 7400G|21\n@ * 7640G + * 8500M Dual Graphics|21\n@ * 7000 series|21\n@(TM) R5 Graphics|20\n@(TM) R7 M520 (R17M-M1-30)|20\n@ * 8470|20\n@ * 7480D|20\n@ * 6400M/7400M Series|20\n@(TM) R3 Graphics|20\n@ R6 M255DX|20\n@ * 8370D|20\n@ R5 Graphics|20\n@ R7 Graphics|20\n@ * 6410D|20\n@(TM) R5 Graphics|20\n@ R5 M330|20\n@ R7 M260DX|20\n@(TM) R5 Graphics|20\n@ * 7480D|20\n@ * 6470M|20\n@ Hybrid (Blocked)|20\n@(TM) R7 Graphics|20\n@(TM) R6 M340DX|20\n@ R5 235|20\n@ * 7520G|19\n@(TM) R6 M255DX|19\n@ R5 M240|19\n@(TM) R3 Graphics|19\n@ R7E Graphics|19\n@ R5 M200 Series|19\n@ * 7470|19\n@ * 7640G + 8500M Dual Graphics|19\n@(TM) R5 M330|19\n@ * 6470M|19\n@ R3 Graphics|19\n@ * 8400E|19\n@ * 7640G + * 8570M Dual Graphics|19\n@ * 8400|19\n@ * 8400 / R3 Series|19\n@ R5 Graphics|19\n@(TM) R7 M265|19\n@ R5 M230|19\n@ R5 Graphics|19\n@ * 7620G|19\n@ R5 Graphics|19\n@(TM) * 6470M|19\n@ * 7480D|18\n@ R7 Graphics|18\n@(TM) R5 Graphics|18\n@ * 8550G|18\n@ * 8370D|18\n@ R5 Graphics|18\n@(TM) * 7450|18\n@ * 6530D|18\n@ * 8570M|18\n@ R6 Graphics|18\n@ * 7650A|18\n@ * 8450G|18\n@ * 8550G + R5 M230 Dual Graphics|18\n@ * 7640G + 7470M Dual Graphics|18\n@ * 8370D|18\n@ * 7400M Series|18\n@ * 8670D + R5 200 Dual Graphics|17\n@ * 7500G|17\n@ * 7790|17\n@ * 7450M|17\n@(TM) * 7450A Graphics|17\n@(TM) R5 Graphics|17\n@(TM) R6 Graphics|17\n@(TM) R4 Graphics|17\n@ * 8650G + * 8500M Dual Graphics|17\n@ * 7400M Series|17\n@ * 8450G|17\n@ * 6520G|17\n@ * 8470D|17\n@(TM) R5 Graphics|17\n@(TM) R4E Graphics|17\n@ * 8330|17\n@ * 8400|17\n@(TM) * 8510G|17\n@(TM) R5 Graphics|17\n@ * 8650G|17\n@ * 6490M|17\n@ R7 Graphics|16\n@ * 6400 Series|16\n@ * 8510G|16\n@ * 7400 Series|16\n@ * 7400 Series|16\n@(TM) * 8510G|16\n@ * 6370D|16\n@ * 7420G|16\n@ * 7520G + * 7600M Dual Graphics|16\n@ R9 260|16\n@ * 7640G + 7600M Dual Graphics|16\n@ * 7470M|16\n@(TM) R2 Graphics|16\nRADEON * 6450|16\n@(TM) R1E Graphics|16\n@ R5 Graphics|16\n@ * 7420G|16\n@(TM) R4 Graphics|16\n@(TM) R4 Graphics|16\n@(TM) R4 Graphics|16\n@ * 7480D|16\n@ * 6490M|15\nRADEON * 6450|15\n@(TM) * 8610G|15\n@(TM) * 8610G|15\n@ * 8610G + 8600M Dual Graphics|15\n@ * 7350|15\n@(TM) * 6480G|15\n@ * 8650G + 8600M Dual Graphics|15\n@ * 8570D|15\n@ * 6370M|15\nMobility @ * 5000 Series|15\n@ R2 Graphics|15\n@ * 8240 / R3 Series|15\n@ * 8650G + R5 M200 Dual Graphics|15\n@ * 8400E|15\n@(TM) R4 Graphics|15\n@ R5 Graphics|15\n@ * 8610G|15\n@ * 8650G + * 8500M Dual Graphics|15\n@(TM) R7 M260|15\nASUS EAH6450 Series|15\n@ R3 Graphics|15\n@(TM) R6 M340DX|15\n@ R6E Graphics|15\n@ R5 Graphics|15\n@ R2 Series|14\n@ * 6450/7450/8450/R5 230|14\n@ * 8200 / R3 Series|14\n@(TM) R3 Graphics|14\n@ R5 230|14\n@(TM) * 8510G|14\n@(TM) R4 Graphics|14\n@ R5 M435|14\n@ * 8240|14\nASUS R5 230 Series|14\nFirePro M2000|14\n@ * 7500G|14\n@ * 7450|14\nRADEON * 6450|14\n@ * 8400E|14\nRADEON * 6350|14\n@ * 6480G|14\n@(TM) R5E Graphics|14\nCARRIZO 9874|14\nMobility @ * 5000 Series|14\n@ * 6630M|14\n@ * 6370M|14\n@ * 8400 / R3 Series|14\n@(TM) R2 Graphics|14\nASUS EAH6450 Series|14\n@ * 7470M|13\nMobility @ * 5470|13\nMobility @ * 5400 Series|13\n@(TM) R5E Graphics|13\n@(TM) R2 Graphics|13\n@ * 6540|13\n@ * 7450|13\n@ * 5450|13\n@ * 8600M Series|13\n@ * 8400 / R3 Series|13\nKaveri|13\n@(TM) * 6480G|13\n@ * 5400 Series|13\n@ * 8330|13\nRADEON * 6350|13\n@ R4/R5 Graphics|13\n@ * 7600G +™ * Dual Graphics|13\n@ R3 Graphics|13\nASUS R5 230 Series|13\n@(TM) R7 Graphics|13\n@ * 7620G|13\n@ * 8250|13\n@(TM) R7 Graphics|12\n@ * 6450/7450/8450 / R5 230|12\n@ * 6480G|12\n@(TM) R7 Graphics|12\n@ * 5450 Series|12\n@ * 8400 / R3 Series|12\n@(TM) * 6400 Series|12\n@(TM) R4 Graphics|12\nRADEON HD5450|12\n@ R5 Graphics|12\n@ R5 Graphics|12\n@(TM) R6 Graphics|12\n@(TM) R4 Graphics|12\n@(TM) R2 Graphics|12\n@ * 8210|12\n@ R5 230|12\n@ R3 Graphics|12\nFirePro 2270|12\n@(TM) R2E Graphics|12\n@ * 8400 / R3 Series|12\n@ * 8350G|12\n@ * 8400|12\n@ R2 Graphics|12\n@ * 8210 Graphics|12\n@ E6460|12\n@(TM) * 8280E|12\n@ R2 Graphics|11\n@ * 8450G + * 8750M Dual Graphics|11\n@ * 8330|11\n@ * 5470|11\n@ * 7600G + 7500M/7600M Dual Graphics|11\n@ R5 220|11\n@ * 8200 / R3 Series|11\n@ * 8240|11\n@ * 8400 / R3 Series|11\n@ * 8200 / R3 Series|11\n@ * 5450|11\n@(TM) 620|11\n@(TM) Vega 8 Mobile Graphics|11\n@ * 6530D|11\n@(TM) * 6520G|11\n@ * 6300M Series|11\nASUS EAH5450|11\n@ R5 220|11\n@ * 8250|11\n@ * 7340|11\n@ * 7340M|11\n@ * 8210|11\n@ * 7700 Series|10\n@ * 6380G|10\n@ * 5400 Series|10\n@ * 8240|10\n@ * 7640G + 7670M Dual Graphics|10\n@(TM) R6 Graphics|10\nASUS EAH5450 Series|10\n@ * 6320|10\n@ * 7340G|10\n@ * 6410D|10\n@ * 7340|10\n@ * 6320|10\n@(TM) R2 Graphics|10\n@ * 8180|9\nMobility @ * 5430|9\n@ R2 Graphics|9\n@ R2 Series|9\n@ * 8210|9\nFirePro 2270|9\n@ R2E Graphics|9\n@ * 7340|9\n@ * 6320|9\n@ * 7310|9\n@ * 6310|9\n@ R7 Graphics|9\n@ * 7310|8\n@ * 8250|8\n@ * 8180|8\n@ * 6630M|8\n@ * 6230|8\n@ * 6320|8\n@ * 6400M Series|8\n@ * 7290 Graphics|7\n@ * 6290|7\n@ * 6310|7\n@ * 8180|7\nASUS EAH5450 Series|7\n@(TM) R2 Graphics|6\n@ * 6310|6\n@ * 7500G|6\n@ * 8240 / R3 Series|6\n@ * 6250|6\n@ * 6380G|6\n@ * 6300M Series|5\n@ * 7310|5\n@ R3 Graphics|5\n@(TM) R6 Graphics|5\n@ * 6250|5\n@ * 6290|5\n@ * 6250|5\n@ * 7290 Graphics|4\n@ * 5000/6000/7350/8350 Series|3\n@ ^ Vega 56 OpenGL Engine|-1\nFirePro V4800 (FireGL) Graphics Adapter|-1\n@ * 7670M|-1\n@ * 8570D|-1\n7340:C5|-1\n@ * 8550G|-1\n@ R5 Graphics|-1\nASUS R7 360 Series|-1\nBonaire [FirePro W5100]|-1\n@ * 6380G|-1\n@ R7 Graphics|-1\nFireGL V8650|-1\nFirePro S7150|-1\nFirePro V3900 (FireGL V)|-1\nFirePro V7800 (FireGL V)|-1\nFirePro W4100 Graphics Adapter|-1\nFirePro W4170M (FireGL V)|-1\nGigabyte @ ^ 580|-1\nMobility FireGL V5700|-1\nMobility @ 4100|-1\nMobility @ * 2400|-1\nMobility @ * 2400 XT|-1\nMobility @ * 2600|-1\nMobility @ * 2600 XT|-1\nMobility @ * 3200|-1\nMobility @ * 3400 Series|-1\nMobility @ * 3430|-1\nMobility @ * 3470|-1\nMobility @ * 3650|-1\nMobility @ * 4200 Series|-1\nMobility @ * 4250|-1\nMobility @ * 4300 Series|-1\nMobility @ * 4500 Series|-1\nMobility @ * 4500/5100 Series|-1\nMobility @ * 4650|-1\nMobility @ * 4670|-1\nMobility @ * 4850|-1\nR9 270X Devil|-1\n^ 560X|-1\n@|-1\n@(TM) HD8530M|-1\n@ 3000|-1\n@ 3100 Graphics|-1\n@ * 2400 PRO|-1\n@ * 2400 XT|-1\n@ * 2600 Pro|-1\n@ * 2600 XT|-1\n@ * 2900 GT|-1\n@ * 3200 Graphics|-1\n@ * 3300|-1\n@ * 3450|-1\n@ * 3470|-1\n@ * 3600 Series|-1\n@ * 3650|-1\n@ * 3850|-1\n@ * 3870|-1\n@ * 3870 X2|-1\n@ * 4200|-1\n@ * 4250|-1\n@ * 4290|-1\n@ * 4300/4500 Series|-1\n@ * 4550|-1\n@ * 4600 Series|-1\n@ * 4650|-1\n@ * 4670|-1\n@ * 4830|-1\n@ * 4850|-1\n@ * 4870|-1\n@ * 4890|-1\n@ * 5670 640SP Edition|-1\n@ * 5800 Series|-1\n@ * 5850|-1\n@ * 6490M|-1\n@ * 6730M/6770M|-1\n@ * 6750|-1\n@ * 6800M Series|-1\n@ * 7540D + * 6670 Dual Graphics|-1\n@ * 7700M Series|-1\n@ * 7800 Series|-1\n@ * 8350|-1\n@ * 8370D|-1\n@ * 8600/8700M|-1\n@ Pro WX Vega M GL Graphics|-1\n@ R5 200 Series|-1\n@ R7 A370|-1\n@ R9 200 Series|-1\n@ R9 290X/390X|-1\n@ R9 380X|-1\n@ ^ 480|-1\n@ ^ 550X|-1\n@ ^ 6650M|-1\n@ RX6600XT|-1\n@(TM) R8 M435DX|-1\n@(TM) R9 290X|-1\n@(TM) RX540|-1\ninc. @ * 7970|-1\nRadeong 0.4 on AMD CAPE VERDE (DRM 2.43.0, LLVM 3.7.0)|-1\nRadeong 0.4 on AMD CAPE VERDE (DRM 3.9.0 / 4.9.0-rc1+, LLVM 4.0.0)|-1\nRadeong 0.4 on AMD FIJI (DRM 3.2.0 / 4.7.0-rc5+, LLVM 4.0.0)|-1\nRadeong 0.4 on AMD TAHITI (DRM 2.43.0, LLVM 3.9.0)|-1\n";
        let u = []
          , c = []
          , h = [];
        function d(e) {
            if (!e)
                return 0;
            const t = function(e) {
                if (e === r.V.Intel && u.length)
                    return u;
                if (e === r.V.Nvidia && c.length)
                    return c;
                if (e === r.V.Amd && h.length)
                    return h;
                try {
                    const t = function(e) {
                        return e === r.V.Intel ? a : e === r.V.Nvidia ? s : e === r.V.Amd ? l : ""
                    }(e)
                      , n = (0,
                    r.b)(t, e);
                    return e === r.V.Intel && (u = n),
                    e === r.V.Nvidia && (c = n),
                    e === r.V.Amd && (h = n),
                    n
                } catch {}
                return []
            }(e.vendor);
            return (0,
            r.a)((0,
            r._)(t, e))
        }
        const f = class e {
            static setConfig(t) {
                e.cfg = t
            }
            static getGPUVendor() {
                return (0,
                r.g)(e.cfg)
            }
            static getGPUParsedVendor(t) {
                return (0,
                r.p)(t || e.getGPUVendor())
            }
            static parseVendor(t) {
                try {
                    const n = e.getGPUParsedVendor(t);
                    return n ? {
                        ...n,
                        score: d(n)
                    } : null
                } catch {}
                return null
            }
        }
        ;
        (e => {
            ( (e, t, n) => {
                "cfg"in e ? o(e, "cfg", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: n
                }) : e.cfg = n
            }
            )(e, 0, null)
        }
        )(f);
        let p = f;
        var g = n(80967)
          , m = n(50884)
          , v = n(37037)
          , y = Object.defineProperty
          , _ = (e, t, n) => ( (e, t, n) => t in e ? y(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        class T {
            constructor(e) {
                _(this, "options"),
                _(this, "nodes"),
                this.options = e,
                this.nodes = [],
                this._init()
            }
            _init() {
                this.options.plugins && Object.keys(this.options.plugins).forEach((e => {
                    const t = this.options.plugins && this.options.plugins[e];
                    if (t && !t.ignore && (!t.instance && t.plugins && Object.keys(t.plugins).length > 0 ? t.instance = new T(t) : t.cls && (t.instance = new t.cls(t)),
                    t.instance)) {
                        const n = typeof t.weight > "u" ? 1 : t.weight;
                        this.nodes.push({
                            key: e,
                            weight: n,
                            instance: t.instance
                        })
                    }
                }
                ))
            }
            getScore() {
                return new Promise((e => {
                    const t = [];
                    this.nodes.forEach((e => {
                        t.push(new Promise((t => {
                            e.instance.getScore().then((n => {
                                t({
                                    key: e.key,
                                    weight: e.weight,
                                    val: n
                                })
                            }
                            ))
                        }
                        )))
                    }
                    )),
                    Promise.all(t).then((t => {
                        const n = {};
                        let i = 0
                          , r = 0;
                        t.forEach(( ({weight: e, val: t}) => {
                            t.score > 0 && (r += e)
                        }
                        )),
                        r = 0 === r ? 1 : r;
                        for (let e = 0; e < t.length; e++) {
                            const o = t[e];
                            o.val.score > 0 && (i += o.weight / r * o.val.score),
                            n[o.key] = o.val
                        }
                        n.score = i,
                        e(n)
                    }
                    )).catch(console.log)
                }
                ))
            }
            getScoreSync() {
                const e = {};
                let t = 0
                  , n = 0;
                const {nodes: i} = this;
                i.forEach((e => {
                    const {weight: t, instance: i} = e
                      , {score: r} = e.val = i.getScoreSync();
                    r > 0 && (n += t)
                }
                )),
                n = 0 === n ? 1 : n;
                for (let r = 0; r < i.length; r++) {
                    const o = i[r];
                    t += o.weight / n * o.val.score,
                    e[o.key] = o.val
                }
                return e.score = t,
                e
            }
        }
        class b extends T {
            get version() {
                return "0.1.10"
            }
            constructor(e) {
                super((0,
                v.d)({}, e))
            }
            setPlayer(e, t) {
                var n, i, r;
                null != (i = null == (n = this.options.plugins) ? void 0 : n.render) && i.instance && (null == (r = this.options.plugins.render) || r.instance.setPlayer(e, t))
            }
            scoreAsync() {
                return this.getScore()
            }
            scoreSync() {
                return this.getScoreSync()
            }
        }
        var S = Object.defineProperty
          , w = (e, t, n) => ( (e, t, n) => t in e ? S(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        class k {
            constructor(e) {
                w(this, "mappingFn"),
                this.mappingFn = e.mapping
            }
            getScore() {
                return new Promise((e => {
                    e(this.getScoreSync())
                }
                ))
            }
            getScoreSync() {
                try {
                    const e = navigator.hardwareConcurrency;
                    let t = 0;
                    return this.mappingFn && (t = this.mappingFn(e)),
                    {
                        score: t,
                        origin: e
                    }
                } catch {
                    return {
                        score: 0,
                        origin: -1
                    }
                }
            }
        }
        class C {
            constructor(e) {
                w(this, "mappingFn"),
                w(this, "score", 0),
                w(this, "origin", -1),
                w(this, "url"),
                w(this, "_getScoreCallback", ( () => {}
                )),
                this.url = e.url,
                this.mappingFn = e.mapping
            }
            getScore() {
                return new Promise((e => {
                    if (this.url)
                        try {
                            const t = new Image;
                            t.src = this.url,
                            t.onload = () => {
                                const n = Date.now();
                                "function" == typeof t.decode ? t.decode().then(( () => {
                                    const t = 1e3 / (Date.now() - n);
                                    let i = 0;
                                    this.mappingFn && (i = this.mappingFn(t)),
                                    this.score = i,
                                    this.origin = t,
                                    e({
                                        score: i,
                                        origin: t
                                    })
                                }
                                )) : e(this.getScoreSync())
                            }
                            ,
                            t.onerror = () => {
                                e(this.getScoreSync())
                            }
                        } catch {
                            e(this.getScoreSync())
                        }
                    else
                        e(this.getScoreSync())
                }
                ))
            }
            getScoreSync() {
                let e = 0;
                return this.mappingFn && (e = this.mappingFn(-1)),
                e > 0 ? {
                    score: e,
                    origin: -1
                } : {
                    score: this.score,
                    origin: this.origin
                }
            }
        }
        class M {
            constructor(e) {
                w(this, "mappingFn"),
                w(this, "score", 0),
                w(this, "origin", -1),
                this.mappingFn = e.mapping
            }
            getScore() {
                return new Promise((e => {
                    const t = performance.now();
                    setTimeout(( () => {
                        const n = performance.now() - t;
                        let i = 0;
                        this.mappingFn && (i = this.mappingFn(n)),
                        this.origin = n,
                        this.score = i,
                        e({
                            score: i,
                            origin: n
                        })
                    }
                    ), 0)
                }
                ))
            }
            getScoreSync() {
                let e = 0;
                return this.mappingFn && (e = this.mappingFn(-1)),
                e > 0 ? {
                    score: e,
                    origin: -1
                } : {
                    score: this.score,
                    origin: this.origin
                }
            }
        }
        var P = Object.defineProperty
          , R = (e, t, n) => ( (e, t, n) => t in e ? P(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        class x {
            constructor() {
                R(this, "origin", ""),
                R(this, "score", 0)
            }
            getScore() {
                return new Promise((e => {
                    e(this.getScoreSync())
                }
                ))
            }
            getScoreSync() {
                const e = p.parseVendor();
                return e ? (this.score = e.score,
                this.origin = e.origin,
                {
                    origin: this.origin,
                    score: this.score,
                    vendorParsedInfo: e
                }) : {
                    origin: this.origin,
                    score: this.score
                }
            }
        }
        var E = Object.defineProperty;
        class D {
            constructor(e) {
                ( (e, t, n) => {
                    ( (e, t, n) => {
                        t in e ? E(e, t, {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: n
                        }) : e[t] = n
                    }
                    )(e, "symbol" != typeof t ? t + "" : t, n)
                }
                )(this, "mappingFn"),
                this.mappingFn = e.mapping
            }
            getScore() {
                return new Promise((e => {
                    e(this.getScoreSync())
                }
                ))
            }
            getScoreSync() {
                try {
                    const e = navigator.deviceMemory;
                    let t = 0;
                    return this.mappingFn && (t = this.mappingFn(e)),
                    {
                        score: t,
                        origin: e
                    }
                } catch {
                    return {
                        score: 0,
                        origin: -1
                    }
                }
            }
        }
        var L = Object.defineProperty
          , I = (e, t, n) => ( (e, t, n) => t in e ? L(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        class O {
            constructor(e) {
                I(this, "mappingFn"),
                this.mappingFn = e.mapping
            }
            getScore() {
                return new Promise((e => {
                    e(this.getScoreSync())
                }
                ))
            }
            getScoreSync() {
                var e;
                try {
                    const t = null == (e = null == navigator ? void 0 : navigator.connection) ? void 0 : e.downlink;
                    let n = 0;
                    return this.mappingFn && (n = this.mappingFn(t)),
                    {
                        score: n,
                        origin: t
                    }
                } catch {
                    return {
                        score: 0,
                        origin: -1
                    }
                }
            }
        }
        class A {
            constructor(e) {
                I(this, "mappingFn"),
                this.mappingFn = e.mapping
            }
            _getBandwidth() {
                if (!performance.getEntries)
                    return -1;
                const e = performance.getEntries().filter(( ({initiatorType: e, decodedBodySize: t, responseEnd: n, responseStart: i}) => ("img" === e || "script" === e) && t > 0 && n !== i))
                  , t = e.reduce(( (e, {decodedBodySize: t, responseEnd: n, responseStart: i}) => {
                    const r = 8e3 * t / (n - i) / 1024 / 1024;
                    return e + (r < 1e5 ? r : 0)
                }
                ), 0);
                return e.length ? t / e.length : -1
            }
            getScore() {
                return new Promise((e => {
                    e(this.getScoreSync())
                }
                ))
            }
            getScoreSync() {
                try {
                    const e = this._getBandwidth();
                    let t = 0;
                    return this.mappingFn && (t = this.mappingFn(e)),
                    {
                        origin: e,
                        score: t
                    }
                } catch {
                    return {
                        score: 0,
                        origin: -1
                    }
                }
            }
        }
        const G = "xg-decodeimg-scores-map"
          , N = () => {
            let e = {};
            try {
                const t = localStorage.getItem(G);
                t && (e = JSON.parse(t))
            } catch {}
            return e
        }
          , B = (e, t) => {
            let n = [];
            return t && e[t] && (n = e[t]),
            n
        }
          , $ = e => {
            let t = 0;
            return e > 0 && (t = e <= 1 ? 0 : e < 4 ? 3 * Math.log2(e) : e < 8 ? 1.6 * (Math.log2(e) - 2) + 6 : .523 * (Math.log2(e) - 3) + 7.6),
            t
        }
          , F = e => t => {
            let n = 0;
            if (!e)
                return n;
            const i = (e => {
                const t = new URL(e);
                return t.origin + t.pathname
            }
            )(e);
            if (t > 0) {
                const e = Math.log10(t + 1);
                n = e <= 1 ? 6 * e : e <= 2 ? 1.6 * (e - 1) + 6 : 2.4 * (e - 2) + 7.6,
                n = Math.round(100 * n) / 100,
                n = ( (e, t) => {
                    try {
                        let n = e;
                        const i = N()
                          , r = B(i, t);
                        return r.length > 0 ? (r.push(e),
                        n = r.reduce(( (e, t) => e + t), 0) / r.length,
                        r.length > 10 && r.shift()) : r.push(e),
                        t && (i[t] = r),
                        (e => {
                            try {
                                localStorage.setItem(G, JSON.stringify(e))
                            } catch {}
                        }
                        )(i),
                        n
                    } catch {
                        return e
                    }
                }
                )(n, i)
            } else
                n = (e => {
                    const t = N()
                      , n = B(t, e);
                    let i = 0;
                    return n.length > 0 && (i = n.reduce(( (e, t) => e + t), 0) / n.length),
                    i
                }
                )(i);
            return n
        }
          , H = e => {
            let t = 0;
            return e > 0 && e < 1e6 && (t = e > 64 ? 6 - 1.5 * (Math.log2(e) - 6) : e > 8 ? 7.6 - .533 * (Math.log2(e) - 3) : 7.6 + .03 * (8 - e)),
            t
        }
          , U = e => {
            let t = 0;
            return e > 0 && (t = e <= 1 ? 0 : e < 8 ? 2 * Math.log2(e) : 1.3333 * (Math.log2(e) - 3) + 6),
            t
        }
          , V = e => {
            let t = 0;
            return e > 0 && e < 1e6 && (t = e <= 1 ? 0 : e < 10 ? 6 * Math.log10(e) : 10),
            t
        }
          , j = e => {
            let t = 0;
            return e > 0 && e < 1e6 && (t = e <= 1 ? 0 : e < 40 ? 3.745 * Math.log10(e) : e < 100 ? 4.02 * (Math.log10(e) - 1.602) + 6 : 5.03 * (Math.log10(e) - 2) + 7.6),
            t
        }
        ;
        class z extends b {
            constructor(e) {
                super((e => ({
                    plugins: {
                        performance: {
                            plugins: {
                                cpu: {
                                    plugins: {
                                        cpuCoreNumber: {
                                            instance: new k({
                                                mapping: $
                                            })
                                        },
                                        decodeImg: {
                                            instance: new C({
                                                url: e,
                                                mapping: F(e)
                                            })
                                        },
                                        timer: {
                                            instance: new M({
                                                mapping: H
                                            })
                                        }
                                    }
                                },
                                memory: {
                                    instance: new D({
                                        mapping: U
                                    })
                                },
                                gpu: {
                                    instance: new x
                                }
                            }
                        },
                        net: {
                            plugins: {
                                downlink: {
                                    instance: new O({
                                        mapping: V
                                    })
                                },
                                performanceNet: {
                                    instance: new A({
                                        mapping: j
                                    })
                                }
                            }
                        }
                    }
                }))(e.decodeImgUrl))
            }
            scoreAsync() {
                return this.getScore()
            }
            scoreSync() {
                return this.getScoreSync()
            }
        }
        function X() {
            return void 0 === typeof window
        }
        function K(e, t=2) {
            return Math.floor(e * Math.pow(10, t)) / Math.pow(10, t)
        }
        const Q = "ttplayer_focus_disable_hevc"
          , W = "MultiMediaHevcPloy"
          , q = ["video_detail", "one_column", "browser_mode"]
          , Z = ["video_detail", "homepage_hot", "homepage_follow", "others_homepage", "general_search", "personal_homepage"];
        function Y(e, t=1, n=[]) {
            return !(!e || "unknown" === e) && ((!n || n.length < 1) && (n = 2 === t ? Z : q),
            n.filter((t => e === t)).length > 0)
        }
        class J {
            constructor() {
                this.dropedRate = 0,
                this.hevcDropedRate = 0,
                this.minDif = 10,
                this.minFrames = 60,
                this.maxDropedRate = 10,
                this.forceNotHevc = !1,
                this.hevcDisableInfo = {
                    hevcMsg: "",
                    hevcCode: 0,
                    hevcF: 0
                },
                this.robustnessTestResult = !1,
                this.configure = {
                    url: "",
                    minDroppedFramesRate: .1,
                    minTotalVideoFrames: 10
                },
                this.hevcRobustnessResult = {
                    isSupportBase: !1,
                    supportRobustness: "unknown",
                    status: !1,
                    errCode: 0,
                    errMsg: "",
                    robustErr: !1,
                    date: 0
                };
                const e = this.getLocalDisableInfo();
                (0,
                m.l)(W, "localDisableInfo", e),
                e && (this.forceNotHevc = e.disable > 0,
                this.hevcDisableInfo = {
                    hevcMsg: e.hevcMsg,
                    hevcCode: e.hevcCode,
                    hevcF: 2
                })
            }
            getLocalDisableInfo() {
                try {
                    const e = (0,
                    m.g)(Q);
                    if (e) {
                        const t = JSON.parse(e);
                        return (new Date).getTime() - t.timestamp > 6048e5 ? ((0,
                        m.s)(Q, ""),
                        null) : t
                    }
                    return null
                } catch {
                    return null
                }
            }
            static getInstance() {
                return J.instance || (J.instance = new J),
                J.instance
            }
            static setDropRate(e, t, n) {
                (0,
                m.l)(W, "setDropRate", e, t, n);
                const i = J.getInstance();
                if (t < 1 || n < i.minFrames)
                    return;
                const r = t / n * 100;
                e.startsWith("h265") ? i.hevcDropedRate = r : i.dropedRate = r;
                const {hevcDropedRate: o, dropedRate: a, minDif: s, maxDropedRate: l} = i;
                (o - a > s || o > l) && (i.forceNotHevc = !0)
            }
            static useHevc(e=1) {
                const {forceNotHevc: t, hevcRobustnessResult: n} = J.getInstance()
                  , r = (0,
                i.Zo)() && function() {
                    if (X())
                        return !1;
                    const e = window.navigator.userAgent;
                    if (!/iPad|iPhone|iPod/.test(e))
                        return !(null == window || !window.MediaSource) && ((null == window ? void 0 : window.MediaSource.isTypeSupported('video/mp4;codecs="hev1.1.6.L120.90"')) || (null == window ? void 0 : window.MediaSource.isTypeSupported('video/mp4;codecs="hev1.2.4.L120.90"')) || (null == window ? void 0 : window.MediaSource.isTypeSupported('video/mp4;codecs="hev1.3.E.L120.90"')) || (null == window ? void 0 : window.MediaSource.isTypeSupported('video/mp4;codecs="hev1.4.10.L120.90"')));
                    try {
                        const e = document.createElement("video");
                        return [e.canPlayType('video/mp4; codecs="hvc1.1.L0.0"'), e.canPlayType('video/mp4;codecs="hev1.1.6.L120.90"'), e.canPlayType('video/mp4;codecs="hev1.2.4.L120.90"'), e.canPlayType('video/mp4;codecs="hev1.3.E.L120.90"'), e.canPlayType('video/mp4;codecs="hev1.4.10.L120.90"')].some((e => "probably" === e || "maybe" === e))
                    } catch {
                        return console.error("check hevc error"),
                        !1
                    }
                }() && !t;
                return e < 2 ? r : r && n.status
            }
            static focusDisableHevc(e, t=!0) {
                const n = J.getInstance();
                !n || n.forceNotHevc || (n.forceNotHevc = !0,
                n.hevcDisableInfo = {
                    ...e,
                    hevcF: 1
                },
                (0,
                m.l)(W, "focusDisableHevc", t, n.forceNotHevc, e),
                t && (0,
                m.s)(Q, JSON.stringify({
                    disable: 1,
                    ...e,
                    timestamp: (new Date).getTime()
                })))
            }
            static getHevcDisableInfo() {
                const e = J.getInstance();
                if (!e)
                    return null;
                const {hevcDisableInfo: t, hevcRobustnessResult: n} = e;
                return {
                    ...t,
                    rcode: n.errCode || 0,
                    rmsg: n.errMsg || "",
                    rstatus: n.status ? 1 : 0
                }
            }
            static async hevcDeviceDetect(e, t=2) {
                const n = J.getInstance()
                  , {configure: r, hevcRobustnessResult: o} = n;
                if (o.isSupportBase = (0,
                i.Zo)(),
                o.date > 0)
                    return o;
                const a = function(e) {
                    return e ? "https://lf16-tiktok-web.tiktokcdn-us.com/obj/tiktok-web-tx/tiktok/webapp/main/webapp-desktop/playback1.mp4" : "https://sf16-website-login.neutral.ttwstatic.com/obj/tiktok_web_login_static/tiktok/webapp/main/webapp-desktop/playback1.mp4"
                }(e);
                return void 0 === typeof window ? o : t < 2 || !a ? (o.isSupportBase = (0,
                i.Zo)(),
                o) : (o.date = (new Date).getTime(),
                r.url = a,
                void (0,
                i.lg)(r).then((e => (o.status = e.status,
                o.robustErr = e.robustErr,
                o))).catch((e => (o.errCode = e.errCode,
                o.errMsg = e.errMsg,
                o.status = e.status,
                o.robustErr = e.robustErr,
                o))))
            }
        }
        const ee = "unknown";
        class te {
            constructor() {
                this.isTTP = null,
                this.abTestVersion = "",
                this.hevcAbVersion = "",
                this.logInitInfo = {},
                this.logConfig = {},
                this.dropCount = 0,
                this.totalCount = 0,
                this.scoreData = {
                    score: -2,
                    vendor: "",
                    gpu: ""
                },
                this.channelInfo = {
                    channel: "",
                    domain: "",
                    type: ""
                },
                this.regionInfo = {
                    region: "",
                    uid: "",
                    isLogin: !1
                },
                this.hevcTestData = {
                    vid: "v0",
                    open: !1,
                    onlySrc: !1,
                    score: -2,
                    playModes: [],
                    pageNames: [],
                    qualityType: 20,
                    hevcQualityType: 28,
                    closePreload: !1,
                    level: 2
                },
                this.abTestData = {},
                this.prePlayMode = ee,
                this.curPlayMode = ee,
                this.curPageName = ee,
                this.prePageName = ee
            }
            static get version() {
                return g.v
            }
            static set channelInfo(e) {
                te.getInstance().channelInfo = e
            }
            static get channelInfo() {
                return te.getInstance().channelInfo
            }
            static set regionInfo(e) {
                te.getInstance().regionInfo = e
            }
            static get regionInfo() {
                return te.getInstance().regionInfo
            }
            static set playMode(e) {
                const {instance: t} = te;
                t.prePlayMode = t.curPlayMode,
                t.curPlayMode = e
            }
            static get playMode() {
                return te.getInstance().curPlayMode
            }
            static get prePlayMode() {
                return te.getInstance().prePlayMode
            }
            static set pageName(e) {
                const t = te.getInstance();
                e !== t.curPageName && (t.prePageName = t.curPageName,
                t.curPageName = e)
            }
            static get pageName() {
                return te.getInstance().curPageName
            }
            static get prePageName() {
                return te.getInstance().prePageName
            }
            static initDeviceScore() {
                const {scoreData: e} = te.getInstance();
                if (e.score < 0) {
                    p.setConfig({
                        expiration: 6048e5
                    });
                    const t = p.parseVendor();
                    t ? (e.score = t.score,
                    e.vendor = t.vendor,
                    e.gpu = t.model) : e.score = 0
                }
            }
            static getInstance() {
                return te.instance || (te.instance = new te,
                te.initDeviceScore()),
                te.instance
            }
            static checkHevcResult() {
                const {hevcTestData: e, curPageName: t, curPlayMode: n, scoreData: i} = te.getInstance();
                return function(e, t) {
                    const {curPlayMode: n, curPageName: i} = t
                      , r = t.score || -2
                      , o = t.vendor || ""
                      , a = (null == e ? void 0 : e.level) || 2
                      , s = J.useHevc(a)
                      , l = {
                        qualityType: 20,
                        hevcQualityType: 28,
                        open: !1,
                        openSrc: !1,
                        closePreload: !1,
                        vid: null == e ? void 0 : e.vid,
                        data: e
                    };
                    if (!s || !e || !e.open || r < -1 || !o)
                        return l;
                    l.closePreload = e.closePreload;
                    const {playModes: u=[], pageNames: c=[], closePreload: h=!1, onlySrc: d=!1} = e;
                    let {qualityType: f, hevcQualityType: p} = e;
                    28 === f && !p && (f = 20,
                    p = 28);
                    const g = function(e, t, n, i) {
                        const r = Y(e, 2, n)
                          , o = Y(t, 1, i);
                        return r && o
                    }(i, n, c, u);
                    if (!g)
                        return l;
                    const m = function(e, t, n) {
                        const {score: i=-2, vendor0: r=[], vendor1: o=[]} = n;
                        return e > 0 ? !i || i <= e : function(e, t=[]) {
                            return !(t.length < 1 || !e) && t.filter((t => e === t)).length > 0
                        }(t, 0 === e ? r : o)
                    }(r, o, e) && g;
                    return {
                        ...l,
                        qualityType: f,
                        hevcQualityType: p || 28,
                        closePreload: h || !1,
                        open: m && !d,
                        openSrc: m
                    }
                }(e, {
                    curPageName: t,
                    curPlayMode: n,
                    score: i.score || -2,
                    vendor: i.vendor || ""
                })
            }
            static forceDisableHevc(e) {
                !function(e) {
                    (0,
                    m.l)(W, "forceDisableHevc", e),
                    J.focusDisableHevc(e)
                }(e)
            }
            static setHevcTestData(e) {
                const {hevcTestData: t} = te.getInstance();
                Object.keys(e).forEach((n => {
                    t[n] = e[n]
                }
                ))
            }
            static getHevcTestData() {
                const {hevcTestData: e} = te.getInstance();
                return e
            }
            static setABTest(e) {
                const {abTestData: t} = te.getInstance();
                Object.keys(e).forEach((n => {
                    t[n] = e[n]
                }
                ))
            }
            static getABTest() {
                const {abTestData: e} = te.getInstance();
                return e
            }
            static reset() {
                this.instance.abTestVersion = ""
            }
            static setHevcAbVersion(e) {
                const t = te.getInstance();
                t && (t.hevcAbVersion = e)
            }
            static getAbVersions() {
                const e = te.getInstance();
                return e ? `${e.hevcAbVersion},${e.abTestVersion}` : ""
            }
        }
        function ne(e) {
            const {performance: t, net: n, score: i=0} = e;
            if (!t && !n)
                return {
                    score: 0
                };
            const r = {
                score: K(i)
            };
            try {
                if (n) {
                    const {downlink: e={}, performanceNet: t={}, score: i=0} = n;
                    r.link_s = K((null == e ? void 0 : e.score) || 0),
                    r.link_o = K((null == e ? void 0 : e.origin) || 0),
                    r.netper_s = K((null == t ? void 0 : t.score) || 0),
                    r.netper_o = K((null == t ? void 0 : t.origin) || 0),
                    r.net_s = K(i)
                }
                if (t) {
                    const {cpu: e, memory: n, gpu: i} = t
                      , o = null == i ? void 0 : i.vendorParsedInfo;
                    r.memory_s = K((null == n ? void 0 : n.score) || 0),
                    r.gpu_s = K((null == i ? void 0 : i.score) || 0),
                    r.gpu = (null == i ? void 0 : i.origin) || "",
                    r.vendor = (null == o ? void 0 : o.vendor) || "",
                    r.gpu_m = (null == o ? void 0 : o.model) || "",
                    r.cpu_s = K((null == e ? void 0 : e.score) || 0);
                    const {cpuCoreNumber: a, decodeImg: s, timer: l} = e;
                    r.core_s = K((null == a ? void 0 : a.score) || 0),
                    r.decdeimg_s = K((null == s ? void 0 : s.score) || 0),
                    r.decdeimg_o = K((null == s ? void 0 : s.origin) || 0),
                    r.timer_s = K((null == l ? void 0 : l.score) || 0),
                    r.timer_o = K((null == l ? void 0 : l.origin) || 0)
                }
                return r
            } catch {
                return r
            }
        }
        function ie(e) {
            var t;
            const n = null == (t = null == e ? void 0 : e.performance) ? void 0 : t.gpu;
            if (!n)
                return null;
            const {vendorParsedInfo: i} = n;
            return {
                score: n.score || -2,
                gpu: n.origin || "",
                vendor: (null == i ? void 0 : i.vendor) || ""
            }
        }
        class re {
            constructor() {
                this.asyncDate = 0,
                this.syncDate = 0,
                this.markData = {},
                this.shortData = {},
                this.mark = null,
                this.curImgUrl = "",
                this.gpuScoreData = {
                    score: -2,
                    vendor: "",
                    gpu: ""
                },
                !X() && this.syncMark()
            }
            syncMark() {
                if (0 !== this.syncDate)
                    return;
                this.mark || (this.mark = new z({
                    decodeImgUrl: this.curImgUrl
                })),
                this.syncDate = (new Date).getTime(),
                this.markData = this.mark.scoreSync(),
                this.shortData = ne(this.markData);
                const e = ie(this.markData);
                e && (this.gpuScoreData = e)
            }
            static getInstance() {
                return re.instance || (re.instance = new re),
                re.instance
            }
            static syncMark() {
                return re.getInstance().syncMark()
            }
            static async asyncMark(e) {
                const t = re.getInstance();
                if (0 !== t.asyncDate)
                    return;
                t.curImgUrl = function(e) {
                    return e ? "https://lf16-tiktok-web.tiktokcdn-us.com/obj/tiktok-web-tx/tiktok/webapp/main/assets/perf_images/performance.jpeg" : "https://sf16-website-login.neutral.ttwstatic.com/obj/tiktok_web_login_static/tiktok/webapp/main/assets/perf_images/performance.jpeg"
                }(e);
                const n = new z({
                    decodeImgUrl: t.curImgUrl
                });
                t.mark = n,
                t.asyncDate = (new Date).getTime();
                const i = await (null == n ? void 0 : n.scoreAsync());
                t.markData = i,
                t.shortData = ne(i);
                const r = ie(i);
                r && (t.gpuScoreData = r)
            }
            static get shortData() {
                return re.getInstance().shortData
            }
            static get gpuScoreData() {
                return re.getInstance().gpuScoreData
            }
            static markData() {
                return re.getInstance().markData
            }
        }
    }
    ,
    63343: (e, t, n) => {
        "use strict";
        n.d(t, {
            A: () => l
        });
        var i = n(86848)
          , r = n(91122)
          , o = n(80967);
        const a = ['video/mp4;codecs="hvc1.1.L0.0"', 'video/mp4;codecs="hvc1.1.6.L120"', 'video/mp4;codecs="hev1.1.6.L120.90"', 'video/mp4;codecs="hev1.1.6.L120.90"', 'video/mp4;codecs="hev1.2.4.L120.90"', 'video/mp4;codecs="hev1.3.E.L120.90"', 'video/mp4;codecs="hev1.4.10.L120.90"'];
        class s {
            constructor(e="") {
                this.rawUA = e,
                this.platformType = null,
                this.platformVersion = 0,
                this.browserType = null,
                this.browserVersion = 0,
                this.isChromium = !1,
                this.chromiumVersion = 0,
                this.isMobile = !1,
                this.parseRowUA(this.rawUA)
            }
            parseRowPlatform(e="") {
                if (/Windows NT 10\.0/.test(e))
                    this.platformType = "Windows",
                    this.platformVersion = 10;
                else if (/Windows NT 6\.3/.test(e))
                    this.platformType = "Windows",
                    this.platformVersion = 8.1;
                else if (/Windows NT 6\.2/.test(e))
                    this.platformType = "Windows",
                    this.platformVersion = 8;
                else if (/Windows NT 6\.1/.test(e))
                    this.platformType = "Windows",
                    this.platformVersion = 7;
                else if (/Windows NT 6\.0/.test(e))
                    this.platformType = "Windows";
                else if (/Windows NT 5\.1/.test(e))
                    this.platformType = "Windows";
                else if (/Windows NT 5\.0/.test(e))
                    this.platformType = "Windows";
                else if (/Windows Phone/.test(e))
                    this.platformType = "Windows",
                    this.isMobile = !0;
                else if (/Android/.test(e)) {
                    this.platformType = "Android";
                    const t = e.match(/Android\s([0-9\.]+)/);
                    t && t.length > 1 && (this.platformVersion = parseFloat(t[1])),
                    this.isMobile = !0
                } else if (/Linux/.test(e))
                    this.platformType = "Linux";
                else if (/CrOS/.test(e)) {
                    this.platformType = "ChromeOS";
                    const t = e.match(/CrOS ([a-zA-Z0-9_]+) (\d+\.\d+\.\d+\.\d+)/);
                    t && t.length > 2 && (this.platformVersion = parseFloat(t[2]))
                } else if (/iPad|iPhone|iPod/.test(e)) {
                    this.platformType = "iOS";
                    const t = e.match(/OS (\d+)_(\d+)_?(\d+)?/);
                    t && t.length > 2 && (this.platformVersion = parseFloat(t[1] + "." + t[2] + "." + (t[3] || "0"))),
                    this.isMobile = !0
                } else if (/Mac OS X|Macintosh/.test(e)) {
                    this.platformType = "MacOS";
                    const t = e.match(/Mac OS X (10[._]\d+(?:[._]\d+)?)/);
                    t && t.length > 1 && (this.platformVersion = parseFloat(t[1].replace(/_/g, ".")))
                }
            }
            parseTVPlatform(e="") {
                e.toLowerCase && (e = e.toLowerCase()),
                /tizen/.test(e) ? this.platformType = "Tizen" : /webos/.test(e) ? this.platformType = "WebOS" : /vstvb/.test(e) ? this.platformType = "VSTVB" : /fetchtv/.test(e) ? this.platformType = "FetchTV" : /netgemtv/.test(e) ? this.platformType = "NetGemTV" : /vizio/.test(e) ? this.platformType = "VIZIO" : /wpe/.test(e) ? this.platformType = "WPE" : /vodafone/.test(e) ? this.platformType = "VODAFONE" : /philips/.test(e) ? this.platformType = "Philips" : /netrangemmh/.test(e) ? this.platformType = "NETRANGEMMH" : /cva/.test(e) ? this.platformType = "CVA" : /tlc/.test(e) ? this.platformType = "TLC" : /openmw/.test(e) ? this.platformType = "OpenMW" : /totalplay/.test(e) ? this.platformType = "Totalplay" : /vidaa/.test(e) ? this.platformType = "VIDAA" : /megacable/.test(e) ? this.platformType = "megacable" : /lge/.test(e) && (this.platformType = "LGE")
            }
            parseRowBrowser(e="") {
                if (/MSIE|Trident/.test(e))
                    this.browserType = "IE";
                else if (/Edg|Edge/.test(e)) {
                    this.browserType = "Edge";
                    const t = e.match(/(?:Edg|Edge)\/(\d+\.?\d*)/);
                    t && t.length > 1 && (this.browserVersion = parseFloat(t[1]))
                } else if (/Opera|OPR/.test(e)) {
                    this.browserType = "Opera";
                    const t = e.match(/(?:Opera|OPR)\/(\d+\.?\d*)/);
                    t && t.length > 1 && (this.browserVersion = parseFloat(t[1]))
                } else if (/Firefox/.test(e)) {
                    this.browserType = "Firefox";
                    const t = e.match(/Firefox\/(\d+\.?\d*)/);
                    t && t.length > 1 && (this.browserVersion = parseFloat(t[1]))
                } else if (/Safari/.test(e) && !/Chrome/.test(e)) {
                    this.browserType = "Safari";
                    const t = e.match(/Version\/(\d+(\.\d+)+).*Safari/);
                    t && t.length > 1 && (this.browserVersion = parseFloat(t[1]))
                } else if (/Chrome/.test(e)) {
                    this.browserType = "Chrome";
                    const t = e.match(/(?:CriOS|Chrome)\/(\d+\.?\d*)/);
                    t && t.length > 1 && (this.browserVersion = parseFloat(t[1]))
                }
                if (/Chrome/.test(e)) {
                    this.isChromium = !0;
                    const t = e.match(/(?:CriOS|Chrome)\/(\d+\.?\d*)/);
                    t && t.length > 1 && (this.chromiumVersion = parseFloat(t[1]))
                }
            }
            parseRowUA(e="") {
                this.parseRowPlatform(e),
                this.parseTVPlatform(e),
                this.parseRowBrowser(e)
            }
        }
        class l extends i.C {
            constructor() {
                super(),
                this._isMSEAvailable = () => !(typeof window > "u") && "MediaSource"in window,
                this._checkUA = () => {
                    if ("Linux" == this.ua.platformType || "ChromeOS" == this.ua.platformType || "Firefox" == this.ua.browserType || "Opera" == this.ua.browserType || "Edge" == this.ua.browserType && this.ua.browserVersion < 107)
                        return !1;
                    if (this.ua.isChromium) {
                        if (this.ua.chromiumVersion < 107 || "Chrome" == this.ua.browserType && ("Android" == this.ua.platformType && (this.ua.platformVersion < 5 || this.ua.browserVersion < 117) || "Windows" == this.ua.platformType && this.ua.platformVersion < 8))
                            return !1
                    } else if ("Safari" == this.ua.browserType && this.ua.browserVersion < 13)
                        return !1;
                    return !0
                }
                ,
                this._isHEVCAvailable = () => !(typeof window > "u" || !window.MediaSource) && a.reduce(( (e, t) => e || window.MediaSource.isTypeSupported(t)), !1),
                this.checkHEVCWithPlaybackQuality = (e="", t=.2, n) => {
                    (0,
                    r.lg)({
                        url: e,
                        minDroppedFramesRate: t,
                        minTotalVideoFrames: 10
                    }).then((e => {
                        n(e)
                    }
                    ))
                }
                ,
                this._player = null,
                this._element = null,
                this.ua = new s(this.userAgent),
                this.isMSESupported = this._isMSEAvailable(),
                this.isHEVCSupported = this._isHEVCAvailable() && (0,
                r.Zo)(),
                this.shouldUseHEVC = this.isHEVCSupported && this._checkUA()
            }
            static get version() {
                return o.v
            }
            get playbackQuality() {
                var e, t;
                return this._element ? this._element.getVideoPlaybackQuality ? this._element.getVideoPlaybackQuality() : {
                    corruptedVideoFrames: 0,
                    creationTime: performance.now(),
                    droppedVideoFrames: (null == (e = this.el) ? void 0 : e.webkitDroppedFrameCount) || 0,
                    totalVideoFrames: (null == (t = this.el) ? void 0 : t.webkitDecodedFrameCount) || 0
                } : null
            }
            get cpu() {
                return typeof navigator > "u" || !navigator.hardwareConcurrency ? 0 : navigator.hardwareConcurrency
            }
            get memory() {
                return typeof navigator > "u" || !navigator.deviceMemory ? 0 : navigator.deviceMemory
            }
            get userAgent() {
                return typeof navigator > "u" || !navigator.userAgent ? "" : navigator.userAgent
            }
            get bandwidth() {
                return typeof navigator > "u" || !navigator.connection ? 0 : navigator.connection.downlink || 0
            }
            get networkType() {
                return typeof navigator > "u" || !navigator.connection ? "" : navigator.connection.effectiveType || ""
            }
            get platformType() {
                return this.ua.platformType || ""
            }
            get platformVersion() {
                return this.ua.platformVersion
            }
            get browserType() {
                return this.ua.browserType || ""
            }
            get browserVersion() {
                return this.ua.browserVersion
            }
            get isChromium() {
                return this.ua.isChromium
            }
            get chromiumVersion() {
                return this.ua.chromiumVersion
            }
            set player(e) {
                var t;
                this._player = e,
                this._element = (null == (t = this._player) ? void 0 : t.el) || null
            }
            set element(e) {
                this._element = e
            }
        }
    }
    ,
    50884: (e, t, n) => {
        "use strict";
        function i(e) {
            try {
                return localStorage.getItem(e)
            } catch {}
        }
        function r(e, t) {
            try {
                localStorage.setItem(e, t)
            } catch {}
        }
        n.d(t, {
            g: () => i,
            i: () => s,
            l: () => l,
            s: () => r
        });
        let o = -1
          , a = -1;
        function s() {
            return o >= 0 ? o : o < 0 ? (o = "1" === i("ttplayer_focus_src_play") ? 1 : 0,
            o) : 0
        }
        function l(e, ...t) {
            a < 0 && function() {
                const e = i("ttplayer_debug");
                a = parseInt(e || "0")
            }(),
            !(a < 1) && console.log(e, ...t)
        }
    }
    ,
    53264: (e, t, n) => {
        "use strict";
        n.d(t, {
            Vb: () => ed,
            Cc: () => Yh
        });
        var i = "play"
          , r = "seeked"
          , o = "canplay"
          , a = "loadeddata"
          , s = "loadedmetadata"
          , l = "focus"
          , u = "blur"
          , c = "autoplay_started"
          , h = "autoplay_was_prevented"
          , d = "fullscreen_change"
          , f = "cssFullscreen_change"
          , p = "after_definition_change"
          , g = "user_action"
          , m = ["play", "playing", "ended", "pause", "error", "seeking", "seeked", "timeupdate", "waiting", "canplay", "canplaythrough", "durationchange", "volumechange", "loadeddata", "loadedmetadata", "ratechange", "progress", "loadstart", "emptied", "stalled", "suspend", "abort", "lowdecode"];
        function v(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function y(e, t, n) {
            return t = k(t),
            x(e, M() ? Reflect.construct(t, n || [], k(e).constructor) : t.apply(e, n))
        }
        function _(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function T(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, I(i.key), i)
            }
        }
        function b(e, t, n) {
            return t && T(e.prototype, t),
            n && T(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function S(e, t, n) {
            return (t = I(t))in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function w() {
            return w = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e, t, n) {
                var i = function(e, t) {
                    for (; !{}.hasOwnProperty.call(e, t) && null !== (e = k(e)); )
                        ;
                    return e
                }(e, t);
                if (i) {
                    var r = Object.getOwnPropertyDescriptor(i, t);
                    return r.get ? r.get.call(arguments.length < 3 ? e : n) : r.value
                }
            }
            ,
            w.apply(null, arguments)
        }
        function k(e) {
            return (k = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }
            )(e)
        }
        function C(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            t && E(e, t)
        }
        function M() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                )))
            } catch (e) {}
            return (M = function() {
                return !!e
            }
            )()
        }
        function P(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, i)
            }
            return n
        }
        function R(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? P(Object(n), !0).forEach((function(t) {
                    S(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : P(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function x(e, t) {
            if (t && ("object" == typeof t || "function" == typeof t))
                return t;
            if (void 0 !== t)
                throw new TypeError("Derived constructors may only return object or undefined");
            return function(e) {
                if (void 0 === e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }(e)
        }
        function E(e, t) {
            return (E = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t,
                e
            }
            )(e, t)
        }
        function D(e, t, n, i) {
            var r = w(k(1 & i ? e.prototype : e), t, n);
            return 2 & i && "function" == typeof r ? function(e) {
                return r.apply(n, e)
            }
            : r
        }
        function L(e) {
            return function(e) {
                if (Array.isArray(e))
                    return v(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || function(e, t) {
                if (e) {
                    if ("string" == typeof e)
                        return v(e, t);
                    var n = {}.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name),
                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? v(e, t) : void 0
                }
            }(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function I(e) {
            var t = function(e) {
                if ("object" != typeof e || !e)
                    return e;
                var t = e[Symbol.toPrimitive];
                if (void 0 !== t) {
                    var n = t.call(e, "string");
                    if ("object" != typeof n)
                        return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return String(e)
            }(e);
            return "symbol" == typeof t ? t : t + ""
        }
        function O(e) {
            return (O = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            )(e)
        }
        var A = n(31734)
          , G = n.n(A)
          , N = "undefined" != typeof window && window.location && window.location.href.indexOf("xgplayerdebugger=1") > -1
          , B = {
            info: "color: #525252; background-color: #90ee90;",
            error: "color: #525252; background-color: red;",
            warn: "color: #525252; background-color: yellow; "
        }
          , $ = "%c[xgplayer]"
          , F = {
            config: {
                debug: N ? 3 : 0
            },
            logInfo: function(e) {
                for (var t, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                    i[r - 1] = arguments[r];
                this.config.debug >= 3 && (t = console).log.apply(t, [$, B.info, e].concat(i))
            },
            logWarn: function(e) {
                for (var t, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                    i[r - 1] = arguments[r];
                this.config.debug >= 1 && (t = console).warn.apply(t, [$, B.warn, e].concat(i))
            },
            logError: function(e) {
                var t;
                if (!(this.config.debug < 1)) {
                    for (var n = this.config.debug >= 2 ? "trace" : "error", i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)
                        r[o - 1] = arguments[o];
                    (t = console)[n].apply(t, [$, B.error, e].concat(r))
                }
            }
        }
          , H = function() {
            return b((function e(t) {
                _(this, e),
                this.bufferedList = t
            }
            ), [{
                key: "start",
                value: function(e) {
                    return this.bufferedList[e].start
                }
            }, {
                key: "end",
                value: function(e) {
                    return this.bufferedList[e].end
                }
            }, {
                key: "length",
                get: function() {
                    return this.bufferedList.length
                }
            }])
        }()
          , U = {};
        function V(e) {
            var t = O(e);
            return null !== e && ("object" === t || "function" === t)
        }
        U.createDom = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "div"
              , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
              , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ""
              , r = document.createElement(e);
            return r.className = i,
            r.innerHTML = t,
            Object.keys(n).forEach((function(t) {
                var i = t
                  , o = n[t];
                "video" === e || "audio" === e || "live-video" === e ? o && r.setAttribute(i, o) : r.setAttribute(i, o)
            }
            )),
            r
        }
        ,
        U.createDomFromHtml = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
            try {
                var i = document.createElement("div");
                i.innerHTML = e;
                var r = i.children;
                return i = null,
                r.length > 0 ? (r = r[0],
                n && U.addClass(r, n),
                t && Object.keys(t).forEach((function(e) {
                    r.setAttribute(e, t[e])
                }
                )),
                r) : null
            } catch (e) {
                return F.logError("util.createDomFromHtml", e),
                null
            }
        }
        ,
        U.hasClass = function(e, t) {
            if (!e || !t)
                return !1;
            try {
                return Array.prototype.some.call(e.classList, (function(e) {
                    return e === t
                }
                ))
            } catch (i) {
                var n = e.className && "object" === O(e.className) ? e.getAttribute("class") : e.className;
                return n && !!n.match(new RegExp("(\\s|^)" + t + "(\\s|$)"))
            }
        }
        ,
        U.addClass = function(e, t) {
            if (e && t)
                try {
                    t.replace(/(^\s+|\s+$)/g, "").split(/\s+/g).forEach((function(t) {
                        t && e.classList.add(t)
                    }
                    ))
                } catch (n) {
                    U.hasClass(e, t) || (e.className && "object" === O(e.className) ? e.setAttribute("class", e.getAttribute("class") + " " + t) : e.className += " " + t)
                }
        }
        ,
        U.removeClass = function(e, t) {
            if (e && t)
                try {
                    t.replace(/(^\s+|\s+$)/g, "").split(/\s+/g).forEach((function(t) {
                        t && e.classList.remove(t)
                    }
                    ))
                } catch (n) {
                    U.hasClass(e, t) && t.split(/\s+/g).forEach((function(t) {
                        var n = new RegExp("(\\s|^)" + t + "(\\s|$)");
                        e.className && "object" === O(e.className) ? e.setAttribute("class", e.getAttribute("class").replace(n, " ")) : e.className = e.className.replace(n, " ")
                    }
                    ))
                }
        }
        ,
        U.toggleClass = function(e, t) {
            e && t.split(/\s+/g).forEach((function(t) {
                U.hasClass(e, t) ? U.removeClass(e, t) : U.addClass(e, t)
            }
            ))
        }
        ,
        U.classNames = function() {
            for (var e = arguments, t = [], n = function(n) {
                "String" === U.typeOf(e[n]) ? t.push(e[n]) : "Object" === U.typeOf(e[n]) && Object.keys(e[n]).map((function(i) {
                    e[n][i] && t.push(i)
                }
                ))
            }, i = 0; i < arguments.length; i++)
                n(i);
            return t.join(" ")
        }
        ,
        U.findDom = function() {
            var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document, n = arguments.length > 1 ? arguments[1] : void 0;
            try {
                e = t.querySelector(n)
            } catch (i) {
                F.logError("util.findDom", i),
                0 === n.indexOf("#") && (e = t.getElementById(n.slice(1)))
            }
            return e
        }
        ,
        U.getCss = function(e, t) {
            return e.currentStyle ? e.currentStyle[t] : document.defaultView.getComputedStyle(e, !1)[t]
        }
        ,
        U.padStart = function(e, t, n) {
            for (var i = String(n), r = 0 | t, o = Math.ceil(r / i.length), a = [], s = String(e); o--; )
                a.push(i);
            return a.join("").substring(0, r - s.length) + s
        }
        ,
        U.format = function(e) {
            if (window.isNaN(e))
                return "";
            e = Math.round(e);
            var t = U.padStart(Math.floor(e / 3600), 2, 0)
              , n = U.padStart(Math.floor((e - 3600 * t) / 60), 2, 0)
              , i = U.padStart(Math.floor(e - 3600 * t - 60 * n), 2, 0);
            return ("00" === t ? [n, i] : [t, n, i]).join(":")
        }
        ,
        U.event = function(e) {
            if (e.touches) {
                var t = e.touches[0] || e.changedTouches[0];
                e.clientX = t.clientX || 0,
                e.clientY = t.clientY || 0,
                e.offsetX = t.pageX - t.target.offsetLeft,
                e.offsetY = t.pageY - t.target.offsetTop
            }
            e._target = e.target || e.srcElement
        }
        ,
        U.typeOf = function(e) {
            return Object.prototype.toString.call(e).match(/([^\s.*]+)(?=]$)/g)[0]
        }
        ,
        U.deepCopy = function(e, t) {
            if ("Object" === U.typeOf(t) && "Object" === U.typeOf(e))
                return Object.keys(t).forEach((function(n) {
                    "Object" !== U.typeOf(t[n]) || t[n]instanceof Node ? "Array" === U.typeOf(t[n]) ? e[n] = "Array" === U.typeOf(e[n]) ? e[n].concat(t[n]) : t[n] : e[n] = t[n] : void 0 === e[n] || void 0 === e[n] ? e[n] = t[n] : U.deepCopy(e[n], t[n])
                }
                )),
                e
        }
        ,
        U.deepMerge = function(e, t) {
            return Object.keys(t).map((function(n) {
                var i;
                "Array" === U.typeOf(t[n]) && "Array" === U.typeOf(e[n]) ? "Array" === U.typeOf(e[n]) && (i = e[n]).push.apply(i, L(t[n])) : U.typeOf(e[n]) !== U.typeOf(t[n]) || null === e[n] || "Object" !== U.typeOf(e[n]) || t[n]instanceof window.Node ? null !== t[n] && (e[n] = t[n]) : U.deepMerge(e[n], t[n])
            }
            )),
            e
        }
        ,
        U.getBgImage = function(e) {
            var t = (e.currentStyle || window.getComputedStyle(e, null)).backgroundImage;
            if (!t || "none" === t)
                return "";
            var n = document.createElement("a");
            return n.href = t.replace(/url\("|"\)/g, ""),
            n.href
        }
        ,
        U.copyDom = function(e) {
            if (e && 1 === e.nodeType) {
                var t = document.createElement(e.tagName);
                return Array.prototype.forEach.call(e.attributes, (function(e) {
                    t.setAttribute(e.name, e.value)
                }
                )),
                e.innerHTML && (t.innerHTML = e.innerHTML),
                t
            }
            return ""
        }
        ,
        U.setInterval = function(e, t, n, i) {
            e._interval[t] || (e._interval[t] = window.setInterval(n.bind(e), i))
        }
        ,
        U.clearInterval = function(e, t) {
            clearInterval(e._interval[t]),
            e._interval[t] = null
        }
        ,
        U.setTimeout = function(e, t, n) {
            e._timers || (e._timers = []);
            var i = setTimeout((function() {
                t(),
                U.clearTimeout(e, i)
            }
            ), n);
            return e._timers.push(i),
            i
        }
        ,
        U.clearTimeout = function(e, t) {
            var n = e._timers;
            if ("Array" === U.typeOf(n)) {
                for (var i = 0; i < n.length; i++)
                    if (n[i] === t) {
                        n.splice(i, 1),
                        clearTimeout(t);
                        break
                    }
            } else
                clearTimeout(t)
        }
        ,
        U.clearAllTimers = function(e) {
            var t = e._timers;
            "Array" === U.typeOf(t) && (t.map((function(e) {
                clearTimeout(e)
            }
            )),
            e._timerIds = [])
        }
        ,
        U.createImgBtn = function(e, t, n, i) {
            var r, o, a, s = U.createDom("xg-".concat(e), "", {}, "xgplayer-".concat(e, "-img"));
            return s.style.backgroundImage = 'url("'.concat(t, '")'),
            n && i && (["px", "rem", "em", "pt", "dp", "vw", "vh", "vm", "%"].every((function(e) {
                return !(n.indexOf(e) > -1 && i.indexOf(e) > -1 && (r = parseFloat(n.slice(0, n.indexOf(e)).trim()),
                o = parseFloat(i.slice(0, i.indexOf(e)).trim()),
                a = e,
                1))
            }
            )),
            s.style.width = "".concat(r).concat(a),
            s.style.height = "".concat(o).concat(a),
            s.style.backgroundSize = "".concat(r).concat(a, " ").concat(o).concat(a),
            s.style.margin = "start" === e ? "-".concat(o / 2).concat(a, " auto auto -").concat(r / 2).concat(a) : "auto 5px auto 5px"),
            s
        }
        ,
        U.Hex2RGBA = function(e, t) {
            var n = [];
            if (/^\#[0-9A-F]{3}$/i.test(e)) {
                var i = "#";
                e.replace(/[0-9A-F]/gi, (function(e) {
                    i += e + e
                }
                )),
                e = i
            }
            return /^#[0-9A-F]{6}$/i.test(e) ? (e.replace(/[0-9A-F]{2}/gi, (function(e) {
                n.push(parseInt(e, 16))
            }
            )),
            "rgba(".concat(n.join(","), ", ").concat(t, ")")) : "rgba(255, 255, 255, 0.1)"
        }
        ,
        U.getFullScreenEl = function() {
            return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement
        }
        ,
        U.checkIsFunction = function(e) {
            return e && "function" == typeof e
        }
        ,
        U.checkIsObject = function(e) {
            return null !== e && "object" === O(e)
        }
        ,
        U.hide = function(e) {
            e.style.display = "none"
        }
        ,
        U.show = function(e, t) {
            e.style.display = t || "block"
        }
        ,
        U.isUndefined = function(e) {
            if (null == e)
                return !0
        }
        ,
        U.isNotNull = function(e) {
            return !(null == e)
        }
        ,
        U.setStyleFromCsstext = function(e, t) {
            t && ("String" === U.typeOf(t) ? t.replace(/\s+/g, "").split(";").map((function(t) {
                if (t) {
                    var n = t.split(":");
                    n.length > 1 && (e.style[n[0]] = n[1])
                }
            }
            )) : Object.keys(t).map((function(n) {
                e.style[n] = t[n]
            }
            )))
        }
        ,
        U.filterStyleFromText = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ["width", "height", "top", "left", "bottom", "right", "position", "z-index", "padding", "margin", "transform"]
              , n = e.style.cssText;
            if (!n)
                return {};
            var i = n.replace(/\s+/g, "").split(";")
              , r = {}
              , o = {};
            return i.map((function(e) {
                if (e) {
                    var n = e.split(":");
                    n.length > 1 && (function(e, t) {
                        for (var n = 0, i = t.length; n < i; n++)
                            if (e.indexOf(t[n]) > -1)
                                return !0;
                        return !1
                    }(n[0], t) ? r[n[0]] = n[1] : o[n[0]] = n[1])
                }
            }
            )),
            e.setAttribute("style", ""),
            Object.keys(o).map((function(t) {
                e.style[t] = o[t]
            }
            )),
            r
        }
        ,
        U.getStyleFromCsstext = function(e) {
            var t = e.style.cssText;
            if (!t)
                return {};
            var n = t.replace(/\s+/g, "").split(";")
              , i = {};
            return n.map((function(e) {
                if (e) {
                    var t = e.split(":");
                    t.length > 1 && (i[t[0]] = t[1])
                }
            }
            )),
            i
        }
        ,
        U.preloadImg = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {}
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function() {}
            ;
            if (e) {
                var i = new window.Image;
                i.onload = function(e) {
                    i = null,
                    t && t(e)
                }
                ,
                i.onerror = function(e) {
                    i = null,
                    n && n(e)
                }
                ,
                i.src = e
            }
        }
        ,
        U.stopPropagation = function(e) {
            e && e.stopPropagation()
        }
        ,
        U.scrollTop = function() {
            return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0
        }
        ,
        U.scrollLeft = function() {
            return window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0
        }
        ,
        U.checkTouchSupport = function() {
            return "ontouchstart"in window
        }
        ,
        U.getBuffered2 = function(e) {
            for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .5, n = [], i = 0; i < e.length; i++)
                n.push({
                    start: e.start(i) < .5 ? 0 : e.start(i),
                    end: e.end(i)
                });
            n.sort((function(e, t) {
                return e.start - t.start || t.end - e.end
            }
            ));
            var r = [];
            if (t)
                for (var o = 0; o < n.length; o++) {
                    var a = r.length;
                    if (a) {
                        var s = r[a - 1].end;
                        n[o].start - s < t ? n[o].end > s && (r[a - 1].end = n[o].end) : r.push(n[o])
                    } else
                        r.push(n[o])
                }
            else
                r = n;
            return new H(r)
        }
        ,
        U.getEventPos = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
            return e.touches && e.touches.length > 0 && (e = e.touches[0]),
            {
                x: e.x / t,
                y: e.y / t,
                clientX: e.clientX / t,
                clientY: e.clientY / t,
                offsetX: e.offsetX / t,
                offsetY: e.offsetY / t,
                pageX: e.pageX / t,
                pageY: e.pageY / t
            }
        }
        ,
        U.requestAnimationFrame = function(e) {
            var t = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
            if (t)
                return t(e)
        }
        ,
        U.getHostFromUrl = function(e) {
            if ("String" !== U.typeOf(e))
                return "";
            var t = e.split("/")
              , n = "";
            return t.length > 3 && t[2] && (n = t[2]),
            n
        }
        ,
        U.cancelAnimationFrame = function(e) {
            var t = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.cancelRequestAnimationFrame;
            t && t(e)
        }
        ,
        U.isMSE = function(e) {
            return e.media && (e = e.media),
            !!(e && e instanceof HTMLMediaElement) && (/^blob/.test(e.currentSrc) || /^blob/.test(e.src))
        }
        ,
        U.isBlob = function(e) {
            return "string" == typeof e && /^blob/.test(e)
        }
        ,
        U.generateSessionId = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , t = (new Date).getTime();
            try {
                e = parseInt(e)
            } catch (t) {
                e = 0
            }
            t += e,
            window.performance && "function" == typeof window.performance.now && (t += parseInt(window.performance.now()));
            var n = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                var n = (t + 16 * Math.random()) % 16 | 0;
                return t = Math.floor(t / 16),
                ("x" === e ? n : 3 & n | 8).toString(16)
            }
            ));
            return n
        }
        ,
        U.createEvent = function(e) {
            var t;
            return "function" == typeof window.Event ? t = new Event(e) : (t = document.createEvent("Event")).initEvent(e, !0, !0),
            t
        }
        ,
        U.adjustTimeByDuration = function(e, t, n) {
            return t && e && (e > t || n && e < t) ? t : e
        }
        ,
        U.createPositionBar = function(e, t) {
            var n = U.createDom("xg-bar", "", {
                "data-index": -1
            }, e);
            return t.appendChild(n),
            n
        }
        ,
        U.getTransformStyle = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                x: 0,
                y: 0,
                scale: 1,
                rotate: 0
            }
              , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
              , n = {
                scale: "".concat(e.scale || 1),
                translate: "".concat(e.x || 0, "%, ").concat(e.y || 0, "%"),
                rotate: "".concat(e.rotate || 0, "deg")
            };
            return Object.keys(n).forEach((function(e) {
                var i = new RegExp("".concat(e, "\\([^\\(]+\\)"),"g")
                  , r = "".concat(e, "(").concat(n[e], ")");
                i.test(t) ? (i.lastIndex = -1,
                t = t.replace(i, r)) : t += "".concat(r, " ")
            }
            )),
            t
        }
        ,
        U.convertDeg = function(e) {
            return Math.abs(e) <= 1 ? 360 * e : e % 360
        }
        ,
        U.getIndexByTime = function(e, t) {
            var n = t.length
              , i = -1;
            if (n < 1)
                return i;
            if (e <= t[0].end || n < 2)
                i = 0;
            else if (e > t[n - 1].end)
                i = n - 1;
            else
                for (var r = 1; r < n; r++)
                    if (e > t[r - 1].end && e <= t[r].end) {
                        i = r;
                        break
                    }
            return i
        }
        ,
        U.getOffsetCurrentTime = function(e, t) {
            var n, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -1;
            if ((n = i >= 0 && i < t.length ? i : U.getIndexByTime(e, t)) < 0)
                return -1;
            var r = t.length
              , o = t[n]
              , a = o.start
              , s = o.end
              , l = o.cTime
              , u = o.offset;
            return e < a ? l : e >= a && e <= s ? e - u : e > s && n >= r - 1 ? s : -1
        }
        ,
        U.getCurrentTimeByOffset = function(e, t) {
            var n = -1;
            if (!t || t.length < 0)
                return e;
            for (var i = 0; i < t.length; i++)
                if (e <= t[i].duration) {
                    n = i;
                    break
                }
            if (-1 !== n) {
                var r = t[n].start;
                return n - 1 < 0 ? r + e : r + (e - t[n - 1].duration)
            }
            return e
        }
        ;
        var j = /(Android)\s([\d.]+)/
          , z = /(Version)\/([\d.]+)/
          , X = ["avc1.42E01E, mp4a.40.2", "avc1.58A01E, mp4a.40.2", "avc1.4D401E, mp4a.40.2", "avc1.64001E, mp4a.40.2", "avc1.42E01E", "mp4v.20.8", "mp4v.20.8, mp4a.40.2", "mp4v.20.240, mp4a.40.2"]
          , K = {
            get device() {
                return K.os.isPc ? "pc" : "mobile"
            },
            get browser() {
                if ("undefined" == typeof navigator)
                    return "";
                var e = navigator.userAgent.toLowerCase()
                  , t = {
                    ie: /rv:([\d.]+)\) like gecko/,
                    firefox: /firefox\/([\d.]+)/,
                    chrome: /chrome\/([\d.]+)/,
                    opera: /opera.([\d.]+)/,
                    safari: /version\/([\d.]+).*safari/
                };
                return [].concat(Object.keys(t).filter((function(n) {
                    return t[n].test(e)
                }
                )))[0]
            },
            get os() {
                if ("undefined" == typeof navigator)
                    return {};
                var e = navigator.userAgent
                  , t = /(?:Windows Phone)/.test(e)
                  , n = /(?:SymbianOS)/.test(e) || t
                  , i = /(?:Android)/.test(e)
                  , r = /(?:Firefox)/.test(e)
                  , o = /(?:iPad|PlayBook)/.test(e) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1
                  , a = o || i && !/(?:Mobile)/.test(e) || r && /(?:Tablet)/.test(e)
                  , s = /(?:iPhone)/.test(e) && !a;
                return {
                    isTablet: a,
                    isPhone: s,
                    isIpad: o,
                    isIos: s || o,
                    isAndroid: i,
                    isPc: !(s || i || n || a),
                    isSymbian: n,
                    isWindowsPhone: t,
                    isFireFox: r
                }
            },
            get osVersion() {
                if ("undefined" == typeof navigator)
                    return 0;
                var e = navigator.userAgent
                  , t = ""
                  , n = (t = /(?:iPhone)|(?:iPad|PlayBook)/.test(e) ? z : j) ? t.exec(e) : [];
                if (n && n.length >= 3) {
                    var i = n[2].split(".");
                    return i.length > 0 ? parseInt(i[0]) : 0
                }
                return 0
            },
            get isWeixin() {
                return "undefined" != typeof navigator && !!/(micromessenger)\/([\d.]+)/.exec(navigator.userAgent.toLocaleLowerCase())
            },
            isSupportMP4: function() {
                var e = {
                    isSupport: !1,
                    mime: ""
                };
                if ("undefined" == typeof document)
                    return e;
                if (this.supportResult)
                    return this.supportResult;
                var t = document.createElement("video");
                return "function" == typeof t.canPlayType && X.map((function(n) {
                    "probably" === t.canPlayType('video/mp4; codecs="'.concat(n, '"')) && (e.isSupport = !0,
                    e.mime += "||".concat(n))
                }
                )),
                this.supportResult = e,
                t = null,
                e
            },
            isMSESupport: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'video/mp4; codecs="avc1.42E01E,mp4a.40.2"';
                if ("undefined" == typeof MediaSource || !MediaSource)
                    return !1;
                try {
                    return MediaSource.isTypeSupported(e)
                } catch (t) {
                    return this._logger.error(e, t),
                    !1
                }
            },
            isHevcSupported: function() {
                return !("undefined" == typeof MediaSource || !MediaSource.isTypeSupported) && (MediaSource.isTypeSupported('video/mp4;codecs="hev1.1.6.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.2.4.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.3.E.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.4.10.L120.90"'))
            },
            probeConfigSupported: function(e) {
                var t = {
                    supported: !1,
                    smooth: !1,
                    powerEfficient: !1
                };
                if (!e || "undefined" == typeof navigator)
                    return Promise.resolve(t);
                if (navigator.mediaCapabilities && navigator.mediaCapabilities.decodingInfo)
                    return navigator.mediaCapabilities.decodingInfo(e);
                var n = e.video || {}
                  , i = e.audio || {};
                try {
                    var r = MediaSource.isTypeSupported(n.contentType)
                      , o = MediaSource.isTypeSupported(i.contentType);
                    return Promise.resolve({
                        supported: r && o,
                        smooth: !1,
                        powerEfficient: !1
                    })
                } catch (e) {
                    return Promise.resolve(t)
                }
            }
        }
          , Q = "3.0.21"
          , W = {
            1: "media",
            2: "media",
            3: "media",
            4: "media",
            5: "media",
            6: "media"
        }
          , q = {
            1: 5101,
            2: 5102,
            3: 5103,
            4: 5104,
            5: 5105,
            6: 5106
        }
          , Z = b((function e(t) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                errorType: "",
                errorCode: 0,
                errorMessage: "",
                originError: "",
                ext: {},
                mediaError: null
            };
            _(this, e);
            var i = t && t.i18n ? t.i18n.ERROR_TYPES : null;
            if (t.media) {
                var r = n.mediaError ? n.mediaError : t.media.error || {}
                  , o = t.duration
                  , a = t.currentTime
                  , s = t.ended
                  , l = t.src
                  , u = t.currentSrc
                  , c = t.media
                  , h = c.readyState
                  , d = c.networkState
                  , f = n.errorCode || r.code;
                q[f] && (f = q[f]);
                var p = {
                    playerVersion: Q,
                    currentTime: a,
                    duration: o,
                    ended: s,
                    readyState: h,
                    networkState: d,
                    src: l || u,
                    errorType: n.errorType,
                    errorCode: f,
                    message: n.errorMessage || r.message,
                    mediaError: r,
                    originError: n.originError ? n.originError.stack : "",
                    host: U.getHostFromUrl(l || u)
                };
                return n.ext && Object.keys(n.ext).map((function(e) {
                    p[e] = n.ext[e]
                }
                )),
                p
            }
            if (arguments.length > 1) {
                for (var g = {
                    playerVersion: Q,
                    domain: document.domain
                }, m = ["errorType", "currentTime", "duration", "networkState", "readyState", "src", "currentSrc", "ended", "errd", "errorCode", "mediaError"], v = 0; v < arguments.length; v++)
                    g[m[v]] = arguments[v];
                return g.ex = i ? (i[arguments[0]] || {}).msg : "",
                g
            }
        }
        ));
        function Y(e, t) {
            this && this.emit && ("error" === e ? this.errorHandler(e, t.error) : this.emit(e, t))
        }
        var J = function(e) {
            function t(e) {
                var n;
                _(this, t),
                (n = y(this, t, [e]))._hasStart = !1,
                n._currentTime = 0,
                n._duration = 0,
                n._internalOp = {},
                n._lastMuted = !1,
                n.vtype = "MP4",
                n._rate = -1,
                n.mediaConfig = Object.assign({}, {
                    controls: !1,
                    autoplay: e.autoplay,
                    playsinline: e.playsinline,
                    "x5-playsinline": e.playsinline,
                    "webkit-playsinline": e.playsinline,
                    "x5-video-player-fullscreen": e["x5-video-player-fullscreen"] || e.x5VideoPlayerFullscreen,
                    "x5-video-orientation": e["x5-video-orientation"] || e.x5VideoOrientation,
                    airplay: e.airplay,
                    "webkit-airplay": e.airplay,
                    tabindex: 0 | e.tabindex,
                    mediaType: e.mediaType || "video",
                    "data-index": -1
                }, e.videoConfig, e.videoAttributes);
                var i = e["x5-video-player-type"] || e.x5VideoPlayerType;
                return K.isWeixin && K.os.isAndroid && i && (n.mediaConfig["x5-video-player-type"] = i,
                delete n.mediaConfig.playsinline,
                delete n.mediaConfig["webkit-playsinline"],
                delete n.mediaConfig["x5-playsinline"]),
                e.loop && (n.mediaConfig.loop = "loop"),
                e.autoplayMuted && !Object.prototype.hasOwnProperty.call(n.mediaConfig, "muted") && (n.mediaConfig.muted = !0),
                n.media = U.createDom(n.mediaConfig.mediaType, "", n.mediaConfig, ""),
                e.defaultPlaybackRate && (n.media.defaultPlaybackRate = n.media.playbackRate = e.defaultPlaybackRate),
                "Number" === U.typeOf(e.volume) && (n.volume = e.volume),
                e.autoplayMuted && (n.media.muted = !0,
                n._lastMuted = !0),
                e.autoplay && (n.media.autoplay = !0),
                n._interval = {},
                n.mediaEventMiddleware = {},
                n.attachVideoEvents(),
                n
            }
            return C(t, e),
            b(t, [{
                key: "setEventsMiddleware",
                value: function(e) {
                    var t = this;
                    Object.keys(e).map((function(n) {
                        t.mediaEventMiddleware[n] = e[n]
                    }
                    ))
                }
            }, {
                key: "removeEventsMiddleware",
                value: function(e) {
                    var t = this;
                    Object.keys(e).map((function(e) {
                        delete t.mediaEventMiddleware[e]
                    }
                    ))
                }
            }, {
                key: "attachVideoEvents",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.media;
                    this._evHandlers || (this._evHandlers = m.map((function(t) {
                        var n = "on".concat(t.charAt(0).toUpperCase()).concat(t.slice(1));
                        return "function" == typeof e[n] && e.on(t, e[n]),
                        S({}, t, function(e, t) {
                            return function(n, i) {
                                var r = {
                                    player: t,
                                    eventName: e,
                                    originalEvent: n,
                                    detail: n.detail || {},
                                    timeStamp: n.timeStamp,
                                    currentTime: t.currentTime,
                                    duration: t.duration,
                                    paused: t.paused,
                                    ended: t.ended,
                                    isInternalOp: !!t._internalOp[n.type],
                                    muted: t.muted,
                                    volume: t.volume,
                                    host: U.getHostFromUrl(t.currentSrc),
                                    vtype: t.vtype
                                };
                                if (t.removeInnerOP(n.type),
                                "timeupdate" === e && (t._currentTime = t.media && t.media.currentTime),
                                "ratechange" === e) {
                                    var o = t.media ? t.media.playbackRate : 0;
                                    if (o && t._rate === o)
                                        return;
                                    t._rate = t.media && t.media.playbackRate
                                }
                                if ("durationchange" === e && (t._duration = t.media.duration),
                                "volumechange" === e && (r.isMutedChange = t._lastMuted !== t.muted,
                                t._lastMuted = t.muted),
                                "error" === e && (r.error = i || t.video.error),
                                t.mediaEventMiddleware[e]) {
                                    var a = Y.bind(t, e, r);
                                    try {
                                        t.mediaEventMiddleware[e].call(t, r, a)
                                    } catch (n) {
                                        throw Y.call(t, e, r),
                                        n
                                    }
                                } else
                                    Y.call(t, e, r)
                            }
                        }(t, e))
                    }
                    ))),
                    this._evHandlers.forEach((function(e) {
                        var n = Object.keys(e)[0];
                        t.addEventListener(n, e[n], !1)
                    }
                    ))
                }
            }, {
                key: "detachVideoEvents",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.media;
                    this._evHandlers.forEach((function(e) {
                        var n = Object.keys(e)[0];
                        t.removeEventListener(n, e[n], !1)
                    }
                    )),
                    this._evHandlers.forEach((function(t) {
                        var n = Object.keys(t)[0]
                          , i = "on".concat(n.charAt(0).toUpperCase()).concat(n.slice(1));
                        "function" == typeof e[i] && e.off(n, e[i])
                    }
                    )),
                    this._evHandlers = null
                }
            }, {
                key: "_attachSourceEvents",
                value: function(e, t) {
                    var n = this;
                    e.removeAttribute("src"),
                    e.load(),
                    t.forEach((function(e, t) {
                        n.media.appendChild(U.createDom("source", "", {
                            src: "".concat(e.src),
                            type: "".concat(e.type || ""),
                            "data-index": t + 1
                        }))
                    }
                    ));
                    var i = e.children;
                    if (i) {
                        this._videoSourceCount = i.length,
                        this._videoSourceIndex = i.length,
                        this._vLoadeddata = function(e) {
                            n.emit("source_success", {
                                src: e.target.currentSrc,
                                host: U.getHostFromUrl(e.target.currentSrc)
                            })
                        }
                        ;
                        for (var r = null, o = 0; o < this._evHandlers.length; o++)
                            if ("error" === Object.keys(this._evHandlers[o])[0]) {
                                r = this._evHandlers[o];
                                break
                            }
                        !this._sourceError && (this._sourceError = function(e) {
                            var t = parseInt(e.target.getAttribute("data-index"), 10);
                            if (n._videoSourceIndex--,
                            0 === n._videoSourceIndex || t >= n._videoSourceCount) {
                                var i = {
                                    code: 4,
                                    message: "sources_load_error"
                                };
                                r ? r.error(e, i) : n.errorHandler("error", i)
                            }
                            var o = W[4];
                            n.emit("source_error", new Z(n,{
                                errorType: o,
                                errorCode: 4,
                                errorMessage: "sources_load_error",
                                mediaError: {
                                    code: 4,
                                    message: "sources_load_error"
                                },
                                src: e.target.src
                            }))
                        }
                        );
                        for (var a = 0; a < i.length; a++)
                            i[a].addEventListener("error", this._sourceError);
                        e.addEventListener("loadeddata", this._vLoadeddata)
                    }
                }
            }, {
                key: "_detachSourceEvents",
                value: function(e) {
                    var t = e.children;
                    if (t && 0 !== t.length && this._sourceError) {
                        for (var n = 0; n < t.length; n++)
                            t[n].removeEventListener("error", this._sourceError);
                        for (; t.length > 0; )
                            e.removeChild(t[0]);
                        this._vLoadeddata && e.removeEventListener("loadeddata", this._vLoadeddata)
                    }
                }
            }, {
                key: "errorHandler",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    if (this.media && (this.media.error || t)) {
                        var n = this.media.error || t
                          , i = n.code ? W[n.code] : "other";
                        n.message,
                        this.media.currentSrc || (n = {
                            code: 6,
                            message: "empty_src"
                        }),
                        this.emit(e, new Z(this,{
                            errorType: i,
                            errorCode: n.code,
                            errorMessage: n.message || "",
                            mediaError: n
                        }))
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    for (var e in this.media && (this.media.pause && (this.media.pause(),
                    this.media.muted = !0),
                    this.media.removeAttribute("src"),
                    this.media.load()),
                    this._currentTime = 0,
                    this._duration = 0,
                    this.mediaConfig = null,
                    this._interval)
                        Object.prototype.hasOwnProperty.call(this._interval, e) && (clearInterval(this._interval[e]),
                        this._interval[e] = null);
                    this.detachVideoEvents(),
                    this.media = null,
                    this.mediaEventMiddleware = {},
                    this.removeAllListeners()
                }
            }, {
                key: "video",
                get: function() {
                    return this.media
                },
                set: function(e) {
                    this.media = e
                }
            }, {
                key: "play",
                value: function() {
                    return this.media ? this.media.play() : null
                }
            }, {
                key: "pause",
                value: function() {
                    this.media && this.media.pause()
                }
            }, {
                key: "load",
                value: function() {
                    this.media && this.media.load()
                }
            }, {
                key: "canPlayType",
                value: function(e) {
                    return !!this.media && this.media.canPlayType(e)
                }
            }, {
                key: "getBufferedRange",
                value: function(e) {
                    var t = [0, 0];
                    if (!this.media)
                        return t;
                    e || (e = this.media.buffered);
                    var n = this.media.currentTime;
                    if (e)
                        for (var i = 0, r = e.length; i < r && (t[0] = e.start(i),
                        t[1] = e.end(i),
                        !(t[0] <= n && n <= t[1])); i++)
                            ;
                    return t[0] - n <= 0 && n - t[1] <= 0 ? t : [0, 0]
                }
            }, {
                key: "autoplay",
                get: function() {
                    return !!this.media && this.media.autoplay
                },
                set: function(e) {
                    this.media && (this.media.autoplay = e)
                }
            }, {
                key: "buffered",
                get: function() {
                    return this.media ? this.media.buffered : null
                }
            }, {
                key: "buffered2",
                get: function() {
                    return this.media && this.media.buffered ? U.getBuffered2(this.media.buffered) : null
                }
            }, {
                key: "bufferedPoint",
                get: function() {
                    var e = {
                        start: 0,
                        end: 0
                    };
                    if (!this.media)
                        return e;
                    var t = this.media.buffered;
                    if (!t || 0 === t.length)
                        return e;
                    for (var n = 0; n < t.length; n++)
                        if ((t.start(n) <= this.currentTime || t.start(n) < .1) && t.end(n) >= this.currentTime)
                            return {
                                start: t.start(n),
                                end: t.end(n)
                            };
                    return e
                }
            }, {
                key: "crossOrigin",
                get: function() {
                    return this.media ? this.media.crossOrigin : ""
                },
                set: function(e) {
                    this.media && (this.media.crossOrigin = e)
                }
            }, {
                key: "currentSrc",
                get: function() {
                    return this.media ? this.media.currentSrc : ""
                },
                set: function(e) {
                    this.media && (this.media.currentSrc = e)
                }
            }, {
                key: "currentTime",
                get: function() {
                    return this.media ? void 0 !== this.media.currentTime ? this.media.currentTime : this._currentTime : 0
                },
                set: function(e) {
                    this.media && (this.media.currentTime = e)
                }
            }, {
                key: "defaultMuted",
                get: function() {
                    return !!this.media && this.media.defaultMuted
                },
                set: function(e) {
                    this.media && (this.media.defaultMuted = e)
                }
            }, {
                key: "duration",
                get: function() {
                    return this._duration
                }
            }, {
                key: "ended",
                get: function() {
                    return !!this.media && this.media.ended
                }
            }, {
                key: "error",
                get: function() {
                    return this.media.error
                }
            }, {
                key: "errorNote",
                get: function() {
                    return this.media.error ? ["MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED"][this.media.error.code - 1] : ""
                }
            }, {
                key: "loop",
                get: function() {
                    return !!this.media && this.media.loop
                },
                set: function(e) {
                    this.media && (this.media.loop = e)
                }
            }, {
                key: "muted",
                get: function() {
                    return !!this.media && this.media.muted
                },
                set: function(e) {
                    this.media && this.media.muted !== e && (this._lastMuted = this.media.muted,
                    this.media.muted = e)
                }
            }, {
                key: "networkState",
                get: function() {
                    return this.media.networkState
                }
            }, {
                key: "paused",
                get: function() {
                    return !this.media || this.media.paused
                }
            }, {
                key: "playbackRate",
                get: function() {
                    return this.media ? this.media.playbackRate : 0
                },
                set: function(e) {
                    this.media && e !== 1 / 0 && (this.media.defaultPlaybackRate = e,
                    this.media.playbackRate = e)
                }
            }, {
                key: "played",
                get: function() {
                    return this.media ? this.media.played : null
                }
            }, {
                key: "preload",
                get: function() {
                    return !!this.media && this.media.preload
                },
                set: function(e) {
                    this.media && (this.media.preload = e)
                }
            }, {
                key: "readyState",
                get: function() {
                    return this.media.readyState
                }
            }, {
                key: "seekable",
                get: function() {
                    return !!this.media && this.media.seekable
                }
            }, {
                key: "seeking",
                get: function() {
                    return !!this.media && this.media.seeking
                }
            }, {
                key: "src",
                get: function() {
                    return this.media ? this.media.src : ""
                },
                set: function(e) {
                    this.media && (this.emit("urlchange", e),
                    this.emit("waiting"),
                    this._currentTime = 0,
                    this._duration = 0,
                    U.isMSE(this.media) ? this.onWaiting() : (this._detachSourceEvents(this.media),
                    "Array" === U.typeOf(e) ? this._attachSourceEvents(this.media, e) : e ? this.media.src = e : this.media.removeAttribute("src"),
                    this.load()))
                }
            }, {
                key: "volume",
                get: function() {
                    return this.media ? this.media.volume : 0
                },
                set: function(e) {
                    e !== 1 / 0 && this.media && (this.media.volume = e)
                }
            }, {
                key: "aspectRatio",
                get: function() {
                    return this.media ? this.media.videoWidth / this.media.videoHeight : 0
                }
            }, {
                key: "addInnerOP",
                value: function(e) {
                    this._internalOp[e] = !0
                }
            }, {
                key: "removeInnerOP",
                value: function(e) {
                    delete this._internalOp[e]
                }
            }, {
                key: "emit",
                value: function(e, n) {
                    for (var i = arguments.length, r = new Array(i > 2 ? i - 2 : 0), o = 2; o < i; o++)
                        r[o - 2] = arguments[o];
                    D(t, "emit", this, 3)([e, n].concat(r))
                }
            }, {
                key: "on",
                value: function(e, n) {
                    for (var i = arguments.length, r = new Array(i > 2 ? i - 2 : 0), o = 2; o < i; o++)
                        r[o - 2] = arguments[o];
                    D(t, "on", this, 3)([e, n].concat(r))
                }
            }, {
                key: "once",
                value: function(e, n) {
                    for (var i = arguments.length, r = new Array(i > 2 ? i - 2 : 0), o = 2; o < i; o++)
                        r[o - 2] = arguments[o];
                    D(t, "once", this, 3)([e, n].concat(r))
                }
            }, {
                key: "off",
                value: function(e, n) {
                    for (var i = arguments.length, r = new Array(i > 2 ? i - 2 : 0), o = 2; o < i; o++)
                        r[o - 2] = arguments[o];
                    D(t, "off", this, 3)([e, n].concat(r))
                }
            }, {
                key: "offAll",
                value: function() {
                    D(t, "removeAllListeners", this, 3)([])
                }
            }])
        }(G())
          , ee = function() {
            return b((function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                    name: "xgplayer",
                    version: 1,
                    db: null,
                    ojstore: {
                        name: "xg-m4a",
                        keypath: "vid"
                    }
                };
                _(this, e),
                this.indexedDB = window.indexedDB || window.webkitindexedDB,
                this.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange,
                this.myDB = t
            }
            ), [{
                key: "openDB",
                value: function(e) {
                    var t = this
                      , n = this
                      , i = this.myDB.version || 1
                      , r = n.indexedDB.open(n.myDB.name, i);
                    r.onerror = function(e) {}
                    ,
                    r.onsuccess = function(i) {
                        t.myDB.db = i.target.result,
                        e.call(n)
                    }
                    ,
                    r.onupgradeneeded = function(e) {
                        var t = e.target.result;
                        e.target.transaction,
                        t.objectStoreNames.contains(n.myDB.ojstore.name) || t.createObjectStore(n.myDB.ojstore.name, {
                            keyPath: n.myDB.ojstore.keypath
                        })
                    }
                }
            }, {
                key: "deletedb",
                value: function() {
                    this.indexedDB.deleteDatabase(this.myDB.name)
                }
            }, {
                key: "closeDB",
                value: function() {
                    this.myDB.db.close()
                }
            }, {
                key: "addData",
                value: function(e, t) {
                    for (var n, i = this.myDB.db.transaction(e, "readwrite").objectStore(e), r = 0; r < t.length; r++)
                        (n = i.add(t[r])).onerror = function() {}
                        ,
                        n.onsuccess = function() {}
                }
            }, {
                key: "putData",
                value: function(e, t) {
                    for (var n, i = this.myDB.db.transaction(e, "readwrite").objectStore(e), r = 0; r < t.length; r++)
                        (n = i.put(t[r])).onerror = function() {}
                        ,
                        n.onsuccess = function() {}
                }
            }, {
                key: "getDataByKey",
                value: function(e, t, n) {
                    var i = this
                      , r = this.myDB.db.transaction(e, "readwrite").objectStore(e).get(t);
                    r.onerror = function() {
                        n.call(i, null)
                    }
                    ,
                    r.onsuccess = function(e) {
                        var t = e.target.result;
                        n.call(i, t)
                    }
                }
            }, {
                key: "deleteData",
                value: function(e, t) {
                    this.myDB.db.transaction(e, "readwrite").objectStore(e).delete(t)
                }
            }, {
                key: "clearData",
                value: function(e) {
                    this.myDB.db.transaction(e, "readwrite").objectStore(e).clear()
                }
            }])
        }()
          , te = ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"]
          , ne = ["requestFullscreen", "webkitRequestFullscreen", "mozRequestFullScreen", "msRequestFullscreen"]
          , ie = ["exitFullscreen", "webkitExitFullscreen", "mozCancelFullScreen", "msExitFullscreen"]
          , re = "data-xgplayerid";
        function oe(e, t, n) {
            for (var i = arguments.length, r = new Array(i > 3 ? i - 3 : 0), o = 3; o < i; o++)
                r[o - 3] = arguments[o];
            var a = t.call.apply(t, [e].concat(r));
            n && "function" == typeof n && (a && a.then ? a.then((function() {
                for (var t = arguments.length, i = new Array(t), r = 0; r < t; r++)
                    i[r] = arguments[r];
                n.call.apply(n, [e].concat(i))
            }
            )) : n.call.apply(n, [e].concat(r)))
        }
        function ae(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                pre: null,
                next: null
            };
            return this.__hooks || (this.__hooks = {}),
            !this.__hooks[e] && (this.__hooks[e] = null),
            function() {
                var i = arguments
                  , r = this;
                if (n.pre)
                    try {
                        var o;
                        (o = n.pre).call.apply(o, [this].concat(Array.prototype.slice.call(arguments)))
                    } catch (t) {
                        throw t.message = "[pluginName: ".concat(this.pluginName, ":").concat(e, ":pre error] >> ").concat(t.message),
                        t
                    }
                if (this.__hooks && this.__hooks[e])
                    try {
                        var a, s = (a = this.__hooks[e]).call.apply(a, [this, this].concat(Array.prototype.slice.call(arguments)));
                        s ? s.then ? s.then((function(e) {
                            !1 !== e && oe.apply(void 0, [r, t, n.next].concat(L(i)))
                        }
                        )).catch((function(e) {
                            throw e
                        }
                        )) : oe.apply(void 0, [this, t, n.next].concat(Array.prototype.slice.call(arguments))) : void 0 === s && oe.apply(void 0, [this, t, n.next].concat(Array.prototype.slice.call(arguments)))
                    } catch (t) {
                        throw t.message = "[pluginName: ".concat(this.pluginName, ":").concat(e, "] >> ").concat(t.message),
                        t
                    }
                else
                    oe.apply(void 0, [this, t, n.next].concat(Array.prototype.slice.call(arguments)))
            }
            .bind(this)
        }
        function se(e, t) {
            var n = this.__hooks;
            if (n)
                return n.hasOwnProperty(e) ? (n && (n[e] = t),
                !0) : (console.warn("has no supported hook which name [".concat(e, "]")),
                !1)
        }
        function le(e, t) {
            var n = this.__hooks;
            n && delete n[e]
        }
        function ue(e) {
            if (this.plugins && this.plugins[e.toLowerCase()]) {
                for (var t = this.plugins[e.toLowerCase()], n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                    i[r - 1] = arguments[r];
                return t.useHooks && t.useHooks.apply(t, i)
            }
        }
        function ce(e) {
            if (this.plugins && this.plugins[e.toLowerCase()]) {
                var t = this.plugins[e.toLowerCase()];
                if (t) {
                    for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                        i[r - 1] = arguments[r];
                    return t.removeHooks && t.removeHooks.apply(t, i)
                }
            }
        }
        function he(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
            e.__hooks = {},
            t && t.map((function(t) {
                e.__hooks[t] = null
            }
            )),
            Object.defineProperty(e, "hooks", {
                get: function() {
                    return e.__hooks && Object.keys(e.__hooks).map((function(t) {
                        if (e.__hooks[t])
                            return t
                    }
                    ))
                }
            })
        }
        function de(e) {
            e.__hooks = null
        }
        function fe(e, t, n) {
            for (var i = arguments.length, r = new Array(i > 3 ? i - 3 : 0), o = 3; o < i; o++)
                r[o - 3] = arguments[o];
            if (!e.__hooks || !e.__hooks[t])
                return n.call.apply(n, [e, e].concat(r));
            var a, s = (a = e.__hooks[t]).call.apply(a, [e, e].concat(r));
            if (s && s.then)
                s.then((function(t) {
                    return !1 === t ? null : n.call.apply(n, [e, e].concat(r))
                }
                )).catch((function(e) {
                    console.warn("[runHooks]".concat(t, " reject"), e.message)
                }
                ));
            else if (!1 !== s)
                return n.call.apply(n, [e, e].concat(r))
        }
        function pe(e, t) {
            F.logError("[".concat(e, "] event or callback cant be undefined or null when call ").concat(t))
        }
        var ge = function() {
            return b((function e(t) {
                _(this, e),
                U.checkIsFunction(this.beforeCreate) && this.beforeCreate(t),
                he(this),
                this.__args = t,
                this.__events = {},
                this.__onceEvents = {},
                this.config = t.config || {},
                this.player = null,
                this.playerConfig = {},
                this.pluginName = "",
                this.__init(t)
            }
            ), [{
                key: "beforeCreate",
                value: function(e) {}
            }, {
                key: "afterCreate",
                value: function() {}
            }, {
                key: "beforePlayerInit",
                value: function() {}
            }, {
                key: "onPluginsReady",
                value: function() {}
            }, {
                key: "afterPlayerInit",
                value: function() {}
            }, {
                key: "destroy",
                value: function() {}
            }, {
                key: "__init",
                value: function(e) {
                    this.player = e.player,
                    this.playerConfig = e.player && e.player.config,
                    this.pluginName = e.pluginName ? e.pluginName.toLowerCase() : this.constructor.pluginName.toLowerCase(),
                    this.logger = e.player && e.player.logger
                }
            }, {
                key: "updateLang",
                value: function(e) {
                    e || (e = this.lang)
                }
            }, {
                key: "lang",
                get: function() {
                    return this.player.lang
                }
            }, {
                key: "i18n",
                get: function() {
                    return this.player.i18n
                }
            }, {
                key: "i18nKeys",
                get: function() {
                    return this.player.i18nKeys
                }
            }, {
                key: "domEventType",
                get: function() {
                    var e = U.checkTouchSupport() ? "touch" : "mouse";
                    return !this.playerConfig || "touch" !== this.playerConfig.domEventType && "mouse" !== this.playerConfig.domEventType || (e = this.playerConfig.domEventType),
                    e
                }
            }, {
                key: "on",
                value: function(e, t) {
                    var n = this;
                    e && t && this.player ? "string" == typeof e ? (this.__events[e] = t,
                    this.player.on(e, t)) : Array.isArray(e) && e.forEach((function(e) {
                        n.__events[e] = t,
                        n.player.on(e, t)
                    }
                    )) : pe(this.pluginName, "plugin.on(event, callback)")
                }
            }, {
                key: "once",
                value: function(e, t) {
                    var n = this;
                    e && t && this.player ? "string" == typeof e ? (this.__onceEvents[e] = t,
                    this.player.once(e, t)) : Array.isArray(e) && e.forEach((function(i) {
                        n.__onceEvents[i] = t,
                        n.player.once(e, t)
                    }
                    )) : pe(this.pluginName, "plugin.once(event, callback)")
                }
            }, {
                key: "off",
                value: function(e, t) {
                    var n = this;
                    e && t && this.player ? "string" == typeof e ? (delete this.__events[e],
                    this.player.off(e, t)) : Array.isArray(e) && e.forEach((function(i) {
                        delete n.__events[e],
                        n.player.off(i, t)
                    }
                    )) : pe(this.pluginName, "plugin.off(event, callback)")
                }
            }, {
                key: "offAll",
                value: function() {
                    var e = this;
                    ["__events", "__onceEvents"].forEach((function(t) {
                        Object.keys(e[t]).forEach((function(n) {
                            e[t][n] && e.off(n, e[t][n]),
                            n && delete e[t][n]
                        }
                        ))
                    }
                    )),
                    this.__events = {},
                    this.__onceEvents = {}
                }
            }, {
                key: "emit",
                value: function(e) {
                    var t;
                    if (this.player) {
                        for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                            i[r - 1] = arguments[r];
                        (t = this.player).emit.apply(t, [e].concat(i))
                    }
                }
            }, {
                key: "emitUserAction",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    if (this.player) {
                        var i = R(R({}, n), {}, {
                            pluginName: this.pluginName
                        });
                        this.player.emitUserAction(e, t, i)
                    }
                }
            }, {
                key: "hook",
                value: function(e, t) {
                    return ae.call.apply(ae, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "useHooks",
                value: function(e, t) {
                    for (var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++)
                        i[r - 2] = arguments[r];
                    return se.call.apply(se, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "removeHooks",
                value: function(e, t) {
                    for (var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++)
                        i[r - 2] = arguments[r];
                    return le.call.apply(le, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "registerPlugin",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                    if (this.player)
                        return n && (t.pluginName = n),
                        this.player.registerPlugin({
                            plugin: e,
                            options: t
                        })
                }
            }, {
                key: "getPlugin",
                value: function(e) {
                    return this.player ? this.player.getPlugin(e) : null
                }
            }, {
                key: "__destroy",
                value: function() {
                    var e = this
                      , t = this.player
                      , n = this.pluginName;
                    this.offAll(),
                    U.clearAllTimers(this),
                    U.checkIsFunction(this.destroy) && this.destroy(),
                    ["player", "playerConfig", "pluginName", "logger", "__args", "__hooks"].map((function(t) {
                        e[t] = null
                    }
                    )),
                    t.unRegisterPlugin(n),
                    de(this)
                }
            }], [{
                key: "defineGetterOrSetter",
                value: function(e, t) {
                    for (var n in t)
                        Object.prototype.hasOwnProperty.call(t, n) && Object.defineProperty(e, n, t[n])
                }
            }, {
                key: "defaultConfig",
                get: function() {
                    return {}
                }
            }, {
                key: "pluginName",
                get: function() {
                    return "pluginName"
                }
            }])
        }()
          , me = n(6306)
          , ve = n.n(me)
          , ye = {
            CONTROLS: "controls",
            ROOT: "root"
        }
          , _e = {
            ROOT: "root",
            ROOT_LEFT: "rootLeft",
            ROOT_RIGHT: "rootRight",
            ROOT_TOP: "rootTop",
            CONTROLS_LEFT: "controlsLeft",
            CONTROLS_RIGTH: "controlsRight",
            CONTROLS_RIGHT: "controlsRight",
            CONTROLS_CENTER: "controlsCenter",
            CONTROLS: "controls"
        }
          , Te = "xg-icon-disable";
        function be(e) {
            return !!e && e.indexOf && /^(?:http|data:|\/)/.test(e)
        }
        function Se(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ""
              , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}
              , r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : ""
              , o = null;
            if (e instanceof window.Element)
                return U.addClass(e, n),
                Object.keys(i).map((function(t) {
                    e.setAttribute(t, i[t])
                }
                )),
                e;
            if (be(e) || be(e.url))
                return i.src = be(e) ? e : e.url || "",
                o = U.createDom(e.tag || "img", "", i, "xg-img ".concat(n));
            if ("function" == typeof e)
                try {
                    return (o = e())instanceof window.Element ? (U.addClass(o, n),
                    Object.keys(i).map((function(e) {
                        o.setAttribute(e, i[e])
                    }
                    )),
                    o) : (F.logWarn("warn>>icons.".concat(t, " in config of plugin named [").concat(r, "] is a function mast return an Element Object")),
                    null)
                } catch (e) {
                    return F.logError("Plugin named [".concat(r, "]:createIcon"), e),
                    null
                }
            return "string" == typeof e ? U.createDomFromHtml(e, i, n) : (F.logWarn("warn>>icons.".concat(t, " in config of plugin named [").concat(r, "] is invalid")),
            null)
        }
        var we = function(e) {
            function t() {
                var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return _(this, t),
                (e = y(this, t, [n])).__delegates = [],
                e
            }
            return C(t, e),
            b(t, [{
                key: "__init",
                value: function(e) {
                    D(t, "__init", this, 3)([e]);
                    var n = e.root
                      , i = null;
                    if (this.icons = {},
                    this.root = null,
                    this.parent = null,
                    e.root) {
                        (function(e, t) {
                            var n = t.config.icons || t.playerConfig.icons;
                            Object.keys(e).map((function(i) {
                                var r = e[i]
                                  , o = r && r.class ? r.class : ""
                                  , a = r && r.attr ? r.attr : {}
                                  , s = null;
                                n && n[i] && (o = function(e, t) {
                                    return "object" === O(e) && e.class && "string" == typeof e.class ? "".concat(t, " ").concat(e.class) : t
                                }(n[i], o),
                                a = function(e, t) {
                                    return "object" === O(e) && e.attr && "object" === O(e.attr) && Object.keys(e.attr).map((function(n) {
                                        t[n] = e.attr[n]
                                    }
                                    )),
                                    t
                                }(n[i], a),
                                s = Se(n[i], i, o, a, t.pluginName)),
                                !s && r && (s = Se(r.icon ? r.icon : r, a, o, {}, t.pluginName)),
                                t.icons[i] = s
                            }
                            ))
                        }
                        )(this.registerIcons() || {}, this),
                        this.langText = {};
                        var r, o, a = this.registerLanguageTexts() || {};
                        r = a,
                        o = this,
                        Object.keys(r).map((function(e) {
                            Object.defineProperty(o.langText, e, {
                                get: function() {
                                    var t = o.lang
                                      , n = o.i18n;
                                    return n[e] ? n[e] : r[e] && r[e][t] || ""
                                }
                            })
                        }
                        ));
                        var s = "";
                        try {
                            s = this.render()
                        } catch (e) {
                            throw F.logError("Plugin:".concat(this.pluginName, ":render"), e),
                            new Error("Plugin:".concat(this.pluginName, ":render:").concat(e.message))
                        }
                        if (s)
                            (i = t.insert(s, n, e.index)).setAttribute("data-index", e.index);
                        else {
                            if (!e.tag)
                                return;
                            (i = U.createDom(e.tag, "", e.attr, e.name)).setAttribute("data-index", e.index),
                            n.appendChild(i)
                        }
                        this.root = i,
                        this.parent = n;
                        var l = this.config.attr || {}
                          , u = this.config.style || {};
                        this.setAttr(l),
                        this.setStyle(u),
                        this.config.index && this.root.setAttribute("data-index", this.config.index),
                        this.__registerChildren()
                    }
                }
            }, {
                key: "__registerChildren",
                value: function() {
                    var e = this;
                    if (this.root) {
                        this._children = [];
                        var t = this.children();
                        t && "object" === O(t) && Object.keys(t).length > 0 && Object.keys(t).map((function(n) {
                            var i, r, o = n, a = t[o], s = {
                                root: e.root
                            };
                            "function" == typeof a ? (i = e.config[o] || {},
                            r = a) : "object" === O(a) && "function" == typeof a.plugin && (i = a.options ? U.deepCopy(e.config[o] || {}, a.options) : e.config[o] || {},
                            r = a.plugin),
                            s.config = i,
                            void 0 !== i.index && (s.index = i.index),
                            i.root && (s.root = i.root),
                            e.registerPlugin(r, s, o)
                        }
                        ))
                    }
                }
            }, {
                key: "updateLang",
                value: function(e) {
                    e || (e = this.lang);
                    var t = this.root
                      , n = this.i18n
                      , i = this.langText;
                    t && function e(t, n) {
                        for (var i = 0; i < t.children.length; i++)
                            t.children[i].children.length > 0 ? e(t.children[i], n) : n(t.children[i])
                    }(t, (function(t) {
                        var r = t.getAttribute && t.getAttribute("lang-key");
                        if (r) {
                            var o = n[r.toUpperCase()] || i[r];
                            o && (t.innerHTML = "function" == typeof o ? o(e) : o)
                        }
                    }
                    ))
                }
            }, {
                key: "lang",
                get: function() {
                    return this.player.lang
                }
            }, {
                key: "changeLangTextKey",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
                      , n = this.i18n || {}
                      , i = this.langText;
                    e.setAttribute && e.setAttribute("lang-key", t);
                    var r = n[t] || i[t] || "";
                    r && (e.innerHTML = r)
                }
            }, {
                key: "plugins",
                value: function() {
                    return this._children
                }
            }, {
                key: "disable",
                value: function() {
                    this.config.disable = !0,
                    U.addClass(this.find(".xgplayer-icon"), Te)
                }
            }, {
                key: "enable",
                value: function() {
                    this.config.disable = !1,
                    U.removeClass(this.find(".xgplayer-icon"), Te)
                }
            }, {
                key: "children",
                value: function() {
                    return {}
                }
            }, {
                key: "registerPlugin",
                value: function(e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                    n.root = n.root || this.root;
                    var r = D(t, "registerPlugin", this, 3)([e, n, i]);
                    return this._children.push(r),
                    r
                }
            }, {
                key: "registerIcons",
                value: function() {
                    return {}
                }
            }, {
                key: "registerLanguageTexts",
                value: function() {
                    return {}
                }
            }, {
                key: "find",
                value: function(e) {
                    if (this.root)
                        return this.root.querySelector(e)
                }
            }, {
                key: "bind",
                value: function(e, n, i) {
                    var r = this;
                    if (arguments.length < 3 && "function" == typeof n)
                        Array.isArray(e) ? e.forEach((function(e) {
                            r.bindEL(e, n)
                        }
                        )) : this.bindEL(e, n);
                    else {
                        var o = t.delegate.call(this, this.root, e, n, i);
                        this.__delegates = this.__delegates.concat(o)
                    }
                }
            }, {
                key: "unbind",
                value: function(e, t) {
                    var n = this;
                    if (arguments.length < 3 && "function" == typeof t)
                        Array.isArray(e) ? e.forEach((function(e) {
                            n.unbindEL(e, t)
                        }
                        )) : this.unbindEL(e, t);
                    else
                        for (var i = "".concat(e, "_").concat(t), r = 0; r < this.__delegates.length; r++)
                            if (this.__delegates[r].key === i) {
                                this.__delegates[r].destroy(),
                                this.__delegates.splice(r, 1);
                                break
                            }
                }
            }, {
                key: "setStyle",
                value: function(e, t) {
                    var n = this;
                    if (this.root)
                        return "String" === U.typeOf(e) ? this.root.style[e] = t : void ("Object" === U.typeOf(e) && Object.keys(e).map((function(t) {
                            n.root.style[t] = e[t]
                        }
                        )))
                }
            }, {
                key: "setAttr",
                value: function(e, t) {
                    var n = this;
                    if (this.root)
                        return "String" === U.typeOf(e) ? this.root.setAttribute(e, t) : void ("Object" === U.typeOf(e) && Object.keys(e).map((function(t) {
                            n.root.setAttribute(t, e[t])
                        }
                        )))
                }
            }, {
                key: "setHtml",
                value: function(e, t) {
                    this.root && (this.root.innerHTML = e,
                    "function" == typeof t && t())
                }
            }, {
                key: "bindEL",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    this.root && "on".concat(e)in this.root && "function" == typeof t && this.root.addEventListener(e, t, n)
                }
            }, {
                key: "unbindEL",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    this.root && "on".concat(e)in this.root && "function" == typeof t && this.root.removeEventListener(e, t, n)
                }
            }, {
                key: "show",
                value: function(e) {
                    if (this.root)
                        return this.root.style.display = void 0 !== e ? e : "block",
                        "none" === window.getComputedStyle(this.root, null).getPropertyValue("display") ? this.root.style.display = "block" : void 0
                }
            }, {
                key: "hide",
                value: function() {
                    this.root && (this.root.style.display = "none")
                }
            }, {
                key: "appendChild",
                value: function(e, t) {
                    if (!this.root)
                        return null;
                    if (arguments.length < 2 && arguments[0]instanceof window.Element)
                        return this.root.appendChild(arguments[0]);
                    if (!(t && t instanceof window.Element))
                        return null;
                    try {
                        return "string" == typeof e ? this.find(e).appendChild(t) : e.appendChild(t)
                    } catch (e) {
                        return F.logError("Plugin:appendChild", e),
                        null
                    }
                }
            }, {
                key: "render",
                value: function() {
                    return ""
                }
            }, {
                key: "destroy",
                value: function() {}
            }, {
                key: "__destroy",
                value: function() {
                    var e = this
                      , n = this.player;
                    this.__delegates.map((function(e) {
                        e.destroy()
                    }
                    )),
                    this.__delegates = [],
                    this._children instanceof Array && (this._children.map((function(e) {
                        n.unRegisterPlugin(e.pluginName)
                    }
                    )),
                    this._children = null),
                    this.root && (this.root.hasOwnProperty("remove") ? this.root.remove() : this.root.parentNode && this.root.parentNode.removeChild(this.root)),
                    D(t, "__destroy", this, 3)([]),
                    this.icons = {},
                    ["root", "parent"].map((function(t) {
                        e[t] = null
                    }
                    ))
                }
            }], [{
                key: "insert",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
                      , i = t.children.length
                      , r = Number(n)
                      , o = e instanceof window.Node;
                    if (i) {
                        for (var a = 0, s = null, l = ""; a < i; a++) {
                            s = t.children[a];
                            var u = Number(s.getAttribute("data-index"));
                            if (u >= r) {
                                l = "beforebegin";
                                break
                            }
                            u < r && (l = "afterend")
                        }
                        return o ? "afterend" === l ? t.appendChild(e) : t.insertBefore(e, s) : s.insertAdjacentHTML(l, e),
                        "afterend" === l ? t.children[t.children.length - 1] : t.children[a]
                    }
                    return o ? t.appendChild(e) : t.insertAdjacentHTML("beforeend", e),
                    t.children[t.children.length - 1]
                }
            }, {
                key: "defaultConfig",
                get: function() {
                    return {}
                }
            }, {
                key: "delegate",
                value: function(e, t, n, i) {
                    var r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]
                      , o = [];
                    if (e instanceof window.Node && "function" == typeof i)
                        if (Array.isArray(n))
                            n.forEach((function(n) {
                                var a = ve()(e, t, n, i, r);
                                a.key = "".concat(t, "_").concat(n),
                                o.push(a)
                            }
                            ));
                        else {
                            var a = ve()(e, t, n, i, r);
                            a.key = "".concat(t, "_").concat(n),
                            o.push(a)
                        }
                    return o
                }
            }, {
                key: "ROOT_TYPES",
                get: function() {
                    return ye
                }
            }, {
                key: "POSITIONS",
                get: function() {
                    return _e
                }
            }])
        }(ge)
          , ke = function() {
            return b((function e() {
                var t = this;
                if (_(this, e),
                S(this, "__trigger", (function(e) {
                    var n = (new Date).getTime();
                    t.timeStamp = n;
                    for (var i = 0; i < e.length; i++)
                        t.__runHandler(e[i].target)
                }
                )),
                this.__handlers = [],
                this.timeStamp = 0,
                this.observer = null,
                window.ResizeObserver)
                    try {
                        this.observer = new window.ResizeObserver(function(e, t, n) {
                            var i = !0
                              , r = !0;
                            if ("function" != typeof e)
                                throw new TypeError("Expected a function");
                            return V(n) && (i = "leading"in n ? !!n.leading : i,
                            r = "trailing"in n ? !!n.trailing : r),
                            function(e, t, n) {
                                var i, r, o, a, s, l, u = 0, c = !1, h = !1, d = !0, f = !t && 0 !== t && "function" == typeof window.requestAnimationFrame;
                                if ("function" != typeof e)
                                    throw new TypeError("Expected a function");
                                function p(t) {
                                    var n = i
                                      , o = r;
                                    return i = r = void 0,
                                    u = t,
                                    a = e.apply(o, n)
                                }
                                function g(e, t) {
                                    return f ? (window.cancelAnimationFrame(s),
                                    window.requestAnimationFrame(e)) : setTimeout(e, t)
                                }
                                function m(e) {
                                    var n = e - l;
                                    return void 0 === l || n >= t || n < 0 || h && e - u >= o
                                }
                                function v() {
                                    var e = Date.now();
                                    if (m(e))
                                        return y(e);
                                    s = g(v, function(e) {
                                        var n = e - u
                                          , i = t - (e - l);
                                        return h ? Math.min(i, o - n) : i
                                    }(e))
                                }
                                function y(e) {
                                    return s = void 0,
                                    d && i ? p(e) : (i = r = void 0,
                                    a)
                                }
                                function _() {
                                    for (var e = Date.now(), n = m(e), o = arguments.length, d = new Array(o), f = 0; f < o; f++)
                                        d[f] = arguments[f];
                                    if (i = d,
                                    r = this,
                                    l = e,
                                    n) {
                                        if (void 0 === s)
                                            return function(e) {
                                                return u = e,
                                                s = g(v, t),
                                                c ? p(e) : a
                                            }(l);
                                        if (h)
                                            return s = g(v, t),
                                            p(l)
                                    }
                                    return void 0 === s && (s = g(v, t)),
                                    a
                                }
                                return t = +t || 0,
                                V(n) && (c = !!n.leading,
                                o = (h = "maxWait"in n) ? Math.max(+n.maxWait || 0, t) : o,
                                d = "trailing"in n ? !!n.trailing : d),
                                _.cancel = function() {
                                    void 0 !== s && function(e) {
                                        if (f)
                                            return window.cancelAnimationFrame(e);
                                        clearTimeout(e)
                                    }(s),
                                    u = 0,
                                    i = l = r = s = void 0
                                }
                                ,
                                _.flush = function() {
                                    return void 0 === s ? a : y(Date.now())
                                }
                                ,
                                _.pending = function() {
                                    return void 0 !== s
                                }
                                ,
                                _
                            }(e, 100, {
                                leading: i,
                                trailing: r,
                                maxWait: 100
                            })
                        }(this.__trigger, 0, {
                            trailing: !0
                        })),
                        this.timeStamp = (new Date).getTime()
                    } catch (e) {
                        console.error(e)
                    }
            }
            ), [{
                key: "addObserver",
                value: function(e, t) {
                    if (this.observer) {
                        this.observer && this.observer.observe(e);
                        for (var n = e.getAttribute(re), i = this.__handlers, r = -1, o = 0; o < i.length; o++)
                            i[o] && e === i[o].target && (r = o);
                        r > -1 ? this.__handlers[r].handler = t : this.__handlers.push({
                            target: e,
                            handler: t,
                            playerId: n
                        })
                    }
                }
            }, {
                key: "unObserver",
                value: function(e) {
                    var t = -1;
                    this.__handlers.map((function(n, i) {
                        e === n.target && (t = i)
                    }
                    ));
                    try {
                        this.observer && this.observer.unobserve(e)
                    } catch (e) {}
                    this.observer && this.observer.unobserve(e),
                    t > -1 && this.__handlers.splice(t, 1)
                }
            }, {
                key: "destroyObserver",
                value: function() {
                    this.observer && this.observer.disconnect(),
                    this.observer = null,
                    this.__handlers = null
                }
            }, {
                key: "__runHandler",
                value: function(e) {
                    for (var t = this.__handlers, n = 0; n < t.length; n++)
                        if (t[n] && e === t[n].target) {
                            try {
                                t[n].handler(e)
                            } catch (e) {
                                console.error(e)
                            }
                            return !0
                        }
                    return !1
                }
            }])
        }()
          , Ce = null
          , Me = {
            pluginGroup: {},
            init: function(e) {
                var t, n, i = e._pluginInfoId;
                i || (i = U.generateSessionId(),
                e._pluginInfoId = i),
                !e.config.closeResizeObserver && e.root && (t = e.root,
                n = function() {
                    e.resize()
                }
                ,
                Ce || (Ce = new ke),
                Ce.addObserver(t, n)),
                this.pluginGroup[i] = {
                    _originalOptions: e.config || {},
                    _plugins: {}
                }
            },
            formatPluginInfo: function(e, t) {
                var n = null
                  , i = null;
                return e.plugin && "function" == typeof e.plugin ? (n = e.plugin,
                i = e.options) : (n = e,
                i = {}),
                t && (i.config = t || {}),
                {
                    PLUFGIN: n,
                    options: i
                }
            },
            checkPluginIfExits: function(e, t) {
                for (var n = 0; n < t.length; n++)
                    if (e.toLowerCase() === t[n].pluginName.toLowerCase())
                        return !0;
                return !1
            },
            getRootByConfig: function(e, t) {
                for (var n = Object.keys(t), i = null, r = 0; r < n.length; r++)
                    if (e.toLowerCase() === n[r].toLowerCase()) {
                        i = t[n[r]];
                        break
                    }
                return "Object" === U.typeOf(i) ? {
                    root: i.root,
                    position: i.position
                } : {}
            },
            lazyRegister: function(e, t) {
                var n = this
                  , i = t.timeout || 1500;
                return Promise.race([t.loader().then((function(t) {
                    var i;
                    i = t && t.__esModule ? t.default : t,
                    n.register(e, i, t.options)
                }
                )), new Promise((function(e, t) {
                    setTimeout((function() {
                        t(new Error("timeout"))
                    }
                    ), i)
                }
                ))])
            },
            register: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                if (e && t && "function" == typeof t && void 0 !== t.prototype) {
                    var i = e._pluginInfoId;
                    if (i && this.pluginGroup[i]) {
                        this.pluginGroup[i]._plugins || (this.pluginGroup[i]._plugins = {});
                        var r = this.pluginGroup[i]._plugins
                          , o = this.pluginGroup[i]._originalOptions;
                        n.player = e;
                        var a = n.pluginName || t.pluginName;
                        if (!a)
                            throw new Error("The property pluginName is necessary");
                        if (!t.isSupported || t.isSupported(e.config.mediaType, e.config.codecType)) {
                            n.config || (n.config = {});
                            for (var s = Object.keys(o), l = 0; l < s.length; l++)
                                if (a.toLowerCase() === s[l].toLowerCase()) {
                                    var u = o[s[l]];
                                    "Object" === U.typeOf(u) ? n.config = Object.assign({}, n.config, o[s[l]]) : "Boolean" === U.typeOf(u) && (n.config.disable = !u);
                                    break
                                }
                            t.defaultConfig && Object.keys(t.defaultConfig).forEach((function(e) {
                                void 0 === n.config[e] && (n.config[e] = t.defaultConfig[e])
                            }
                            )),
                            n.root ? "string" == typeof n.root && (n.root = e[n.root]) : n.root = e.root,
                            n.index = n.config.index || 0;
                            try {
                                r[a.toLowerCase()] && (this.unRegister(i, a.toLowerCase()),
                                console.warn("the is one plugin with same pluginName [".concat(a, "] exist, destroy the old instance")));
                                var c = new t(n);
                                return r[a.toLowerCase()] = c,
                                r[a.toLowerCase()].func = t,
                                c && "function" == typeof c.afterCreate && c.afterCreate(),
                                c
                            } catch (e) {
                                throw console.error(e),
                                e
                            }
                        } else
                            console.warn("not supported plugin [".concat(a, "]"))
                    }
                }
            },
            unRegister: function(e, t) {
                e._pluginInfoId && (e = e._pluginInfoId),
                t = t.toLowerCase();
                try {
                    var n = this.pluginGroup[e]._plugins[t];
                    n && (n.pluginName && n.__destroy(),
                    delete this.pluginGroup[e]._plugins[t])
                } catch (n) {
                    console.error("[unRegister:".concat(t, "] cgid:[").concat(e, "] error"), n)
                }
            },
            deletePlugin: function(e, t) {
                var n = e._pluginInfoId;
                n && this.pluginGroup[n] && this.pluginGroup[n]._plugins && delete this.pluginGroup[n]._plugins[t]
            },
            getPlugins: function(e) {
                var t = e._pluginInfoId;
                return t && this.pluginGroup[t] ? this.pluginGroup[t]._plugins : {}
            },
            findPlugin: function(e, t) {
                var n = e._pluginInfoId;
                if (!n || !this.pluginGroup[n])
                    return null;
                var i = t.toLowerCase();
                return this.pluginGroup[n]._plugins[i]
            },
            beforeInit: function(e) {
                var t = this;
                function n(e) {
                    return e && e.then ? e : new Promise((function(e) {
                        e()
                    }
                    ))
                }
                return new Promise((function(i) {
                    if (t.pluginGroup)
                        return (e._loadingPlugins && e._loadingPlugins.length ? Promise.all(e._loadingPlugins) : Promise.resolve()).then((function() {
                            var r = e._pluginInfoId;
                            if (t.pluginGroup[r]) {
                                var o = t.pluginGroup[r]._plugins
                                  , a = [];
                                Object.keys(o).forEach((function(e) {
                                    if (o[e] && o[e].beforePlayerInit)
                                        try {
                                            var t = o[e].beforePlayerInit();
                                            a.push(n(t))
                                        } catch (e) {
                                            throw a.push(n(null)),
                                            e
                                        }
                                }
                                )),
                                Promise.all([].concat(a)).then((function() {
                                    i()
                                }
                                )).catch((function(e) {
                                    console.error(e),
                                    i()
                                }
                                ))
                            } else
                                i()
                        }
                        ))
                }
                ))
            },
            afterInit: function(e) {
                var t = e._pluginInfoId;
                if (t && this.pluginGroup[t]) {
                    var n = this.pluginGroup[t]._plugins;
                    Object.keys(n).forEach((function(e) {
                        n[e] && n[e].afterPlayerInit && n[e].afterPlayerInit()
                    }
                    ))
                }
            },
            setLang: function(e, t) {
                var n = t._pluginInfoId;
                if (n && this.pluginGroup[n]) {
                    var i = this.pluginGroup[n]._plugins;
                    Object.keys(i).forEach((function(t) {
                        if (i[t].updateLang)
                            i[t].updateLang(e);
                        else
                            try {
                                i[t].lang = e
                            } catch (e) {
                                console.warn("".concat(t, " setLang"))
                            }
                    }
                    ))
                }
            },
            reRender: function(e) {
                var t = this
                  , n = e._pluginInfoId;
                if (n && this.pluginGroup[n]) {
                    var i = []
                      , r = this.pluginGroup[n]._plugins;
                    Object.keys(r).forEach((function(e) {
                        "controls" !== e && r[e] && (i.push({
                            plugin: r[e].func,
                            options: r[e].__args
                        }),
                        t.unRegister(n, e))
                    }
                    )),
                    i.forEach((function(n) {
                        t.register(e, n.plugin, n.options)
                    }
                    ))
                }
            },
            onPluginsReady: function(e) {
                var t = e._pluginInfoId;
                if (t && this.pluginGroup[t]) {
                    var n = this.pluginGroup[t]._plugins || {};
                    Object.keys(n).forEach((function(e) {
                        n[e].onPluginsReady && "function" == typeof n[e].onPluginsReady && n[e].onPluginsReady()
                    }
                    ))
                }
            },
            destroy: function(e) {
                var t = e._pluginInfoId;
                if (this.pluginGroup[t]) {
                    var n;
                    e.root && (n = e.root,
                    Ce.unObserver(n, undefined));
                    for (var i = this.pluginGroup[t]._plugins, r = 0, o = Object.keys(i); r < o.length; r++) {
                        var a = o[r];
                        this.unRegister(t, a)
                    }
                    delete this.pluginGroup[t],
                    delete e._pluginInfoId
                }
            }
        }
          , Pe = "xgplayer-is-enter"
          , Re = "xgplayer-pause"
          , xe = "xgplayer-playing"
          , Ee = "xgplayer-ended"
          , De = "xgplayer-isloading"
          , Le = "xgplayer-is-error"
          , Ie = "xgplayer-replay"
          , Oe = "xgplayer-nostart"
          , Ae = "xgplayer-inactive"
          , Ge = "xgplayer-is-fullscreen"
          , Ne = "xgplayer-is-cssfullscreen"
          , Be = "xgplayer-rotate-fullscreen"
          , $e = "xgplayer-rotate-parent"
          , Fe = "xgplayer-fullscreen-parent"
          , He = "xgplayer-fullscreen-inner"
          , Ue = "controls-autohide"
          , Ve = "not-allow-autoplay"
          , je = "seeking"
          , ze = "xgplayer-built-in";
        function Xe() {
            return {
                id: "",
                el: null,
                isNoRoot: !1,
                isCustomRoot: !0,
                url: "",
                domEventType: "default",
                nullUrlStart: !1,
                width: 600,
                height: 337.5,
                fluid: !1,
                fitVideoSize: "fixed",
                videoFillMode: "auto",
                volume: .6,
                autoplay: !1,
                autoplayMuted: !1,
                loop: !1,
                isLive: !1,
                zoom: 1,
                videoInit: !0,
                poster: "",
                isMobileSimulateMode: !1,
                defaultPlaybackRate: 1,
                execBeforePluginsCall: null,
                allowSeekAfterEnded: !0,
                enableContextmenu: !0,
                closeVideoClick: !1,
                closeVideoDblclick: !1,
                closePlayerBlur: !1,
                closeDelayBlur: !1,
                leavePlayerTime: 3e3,
                closePlayVideoFocus: !1,
                closePauseVideoFocus: !1,
                closeFocusVideoFocus: !0,
                closeControlsBlur: !0,
                topBarAutoHide: !0,
                videoAttributes: {},
                startTime: 0,
                seekedStatus: "play",
                miniprogress: !1,
                disableSwipeHandler: function() {},
                enableSwipeHandler: function() {},
                preProcessUrl: null,
                ignores: [],
                whitelist: [],
                inactive: 3e3,
                lang: (e = (document.documentElement.getAttribute("lang") || navigator.language || "zh-cn").toLocaleLowerCase(),
                "zh-cn" === e && (e = "zh"),
                e),
                controls: !0,
                marginControls: !1,
                fullscreenTarget: null,
                screenShot: !1,
                rotate: !1,
                pip: !1,
                download: !1,
                mini: !1,
                cssFullscreen: !0,
                keyShortcut: !0,
                presets: [],
                plugins: [],
                playbackRate: 1,
                definition: {
                    list: []
                },
                playsinline: !0,
                customDuration: 0,
                timeOffset: 0,
                icons: {},
                i18n: [],
                tabindex: 0,
                thumbnail: null,
                videoConfig: {},
                isHideTips: !1,
                minWaitDelay: 200,
                commonStyle: {
                    progressColor: "",
                    playedColor: "",
                    cachedColor: "",
                    sliderBtnStyle: {},
                    volumeColor: ""
                }
            };
            var e
        }
        var Ke = function(e) {
            function t() {
                var e;
                _(this, t);
                for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                    i[r] = arguments[r];
                return S(e = y(this, t, [].concat(i)), "onMouseEnter", (function(t) {
                    var n = e
                      , i = n.player;
                    n.playerConfig.closeControlsBlur && i.focus({
                        autoHide: !1
                    })
                }
                )),
                S(e, "onMouseLeave", (function(t) {
                    e.player.focus()
                }
                )),
                e
            }
            return C(t, e),
            b(t, [{
                key: "beforeCreate",
                value: function(e) {
                    e.config.mode || "mobile" !== K.device || (e.config.mode = "flex"),
                    e.player.config.marginControls && (e.config.autoHide = !1)
                }
            }, {
                key: "afterCreate",
                value: function() {
                    var e = this
                      , t = this.config
                      , n = t.disable
                      , i = t.height
                      , r = t.mode;
                    if (!n) {
                        "flex" === r && this.player.addClass("flex-controls");
                        var o = {
                            height: "".concat(i, "px")
                        };
                        Object.keys(o).map((function(t) {
                            e.root.style[t] = o[t]
                        }
                        )),
                        this.left = this.find("xg-left-grid"),
                        this.center = this.find("xg-center-grid"),
                        this.right = this.find("xg-right-grid"),
                        this.innerRoot = this.find("xg-inner-controls"),
                        this.on("mini_state_change", (function(t) {
                            t ? U.addClass(e.root, "mini-controls") : U.removeClass(e.root, "mini-controls")
                        }
                        ));
                        var a = this.playerConfig.isMobileSimulateMode;
                        "mobile" !== K.device && "mobile" !== a && (this.bind("mouseenter", this.onMouseEnter),
                        this.bind("mouseleave", this.onMouseLeave))
                    }
                }
            }, {
                key: "focus",
                value: function() {
                    this.player.focus({
                        autoHide: !1
                    })
                }
            }, {
                key: "focusAwhile",
                value: function() {
                    this.player.focus({
                        autoHide: !0
                    })
                }
            }, {
                key: "blur",
                value: function() {
                    this.player.blur({
                        ignorePaused: !0
                    })
                }
            }, {
                key: "recoverAutoHide",
                value: function() {
                    this.config.autoHide && U.addClass(this.root, Ue)
                }
            }, {
                key: "pauseAutoHide",
                value: function() {
                    U.removeClass(this.root, Ue)
                }
            }, {
                key: "show",
                value: function(e) {
                    this.root.style.display = "",
                    this.player.focus()
                }
            }, {
                key: "hide",
                value: function() {
                    this.root.style.display = "none"
                }
            }, {
                key: "mode",
                get: function() {
                    return this.config.mode
                }
            }, {
                key: "registerPlugin",
                value: function(e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , i = arguments.length > 2 ? arguments[2] : void 0;
                    if (this.root) {
                        var r = e.defaultConfig || {};
                        if (!n.root) {
                            switch (n.position ? n.position : n.config && n.config.position ? n.config.position : r.position) {
                            case _e.CONTROLS_LEFT:
                                n.root = this.left;
                                break;
                            case _e.CONTROLS_RIGHT:
                                n.root = this.right;
                                break;
                            case _e.CONTROLS_CENTER:
                                n.root = this.center;
                                break;
                            case _e.CONTROLS:
                                n.root = this.root;
                                break;
                            default:
                                n.root = this.left
                            }
                            return D(t, "registerPlugin", this, 3)([e, n, i])
                        }
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    "mobile" !== K.device && (this.unbind("mouseenter", this.onMouseEnter),
                    this.unbind("mouseleave", this.onMouseLeave))
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.config
                      , t = e.mode
                      , n = e.autoHide
                      , i = e.initShow;
                    if (!e.disable) {
                        var r = U.classNames({
                            "xgplayer-controls": !0
                        }, {
                            "flex-controls": "flex" === t
                        }, {
                            "bottom-controls": "bottom" === t
                        }, S({}, Ue, n), {
                            "xgplayer-controls-initshow": i || !n
                        });
                        return '<xg-controls class="'.concat(r, '" unselectable="on">\n    <xg-inner-controls class="xg-inner-controls xg-pos">\n      <xg-left-grid class="xg-left-grid">\n      </xg-left-grid>\n      <xg-center-grid class="xg-center-grid"></xg-center-grid>\n      <xg-right-grid class="xg-right-grid">\n      </xg-right-grid>\n    </xg-inner-controls>\n    </xg-controls>')
                    }
                }
            }], [{
                key: "pluginName",
                get: function() {
                    return "controls"
                }
            }, {
                key: "defaultConfig",
                get: function() {
                    return {
                        disable: !1,
                        autoHide: !0,
                        mode: "",
                        initShow: !1
                    }
                }
            }])
        }(we)
          , Qe = {
            lang: {},
            langKeys: [],
            textKeys: []
        };
        function We(e, t) {
            return Object.keys(t).forEach((function(n) {
                var i, r = U.typeOf(t[n]), o = U.typeOf(e[n]);
                "Array" === r ? ("Array" !== o && (e[n] = []),
                (i = e[n]).push.apply(i, L(t[n]))) : "Object" === r ? ("Object" !== o && (e[n] = {}),
                We(e[n], t[n])) : e[n] = t[n]
            }
            )),
            e
        }
        function qe() {
            Object.keys(Qe.lang.en).map((function(e) {
                Qe.textKeys[e] = e
            }
            ))
        }
        function Ze(e, t) {
            var n = e.LANG;
            if (t || (t = Qe),
            t.lang) {
                var i = e.TEXT || {};
                "zh" === n && (n = "zh-cn"),
                t.lang[n] ? We(t.lang[n], i) : (t.langKeys.push(n),
                t.lang[n] = i),
                qe()
            }
        }
        Ze({
            LANG: "en",
            TEXT: {
                ERROR_TYPES: {
                    network: {
                        code: 1,
                        msg: "video download error"
                    },
                    mse: {
                        code: 2,
                        msg: "stream append error"
                    },
                    parse: {
                        code: 3,
                        msg: "parsing error"
                    },
                    format: {
                        code: 4,
                        msg: "wrong format"
                    },
                    decoder: {
                        code: 5,
                        msg: "decoding error"
                    },
                    runtime: {
                        code: 6,
                        msg: "grammatical errors"
                    },
                    timeout: {
                        code: 7,
                        msg: "play timeout"
                    },
                    other: {
                        code: 8,
                        msg: "other errors"
                    }
                },
                HAVE_NOTHING: "There is no information on whether audio/video is ready",
                HAVE_METADATA: "Audio/video metadata is ready ",
                HAVE_CURRENT_DATA: "Data about the current play location is available, but there is not enough data to play the next frame/millisecond",
                HAVE_FUTURE_DATA: "Current and at least one frame of data is available",
                HAVE_ENOUGH_DATA: "The available data is sufficient to start playing",
                NETWORK_EMPTY: "Audio/video has not been initialized",
                NETWORK_IDLE: "Audio/video is active and has been selected for resources, but no network is used",
                NETWORK_LOADING: "The browser is downloading the data",
                NETWORK_NO_SOURCE: "No audio/video source was found",
                MEDIA_ERR_ABORTED: "The fetch process is aborted by the user",
                MEDIA_ERR_NETWORK: "An error occurred while downloading",
                MEDIA_ERR_DECODE: "An error occurred while decoding",
                MEDIA_ERR_SRC_NOT_SUPPORTED: "Audio/video is not supported",
                REPLAY: "Replay",
                ERROR: "Network is offline",
                PLAY_TIPS: "Play",
                PAUSE_TIPS: "Pause",
                PLAYNEXT_TIPS: "Play next",
                DOWNLOAD_TIPS: "Download",
                ROTATE_TIPS: "Rotate",
                RELOAD_TIPS: "Reload",
                FULLSCREEN_TIPS: "Fullscreen",
                EXITFULLSCREEN_TIPS: "Exit fullscreen",
                CSSFULLSCREEN_TIPS: "Cssfullscreen",
                EXITCSSFULLSCREEN_TIPS: "Exit cssfullscreen",
                TEXTTRACK: "Caption",
                PIP: "PIP",
                SCREENSHOT: "Screenshot",
                LIVE: "LIVE",
                OFF: "Off",
                OPEN: "Open",
                MINI_DRAG: "Click and hold to drag",
                MINISCREEN: "Miniscreen",
                REFRESH_TIPS: "Please Try",
                REFRESH: "Refresh",
                FORWARD: "forward",
                LIVE_TIP: "Live"
            }
        });
        var Ye = {
            get textKeys() {
                return Qe.textKeys
            },
            get langKeys() {
                return Qe.langKeys
            },
            get lang() {
                var e = {};
                return Qe.langKeys.map((function(t) {
                    e[t] = Qe.lang[t]
                }
                )),
                Qe.lang["zh-cn"] && (e.zh = Qe.lang["zh-cn"] || {}),
                e
            },
            extend: function(e, t) {
                var n = [];
                if (t || (t = Qe),
                t.lang) {
                    n = "Array" !== U.typeOf(e) ? Object.keys(e).map((function(t) {
                        return {
                            LANG: "zh" === t ? "zh-cn" : t,
                            TEXT: e[t]
                        }
                    }
                    )) : e;
                    var i = t.lang;
                    n.map((function(e) {
                        "zh" === e.LANG && (e.LANG = "zh-cn"),
                        i[e.LANG] ? We(i[e.LANG] || {}, e.TEXT || {}) : Ze(e, t)
                    }
                    )),
                    qe()
                }
            },
            use: Ze,
            init: function(e) {
                var t, n = {
                    lang: {},
                    langKeys: [],
                    textKeys: {},
                    pId: e
                };
                return We(n.lang, Qe.lang),
                (t = n.langKeys).push.apply(t, L(Qe.langKeys)),
                We(n.textKeys, Qe.textKeys),
                n
            }
        }
          , Je = ["ERROR", "INITIAL", "READY", "ATTACHING", "ATTACHED", "NOTALLOW", "RUNNING", "ENDED", "DESTROYED"]
          , et = {}
          , tt = null
          , nt = function(e) {
            function t() {
                return _(this, t),
                y(this, t, arguments)
            }
            return C(t, e),
            b(t, [{
                key: "add",
                value: function(e) {
                    e && (et[e.playerId] = e,
                    1 === Object.keys(et).length && this.setActive(e.playerId, !0))
                }
            }, {
                key: "remove",
                value: function(e) {
                    e && (e.isUserActive,
                    delete et[e.playerId])
                }
            }, {
                key: "_iterate",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    for (var n in et)
                        if (Object.prototype.hasOwnProperty.call(et, n)) {
                            var i = et[n];
                            if (t) {
                                if (e(i))
                                    break
                            } else
                                e(i)
                        }
                }
            }, {
                key: "forEach",
                value: function(e) {
                    this._iterate(e)
                }
            }, {
                key: "find",
                value: function(e) {
                    var t = null;
                    return this._iterate((function(n) {
                        var i = e(n);
                        return i && (t = n),
                        i
                    }
                    ), !0),
                    t
                }
            }, {
                key: "findAll",
                value: function(e) {
                    var t = [];
                    return this._iterate((function(n) {
                        e(n) && t.push(n)
                    }
                    )),
                    t
                }
            }, {
                key: "setActive",
                value: function(e) {
                    var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                    if (et[e])
                        return t ? this.forEach((function(t) {
                            e === t.playerId ? (t.isUserActive = !0,
                            t.isInstNext = !1) : t.isUserActive = !1
                        }
                        )) : et[e].isUserActive = t,
                        e
                }
            }, {
                key: "getActiveId",
                value: function() {
                    for (var e = Object.keys(et), t = 0; t < e.length; t++) {
                        var n = et[e[t]];
                        if (n && n.isUserActive)
                            return e[t]
                    }
                    return null
                }
            }, {
                key: "setNext",
                value: function(e) {
                    var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                    if (et[e])
                        return t ? this.forEach((function(t) {
                            e === t.playerId ? (t.isUserActive = !1,
                            t.isInstNext = !0) : t.isInstNext = !1
                        }
                        )) : et[e].isInstNext = t,
                        e
                }
            }], [{
                key: "getInstance",
                value: function() {
                    return tt || (tt = new t),
                    tt
                }
            }])
        }(A.EventEmitter)
          , it = ["play", "pause", "replay", "retry"]
          , rt = 0
          , ot = 0
          , at = null
          , st = function(e) {
            function t(e) {
                var n;
                _(this, t);
                var i, r = U.deepMerge(Xe(), e);
                S(n = y(this, t, [r]), "canPlayFunc", (function() {
                    if (n.config) {
                        var e = n.config
                          , t = e.autoplay
                          , i = e.defaultPlaybackRate;
                        F.logInfo("player", "canPlayFunc, startTime", n.__startTime),
                        n._seekToStartTime(),
                        n.playbackRate = i,
                        (t || n._useAutoplay) && n.mediaPlay(),
                        n.off(o, n.canPlayFunc),
                        n.removeClass(Pe)
                    }
                }
                )),
                S(n, "onFullscreenChange", (function(e, t) {
                    var i = function() {
                        U.setTimeout(n, (function() {
                            n.resize()
                        }
                        ), 100)
                    }
                      , r = U.getFullScreenEl();
                    n._fullActionFrom ? n._fullActionFrom = "" : n.emit(g, {
                        eventType: "system",
                        action: "switch_fullscreen",
                        pluginName: "player",
                        currentTime: n.currentTime,
                        duration: n.duration,
                        props: [{
                            prop: "fullscreen",
                            from: !0,
                            to: !1
                        }]
                    });
                    var o = function(e, t, n) {
                        if (e) {
                            var i = e.getAttribute(n);
                            return !(!i || i !== t || "VIDEO" !== e.tagName && "AUDIO" !== e.tagName)
                        }
                    }(r, n.playerId, re);
                    if (t || r && (r === n._fullscreenEl || o))
                        i(),
                        !n.config.closeFocusVideoFocus && n.media.focus(),
                        n.fullscreen = !0,
                        n.changeFullStyle(n.root, r, Ge),
                        n.emit(d, !0, n._fullScreenOffset),
                        n.cssfullscreen && n.exitCssFullscreen();
                    else if (n.fullscreen) {
                        i();
                        var a = n
                          , s = a._fullScreenOffset;
                        if (a.config.needFullscreenScroll ? (window.scrollTo(s.left, s.top),
                        U.setTimeout(n, (function() {
                            n.fullscreen = !1,
                            n._fullScreenOffset = null
                        }
                        ), 100)) : (!n.config.closeFocusVideoFocus && n.media.focus(),
                        n.fullscreen = !1,
                        n._fullScreenOffset = null),
                        n.cssfullscreen)
                            n.removeClass(Ge);
                        else {
                            var l = n._fullscreenEl;
                            l || !n.root.contains(e.target) && e.target !== n.root || (l = e.target),
                            n.recoverFullStyle(n.root, l, Ge)
                        }
                        n._fullscreenEl = null,
                        n.emit(d, !1)
                    }
                }
                )),
                S(n, "_onWebkitbeginfullscreen", (function(e) {
                    n._fullscreenEl = n.media,
                    n.onFullscreenChange(e, !0)
                }
                )),
                S(n, "_onWebkitendfullscreen", (function(e) {
                    n.onFullscreenChange(e, !1)
                }
                )),
                he(n, it),
                n.config = r,
                n._pluginInfoId = U.generateSessionId(),
                (i = n).logInfo = F.logInfo.bind(i),
                i.logWarn = F.logWarn.bind(i),
                i.logError = F.logError.bind(i);
                var a = n.constructor.defaultPreset
                  , s = n.config.presets;
                if (s.length) {
                    var l = s.indexOf("default");
                    l >= 0 && a && (s[l] = a)
                } else
                    a && s.push(a);
                n.userTimer = null,
                n.waitTimer = null,
                n.handleSource = !0,
                n._state = 1,
                n.isError = !1,
                n._hasStart = !1,
                n.isSeeking = !1,
                n.isCanplay = !1,
                n._useAutoplay = !1,
                n.__startTime = -1,
                n.rotateDeg = 0,
                n.isActive = !1,
                n.fullscreen = !1,
                n.cssfullscreen = !1,
                n.isRotateFullscreen = !1,
                n._fullscreenEl = null,
                n.timeSegments = [],
                n._cssfullscreenEl = null,
                n.curDefinition = null,
                n._orgCss = "",
                n._fullScreenOffset = null,
                n._videoHeight = 0,
                n._videoWidth = 0,
                n.videoPos = {
                    pi: 1,
                    scale: 0,
                    rotate: -1,
                    x: 0,
                    y: 0,
                    h: -1,
                    w: -1,
                    vy: 0,
                    vx: 0
                },
                n.sizeInfo = {
                    width: 0,
                    height: 0,
                    left: 0,
                    top: 0
                },
                n._accPlayed = {
                    t: 0,
                    acc: 0,
                    loopAcc: 0
                },
                n._offsetInfo = {
                    currentTime: -1,
                    duration: 0
                },
                n.innerContainer = null,
                n.controls = null,
                n.topBar = null,
                n.root = null,
                n.__i18n = Ye.init(n._pluginInfoId),
                K.os.isAndroid && K.osVersion > 0 && K.osVersion < 6 && (n.config.autoplay = !1),
                n.database = new ee,
                n.isUserActive = !1,
                n._onceSeekCanplay = null,
                n._isPauseBeforeSeek = 0,
                n.innerStates = {
                    isActiveLocked: !1
                },
                n.instManager = at,
                n._initMedia();
                var u = n.config.isNoRoot
                  , c = !u && n._initDOM();
                if (!u && !c)
                    return console.error(new Error("can't find the dom which id is ".concat(n.config.id, " or this.config.el does not exist"))),
                    x(n);
                Me.init(n);
                var h = n.config
                  , f = h.definition
                  , p = void 0 === f ? {} : f;
                if (!h.url && p.list && p.list.length > 0) {
                    var m = p.list.find((function(e) {
                        return e.definition && e.definition === p.defaultDefinition
                    }
                    ));
                    m || (p.defaultDefinition = p.list[0].definition,
                    m = p.list[0]),
                    n.config.url = m.url,
                    n.curDefinition = m
                }
                return n._bindEvents(),
                n._registerPresets(),
                n._registerPlugins(),
                Me.onPluginsReady(n),
                n.getInitDefinition(),
                n.setState(2),
                U.setTimeout(n, (function() {
                    n.emit("ready")
                }
                ), 0),
                n.onReady && n.onReady(),
                (n.config.videoInit || n.config.autoplay) && (!n.hasStart || n.state < 4) && n.start(),
                n
            }
            return C(t, e),
            b(t, [{
                key: "_initMedia",
                value: function() {
                    var e = this.constructor.XgVideoProxy;
                    if (e && this.mediaConfig.mediaType === e.mediaType) {
                        var t = this.innerContainer || this.root;
                        this.detachVideoEvents(this.media);
                        var n = new e(t,this.config,this.mediaConfig);
                        this.attachVideoEvents(n),
                        this.media = n
                    }
                    this.media.setAttribute(re, this.playerId)
                }
            }, {
                key: "_initDOM",
                value: function() {
                    var e, t = this, n = this.config, i = n.id, r = n.el, o = n.isCustomRoot, a = n.controls, s = n.autoplay, l = n.isMobileSimulateMode;
                    if (this.root = i ? document.getElementById(i) : null,
                    !this.root)
                        if (r && 1 === r.nodeType)
                            this.root = r;
                        else {
                            if (o)
                                return this.emit("error", new Z("use",this.config.vid,{
                                    line: 32,
                                    handle: "Constructor",
                                    msg: "container id can't be empty"
                                })),
                                console.error("this.confg.id or this.config.el can't be empty"),
                                !1;
                            this.root = U.createDom("div", "", {
                                id: i,
                                class: ze
                            })
                        }
                    var u = function(e) {
                        for (var t = Object.keys(et), n = 0; n < t.length; n++) {
                            var i = et[t[n]];
                            if (i.root === e)
                                return i
                        }
                        return null
                    }(this.root);
                    u && (F.logWarn("The is an Player instance already exists in this.root, destroy it and reinitialize"),
                    u.destroy()),
                    this.root.setAttribute(re, this.playerId),
                    null === (e = at) || void 0 === e || e.add(this),
                    Me.init(this),
                    this._initBaseDoms();
                    var c = this.constructor.XgVideoProxy;
                    if (c && this.mediaConfig.mediaType === c.mediaType) {
                        var h = this.innerContainer || this.root;
                        this.detachVideoEvents(this.media);
                        var d = new c(h,this.config,this.mediaConfig);
                        this.attachVideoEvents(d),
                        this.media = d
                    }
                    if (this.media.setAttribute(re, this.playerId),
                    a) {
                        var f = a.root || null
                          , p = Me.register(this, Ke, {
                            root: f
                        });
                        this.controls = p
                    }
                    var g = "mobile" === l ? "mobile" : K.device;
                    if (this.addClass("".concat("xgplayer", " ").concat(Ae, " xgplayer-").concat(g, " ").concat(a ? "" : "no-controls")),
                    s ? this.addClass(Pe) : this.addClass(Oe),
                    this.config.fluid) {
                        var m = this.config
                          , v = m.width
                          , y = m.height;
                        "number" == typeof v && "number" == typeof y || (v = 600,
                        y = 337.5);
                        var _ = {
                            width: "100%",
                            height: "0",
                            "max-width": "100%",
                            "padding-top": "".concat(100 * y / v, "%")
                        };
                        Object.keys(_).forEach((function(e) {
                            t.root.style[e] = _[e]
                        }
                        ))
                    } else
                        ["width", "height"].forEach((function(e) {
                            t.config[e] && ("number" != typeof t.config[e] ? t.root.style[e] = t.config[e] : t.root.style[e] = "".concat(t.config[e], "px"))
                        }
                        ));
                    var T = this.root.getBoundingClientRect()
                      , b = T.width
                      , S = T.height
                      , w = T.left
                      , k = T.top;
                    return this.sizeInfo.width = b,
                    this.sizeInfo.height = S,
                    this.sizeInfo.left = w,
                    this.sizeInfo.top = k,
                    !0
                }
            }, {
                key: "_initBaseDoms",
                value: function() {
                    this.topBar = null,
                    this.leftBar = null,
                    this.rightBar = null,
                    this.config.marginControls && (this.innerContainer = U.createDom("xg-video-container", "", {
                        "data-index": -1
                    }, "xg-video-container"),
                    this.root.appendChild(this.innerContainer))
                }
            }, {
                key: "_bindEvents",
                value: function() {
                    var e = this;
                    ["focus", "blur"].forEach((function(t) {
                        e.on(t, e["on" + t.charAt(0).toUpperCase() + t.slice(1)])
                    }
                    )),
                    te.forEach((function(t) {
                        document && document.addEventListener(t, e.onFullscreenChange)
                    }
                    )),
                    K.os.isIos && (this.media.addEventListener("webkitbeginfullscreen", this._onWebkitbeginfullscreen),
                    this.media.addEventListener("webkitendfullscreen", this._onWebkitendfullscreen)),
                    this.once(a, this.resize),
                    this.playFunc = function() {
                        e.config.closeFocusVideoFocus || e.media.focus()
                    }
                    ,
                    this.once(i, this.playFunc)
                }
            }, {
                key: "_unbindEvents",
                value: function() {
                    var e = this;
                    this.root && this.root.removeEventListener("mousemove", this.mousemoveFunc),
                    te.forEach((function(t) {
                        document.removeEventListener(t, e.onFullscreenChange)
                    }
                    )),
                    this.playFunc && this.off(i, this.playFunc),
                    this.off(o, this.canPlayFunc),
                    this.media.removeEventListener("webkitbeginfullscreen", this._onWebkitbeginfullscreen),
                    this.media.removeEventListener("webkitendfullscreen", this._onWebkitendfullscreen)
                }
            }, {
                key: "_clearUserTimer",
                value: function() {
                    this.userTimer && (U.clearTimeout(this, this.userTimer),
                    this.userTimer = null)
                }
            }, {
                key: "_startInit",
                value: function(e) {
                    var t = this;
                    if (this.media && (e && "" !== e && ("Array" !== U.typeOf(e) || 0 !== e.length) || (e = "",
                    this.emit("urlNull"),
                    F.logWarn("config.url is null, please get url and run player._startInit(url)"),
                    !this.config.nullUrlStart))) {
                        this.handleSource && (this._detachSourceEvents(this.media),
                        "Array" === U.typeOf(e) && e.length > 0 ? this._attachSourceEvents(this.media, e) : this.media.src && this.media.src === e ? e || this.media.removeAttribute("src") : this.media.src = e),
                        "Number" === U.typeOf(this.config.volume) && (this.volume = this.config.volume);
                        var n = this.innerContainer ? this.innerContainer : this.root;
                        n && this.media instanceof window.Element && !n.contains(this.media) && n.insertBefore(this.media, n.firstChild);
                        var i = this.media.readyState;
                        F.logInfo("_startInit readyState", i),
                        this.config.autoplay && (!U.isMSE(this.media) && this.load(),
                        (K.os.isIpad || K.os.isPhone) && this.mediaPlay());
                        var r = this.config.startTime;
                        this.__startTime = r > 0 ? r : -1,
                        this.config.startTime = 0,
                        i >= 2 && this.duration > 0 ? this.canPlayFunc() : this.on(o, this.canPlayFunc),
                        (!this.hasStart || this.state < 4) && Me.afterInit(this),
                        this.hasStart = !0,
                        this.setState(4),
                        U.setTimeout(this, (function() {
                            t.emit("complete")
                        }
                        ), 0)
                    }
                }
            }, {
                key: "_registerPlugins",
                value: function() {
                    var e = this
                      , t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                    this._loadingPlugins = [];
                    var n = this.config.ignores || []
                      , i = this.config.plugins || []
                      , r = this.config.i18n || [];
                    t && Ye.extend(r, this.__i18n);
                    var o = n.join("||").toLowerCase().split("||")
                      , a = this.plugins;
                    i.forEach((function(n) {
                        try {
                            var i = n.plugin ? n.plugin.pluginName : n.pluginName;
                            if (i && o.indexOf(i.toLowerCase()) > -1)
                                return null;
                            if (!t && a[i.toLowerCase()])
                                return;
                            if (n.lazy && n.loader) {
                                var r = Me.lazyRegister(e, n);
                                return void (n.forceBeforeInit && (r.then((function() {
                                    e._loadingPlugins.splice(e._loadingPlugins.indexOf(r), 1)
                                }
                                )).catch((function(t) {
                                    F.logError("_registerPlugins:loadingPlugin", t),
                                    e._loadingPlugins.splice(e._loadingPlugins.indexOf(r), 1)
                                }
                                )),
                                e._loadingPlugins.push(r)))
                            }
                            return e.registerPlugin(n)
                        } catch (e) {
                            F.logError("_registerPlugins:", e)
                        }
                    }
                    ))
                }
            }, {
                key: "_registerPresets",
                value: function() {
                    var e = this;
                    this.config.presets.forEach((function(t) {
                        !function(e, t) {
                            var n, i, r = t.preset && t.options ? new t.preset(t.options,e.config) : new t({},e.config), o = r.plugins, a = void 0 === o ? [] : o, s = r.ignores, l = void 0 === s ? [] : s, u = r.icons, c = void 0 === u ? {} : u, h = r.i18n, d = void 0 === h ? [] : h;
                            e.config.plugins || (e.config.plugins = []),
                            e.config.ignores || (e.config.ignores = []),
                            (n = e.config.plugins).push.apply(n, L(a)),
                            (i = e.config.ignores).push.apply(i, L(l)),
                            Object.keys(c).map((function(t) {
                                e.config.icons[t] || (e.config.icons[t] = c[t])
                            }
                            ));
                            var f = e.config.i18n || [];
                            d.push.apply(d, L(f)),
                            e.config.i18n = d
                        }(e, t)
                    }
                    ))
                }
            }, {
                key: "_getRootByPosition",
                value: function(e) {
                    var t = null;
                    switch (e) {
                    case _e.ROOT_RIGHT:
                        this.rightBar || (this.rightBar = U.createPositionBar("xg-right-bar", this.root)),
                        t = this.rightBar;
                        break;
                    case _e.ROOT_LEFT:
                        this.leftBar || (this.leftBar = U.createPositionBar("xg-left-bar", this.root)),
                        t = this.leftBar;
                        break;
                    case _e.ROOT_TOP:
                        this.topBar || (this.topBar = U.createPositionBar("xg-top-bar", this.root),
                        this.config.topBarAutoHide && U.addClass(this.topBar, "top-bar-autohide")),
                        t = this.topBar;
                        break;
                    default:
                        t = this.innerContainer || this.root
                    }
                    return t
                }
            }, {
                key: "registerPlugin",
                value: function(e, t) {
                    var n = Me.formatPluginInfo(e, t)
                      , i = n.PLUFGIN
                      , r = n.options
                      , o = this.config.plugins;
                    !Me.checkPluginIfExits(i.pluginName, o) && o.push(i);
                    var a = Me.getRootByConfig(i.pluginName, this.config);
                    a.root && (r.root = a.root),
                    a.position && (r.position = a.position);
                    var s = r.position ? r.position : r.config && r.config.position || i.defaultConfig && i.defaultConfig.position;
                    return !r.root && "string" == typeof s && s.indexOf("controls") > -1 ? this.controls && this.controls.registerPlugin(i, r, i.pluginName) : (r.root || (r.root = "controls" === i.pluginName ? this.root : this._getRootByPosition(s)),
                    Me.register(this, i, r))
                }
            }, {
                key: "deregister",
                value: function(e) {
                    "string" == typeof e ? Me.unRegister(this, e) : e instanceof ge && Me.unRegister(this, e.pluginName)
                }
            }, {
                key: "unRegisterPlugin",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    this.deregister(e),
                    t && this.removePluginFromConfig(e)
                }
            }, {
                key: "removePluginFromConfig",
                value: function(e) {
                    var t;
                    if ("string" == typeof e ? t = e : e instanceof ge && (t = e.pluginName),
                    t)
                        for (var n = this.config.plugins.length - 1; n > -1; n--)
                            if (this.config.plugins[n].pluginName.toLowerCase() === t.toLowerCase()) {
                                this.config.plugins.splice(n, 1);
                                break
                            }
                }
            }, {
                key: "plugins",
                get: function() {
                    return Me.getPlugins(this)
                }
            }, {
                key: "getPlugin",
                value: function(e) {
                    var t = Me.findPlugin(this, e);
                    return t && t.pluginName ? t : null
                }
            }, {
                key: "addClass",
                value: function(e) {
                    this.root && (U.hasClass(this.root, e) || U.addClass(this.root, e))
                }
            }, {
                key: "removeClass",
                value: function(e) {
                    this.root && U.removeClass(this.root, e)
                }
            }, {
                key: "hasClass",
                value: function(e) {
                    if (this.root)
                        return U.hasClass(this.root, e)
                }
            }, {
                key: "setAttribute",
                value: function(e, t) {
                    this.root && this.root.setAttribute(e, t)
                }
            }, {
                key: "removeAttribute",
                value: function(e, t) {
                    this.root && this.root.removeAttribute(e, t)
                }
            }, {
                key: "start",
                value: function(e) {
                    var t = this;
                    if (!(this.state > 3))
                        return e || this.config.url || this.getInitDefinition(),
                        this.hasStart = !0,
                        this.setState(3),
                        this._registerPlugins(!1),
                        Me.beforeInit(this).then((function() {
                            if (t.config) {
                                e || (e = t.url || t.config.url);
                                var n = t._preProcessUrl(e);
                                return t._startInit(n.url)
                            }
                        }
                        )).catch((function(e) {
                            throw e.fileName = "player",
                            e.lineNumber = "236",
                            F.logError("start:beforeInit:", e),
                            e
                        }
                        ))
                }
            }, {
                key: "switchURL",
                value: function(e, t) {
                    var n = this
                      , i = e;
                    "Object" === U.typeOf(e) && (i = e.url),
                    i = this._preProcessUrl(i).url;
                    var r = this.currentTime;
                    this.__startTime = r;
                    var o = this.paused && !this.isError;
                    return this.src = i,
                    new Promise((function(e, t) {
                        var r = function(e) {
                            n.off("timeupdate", a),
                            n.off("canplay", a),
                            t(e)
                        }
                          , a = function() {
                            n._seekToStartTime(),
                            o && n.pause(),
                            n.off("error", r),
                            e(!0)
                        };
                        n.once("error", r),
                        i ? (K.os.isAndroid ? n.once("timeupdate", a) : n.once("canplay", a),
                        n.play()) : n.errorHandler("error", {
                            code: 6,
                            message: "empty_src"
                        })
                    }
                    ))
                }
            }, {
                key: "videoPlay",
                value: function() {
                    this.mediaPlay()
                }
            }, {
                key: "mediaPlay",
                value: function() {
                    var e = this;
                    if (!this.hasStart && this.state < 4)
                        return this.removeClass(Oe),
                        this.addClass(Pe),
                        this.start(),
                        void (this._useAutoplay = !0);
                    this.state < 6 && (this.removeClass(Oe),
                    !this.isCanplay && this.addClass(Pe));
                    var n = D(t, "play", this, 3)([]);
                    return void 0 !== n && n && n.then ? n.then((function() {
                        e.removeClass(Ve),
                        e.addClass(xe),
                        e.state < 6 && (F.logInfo(">>>>playPromise.then"),
                        e.setState(6),
                        e.emit(c))
                    }
                    )).catch((function(t) {
                        if (F.logWarn(">>>>playPromise.catch", t.name),
                        e.media && e.media.error)
                            return e.onError(),
                            void e.removeClass(Pe);
                        "NotAllowedError" === t.name && (e._errorTimer = U.setTimeout(e, (function() {
                            e._errorTimer = null,
                            e.emit(h),
                            e.addClass(Ve),
                            e.removeClass(Pe),
                            e.pause(),
                            e.setState(5)
                        }
                        ), 0))
                    }
                    )) : (F.logWarn("video.play not return promise"),
                    this.state < 6 && (this.setState(6),
                    this.removeClass(Ve),
                    this.removeClass(Oe),
                    this.removeClass(Pe),
                    this.addClass(xe),
                    this.emit(c))),
                    n
                }
            }, {
                key: "mediaPause",
                value: function() {
                    D(t, "pause", this, 3)([])
                }
            }, {
                key: "videoPause",
                value: function() {
                    D(t, "pause", this, 3)([])
                }
            }, {
                key: "play",
                value: function() {
                    var e = this;
                    return this.removeClass(Re),
                    fe(this, "play", (function() {
                        return e.mediaPlay()
                    }
                    ))
                }
            }, {
                key: "pause",
                value: function() {
                    var e = this;
                    fe(this, "pause", (function() {
                        D(t, "pause", e, 3)([])
                    }
                    ))
                }
            }, {
                key: "seek",
                value: function(e, t) {
                    var n = this;
                    if (this.media && !Number.isNaN(Number(e)) && this.hasStart) {
                        var i = this.config
                          , o = i.isSeekedPlay
                          , a = i.seekedStatus
                          , s = t || (o ? "play" : a);
                        e = e < 0 ? 0 : e > this.duration ? parseInt(this.duration, 10) : e,
                        !this._isPauseBeforeSeek && (this._isPauseBeforeSeek = this.paused ? 2 : 1),
                        this._onceSeekCanplay && this.off(r, this._onceSeekCanplay),
                        this._onceSeekCanplay = function() {
                            switch (n.removeClass(Pe),
                            n.isSeeking = !1,
                            s) {
                            case "play":
                                n.play();
                                break;
                            case "pause":
                                n.pause();
                                break;
                            default:
                                n._isPauseBeforeSeek > 1 || n.paused ? n.pause() : n.play()
                            }
                            n._isPauseBeforeSeek = 0,
                            n._onceSeekCanplay = null
                        }
                        ,
                        this.once(r, this._onceSeekCanplay),
                        this.state < 6 ? (this.removeClass(Oe),
                        this.currentTime = e,
                        this.play()) : this.currentTime = e
                    }
                }
            }, {
                key: "getInitDefinition",
                value: function() {
                    var e = this
                      , t = this.config
                      , n = t.definition;
                    !t.url && n && n.list && n.list.length > 0 && n.defaultDefinition && n.list.map((function(t) {
                        t.definition === n.defaultDefinition && (e.config.url = t.url,
                        e.curDefinition = t)
                    }
                    ))
                }
            }, {
                key: "changeDefinition",
                value: function(e, t) {
                    var n = this
                      , i = this.config.definition;
                    if (Array.isArray(null == i ? void 0 : i.list) && i.list.forEach((function(t) {
                        (null == e ? void 0 : e.definition) === t.definition && (n.curDefinition = t)
                    }
                    )),
                    null != e && e.bitrate && "number" != typeof e.bitrate && (e.bitrate = parseInt(e.bitrate, 10) || 0),
                    this.emit("definition_change", {
                        from: t,
                        to: e
                    }),
                    this.hasStart) {
                        var r = this.switchURL(e.url, R({
                            seamless: !1 !== i.seamless && "undefined" != typeof MediaSource && "function" == typeof MediaSource.isTypeSupported
                        }, e));
                        r && r.then ? r.then((function() {
                            n.emit(p, {
                                from: t,
                                to: e
                            })
                        }
                        )) : this.emit(p, {
                            from: t,
                            to: e
                        })
                    } else
                        this.config.url = e.url
                }
            }, {
                key: "reload",
                value: function() {
                    this.load(),
                    this.reloadFunc = function() {
                        this.play()
                    }
                    ,
                    this.once(a, this.reloadFunc)
                }
            }, {
                key: "resetState",
                value: function() {
                    var e = this
                      , t = [Ve, xe, Oe, Re, Ie, Pe, Ee, Le, De];
                    this.hasStart = !1,
                    this.isError = !1,
                    this._useAutoplay = !1,
                    this.mediaPause(),
                    this._accPlayed.acc = 0,
                    this._accPlayed.t = 0,
                    this._accPlayed.loopAcc = 0,
                    t.forEach((function(t) {
                        e.removeClass(t)
                    }
                    )),
                    this.addClass(Oe),
                    this.emit("reset")
                }
            }, {
                key: "reset",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , n = arguments.length > 1 ? arguments[1] : void 0;
                    if (this.resetState(),
                    this.plugins && (t.map((function(t) {
                        e.deregister(t)
                    }
                    )),
                    n)) {
                        var i = Xe();
                        Object.keys(this.config).keys((function(t) {
                            "undefined" === e.config[t] || "plugins" !== t && "presets" !== t && "el" !== t && "id" !== t || (e.config[t] = i[t])
                        }
                        ))
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    var e, n = this, i = this.innerContainer, r = this.root, o = this.media;
                    if (o) {
                        if (this.hasStart = !1,
                        this._useAutoplay = !1,
                        r && r.removeAttribute(re),
                        this.updateAcc("destroy"),
                        this._unbindEvents(),
                        this._detachSourceEvents(this.media),
                        U.clearAllTimers(this),
                        this.emit("destroy"),
                        null === (e = at) || void 0 === e || e.remove(this),
                        Me.destroy(this),
                        de(this),
                        D(t, "destroy", this, 3)([]),
                        this.fullscreen && this._fullscreenEl === r && this.exitFullscreen(),
                        i)
                            for (var a = i.children, s = 0; s < a.length; s++)
                                i.removeChild(a[s]);
                        r && !i && o instanceof window.Node && r.contains(o) && r.removeChild(o),
                        ["topBar", "leftBar", "rightBar", "innerContainer"].map((function(e) {
                            n[e] && r.removeChild(n[e]),
                            n[e] = null
                        }
                        ));
                        var l = r ? r.className.split(" ") : []
                          , u = r && U.hasClass(r, ze);
                        l.length > 0 ? r.className = l.filter((function(e) {
                            return e.indexOf("xgplayer") < 0
                        }
                        )).join(" ") : r && (r.className = ""),
                        this.removeAttribute("data-xgfill"),
                        ["isSeeking", "isCanplay", "isActive", "cssfullscreen", "fullscreen"].forEach((function(e) {
                            n[e] = !1
                        }
                        )),
                        u && this.root.parentNode && this.root.parentNode.removeChild(this.root)
                    }
                }
            }, {
                key: "replay",
                value: function() {
                    var e = this;
                    this.removeClass(Ee),
                    this.currentTime = 0,
                    this.isSeeking = !1,
                    fe(this, "replay", (function() {
                        e.once(r, (function() {
                            var t = e.mediaPlay();
                            t && t.catch && t.catch((function(e) {
                                console.log(e)
                            }
                            ))
                        }
                        )),
                        e.emit("replay"),
                        e.onPlay()
                    }
                    ))
                }
            }, {
                key: "retry",
                value: function() {
                    var e = this;
                    this.removeClass(Le),
                    this.addClass(De),
                    fe(this, "retry", (function() {
                        var t = e.currentTime
                          , n = e.config.url
                          , i = U.isMSE(e.media) ? {
                            url: n
                        } : e._preProcessUrl(n);
                        e.src = i.url,
                        !e.config.isLive && (e.currentTime = t),
                        e.once(o, (function() {
                            e.mediaPlay()
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "changeFullStyle",
                value: function(e, t, n, i) {
                    e && (i || (i = Fe),
                    this._orgCss || (this._orgCss = U.filterStyleFromText(e)),
                    U.addClass(e, n),
                    t && t !== e && !this._orgPCss && (this._orgPCss = U.filterStyleFromText(t),
                    U.addClass(t, i),
                    t.setAttribute(re, this.playerId)))
                }
            }, {
                key: "recoverFullStyle",
                value: function(e, t, n, i) {
                    i || (i = Fe),
                    this._orgCss && (U.setStyleFromCsstext(e, this._orgCss),
                    this._orgCss = ""),
                    U.removeClass(e, n),
                    t && t !== e && this._orgPCss && (U.setStyleFromCsstext(t, this._orgPCss),
                    this._orgPCss = "",
                    U.removeClass(t, i),
                    t.removeAttribute(re))
                }
            }, {
                key: "getFullscreen",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.config.fullscreenTarget
                      , t = this.root
                      , n = this.media;
                    if ("video" !== e && "media" !== e || (e = this[e]),
                    e || (e = t),
                    this._fullScreenOffset = {
                        top: U.scrollTop(),
                        left: U.scrollLeft()
                    },
                    this._fullscreenEl = e,
                    this._fullActionFrom = "get",
                    U.getFullScreenEl() === this._fullscreenEl)
                        return this.onFullscreenChange(),
                        Promise.resolve();
                    try {
                        for (var i = 0; i < ne.length; i++) {
                            var r = ne[i];
                            if (e[r]) {
                                var o = "webkitRequestFullscreen" === r ? e.webkitRequestFullscreen(window.Element.ALLOW_KEYBOARD_INPUT) : e[r]();
                                return o && o.then ? o : Promise.resolve()
                            }
                        }
                        return n.fullscreenEnabled || n.webkitSupportsFullscreen ? (n.webkitEnterFullscreen(),
                        Promise.resolve()) : Promise.reject(new Error("call getFullscreen fail"))
                    } catch (e) {
                        return Promise.reject(new Error("call getFullscreen fail"))
                    }
                }
            }, {
                key: "exitFullscreen",
                value: function(e) {
                    if (this.isRotateFullscreen && this.exitRotateFullscreen(),
                    this._fullscreenEl || U.getFullScreenEl()) {
                        this.root;
                        var t = this.media;
                        this._fullActionFrom = "exit";
                        try {
                            for (var n = 0; n < ie.length; n++) {
                                var i = ie[n];
                                if (document[i]) {
                                    var r = document[i]();
                                    return r && r.then ? r : Promise.resolve()
                                }
                            }
                            return t && t.webkitSupportsFullscreen ? (t.webkitExitFullScreen(),
                            Promise.resolve()) : Promise.reject(new Error("call exitFullscreen fail"))
                        } catch (e) {
                            return Promise.reject(new Error("call exitFullscreen fail"))
                        }
                    }
                }
            }, {
                key: "getCssFullscreen",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.config.fullscreenTarget;
                    this.isRotateFullscreen ? this.exitRotateFullscreen() : this.fullscreen && this.exitFullscreen();
                    var t = e ? "".concat(He, " ").concat(Ne) : Ne;
                    this.changeFullStyle(this.root, e, t);
                    var n = this.config.fullscreen
                      , i = void 0 === n ? {} : n;
                    (!0 === i.useCssFullscreen || "function" == typeof i.useCssFullscreen && i.useCssFullscreen()) && (this.fullscreen = !0,
                    this.emit(d, !0)),
                    this._cssfullscreenEl = e,
                    this.cssfullscreen = !0,
                    this.emit(f, !0)
                }
            }, {
                key: "exitCssFullscreen",
                value: function() {
                    var e = this._cssfullscreenEl ? "".concat(He, " ").concat(Ne) : Ne;
                    if (this.fullscreen) {
                        var t = this.config.fullscreen
                          , n = void 0 === t ? {} : t;
                        !0 === n.useCssFullscreen || "function" == typeof n.useCssFullscreen && n.useCssFullscreen() ? (this.recoverFullStyle(this.root, this._cssfullscreenEl, e),
                        this.fullscreen = !1,
                        this.emit(d, !1)) : this.removeClass(e)
                    } else
                        this.recoverFullStyle(this.root, this._cssfullscreenEl, e);
                    this._cssfullscreenEl = null,
                    this.cssfullscreen = !1,
                    this.emit(f, !1)
                }
            }, {
                key: "getRotateFullscreen",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.config.fullscreenTarget;
                    this.cssfullscreen && this.exitCssFullscreen(e);
                    var t = e ? "".concat(He, " ").concat(Be) : Be;
                    this._fullscreenEl = e || this.root,
                    this.changeFullStyle(this.root, e, t, $e),
                    this.isRotateFullscreen = !0,
                    this.fullscreen = !0,
                    this.setRotateDeg(90),
                    this._rootStyle = this.root.getAttribute("style"),
                    this.root.style.width = "".concat(window.innerHeight, "px"),
                    this.emit(d, !0)
                }
            }, {
                key: "exitRotateFullscreen",
                value: function(e) {
                    var t = this._fullscreenEl !== this.root ? "".concat(He, " ").concat(Be) : Be;
                    this.recoverFullStyle(this.root, this._fullscreenEl, t, $e),
                    this.isRotateFullscreen = !1,
                    this.fullscreen = !1,
                    this.setRotateDeg(0),
                    this.emit(d, !1),
                    this._rootStyle && (this.root.style.style = this._rootStyle,
                    this._rootStyle = !1)
                }
            }, {
                key: "setRotateDeg",
                value: function(e) {
                    90 === window.orientation || -90 === window.orientation ? this.rotateDeg = 0 : this.rotateDeg = e
                }
            }, {
                key: "focus",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        autoHide: !this.config.closeDelayBlur,
                        delay: this.config.inactive
                    };
                    this.isActive ? this.onFocus(e) : this.emit(l, R({
                        paused: this.paused,
                        ended: this.ended
                    }, e))
                }
            }, {
                key: "blur",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        ignorePaused: !1
                    };
                    this.isActive ? (this._clearUserTimer(),
                    this.emit(u, R({
                        paused: this.paused,
                        ended: this.ended
                    }, e))) : this.onBlur(e)
                }
            }, {
                key: "onFocus",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        autoHide: !0,
                        delay: 3e3
                    }
                      , n = this.innerStates;
                    if (this.isActive = !0,
                    this.removeClass(Ae),
                    this._clearUserTimer(),
                    void 0 !== t.isLock && (n.isActiveLocked = t.isLock),
                    !1 === t.autoHide || !0 === t.isLock || n.isActiveLocked)
                        this._clearUserTimer();
                    else {
                        var i = t && t.delay ? t.delay : this.config.inactive;
                        this.userTimer = U.setTimeout(this, (function() {
                            e.userTimer = null,
                            e.blur()
                        }
                        ), i)
                    }
                }
            }, {
                key: "onBlur",
                value: function() {
                    var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).ignorePaused
                      , t = void 0 !== e && e;
                    if (!this.innerStates.isActiveLocked) {
                        var n = this.config.closePauseVideoFocus;
                        this.isActive = !1,
                        (t || n || !this.paused && !this.ended) && this.addClass(Ae)
                    }
                }
            }, {
                key: "onEmptied",
                value: function() {
                    this.updateAcc("emptied")
                }
            }, {
                key: "onCanplay",
                value: function() {
                    this.removeClass(Pe),
                    this.removeClass(Le),
                    this.removeClass(De),
                    this.isCanplay = !0,
                    this.waitTimer && U.clearTimeout(this, this.waitTimer)
                }
            }, {
                key: "onLoadeddata",
                value: function() {
                    var e = this;
                    this.isError = !1,
                    this.isSeeking = !1,
                    this.__startTime > 0 && (this.duration > 0 ? this._seekToStartTime() : this.once("durationchange", (function() {
                        e._seekToStartTime()
                    }
                    )))
                }
            }, {
                key: "onLoadstart",
                value: function() {
                    this.removeClass(Le),
                    this.isCanplay = !1
                }
            }, {
                key: "onPlay",
                value: function() {
                    7 === this.state && this.setState(6),
                    this.removeClass(Re),
                    this.ended && this.removeClass(Ee),
                    !this.config.closePlayVideoFocus && this.focus()
                }
            }, {
                key: "onPause",
                value: function() {
                    this.addClass(Re),
                    this.updateAcc("pause"),
                    this.config.closePauseVideoFocus || (this._clearUserTimer(),
                    this.focus())
                }
            }, {
                key: "onEnded",
                value: function() {
                    this.updateAcc("ended"),
                    this.addClass(Ee),
                    this.setState(7)
                }
            }, {
                key: "onError",
                value: function() {
                    this.isError = !0,
                    this.updateAcc("error"),
                    this.removeClass(Ve),
                    this.removeClass(Oe),
                    this.removeClass(Pe),
                    this.removeClass(De),
                    this.addClass(Le)
                }
            }, {
                key: "onSeeking",
                value: function() {
                    this.isSeeking || this.updateAcc("seeking"),
                    this.isSeeking = !0,
                    this.addClass(je)
                }
            }, {
                key: "onSeeked",
                value: function() {
                    this.isSeeking = !1,
                    this.waitTimer && U.clearTimeout(this, this.waitTimer),
                    this.removeClass(De),
                    this.removeClass(je)
                }
            }, {
                key: "onWaiting",
                value: function() {
                    var e = this;
                    this.waitTimer && U.clearTimeout(this, this.waitTimer),
                    this.updateAcc("waiting"),
                    this.waitTimer = U.setTimeout(this, (function() {
                        e.addClass(De),
                        e.emit("loading"),
                        U.clearTimeout(e, e.waitTimer),
                        e.waitTimer = null
                    }
                    ), this.config.minWaitDelay)
                }
            }, {
                key: "onPlaying",
                value: function() {
                    var e = this;
                    this.isError = !1,
                    [Oe, Re, Ee, Le, Ie, De].forEach((function(t) {
                        e.removeClass(t)
                    }
                    )),
                    this._accPlayed.t || this.paused || this.ended || (this._accPlayed.t = (new Date).getTime())
                }
            }, {
                key: "onTimeupdate",
                value: function() {
                    !this._videoHeight && this.media.videoHeight && this.resize(),
                    (this.waitTimer || this.hasClass(De)) && this.media.readyState > 2 && (this.removeClass(De),
                    U.clearTimeout(this, this.waitTimer),
                    this.waitTimer = null),
                    !this.paused && 5 === this.state && this.duration && (this.setState(6),
                    this.emit(c)),
                    this._accPlayed.t || this.paused || this.ended || (this._accPlayed.t = (new Date).getTime())
                }
            }, {
                key: "onVolumechange",
                value: function() {
                    "Number" === U.typeOf(this.config.volume) && (this.config.volume = this.volume)
                }
            }, {
                key: "onRatechange",
                value: function() {
                    this.config.defaultPlaybackRate = this.playbackRate
                }
            }, {
                key: "emitUserAction",
                value: function(e, t, n) {
                    if (this.media && t && e) {
                        var i = "String" === U.typeOf(e) ? e : e.type || "";
                        n.props && "Array" !== U.typeOf(n.props) && (n.props = [n.props]),
                        this.emit(g, R({
                            eventType: i,
                            action: t,
                            currentTime: this.currentTime,
                            duration: this.duration,
                            ended: this.ended,
                            event: e
                        }, n))
                    }
                }
            }, {
                key: "updateAcc",
                value: function(e) {
                    if (this._accPlayed.t) {
                        var t = (new Date).getTime() - this._accPlayed.t;
                        this._accPlayed.acc += t,
                        this._accPlayed.t = 0,
                        ("ended" === e || this.ended) && (this._accPlayed.loopAcc = this._accPlayed.acc)
                    }
                }
            }, {
                key: "checkBuffer",
                value: function(e) {
                    var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        startDiff: 0,
                        endDiff: 0
                    }) || {}
                      , n = t.startDiff
                      , i = void 0 === n ? 0 : n
                      , r = t.endDiff
                      , o = void 0 === r ? 0 : r
                      , a = this.media.buffered;
                    if (!a || 0 === a.length || !this.duration)
                        return !0;
                    for (var s = e || this.media.currentTime || .2, l = a.length, u = 0; u < l; u++)
                        if (a.start(u) + i <= s && a.end(u) - o > s)
                            return !0;
                    return !1
                }
            }, {
                key: "resizePosition",
                value: function() {
                    var e = this.videoPos
                      , t = e.vy
                      , n = e.vx
                      , i = e.h
                      , r = e.w
                      , o = this.videoPos.rotate;
                    if (!(o < 0 && i < 0 && r < 0)) {
                        var a = this.videoPos._pi;
                        if (!a && this.media.videoHeight && (a = this.media.videoWidth / this.media.videoHeight * 100),
                        a) {
                            this.videoPos.pi = a;
                            var s = {
                                rotate: o = o < 0 ? 0 : o
                            }
                              , l = 0
                              , u = 0
                              , c = 1
                              , h = Math.abs(o / 90)
                              , d = this.root
                              , f = this.innerContainer
                              , p = d.offsetWidth
                              , g = f ? f.offsetHeight : d.offsetHeight
                              , m = g
                              , v = p;
                            if (h % 2 == 0)
                                c = i > 0 ? 100 / i : r > 0 ? 100 / r : 1,
                                s.scale = c,
                                l = t > 0 ? (100 - i) / 2 - t : 0,
                                s.y = 2 === h ? 0 - l : l,
                                u = n > 0 ? (100 - r) / 2 - n : 0,
                                s.x = 2 === h ? 0 - u : u,
                                this.media.style.width = "".concat(v, "px"),
                                this.media.style.height = "".concat(m, "px");
                            else if (h % 2 == 1) {
                                m = p;
                                var y = g - p;
                                u = -y / 2 / (v = g) * 100,
                                s.x = 3 === h ? u + t / 2 : u - t / 2,
                                l = y / 2 / m * 100,
                                s.y = 3 === h ? l + n / 2 : l - n / 2,
                                s.scale = c,
                                this.media.style.width = "".concat(v, "px"),
                                this.media.style.height = "".concat(m, "px")
                            }
                            var _ = U.getTransformStyle(s, this.media.style.transform || this.media.style.webkitTransform);
                            this.media.style.transform = _,
                            this.media.style.webkitTransform = _
                        }
                    }
                }
            }, {
                key: "position",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        h: 0,
                        y: 0,
                        x: 0,
                        w: 0
                    };
                    if (this.media && e && e.h) {
                        var t = this.videoPos;
                        t.h = 100 * e.h || 0,
                        t.w = 100 * e.w || 0,
                        t.vx = 100 * e.x || 0,
                        t.vy = 100 * e.y || 0,
                        this.resizePosition()
                    }
                }
            }, {
                key: "setConfig",
                value: function(e) {
                    var t = this;
                    e && Object.keys(e).map((function(n) {
                        if ("plugins" !== n) {
                            t.config[n] = e[n];
                            var i = t.plugins[n.toLowerCase()];
                            i && "Function" === U.typeOf(i.setConfig) && i.setConfig(e[n])
                        }
                    }
                    ))
                }
            }, {
                key: "playNext",
                value: function(e) {
                    var t = this;
                    this.resetState(),
                    this.setConfig(e),
                    this._currentTime = 0,
                    this._duration = 0,
                    fe(this, "playnext", (function() {
                        t.start(),
                        t.emit("playnext", e)
                    }
                    ))
                }
            }, {
                key: "resize",
                value: function() {
                    var e = this;
                    if (this.media && this.root) {
                        var t = this.root.getBoundingClientRect();
                        this.sizeInfo.width = t.width,
                        this.sizeInfo.height = t.height,
                        this.sizeInfo.left = t.left,
                        this.sizeInfo.top = t.top;
                        var n = this.media
                          , i = n.videoWidth
                          , r = n.videoHeight
                          , o = this.config
                          , a = o.fitVideoSize
                          , s = o.videoFillMode;
                        if ("fill" !== s && "cover" !== s && "contain" !== s || this.setAttribute("data-xgfill", s),
                        r && i) {
                            this._videoHeight = r,
                            this._videoWidth = i;
                            var l = this.controls && this.innerContainer ? this.controls.root.getBoundingClientRect().height : 0
                              , u = t.width
                              , c = t.height - l
                              , h = parseInt(i / r * 1e3, 10)
                              , d = parseInt(u / c * 1e3, 10)
                              , f = u
                              , p = c
                              , g = {};
                            "auto" === a && d > h || "fixWidth" === a ? (p = u / h * 1e3,
                            this.config.fluid ? g.paddingTop = "".concat(100 * p / f, "%") : g.height = "".concat(p + l, "px")) : ("auto" === a && d < h || "fixHeight" === a) && (f = h * c / 1e3,
                            g.width = "".concat(f, "px")),
                            this.fullscreen || this.cssfullscreen || Object.keys(g).forEach((function(t) {
                                e.root.style[t] = g[t]
                            }
                            )),
                            ("fillHeight" === s && d < h || "fillWidth" === s && d > h) && this.setAttribute("data-xgfill", "cover");
                            var m = {
                                videoScale: h,
                                vWidth: f,
                                vHeight: p,
                                cWidth: f,
                                cHeight: p + l
                            };
                            this.resizePosition(),
                            this.emit("video_resize", m)
                        }
                    }
                }
            }, {
                key: "updateObjectPosition",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    this.media.updateObjectPosition ? this.media.updateObjectPosition(e, t) : this.media.style.objectPosition = "".concat(100 * e, "% ").concat(100 * t, "%")
                }
            }, {
                key: "setState",
                value: function(e) {
                    F.logInfo("setState", "state from:".concat(Je[this.state], " to:").concat(Je[e])),
                    this._state = e
                }
            }, {
                key: "_preProcessUrl",
                value: function(e, t) {
                    var n = this.config
                      , i = n.preProcessUrl
                      , r = n.preProcessUrlOptions
                      , o = Object.assign({}, r, t);
                    return U.isBlob(e) || "function" != typeof i ? {
                        url: e
                    } : i(e, o)
                }
            }, {
                key: "_seekToStartTime",
                value: function() {
                    this.__startTime > 0 && this.duration > 0 && (this.currentTime = this.__startTime > this.duration ? this.duration : this.__startTime,
                    this.__startTime = -1)
                }
            }, {
                key: "state",
                get: function() {
                    return this._state
                }
            }, {
                key: "isFullscreen",
                get: function() {
                    return this.fullscreen
                }
            }, {
                key: "isCssfullScreen",
                get: function() {
                    return this.cssfullscreen
                }
            }, {
                key: "hasStart",
                get: function() {
                    return this._hasStart
                },
                set: function(e) {
                    "boolean" == typeof e && (this._hasStart = e,
                    !1 === e && this.setState(2),
                    this.emit("hasstart"))
                }
            }, {
                key: "isPlaying",
                get: function() {
                    return 6 === this._state || 7 === this._state
                },
                set: function(e) {
                    e ? this.setState(6) : this._state >= 6 && this.setState(4)
                }
            }, {
                key: "definitionList",
                get: function() {
                    return this.config && this.config.definition && this.config.definition.list || []
                },
                set: function(e) {
                    var t = this
                      , n = this.config.definition
                      , i = null
                      , r = null;
                    n.list = e,
                    this.emit("resourceReady", e),
                    e.forEach((function(e) {
                        var o;
                        (null === (o = t.curDefinition) || void 0 === o ? void 0 : o.definition) === e.definition && (i = e),
                        n.defaultDefinition === e.definition && (r = e)
                    }
                    )),
                    !r && e.length > 0 && (r = e[0]),
                    i ? this.changeDefinition(i) : r && this.changeDefinition(r)
                }
            }, {
                key: "videoFrameInfo",
                get: function() {
                    var e = {
                        total: 0,
                        dropped: 0,
                        corrupted: 0,
                        droppedRate: 0,
                        droppedDuration: 0
                    };
                    if (!this.media || !this.media.getVideoPlaybackQuality)
                        return e;
                    var t = this.media.getVideoPlaybackQuality();
                    return e.dropped = t.droppedVideoFrames || 0,
                    e.total = t.totalVideoFrames || 0,
                    e.corrupted = t.corruptedVideoFrames || 0,
                    e.total > 0 && (e.droppedRate = e.dropped / e.total * 100,
                    e.droppedDuration = parseInt(this.cumulateTime / e.total * e.dropped, 0)),
                    e
                }
            }, {
                key: "lang",
                get: function() {
                    return this.config.lang
                },
                set: function(e) {
                    0 !== Ye.langKeys.filter((function(t) {
                        return t === e
                    }
                    )).length || "zh" === e ? (this.config.lang = e,
                    Me.setLang(e, this)) : console.error("Sorry, set lang fail, because the language [".concat(e, "] is not supported now, list of all supported languages is [").concat(Ye.langKeys.join(), "] "))
                }
            }, {
                key: "i18n",
                get: function() {
                    var e = this.config.lang;
                    return "zh" === e && (e = "zh-cn"),
                    this.__i18n.lang[e] || this.__i18n.lang.en
                }
            }, {
                key: "i18nKeys",
                get: function() {
                    return this.__i18n.textKeys || {}
                }
            }, {
                key: "version",
                get: function() {
                    return Q
                }
            }, {
                key: "playerId",
                get: function() {
                    return this._pluginInfoId
                }
            }, {
                key: "url",
                get: function() {
                    return this.__url || this.config.url
                },
                set: function(e) {
                    this.__url = e
                }
            }, {
                key: "poster",
                get: function() {
                    return this.plugins.poster ? this.plugins.poster.config.poster : this.config.poster
                },
                set: function(e) {
                    this.plugins.poster && this.plugins.poster.update(e)
                }
            }, {
                key: "readyState",
                get: function() {
                    return D(t, "readyState", this, 1)
                }
            }, {
                key: "error",
                get: function() {
                    var e = D(t, "error", this, 1);
                    return this.i18n[e] || e
                }
            }, {
                key: "networkState",
                get: function() {
                    return D(t, "networkState", this, 1)
                }
            }, {
                key: "fullscreenChanging",
                get: function() {
                    return !(null === this._fullScreenOffset)
                }
            }, {
                key: "cumulateTime",
                get: function() {
                    var e = this._accPlayed
                      , t = e.acc
                      , n = e.t;
                    return n ? (new Date).getTime() - n + t : t
                }
            }, {
                key: "zoom",
                get: function() {
                    return this.config.zoom
                },
                set: function(e) {
                    this.config.zoom = e
                }
            }, {
                key: "videoRotateDeg",
                get: function() {
                    return this.videoPos.rotate
                },
                set: function(e) {
                    (e = U.convertDeg(e)) % 90 == 0 && e !== this.videoPos.rotate && (this.videoPos.rotate = e,
                    this.resizePosition())
                }
            }, {
                key: "avgSpeed",
                get: function() {
                    return ot
                },
                set: function(e) {
                    ot = e
                }
            }, {
                key: "realTimeSpeed",
                get: function() {
                    return rt
                },
                set: function(e) {
                    rt = e
                }
            }, {
                key: "offsetCurrentTime",
                get: function() {
                    return this._offsetInfo.currentTime || 0
                },
                set: function(e) {
                    this._offsetInfo.currentTime = e
                }
            }, {
                key: "offsetDuration",
                get: function() {
                    return this._offsetInfo.duration || 0
                },
                set: function(e) {
                    this._offsetInfo.duration = e || 0
                }
            }, {
                key: "hook",
                value: function(e, t) {
                    return ae.call.apply(ae, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "useHooks",
                value: function(e, t) {
                    return se.call.apply(se, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "removeHooks",
                value: function(e, t) {
                    return le.call.apply(le, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "usePluginHooks",
                value: function(e, t, n) {
                    for (var i = arguments.length, r = new Array(i > 3 ? i - 3 : 0), o = 3; o < i; o++)
                        r[o - 3] = arguments[o];
                    return ue.call.apply(ue, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "removePluginHooks",
                value: function(e, t, n) {
                    for (var i = arguments.length, r = new Array(i > 3 ? i - 3 : 0), o = 3; o < i; o++)
                        r[o - 3] = arguments[o];
                    return ce.call.apply(ce, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "setUserActive",
                value: function(e, t) {
                    var n;
                    "boolean" == typeof t && t !== this.muted && (this.addInnerOP("volumechange"),
                    U.typeOf(t) === Boolean && (this.muted = t)),
                    null === (n = at) || void 0 === n || n.setActive(this.playerId, e)
                }
            }], [{
                key: "version",
                get: function() {
                    return Q
                }
            }, {
                key: "debugger",
                get: function() {
                    return F.config.debug
                },
                set: function(e) {
                    F.config.debug = e
                }
            }, {
                key: "instManager",
                get: function() {
                    return at
                },
                set: function(e) {
                    at = e
                }
            }, {
                key: "getCurrentUserActivePlayerId",
                value: function() {
                    var e;
                    return null === (e = at) || void 0 === e ? void 0 : e.getActiveId()
                }
            }, {
                key: "setCurrentUserActive",
                value: function(e, t) {
                    var n;
                    null === (n = at) || void 0 === n || n.setActive(e, t)
                }
            }, {
                key: "isHevcSupported",
                value: function() {
                    return K.isHevcSupported()
                }
            }, {
                key: "probeConfigSupported",
                value: function(e) {
                    return K.probeConfigSupported(e)
                }
            }, {
                key: "install",
                value: function(e, n) {
                    t.plugins || (t.plugins = {}),
                    t.plugins[e] || (t.plugins[e] = n)
                }
            }, {
                key: "use",
                value: function(e, n) {
                    t.plugins || (t.plugins = {}),
                    t.plugins[e] = n
                }
            }])
        }(J);
        S(st, "defaultPreset", null),
        S(st, "XgVideoProxy", null),
        st.instManager = nt.getInstance();
        var lt = Object.defineProperty
          , ut = (e, t, n) => ( (e, t, n) => t in e ? lt(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        class ct {
            constructor() {
                this.__handlers = [],
                window.ResizeObserver && (this.observer = new window.ResizeObserver((e => {
                    this.__trigger(e)
                }
                )))
            }
            addObserver(e, t) {
                if (!this.observer)
                    return;
                this.observer && this.observer.observe(e);
                const {__handlers: n} = this;
                let i = -1;
                for (let t = 0; t < n.length; t++)
                    n[t] && e === n[t].target && (i = t);
                i > -1 ? this.__handlers[i].handler.push(t) : this.__handlers.push({
                    target: e,
                    handler: [t]
                })
            }
            unObserver(e) {
                let t = -1;
                this.__handlers.map(( (n, i) => {
                    e === n.target && (t = i)
                }
                )),
                this.observer && this.observer.unobserve(e),
                t > -1 && this.__handlers.splice(t, 1)
            }
            destroyObserver() {
                this.observer && this.observer.disconnect(),
                this.observer = null,
                this.__handlers = []
            }
            __runHandler(e, t) {
                const {__handlers: n} = this;
                for (let i = 0; i < n.length; i++)
                    if (n[i] && e === n[i].target) {
                        n[i].handler && n[i].handler.forEach((n => {
                            try {
                                n(e, t)
                            } catch (e) {
                                console.error(e)
                            }
                        }
                        ));
                        break
                    }
            }
            __trigger(e) {
                e.map((e => {
                    const t = e.contentRect;
                    this.__runHandler(e.target, t)
                }
                ))
            }
        }
        let ht = null;
        const dt = "change"
          , ft = "update"
          , pt = "error"
          , gt = [{
            code: 0,
            msg: "SUCCESS"
        }, {
            code: 1,
            msg: "LOAD_ERROR",
            type: "LOAD_ERROR"
        }, {
            code: 2,
            msg: "PARSER_ERROR",
            type: "PARSER_ERROR"
        }, {
            code: 3,
            msg: "FORMAT_NOT_SUPPORTED",
            type: "FORMAT_NOT_SUPPORTED"
        }, {
            code: 4,
            msg: "ID_OR_LANGUAGE_NOT_EXIST",
            type: "ID_OR_LANGUAGE_NOT_EXIST"
        }, {
            code: 5,
            msg: "PARAMETERS_ERROR",
            type: "PARAMETERS_ERROR"
        }, {
            code: 6,
            msg: "ABORT",
            type: "ABORT"
        }, {
            code: 7,
            msg: "UNKNOWN",
            type: "UNKNOWN"
        }, {
            code: 8,
            msg: "DATA_ERROR:subtitle.url is null",
            type: "DATA_ERROR"
        }, {
            code: 9,
            msg: "DATA_ERROR:subtitle.url length is 0",
            type: "DATA_ERROR"
        }];
        class mt extends Error {
            constructor(e, t, n, i) {
                e || (e = gt[t || 7].msg),
                super(e),
                this.message = "",
                this.code = t || 7,
                this.message = e,
                this.type = gt[t || 7].msg,
                this.orgError = n || null,
                this.data = i || null
            }
        }
        function vt(e, t={}, n) {
            const i = {
                code: gt[e].code,
                message: gt[e].msg,
                id: "",
                language: ""
            };
            return Object.keys(t).map((e => {
                i[e] = t[e]
            }
            )),
            i
        }
        class yt {
            constructor() {
                let e, t;
                const n = new Promise(( (n, i) => {
                    e = n,
                    t = i
                }
                ));
                return n.resolve = function(t) {
                    e(t),
                    n.state = "fulfilled"
                }
                ,
                n.reject = function(e) {
                    t(e),
                    n.state = "rejected",
                    n.isBreak = "DESTROYED" === e
                }
                ,
                n.state = "pending",
                n
            }
            resolve(e) {}
            reject(e) {}
        }
        function _t(e, t) {
            if (!e)
                return !1;
            if (e.classList)
                return Array.prototype.some.call(e.classList, (e => e === t));
            {
                const n = e.className && "object" == typeof e.className ? e.getAttribute("class") : e.className;
                return n && !!n.match(new RegExp("(\\s|^)" + t + "(\\s|$)"))
            }
        }
        function Tt(e, t) {
            e && (e.classList ? t.replace(/(^\s+|\s+$)/g, "").split(/\s+/g).forEach((t => {
                t && e.classList.add(t)
            }
            )) : _t(e, t) || (e.className && "object" == typeof e.className ? e.setAttribute("class", e.getAttribute("class") + " " + t) : e.className += " " + t))
        }
        function bt(e) {
            const t = Object.prototype.toString.call(e).match(/([^\s.*]+)(?=]$)/g);
            return t ? t[0] : ""
        }
        function St(e="div", t="", n={}, i="") {
            const r = document.createElement(e);
            return r.className = i,
            r.innerHTML = t,
            Object.keys(n).forEach((t => {
                const i = t
                  , o = n[t];
                "video" === e || "audio" === e || "live-video" === e ? o && r.setAttribute(i, o) : r.setAttribute(i, o)
            }
            )),
            r
        }
        function wt(e) {
            return e && e instanceof window.HTMLMediaElement
        }
        function kt(e) {
            const t = [];
            if (e && "String" === bt(e))
                t.push({
                    url: [e],
                    index: 0,
                    start: -1,
                    end: -1
                });
            else if ("Array" === bt(e)) {
                const n = e;
                if (0 === n.length)
                    return t;
                "String" === bt(n[0]) ? t.push({
                    url: e,
                    index: 0,
                    start: -1,
                    end: -1
                }) : n.forEach(( (e, n) => {
                    const i = e;
                    t.push({
                        url: i.url || i.src || "",
                        index: n,
                        start: i.start || -1,
                        end: i.end || -1
                    })
                }
                ))
            }
            return t
        }
        function Ct(e, t, n) {
            const i = t.length;
            if (i < 1)
                return -1;
            if (t[n = n < 0 ? 0 : n >= i ? i - 1 : n].start <= e && e < t[n].end)
                return n;
            {
                let r = t[n].end <= e ? n + 1 : 0;
                for (; r < i; r++) {
                    if (t[r].start <= e && e < t[r].end)
                        return r;
                    if (e > t[r].end && r + 1 < i && e < t[r + 1].start)
                        return -1;
                    if (e > t[r].end && r + 1 >= i)
                        return -1
                }
                return -1
            }
        }
        function Mt(e, t, n) {
            const i = t.length;
            if (i < 1)
                return [];
            const r = [];
            if ((n = n < 0 ? 0 : n >= i ? i - 1 : n) < i) {
                let o = t[n].end <= e ? n : 0;
                for (; o < i && (t[o].start <= e && e < t[o].end && r.push(o),
                !(e < t[o].start)); o++)
                    ;
            }
            return r
        }
        function Pt(e, t) {
            return !!(e.id && t.id && e.id === t.id || e.language && t.language && e.language === t.language)
        }
        function Rt(e) {
            return null !== e && "" !== e.trim() && /^[a-zA-Z]+$/.test(e)
        }
        function xt(e) {
            return !!/[\x21-\x2f\x3a-\x40\x5b-\x60\x7B-\x7F]/.test(e)
        }
        function Et(e) {
            return !!/[\u3002|\uff1f|\uff01|\uff0c|\u3001|\uff1b|\uff1a|\u201c|\u201d|\u2018|\u2019|\uff08|\uff09|\u300a|\u300b|\u3008|\u3009|\u3010|\u3011|\u300e|\u300f|\u300c|\u300d|\ufe43|\ufe44|\u3014|\u3015|\u2026|\u2014|\uff5e|\ufe4f|\uffe5]/.test(e)
        }
        const Dt = /^WEBVTT/
          , Lt = /^STYLE+$/
          , It = /^\:\:cue/
          , Ot = /^}+$/
          , At = /^\[Script Info\].*/
          , Gt = [/[0-9]{1,3}:[0-9]{2}:[0-9]{2}\.[0-9]{1,3}-->[0-9]{1,3}:[0-9]{2}:[0-9]{2}\.[0-9]{1,3}/, /[0-9]{1,3}:[0-9]{2}\.[0-9]{1,3}-->[0-9]{1,3}:[0-9]{2}\.[0-9]{1,3}/, /[0-9]{1,2}\.[0-9]{1,3}-->[0-9]{1,2}\.[0-9]{1,3}/]
          , Nt = /^Format:\s/
          , Bt = /^Style:\s/
          , $t = /^Dialogue:\s/;
        function Ft(e) {
            const t = e.length;
            return 3 === t ? (60 * (60 * Number(e[0]) + Number(e[1])) * 1e3 + 1e3 * Number(e[2])) / 1e3 : 2 === t ? (60 * Number(e[0]) * 1e3 + 1e3 * Number(e[1])) / 1e3 : Number(e[0])
        }
        function Ht(e) {
            return /^(\-|\+)?\d+(\.\d+)?$/.test(e)
        }
        function Ut(e, t) {
            return e >= 0 && e < t.length ? t[e] : ""
        }
        class Vt {
            static parseJson(e) {
                const t = [];
                let n = 0;
                for (let i = 0; i < e.length; i++) {
                    if (n >= 50 && (n = 0),
                    0 === n) {
                        const n = {
                            start: e[i].start,
                            list: [e[i]],
                            end: e[i].end
                        };
                        t.push(n)
                    } else
                        t[t.length - 1].list.push(e[i]),
                        t[t.length - 1].end = e[i].end;
                    n++
                }
                return t
            }
            static parse(e, t) {
                const n = Vt.checkFormat(e);
                if (n)
                    try {
                        let i = {
                            list: [],
                            styles: []
                        };
                        "ass" === n ? i = Vt.parseASS(e) : "vtt" === n && (i = Vt.parseVTT(e)),
                        t({
                            format: n,
                            list: i.list,
                            styles: i.styles
                        })
                    } catch (e) {
                        console.error(e),
                        t({
                            format: n
                        }, new mt(`parse_error_${e.message}`,2,e))
                    }
                else
                    t({
                        format: "unknown"
                    }, new mt("unknown_format",3))
            }
            static parseASSItem(e="", t=[]) {
                const n = e.split(",")
                  , i = {};
                let r = "";
                try {
                    const e = n.length - t.length;
                    return r = e > 0 ? n.splice(t.length - 1, e + 1).join(",") + "" : n[n.length - 1] + "",
                    r = r.replace(/\\n+/g, ""),
                    n[t.length - 1] = r,
                    t.map(( (e, t) => {
                        "end" === e || "start" === e ? i[e] = Ft(n[t].split(":")) : "text" === e ? i[e] = [n[t]] : "layer" === e ? (i[e] = [n[t]],
                        i.textTag = [n[t]]) : i[e] = "style" === e ? [n[t]] : Number(n[t]) ? Number(n[t]) : n[t]
                    }
                    )),
                    i
                } catch (e) {
                    return console.error(e),
                    {}
                }
            }
            static parseASS(e) {
                const t = e.split("\n")
                  , n = [];
                let i = 0
                  , r = 0;
                const o = [];
                let a = []
                  , s = null;
                for (; i < t.length; ) {
                    if (Nt.test(t[i]))
                        a = t[i].replace(Nt, "").replace(/\s+/g, "").split(","),
                        a = a.map((e => e.toLocaleLowerCase()));
                    else if (Bt.test(t[i]))
                        o.push(t[i].replace(Bt, "").replace(/\s+/g, ""));
                    else if ($t.test(t[i])) {
                        const e = Vt.parseASSItem(t[i].replace($t, ""), a);
                        if (s && e.start === s.start && e.end === s.end)
                            try {
                                const {text: t=[], textTag: n=[], style: i} = s;
                                e.text.length > 0 && t.push(e.text[0]),
                                e.textTag.length > 0 && n.push(e.textTag[0]),
                                i && i.push(e.style[0])
                            } catch (e) {
                                console.error(e)
                            }
                        else {
                            s = e;
                            let t = null;
                            r % 50 == 0 ? (t = {
                                start: s.start,
                                end: s.end,
                                list: []
                            },
                            t.list.push(s),
                            n.push(t)) : (t = n[n.length - 1],
                            t.end = s.end,
                            t.list.push(s)),
                            r++
                        }
                    }
                    i++
                }
                return {
                    list: n,
                    styles: []
                }
            }
            static parseVTTStyle(e, t) {
                const n = e.split(":");
                if (n.length > 1) {
                    const e = n[0].trim().split("-");
                    let i = "";
                    e.length > 1 ? e.map(( (e, t) => {
                        i += 0 === t ? e : e.charAt(0).toUpperCase() + e.slice(1)
                    }
                    )) : i = e[0],
                    t[i] = n[1].trim().replace(/;$/, "")
                }
                return t
            }
            static parseVTT(e) {
                const t = (e = e.replace(Dt, "")).split("\n")
                  , n = [];
                let i = 0
                  , r = 0
                  , o = null
                  , a = !1
                  , s = !1
                  , l = null
                  , u = null;
                const c = [];
                for (; i < t.length; ) {
                    const e = Ut(i, t).trim();
                    if (!e || a && Ht(e))
                        a = !e;
                    else if (It.test(e) && Lt.test(Ut(i - 1, t).trim())) {
                        s = !0;
                        const t = /\((.+?)\)/g.exec(e);
                        u = t ? t[1] : "",
                        l = ""
                    } else if (s)
                        Ot.test(e) ? (c.push({
                            key: u || "",
                            style: l || ""
                        }),
                        l = null,
                        u = null,
                        s = !1) : l += e;
                    else if (e) {
                        a = !1;
                        const e = this.checkIsTime(t[i]);
                        if (e) {
                            const t = this.parseVttTime(e);
                            if (!o || t.start !== o.start || t.end !== o.end) {
                                o = {
                                    ...t,
                                    text: [],
                                    textTag: []
                                },
                                o.text = [],
                                o.textTag = [];
                                let e = null;
                                r % 50 == 0 ? (e = {
                                    start: o.start,
                                    end: o.end,
                                    list: []
                                },
                                e.list.push(o),
                                n.push(e)) : (e = n[n.length - 1],
                                e.end = o.end,
                                e.list.push(o)),
                                r++
                            }
                        } else if (o) {
                            const {text: e, textTag: n} = o
                              , r = this.parseVttText(t[i]);
                            e.push(r.text),
                            n.push(r.tag)
                        }
                        a = !1
                    }
                    i++
                }
                return {
                    list: n,
                    styles: c
                }
            }
            static checkIsTime(e) {
                e = e.replace(/\s+/g, "");
                let t = 0
                  , n = null;
                for (; t < Gt.length && (n = Gt[t].exec(e),
                !n); )
                    t++;
                return n ? n[0] : null
            }
            static parseVttText(e) {
                const t = /^(<?.+?>)/g.exec(e);
                let n = ""
                  , i = "default";
                if (t) {
                    i = t[0].replace(/\<|\>|\&/g, "");
                    const r = RegExp(`^<${i}>(([\\s\\S])*?)</${i}>$`).exec(e);
                    r ? n = r[1] : (n = e,
                    i = "")
                } else
                    n = e;
                const r = /<(\w+).(\w+)>/g;
                let o = r.exec(n);
                for (; o && o.length > 2; )
                    n = n.replace(o[0], `<${o[1]} class="${o[2]}">`),
                    o = r.exec(n);
                return {
                    tag: i,
                    text: n.replace(/\\n+/g, "<br/>")
                }
            }
            static parseVttTime(e) {
                const t = e.split("--\x3e");
                let n = 0
                  , i = 0;
                if (2 === t.length) {
                    const e = t[0].split(":")
                      , r = t[1].split(":");
                    n = Ft(e),
                    i = Ft(r)
                }
                return {
                    start: n,
                    end: i,
                    time: e
                }
            }
            static isVTT(e) {
                return Dt.test(e)
            }
            static isASS(e) {
                return At.test(e)
            }
            static checkFormat(e) {
                return e ? Dt.test(e) ? "vtt" : At.test(e) ? "ass" : "" : ""
            }
        }
        function jt(e, t) {
            const {status: n="", statusText: i=""} = e;
            return `${t}_${n}_${i}`
        }
        function zt(e, t, n) {
            const {url: i="", method: r="GET", type: o="arraybuffer", timeout: a=1e4, data: s={}} = e
              , l = new window.XMLHttpRequest
              , u = r.toUpperCase()
              , c = [];
            if (o && (l.responseType = o),
            a && (l.timeout = a),
            Object.keys(s).forEach((e => {
                c.push(`k=${s[e]}`)
            }
            )),
            l.onload = () => {
                200 === l.status || 206 === l.status ? n({
                    context: t,
                    res: l,
                    type: "success"
                }) : n({
                    context: t,
                    res: l,
                    type: "error",
                    error: new mt(jt(l, "response_error"),1)
                })
            }
            ,
            l.onerror = e => {
                n({
                    context: t,
                    res: l,
                    type: "error",
                    error: new mt("loaderror",1)
                })
            }
            ,
            l.ontimeout = e => {
                n({
                    context: t,
                    res: l,
                    type: "error",
                    error: new mt("timeout",1)
                })
            }
            ,
            l.onabort = () => {
                n({
                    context: t,
                    res: l,
                    type: "error",
                    error: new mt("abort",1)
                })
            }
            ,
            "GET" === u)
                l.open(u, `${i}`),
                l.send();
            else {
                if ("post" !== u)
                    throw n({
                        context: t,
                        res: l,
                        type: "error",
                        error: new mt(`xhr ${u} is not supported`,1)
                    }),
                    new mt(`xhr ${u} is not supported`,1);
                l.open(u, i),
                l.setRequestHeader("Content-type", "application/x-www-form-urlencoded"),
                l.send(c.join("&"))
            }
        }
        function Xt(e, t, n) {
            "json" === t ? n({
                styles: [],
                list: Vt.parseJson(e),
                format: "json"
            }) : "string" === t && Vt.parse(e, n)
        }
        function Kt(e, t, n) {
            let i = [];
            n || (n = new yt),
            i = "String" === bt(e) ? [e] : [...e];
            const r = i.shift() || ""
              , o = e => {
                const {res: r, error: a} = e;
                if (a)
                    i.length > 0 ? zt({
                        url: i.shift() || "",
                        type: "text"
                    }, t, o) : n.reject(a);
                else if (r) {
                    const {response: e} = r;
                    Xt(e, "string", ( (e, t) => {
                        t ? n.reject(t) : n.resolve(e)
                    }
                    ))
                }
            }
            ;
            return zt({
                url: r,
                type: "text"
            }, t, o),
            n
        }
        let Qt = !1;
        class Wt extends A {
            constructor(e) {
                super(),
                ut(this, "_onPause", ( () => {
                    this.stopRender()
                }
                )),
                ut(this, "_onPlay", ( () => {
                    this._curRenderTask.length > 0 && this.startRender(-1)
                }
                )),
                ut(this, "_onTimeupdate", ( () => {
                    if (!this._isOpen)
                        return;
                    if (this.config.domRender) {
                        const e = this.player.video ? this.player.video : this.player
                          , {videoWidth: t, videoHeight: n} = e;
                        !this._videoMeta.scale && t && n && this._onResize(this.player.root)
                    }
                    const e = this._getPlayerCurrentTime();
                    Math.round(Math.abs(1e3 * e - this._ctime)) < 200 || (this._ctime = 1e3 * e,
                    this.currentText && this.currentText.list && ("live" === this.config.updateMode ? this._liveUpdate(e) : this._update(e)))
                }
                )),
                ut(this, "_onResize", (e => {
                    const {_videoMeta: t, config: n} = this;
                    if (n.domRender) {
                        if ((!e || !(e instanceof window.Element)) && (e = this.player.root),
                        this._iId && (window.clearTimeout(this._iId),
                        this._iId = null),
                        !t.scale) {
                            if (!this.player.video)
                                return;
                            const {videoWidth: e, videoHeight: n} = this.player.video;
                            if (!e || !n)
                                return;
                            t.videoWidth = e,
                            t.videoHeight = n,
                            t.scale = parseInt(n / e * 100, 10)
                        }
                        this.__startResize(e)
                    }
                }
                )),
                ut(this, "_onCoreEvents", (e => {
                    try {
                        switch (e.eventName) {
                        case "core.subtitlesegments":
                            this._onSubtitleSegment(e.list || []);
                            break;
                        case "core.subtitleplaylist":
                            this._onSubtitlePlaylist(e.list || []);
                            break;
                        case "core.seipayloadtime":
                            this._onCoreSeiintime(e)
                        }
                    } catch (e) {
                        console.error(e)
                    }
                }
                )),
                ut(this, "startRender", (e => {
                    if (e > 0 && this._renderIntervalId && (window.cancelAnimationFrame(this._renderIntervalId),
                    this._renderIntervalId = -1),
                    !this.textTrack)
                        return;
                    const {_curRenderTask: t} = this;
                    this._lastTimeStamp = (new Date).getTime();
                    const n = [];
                    t.forEach(( (t, i) => {
                        const {lastTime: r, wordList: o, interval: a, dom: s, ids: l} = t;
                        if (e < 0 || this._lastTimeStamp < 0 || this._lastTimeStamp - r >= a) {
                            const e = o.shift();
                            e && s.appendData(e),
                            t.lastTime = this._lastTimeStamp
                        }
                        o.length < 1 && n.push({
                            index: i,
                            ids: l
                        })
                    }
                    )),
                    this._log(">>>>_renderByWords emptyArr", n.length, t.length),
                    n.forEach((e => {
                        t.splice(e.index, 1),
                        this._log(">>>_renderByWords remove emptyArr", e.index, t.length)
                    }
                    )),
                    t.length > 0 && (this._renderIntervalId = window.requestAnimationFrame(this.startRender))
                }
                )),
                ut(this, "destroy", ( () => {
                    this.detachPlayer(),
                    this.removeAllListeners(),
                    this.player = null,
                    this.textTrack = null,
                    this._curRenderTask = [],
                    this.stopRender()
                }
                )),
                Qt = function() {
                    const e = navigator.userAgent
                      , t = /(?:Windows Phone)/.test(e)
                      , n = /(?:SymbianOS)/.test(e) || t
                      , i = /(?:Android)/.test(e)
                      , r = /(?:Firefox)/.test(e)
                      , o = /(?:iPad|PlayBook)/.test(e) || i && !/(?:Mobile)/.test(e) || r && /(?:Tablet)/.test(e);
                    return /(?:iPhone)/.test(e) && !o || i || n || o
                }(),
                this.currentText = null,
                this.currentExtText = null,
                this.textTrack = [],
                this._cid = -1,
                this._gid = -1,
                this._cids = [],
                this._iId = null,
                this._iC = 0,
                this.player = null,
                this.root = null,
                this.config = {
                    line: "double",
                    bottom: 0,
                    mode: "stroke",
                    defaultOpen: !1,
                    baseSizeX: 49,
                    baseSizeY: 28,
                    minSize: 16,
                    minMobileSize: 13,
                    fitVideo: !0,
                    offsetBottom: 2,
                    fontColor: "#fff",
                    domRender: !1,
                    updateMode: "vod",
                    renderMode: "",
                    debugger: !1
                },
                this._ctime = 0,
                this._loadingTrack = {},
                this.seiTime = 0,
                this.lastSeiTime = 0,
                this._curTexts = [],
                this._curRenderTask = [],
                this._renderIntervalId = -1,
                this._lastTimeStamp = -1,
                Object.keys(this.config).map((t => {
                    void 0 !== e[t] && null !== e[t] && (this.config[t] = e[t])
                }
                )),
                this._isOpen = this.config.defaultOpen || !1,
                this._videoMeta = {
                    scale: 0,
                    videoHeight: 0,
                    videoWidth: 0,
                    lwidth: 0,
                    lheight: 0,
                    vWidth: 0,
                    vHeight: 0,
                    vBottom: 0,
                    vLeft: 0,
                    marginBottom: 0
                },
                e.subTitles && "Array" === bt(e.subTitles) && (e.player && this.attachPlayer(e.player),
                this.setSubTitles(e.subTitles, this.config.defaultOpen))
            }
            get version() {
                return "0.2.1"
            }
            setSubTitles(e=[], t=!1, n=!0) {
                const i = this._isOpen || t;
                n && this.innerRoot && this.switchOff(),
                !e || e.length < 1 ? this.switchOff() : (this.currentText = null,
                this.textTrack = [],
                e.forEach((e => {
                    const t = {};
                    Object.keys(e).map((n => {
                        t[n] = e[n]
                    }
                    )),
                    t.url = kt(t.url),
                    t.isDefault && (this.currentText = t),
                    this.textTrack.push(t)
                }
                )),
                this._log("setSubTitles", i, this.textTrack),
                i && (this.currentText || (this.currentText = this.textTrack[0]),
                this.switch().catch((e => {
                    this.emitError(e),
                    this._log("[switch]", e)
                }
                ))),
                this._log(">>>this.currentText", i, this.currentText),
                this.currentText && this._loadTrack(this.currentText).then((e => {
                    this.addStyles(e)
                }
                )).catch((e => {
                    this.emitError(e),
                    this._log("[_loadTrack] errorsss", e)
                }
                )),
                this.emit("reset", {
                    type: "reset",
                    list: this.textTrack,
                    isOpen: i
                }))
            }
            updateSubTitle(e) {
                let t = -1;
                for (let n = 0; n < this.textTrack.length; n++)
                    if (Pt(e, this.textTrack[n])) {
                        t = n;
                        break
                    }
                if (this._log("updateSubTitle", t, e),
                t > -1) {
                    const n = Pt(this.currentText, this.textTrack[t]);
                    if (this._log("updateSubTitle", "_isCurrent", n, "this.isOpen", this.isOpen, this.currentText),
                    !n)
                        return;
                    const i = kt(e.url);
                    this.isOpen ? (i.forEach((e => {
                        this.textTrack[t].url.push(e)
                    }
                    )),
                    this._log("updateSubTitle _loadTrackUrls", this.textTrack[t]),
                    this._loadTrackUrls(this.currentText, 2)) : this.textTrack[t].url = i
                }
            }
            addStyles(e) {
                const {styles: t, format: n} = e;
                t && "vtt" === n && (t.map((e => {
                    e.key || (e.key = "xg-text-track-span")
                }
                )),
                function(e, t="") {
                    let n = "";
                    e.map((e => {
                        n += ` ${t} ${e.key} {${e.style}}`
                    }
                    ));
                    const i = document.createElement("style")
                      , r = document.head || document.getElementsByTagName("head")[0];
                    if (i.type = "text/css",
                    i.id = "ssss",
                    i.styleSheet) {
                        const e = function() {
                            try {
                                i.styleSheet.cssText = n
                            } catch {}
                        };
                        i.styleSheet.disabled ? setTimeout(e, 10) : e()
                    } else {
                        const e = document.createTextNode(n);
                        i.appendChild(e)
                    }
                    r.appendChild(i)
                }(t, "xg-text-track"))
            }
            attachPlayer(e) {
                if (this._log("attachPlayer"),
                !e || e === this.player)
                    return;
                this.player && this.detachPlayer();
                const {fontColor: t, mode: n, fitVideo: i, domRender: r} = this.config;
                this.player = e,
                r && (this.root = document.createElement("xg-text-track"),
                this.root.className = "xg-text-track",
                !this._isOpen && Tt(this.root, "text-track-hide"),
                !i && Tt(this.root, "text-track-no-fitvideo"),
                n && Tt(this.root, `text-track-${n}`),
                this.innerRoot = document.createElement("xg-text-track-inner"),
                this.root.appendChild(this.innerRoot),
                t && (this.root.style.color = t),
                this.currentText && ["language", "id", "label"].map((e => {
                    this.root.setAttribute(`data-${e}`, this.currentText[e] || "")
                }
                )),
                this.player.root.appendChild(this.root),
                function(e, t) {
                    ht || (ht = new ct),
                    ht.addObserver(e, t)
                }(e.root, this._onResize)),
                wt(e) ? (e.addEventListener("timeupdate", this._onTimeupdate),
                e.addEventListener("pause", this._onPause),
                e.addEventListener("play", this._onPlay)) : (this.player.on("destroy", this.destroy),
                this.player.on("timeupdate", this._onTimeupdate),
                this.player.on("pause", this._onPause),
                this.player.on("play", this._onPlay),
                this.player.on("core_event", this._onCoreEvents)),
                this._isOpen && this.switch().catch((e => {
                    this._log("[switch]", e)
                }
                ))
            }
            detachPlayer() {
                const {player: e, config: t} = this;
                e && (wt(e) ? (e.removeEventListener("timeupdate", this._onTimeupdate),
                e.removeEventListener("pause", this._onPause),
                e.removeEventListener("play", this._onPlay)) : (this.player.off("destroy", this.destroy),
                this.player.off("timeupdate", this._onTimeupdate),
                this.player.off("pause", this._onPause),
                this.player.off("play", this._onPlay),
                this.player.off("core_event", this._onCoreEvents)),
                t.domRender && (e.root && (function(e) {
                    ht && ht.unObserver(e)
                }(e.root, this._onResize),
                e.root.removeChild(this.root)),
                this.innerRoot = null,
                this.root = null),
                this.player = null)
            }
            switch(e={
                id: "",
                language: ""
            }) {
                return this._log("switch", e),
                this._loadingTrack = e,
                new Promise(( (t, n) => {
                    if (!e.id && !e.language) {
                        if (this.currentText)
                            return this._loadingTrack = {},
                            this._updateCurrent(this.currentText),
                            this.switchOn(),
                            void t({
                                message: "switch default subtitle success",
                                code: 0
                            });
                        {
                            const e = new mt("no default subtitle",5);
                            return this.emitError(e),
                            void n(e)
                        }
                    }
                    if (this.currentText && Pt(e, this.currentText))
                        this._loadingTrack = {},
                        this._updateCurrent(this.currentText),
                        this.switchOn(),
                        t(vt(0));
                    else {
                        let i = null;
                        this.__removeByTime(this._curTexts, 0);
                        for (let t = 0; t < this.textTrack.length; t++)
                            if (Pt(e, this.textTrack[t])) {
                                i = this.textTrack[t];
                                break
                            }
                        if (this._log("nextSubtitle", i),
                        i)
                            this._emitPlayerSwitch(this.currentText, i),
                            i.list ? (this._loadingTrack = {},
                            this._updateCurrent(i),
                            this.switchOn(),
                            t(vt(0))) : (this._log("this._loadTrack", i),
                            this._updateCurrent(i),
                            this._loadTrack(i).then((r => {
                                if (this.addStyles(r),
                                this._loadingTrack.id === i.id || this._loadingTrack.language === r.language)
                                    this._loadingTrack = {},
                                    this._updateCurrent(r),
                                    this.switchOn(),
                                    t(vt(0));
                                else {
                                    const t = new mt(`check _loadingTrack fail id: ${this._loadingTrack.id}  nextSubtitle:${r.id}`,6,null,e);
                                    this.emitError(t),
                                    n(t)
                                }
                            }
                            )).catch((e => {
                                this.emitError(e),
                                n(e)
                            }
                            )));
                        else {
                            const t = new mt(`The is no subtitle with id:[{${e.id}}] or language:[${e.language}]`,4,null,e);
                            this.emitError(t),
                            n(t)
                        }
                    }
                }
                ))
            }
            switchExt(e={
                id: "",
                language: ""
            }) {
                return new Promise(( (t, n) => {
                    if (e.id || e.language) {
                        let n = null;
                        for (let t = 0; t < this.textTrack.length; t++)
                            if (Pt(e, this.textTrack[t])) {
                                n = this.textTrack[t];
                                break
                            }
                        n && !Pt(n, this.currentText) && this._loadTrack(n).then((e => {
                            this.currentExtText = e,
                            t(vt(0))
                        }
                        )).catch((e => {
                            this.emitError(e)
                        }
                        ))
                    } else
                        this.currentExtText = null,
                        t(vt(0))
                }
                ))
            }
            emitError(e) {
                this.emit(pt, {
                    type: pt,
                    error: e
                })
            }
            switchOn() {
                this._log("switchOn"),
                this._isOpen = !0,
                this.show();
                const {id: e, language: t} = this.currentText;
                this.emit(dt, {
                    type: dt,
                    isOpen: !0,
                    id: e,
                    language: t,
                    texts: []
                })
            }
            switchOff() {
                if (this._isOpen = !1,
                this.hide(),
                !this.currentText)
                    return;
                const {id: e, language: t} = this.currentText;
                this.emit("off", {
                    type: "off",
                    id: e,
                    language: t,
                    texts: [],
                    isOpen: !1
                })
            }
            get isOpen() {
                return this._isOpen
            }
            _log(...e) {
                this.config.debugger && console.log("[xgSubtitle]", ...e)
            }
            _loadTrack(e) {
                this._log("_loadTrack", e.language, e);
                const t = new yt;
                let n = ""
                  , i = "";
                if (e.json ? (n = "json",
                i = e.json) : e.stringContent && (!e.url || 0 === e.url.length) && (n = "string",
                i = e.stringContent),
                i)
                    return Xt(i, n, ( (n, i) => {
                        i ? (this.emitError(i),
                        t.reject(i)) : (e.format = n.format,
                        e.styles = n.styles,
                        e.list = n.list,
                        t.resolve(e))
                    }
                    )),
                    t;
                const r = [...e.url];
                return 0 === r.length ? (t.resolve(e),
                t) : (Kt(r.splice(0, 1)[0].url, e).then((n => {
                    e.format = n.format,
                    e.styles = n.styles,
                    e.list || (e.list = []),
                    this._pushList(e.list, n.list),
                    r.length > 1 && this._loadTrackUrls(e, 2),
                    t.resolve(e)
                }
                )).catch((e => {
                    t.reject(e)
                }
                )),
                t)
            }
            _emitPlayerSwitch(e, t) {
                e && "live" === this.config.updateMode && (e.list = [],
                e.url = []);
                const n = {
                    lang: t.language,
                    ...t
                };
                this._log("emit subtile_switch ", t, n),
                this.emit(dt, {
                    type: dt,
                    error: null
                })
            }
            _loadTrackUrls(e, t, n) {
                const i = e.url.length
                  , r = i > t ? e.url.splice(0, t) : e.url.splice(0, i);
                let o = r.length;
                this._log("_loadTrackUrls", e.language, i, r.length, o),
                r.forEach(( (t, i) => {
                    Kt({
                        ...t,
                        index: i
                    }.url, t).then((t => {
                        e.format = t.format,
                        e.styles = t.format,
                        e.list || (e.list = []),
                        this._pushList(e.list, t.list),
                        o--
                    }
                    )).catch((e => {
                        o--
                    }
                    )).finally((t => {
                        0 === o && (n && n.resolve(e),
                        this._loadTrackUrls(e, 2))
                    }
                    ))
                }
                ))
            }
            _freshUrl(e, t={
                url: ""
            }) {
                let n = -1;
                e.url.forEach(( (e, i) => {
                    e.url === t.url && (n = i)
                }
                )),
                n > -1 && e.url.splice(n, 1)
            }
            _pushList(e, t) {
                const n = t[0].start
                  , i = t[t.length - 1].end;
                if (0 === e.length || n >= e[e.length - 1].end)
                    t.forEach((t => {
                        e.push(t)
                    }
                    ));
                else {
                    let n = -1;
                    for (let t = 0; t < e.length; t++)
                        if (e[t].start > i) {
                            n = t;
                            break
                        }
                    n > -1 && t.forEach(( (t, i) => {
                        e.splice(n + i, 0, t)
                    }
                    ))
                }
                return e
            }
            _updateCurrent(e) {
                this.currentText = e,
                this.config.domRender && this.root && (["language", "id", "label"].map((e => {
                    this.root.setAttribute(`data-${e}`, this.currentText[e] || "")
                }
                )),
                this.__remove(this._cids)),
                this._cids = [],
                this._gid = -1,
                this._cid = -1,
                this._curTexts = [];
                const t = this._getPlayerCurrentTime();
                t && ("live" === this.config.updateMode ? this._liveUpdate(t) : this._update(t))
            }
            __loadAll() {
                this.textTrack.forEach((e => {
                    this._loadTrack(e)
                }
                ))
            }
            getDelCid(e, t) {
                const n = [];
                for (let i = 0; i < e.length; i++)
                    t.includes(e[i]) || n.push(e[i]);
                return n
            }
            getNewCid(e, t) {
                const n = [];
                for (let i = 0; i < t.length; i++)
                    e.includes(t[i]) || n.push(t[i]);
                return n
            }
            _liveUpdate(e) {
                if (!this.currentText || !this.currentText.list || !this.currentText.list.length)
                    return;
                let t = [];
                const n = Ct(e, this.currentText.list, this._gid);
                if (n > -1 && (t = Mt(e, this.currentText.list[n].list, this._cid)),
                this.__removeByTime(this._curTexts, e),
                this._log("_liveUpdate", e, n, t, this.currentText.list[0].list[0].start, this.currentText.list[0].list[0].end),
                t.length > 0) {
                    const e = function(e, t, n) {
                        if (0 === e.length || t < 0 || t > e.length - 1)
                            return [];
                        const i = e[t].list;
                        if (0 === n.length)
                            return [];
                        const r = i.splice(n[0], n.length);
                        return t > 0 && e.splice(0, t),
                        0 === i.length && e.splice(0, 1),
                        r
                    }(this.currentText.list, n, t)
                      , i = this._curTexts.length
                      , r = i > 0 ? this._curTexts[i - 1].index : 0;
                    e.forEach(( (e, t) => {
                        e.index = t + r,
                        this._curTexts.push(e)
                    }
                    )),
                    this.__render(e)
                }
                this.emit(ft, this.getUpdateData(this._curTexts, 0, this.currentText))
            }
            _update(e) {
                if (!this.currentText || !this.currentText.list || !this.currentText.list.length)
                    return;
                const t = Ct(e, this.currentText.list, this._gid);
                let n = [];
                if (t > -1 && (n = Mt(e, this.currentText.list[t].list, this._cid)),
                this._log("update1", `currentTime:${e}`, t, this._gid, n, this._cids, this._cids.join(",") === n.join(","), t === this._gid),
                n.length < 1)
                    return this._cids.length > 0 && this.config.domRender && this.__remove(this._cids),
                    this._cids = [],
                    this._curTexts.length > 0 && this.emit(ft, this.getUpdateData([], e, this.currentText)),
                    void (this._curTexts = []);
                if (this._cids.join("") === n.join("") && t === this._gid)
                    return;
                this._gid = t,
                this._cid = n[0];
                const i = this.getDelCid(this._cids, n)
                  , r = this.getNewCid(this._cids, n);
                this._cids = n,
                this.config.domRender && this.__remove(i);
                const o = [];
                r.map((e => {
                    const n = this.currentText.list[t].list[e];
                    n.index = e,
                    o.push(n)
                }
                )),
                this.currentExtText && r.map((e => {
                    const n = this.currentText.list[t].list[e];
                    n.index = e,
                    o.push(n)
                }
                )),
                this._log("update", `currentTime:${e}`, o.length > 0 ? `start:${o[0].start} end:${o[0].end}` : "", `delCids:${i.length} newCids:${r.length}`),
                this._curTexts = o,
                this.emit(ft, this.getUpdateData(o, e, this.currentText)),
                this.__render(o, e)
            }
            getUpdateData(e, t, n) {
                const {id: i, language: r} = n;
                return {
                    type: ft,
                    currentTime: 0 | t,
                    id: i,
                    language: r,
                    texts: e,
                    isOpen: this._isOpen
                }
            }
            _getPlayerCurrentTime() {
                if (!this.player)
                    return 0;
                const {currentTime: e} = this.player;
                return parseInt(1e3 * e + 1e3 * this.seiTime - 1e3 * this.lastSeiTime, 10) / 1e3
            }
            _onSubtitlePlaylist(e) {
                this._log("_onSubtitlePlaylist", e);
                const t = e.map((e => ({
                    label: e.name,
                    language: e.lang,
                    id: e.id,
                    isDefault: e.default,
                    url: [],
                    mUrl: e.url
                })));
                this.setSubTitles(t)
            }
            _onSubtitleSegment(e) {
                if (this._log("_onSubtitleSegment", e.length, e[0].lang, e[0].sn, e[e.length - 1].sn, e[0].start, e[e.length - 1].end),
                !e || 0 === e.length)
                    return;
                const t = {
                    language: e[0].lang,
                    url: e.map((e => ({
                        id: e.sn,
                        url: e.url,
                        duration: e.duration,
                        start: e.start,
                        end: e.end
                    })))
                };
                Pt(t, this.currentText) && this.updateSubTitle(t)
            }
            _onCoreSeiintime(e) {
                try {
                    const t = e.time / 1e3;
                    this._log("_onCoreSeiintime sei", t, this.seiTime, this.lastSeiTime),
                    this.seiTime = t,
                    this.lastSeiTime = this.player ? this.player.currentTime : 0
                } catch {}
            }
            resize(e, t) {
                const {baseSizeX: n, baseSizeY: i, minMobileSize: r, minSize: o, fitVideo: a, offsetBottom: s} = this.config
                  , {scale: l} = this._videoMeta;
                this._videoMeta.lwidth = e,
                this._videoMeta.lheight = t;
                let u, c = 0;
                t / e * 100 >= l ? (c = parseInt(l * e, 10) / 100,
                u = e) : (c = t,
                u = parseInt(t / l * 100, 10)),
                this._videoMeta.vWidth = u,
                this._videoMeta.vHeight = c;
                let h = 0
                  , d = 0;
                l > 120 ? (h = i,
                d = parseInt(h * c / 1080, 10)) : (h = n,
                d = parseInt(h * u / 1920, 10));
                const f = Qt ? r : o;
                d = d < f ? f : d > h ? h : d;
                const p = {
                    fontSize: d
                }
                  , g = parseInt((t - c) / 2, 10)
                  , m = parseInt((e - u) / 2, 10)
                  , v = parseInt(c * s, 10) / 100;
                this._videoMeta.vBottom = g,
                this._videoMeta.vLeft = m,
                this._videoMeta.marginBottom = v,
                a && (p.bottom = g + v,
                p.left = p.right = m),
                Object.keys(p).map((e => {
                    this.root.style[e] = `${p[e]}px`
                }
                )),
                this.emit("resize", {
                    vLeft: m,
                    vBottom: g,
                    marginBottom: v,
                    vWidth: u,
                    vHeight: c,
                    fontSize: d,
                    scale: l
                })
            }
            __startResize(e) {
                const t = e.getBoundingClientRect()
                  , {_videoMeta: n} = this
                  , {width: i, height: r} = t;
                if (this._iId && (clearTimeout(this._iId),
                this._iId = null),
                i > 0 && r > 0 && (i !== n.lwidth || r !== n.lheight))
                    this._iC = 0,
                    this.resize(i, r);
                else {
                    if (this._iC >= 5)
                        return void (this._iC = 0);
                    this._iC++,
                    this._iId = setTimeout(( () => {
                        this.__startResize(e)
                    }
                    ), 50)
                }
            }
            __removeByTime(e, t) {
                const n = [];
                for (let i = 0; i < e.length; i++)
                    (!t || e[i].end < t) && n.push(i);
                0 !== n.length && (e.splice(n[0], n.length),
                this.config.domRender && this.__remove(n))
            }
            __remove(e) {
                if (!e || e.length < 1)
                    return;
                this._log(">>>>_renderByWords__remove", e);
                const t = this.innerRoot.children
                  , n = [];
                for (let i = 0; i < t.length; i++) {
                    const r = Number(t[i].getAttribute("data-index"));
                    e.includes(r) && n.push(t[i])
                }
                n.map((e => {
                    this.innerRoot.removeChild(e)
                }
                ))
            }
            __render(e=[]) {
                const {renderMode: t, domRender: n} = this.config;
                e.length > 0 && n && e.forEach((e => {
                    let n = `text-track-${this.config.line}`;
                    e.text.forEach(( (i, r) => {
                        r > 0 && (n += " text-track-deputy");
                        const o = {
                            "data-start": e.start,
                            "data-end": e.end,
                            "data-index": e.index
                        }
                          , a = St("xg-text-track-span", "", o, n);
                        if (this.innerRoot.appendChild(a),
                        "step" === t) {
                            const t = St("xg-text-track-span", "", o, `${n} text-track-space`);
                            this.innerRoot.appendChild(t),
                            t.innerHTML = i,
                            window.setTimeout(( () => {
                                this._renderByWords(a, r, e.start, e.end, i)
                            }
                            ), 600)
                        } else
                            a.innerHTML = i
                    }
                    ))
                }
                ))
            }
            _renderByWords(e, t, n, i, r) {
                const o = document.createTextNode("");
                e.appendChild(o);
                const a = function(e) {
                    const t = e.split("")
                      , n = [];
                    let i = !1;
                    for (let e = 0; e < t.length; e++) {
                        const r = t[e];
                        if (Rt(r))
                            if (i) {
                                const e = n.length - 1;
                                n[e] = `${n[e]}${r}`
                            } else
                                n.push(r),
                                i = !0;
                        else if (r.match(/^[ ]*$/) || xt(r) || Et(r)) {
                            i = !1;
                            const e = n.length - 1;
                            n[e] = `${n[e]}${r}`
                        } else
                            i = !1,
                            n.push(r)
                    }
                    return n
                }(r);
                let s = this._getPlayerCurrentTime()
                  , l = parseInt(1e3 * (i - s), 10);
                if (s >= i)
                    return;
                n >= s && (s = n),
                l > 300 && (l -= 50);
                const u = {
                    dom: o,
                    ids: t,
                    wordList: a,
                    interval: l / a.length,
                    start: s,
                    end: i,
                    duration: l,
                    lastTime: 0
                };
                this._log(">>>>_renderByWords", l, u);
                const {_curRenderTask: c} = this;
                let h = -1;
                for (let e = 0; e < c.length; e++)
                    if (c[e].ids === t) {
                        h = e;
                        break
                    }
                h > -1 && c.slice(h, 1),
                c.push(u),
                this.startRender(-1)
            }
            stopRender() {
                this._renderIntervalId && window.cancelAnimationFrame(this._renderIntervalId)
            }
            show() {
                this.config.domRender && function(e, t) {
                    e && (e.classList ? t.split(/\s+/g).forEach((t => {
                        e.classList.remove(t)
                    }
                    )) : _t(e, t) && t.split(/\s+/g).forEach((t => {
                        const n = new RegExp("(\\s|^)" + t + "(\\s|$)");
                        if (e.className && "object" == typeof e.className) {
                            const t = e.getAttribute("class") || "";
                            e.setAttribute("class", t.replace(n, " "))
                        } else
                            e.className = e.className.replace(n, " ")
                    }
                    )))
                }(this.root, "text-track-hide")
            }
            hide() {
                this.config.domRender && (Tt(this.root, "text-track-hide"),
                this.innerRoot.innerHTML = "")
            }
            emit(e, t, ...n) {
                super.emit(e, t, ...n)
            }
            on(e, t, ...n) {
                super.on(e, t, ...n)
            }
            once(e, t, ...n) {
                super.once(e, t, ...n)
            }
            off(e, t, ...n) {
                super.off(e, t, ...n)
            }
            offAll() {
                super.removeAllListeners()
            }
            get marginBottom() {
                const {bottom: e, marginBottom: t} = this._videoMeta;
                return this.config.fitVideo ? e + t : t
            }
        }
        var qt = function(e) {
            function t() {
                var e;
                _(this, t);
                for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                    i[r] = arguments[r];
                return S(e = y(this, t, [].concat(i)), "_onOff", (function() {
                    e.switchOffSubtitle()
                }
                )),
                S(e, "_onChange", (function(t) {
                    var n = e.getSubTitleIndex(e.config.list, t);
                    n < 0 || e.updateCurItem(n, t)
                }
                )),
                S(e, "_onUpdate", (function(t) {
                    if (t && !(t.length < 1)) {
                        var n = t.map((function(e) {
                            return {
                                startTime: e.start,
                                endTime: e.end,
                                text: e.text.length > 0 ? e.text[0] : "",
                                textTag: e.textTag
                            }
                        }
                        ));
                        e._updateCallback && e._updateCallback(n[0]),
                        e.emit("subtitle_update", n[0])
                    }
                }
                )),
                S(e, "_onListReset", (function(t) {
                    e.updateList(t)
                }
                )),
                e
            }
            return C(t, e),
            b(t, [{
                key: "afterCreate",
                value: function() {
                    this._initExtSubTitle(),
                    this._updateCallback = null
                }
            }, {
                key: "_initExtSubTitle",
                value: function(e) {
                    var t = this.config
                      , n = t.list
                      , i = t.style
                      , r = t.isDefaultOpen
                      , o = t.updateMode
                      , a = t.renderMode;
                    r && e < 0 && n.length > 0 && (e = 0,
                    n[0].isDefault = !0);
                    var s = {
                        subTitles: n,
                        defaultOpen: r,
                        updateMode: o,
                        renderMode: a,
                        debugger: this.config.debugger,
                        domRender: !1
                    };
                    Object.keys(i).map((function(e) {
                        s[e] = i[e]
                    }
                    ));
                    var c = this.player.controls;
                    !this.playerConfig.marginControls && c && c.root && (this.on(l, this.onPlayerFocus),
                    this.on(u, this.onPlayerBlur));
                    var h = this.player;
                    h._subTitles ? h._subTitles._isOpen && (e = this.getSubTitleIndex(this.config.list, h._subTitles.currentText)) : (h._subTitles = new Wt(s),
                    h._subTitles.attachPlayer(this.player)),
                    this.subTitles = h._subTitles,
                    this.subTitles.on("off", this._onOff),
                    this.subTitles.on("change", this._onChange),
                    this.subTitles.on("update", this._onUpdate),
                    this.subTitles.on("reset", this._onListReset),
                    i.follow && this.subTitles.root && U.addClass(this.subTitles.root, "follow-control")
                }
            }, {
                key: "show",
                value: function(e) {
                    !this.config.list || this.config.list.length < 1 || U.addClass(this.root, "show")
                }
            }, {
                key: "getSubTitleIndex",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        id: "",
                        language: ""
                    }
                      , n = -1;
                    return t && (t.id || t.language) ? (e.forEach((function(e, i) {
                        var r, o, a, s;
                        r = e,
                        o = t,
                        a = U.isNotNull(r.id) && U.isNotNull(o.id) && r.id === o.id,
                        s = U.isNotNull(r.language) && U.isNotNull(o.language) && r.language === o.language,
                        (a || s) && (n = i)
                    }
                    )),
                    n) : n
                }
            }, {
                key: "updateSubtitles",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 ? arguments[1] : void 0
                      , n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                    e && ("String" === U.typeOf(e) && (e = [{
                        id: parseInt(100 * Math.random()),
                        isDefault: !0,
                        url: e
                    }]),
                    t && (this._updateCallback = t),
                    this.updateList({
                        list: e
                    }),
                    this.subTitles && this.subTitles.setSubTitles(this.config.list, this.curIndex > -1, n))
                }
            }, {
                key: "updateList",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    if (e.list) {
                        var t = [];
                        e.list.forEach((function(e) {
                            t.push(e)
                        }
                        ));
                        var n = function(e) {
                            var t = -1;
                            return e.forEach((function(e, n) {
                                e.id || e.language || (e.id = n),
                                e.id = String(e.id),
                                !e.url && (e.url = e.src),
                                !e.text && (e.text = e.label),
                                !e.language && (e.language = e.srclang),
                                void 0 === e.isDefault && (e.isDefault = e.default || !1),
                                (e.isDefault || e.default) && (t < 0 ? t = n : e.isDefault = e.default = !1)
                            }
                            )),
                            t
                        }(t);
                        e.isOpen ? (this.curIndex = n,
                        this.curItem = n > -1 ? t[n] : null) : (this.curIndex = -1,
                        this.curItem = null),
                        this.config.list = t,
                        0 === t.length && this.switchOffSubtitle()
                    }
                }
            }, {
                key: "switchSubTitle",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        id: "",
                        language: ""
                    };
                    this.getSubTitleIndex(this.config.list, e) < 0 || this.subTitles.switch(e).catch((function(e) {}
                    ))
                }
            }, {
                key: "switchOffSubtitle",
                value: function(e) {
                    this.emit("subtitle_change", {
                        off: !0,
                        isListUpdate: !1,
                        list: []
                    }),
                    this.lastIndex = this.curIndex,
                    this.curIndex = -1,
                    this.curItem = null,
                    this.switchIconState(!1)
                }
            }, {
                key: "switchOnSubtitle",
                value: function() {
                    var e = this.config.list[this.lastIndex > -1 ? this.lastIndex : 0];
                    this.switchIconState(!0),
                    this.switchSubTitle(e)
                }
            }, {
                key: "destroy",
                value: function() {
                    this.subTitles && (this.subTitles.destroy(),
                    this.subTitles = null),
                    D(t, "destroy", this, 3)([])
                }
            }], [{
                key: "pluginName",
                get: function() {
                    return "texttrack"
                }
            }, {
                key: "defaultConfig",
                get: function() {
                    return {
                        index: 6,
                        list: [],
                        isDefaultOpen: !0,
                        style: {
                            follow: !0,
                            mode: "stroke",
                            followBottom: 50,
                            fitVideo: !0,
                            offsetBottom: 2,
                            baseSizeX: 49,
                            baseSizeY: 28,
                            minSize: 16,
                            minMobileSize: 13,
                            line: "double",
                            fontColor: "#fff"
                        },
                        closeText: {
                            text: "不开启",
                            iconText: "字幕"
                        },
                        needCloseText: !0,
                        className: "xgplayer-texttrack",
                        hidePortrait: !1,
                        isShowIcon: !0,
                        renderMode: "normal",
                        mode: "external",
                        debugger: !1
                    }
                }
            }])
        }(we);
        const Zt = typeof window < "u" && window.location.href.indexOf("loggerdebug") > -1;
        function Yt(e, t, ...n) {
            Zt && console.log(`[logger>${e}]`, t, ...n)
        }
        function Jt() {
            return (new Date).getTime()
        }
        function en(e) {
            return Object.prototype.toString.call(e).match(/([^\s.*]+)(?=]$)/g)[0]
        }
        function tn(e, t=2) {
            const n = Math.pow(10, t);
            return Math.round(e * n) / n
        }
        function nn(e) {
            return parseInt((1e3 * e).toFixed(0), 10)
        }
        function rn(e) {
            return e && e instanceof window.HTMLMediaElement
        }
        function on(e) {
            if (!e || "string" != typeof e)
                return "";
            const t = e.split("/");
            let n = "";
            return t.length > 3 && t[2] && (n = t[2]),
            n
        }
        function an(e) {
            try {
                return JSON.stringify(e)
            } catch {
                return ""
            }
        }
        function sn(e) {
            return "string" == typeof e && /^blob/.test(e)
        }
        function ln(e) {
            return null != e && e.media && (e = e.media),
            !!(e && e instanceof HTMLMediaElement) && (sn(null == e ? void 0 : e.currentSrc) || sn(null == e ? void 0 : e.src))
        }
        function un(e) {
            return null == e
        }
        function cn(e, t, n) {
            return e > 0 && t > 0 ? t - e : 0
        }
        const hn = {
            UN_KNOW: 0,
            EXPIRED: 1,
            NO_EXPIRED: 2
        }
          , dn = [new RegExp("(\\?|&)expire=([^&]*)(&|$)"), new RegExp("(\\?|&)x-tos-expires=([^&]*)(&|$)"), new RegExp("(\\?|&)x-expires=([^&]*)(&|$)")];
        function fn(e) {
            if (!e || "string" != typeof e)
                return hn.UN_KNOW;
            let t = hn.UN_KNOW;
            try {
                const n = [];
                if (dn.forEach((t => {
                    const i = e.match(t);
                    i && n.push(i)
                }
                )),
                n.length > 0)
                    t = parseInt(n[0][2], 10);
                else {
                    const n = e.split("/");
                    n.length > 5 && 8 === n[4].length && (t = parseInt(n[4], 16))
                }
                if (t > 0) {
                    const e = new Date;
                    return t <= Date.UTC(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate(), e.getUTCHours(), e.getUTCMinutes(), 0) / 1e3 ? hn.EXPIRED : hn.NO_EXPIRED
                }
                return hn.UN_KNOW
            } catch {
                return hn.UN_KNOW
            }
        }
        function pn(e) {
            try {
                return e.toString()
            } catch {
                return ""
            }
        }
        function gn(e, t) {
            Object.keys(e).forEach((n => {
                un(t[n]) || (e[n] = t[n])
            }
            ))
        }
        function mn(e, t) {
            return t[e]
        }
        const vn = "0.2.1"
          , yn = [{
            key: "QQBrowser",
            reg: /(qqbrowser)\/([\d.]+)/
        }, {
            key: "2345Explorer",
            reg: /(2345explorer)\/([\d.]+)/
        }, {
            key: "Wexin",
            reg: /(micromessenger)\/([\d.]+)/
        }, {
            key: "Openlanguage",
            reg: /(openlanguage)\/([\d.]+)/
        }, {
            key: "NewsArticle",
            reg: /(newsarticle)\/([\d.]+)/
        }, {
            key: "VideoArticle",
            reg: /(videoarticle)\/([\d.]+)/
        }, {
            key: "Hotsoon",
            reg: /(live_stream)_([\d.]+)/
        }, {
            key: "Aweme",
            reg: /(aweme)_([\d.]+)/
        }, {
            key: "Lark",
            reg: /(lark)\/([\d.]+)/
        }, {
            key: "PlayStation",
            reg: /(playstation)/
        }, {
            key: "BingPreview",
            reg: /(bingpreview)\/([\d.]+)/
        }, {
            key: "Baiduspider",
            reg: /(baiduspider-render)\/([\d.]+)/
        }, {
            key: "YandexBot",
            reg: /(yandexbot)\/([\d.]+)/
        }, {
            key: "Chrome",
            reg: /(chrome)\/([\d.]+)/
        }, {
            key: "Safari",
            reg: /(version)\/([\d.]+)\s*(safari)/
        }]
          , _n = [{
            key: "Trident",
            reg: /(rv:)([\d.]+)/
        }, {
            key: "Trident",
            reg: /(msie)\s*([\d.]+)/
        }]
          , Tn = ["Baiduspider", "YandexBot"]
          , bn = !(typeof window > "u")
          , Sn = {
            isIOS: !1,
            isAndroid: !1,
            isMobile: !1,
            isPC: !1,
            isPad: !1,
            isSpider: !1,
            isSupportMP4: !0,
            mime: "",
            name: "",
            appVersion: "",
            isChrome: !1,
            isSafari: !1
        };
        typeof navigator < "u" && function(e) {
            if (typeof navigator > "u")
                return e;
            const t = window.navigator.userAgent.toLocaleLowerCase()
              , n = /(iphone)/.test(t) || /(ipad)/.test(t)
              , i = /(android)/.test(t)
              , r = /(windows phone)/.test(t)
              , o = n || i || r;
            e.isIOS = n,
            e.isAndroid = i,
            e.isPC = !o,
            e.isPad = /(ipad)/.test(t);
            const a = function() {
                const e = {
                    isSupport: !1,
                    mime: ""
                };
                if (typeof document > "u")
                    return e;
                let t = document.createElement("video");
                return "function" == typeof t.canPlayType ? (["avc1.42E01E, mp4a.40.2", "avc1.58A01E, mp4a.40.2", "avc1.4D401E, mp4a.40.2", "avc1.64001E, mp4a.40.2", "avc1.42E01E", "mp4v.20.8", "avc1.42E01E, mp4a.40.2", "avc1.58A01E, mp4a.40.2", "avc1.4D401E, mp4a.40.2", "avc1.64001E, mp4a.40.2", "mp4v.20.8, mp4a.40.2", "mp4v.20.240, mp4a.40.2"].map((n => {
                    "probably" === (null == t ? void 0 : t.canPlayType(`video/mp4; codecs="${n}"`)) && (e.isSupport = !0,
                    e.mime += `||${n}`)
                }
                )),
                e) : (t = null,
                e)
            }();
            e.isSupportMP4 = a.isSupport,
            e.mime = a.mime;
            let s = ""
              , l = ""
              , u = []
              , c = yn;
            /trident/.test(t) && (c = _n);
            for (let e = 0; e < c.length; e++)
                if (u = c[e].reg.exec(t),
                u) {
                    s = c[e].key,
                    l = u.length > 2 ? u[2] : "";
                    break
                }
            s ? (e[`is${s}`] = !0,
            e.name = s,
            e.appVersion = l) : function() {
                const {mimeTypes: e} = navigator;
                if (e) {
                    for (let t = 0; t < e.length; t++)
                        if (e[t].type && e[t].type.indexOf("360") > -1 || e[t].type && e[t].type.indexOf("application/vnd.chromium.remoting-viewer") > -1 || e[t].description && e[t].description.indexOf("360") > -1)
                            return !0;
                    return !1
                }
            }() && (e.name = "360EE"),
            e.name && "Trident" !== e.name && /(trident)/.exec(t) && (e.name = e.name ? `${e.name}_Trident` : "Trident"),
            e.isSpider = function(e, t) {
                let n = !1;
                return Tn.map((t => {
                    t === e && (n = !0)
                }
                )),
                /spider/.test(t) && (n = !0),
                n
            }(e.name, t)
        }(Sn);
        const wn = !(typeof navigator > "u")
          , kn = {
            sdk_version: vn,
            pc: "",
            pv: "",
            sv: "",
            line_app_id: 0,
            line_user_id: "",
            app_version: "",
            platform: Sn.isPad ? "pad" : Sn.isMobile ? "mobile" : "pc",
            cpu_core: 0,
            memory_size: 0,
            support: 0,
            absdkVersion: "",
            d_score: -1,
            vendor: "",
            gpu: "",
            deviceScore: {},
            ua: ""
        };
        let Cn = ""
          , Mn = 0;
        function Pn(e) {
            Object.keys(e).forEach((t => {
                void 0 !== e[t] && ("playerCoreVersion" === t ? kn.pc = e[t] : "playerVersion" === t ? kn.pv = e[t] : "appVersion" === t ? kn.app_version = e[t] : "strategyVersion" === t ? kn.sv = e[t] : void 0 !== kn[t] && (kn[t] = e[t]))
            }
            ))
        }
        !function() {
            if (!wn)
                return;
            const e = window.navigator
              , t = e && e.hardwareConcurrency || 0
              , n = e && e.deviceMemory || 0
              , i = e && e.webdriver ? 1 : 0
              , r = e && e.userAgent || "";
            kn.cpu_core = t,
            kn.memory_size = n,
            kn.webdriver = i,
            kn.ua = r,
            function(e) {
                let t = Sn.isSupportMP4 ? 1e4 : 0;
                t = typeof MediaSource > "u" || !MediaSource.isTypeSupported || !(MediaSource.isTypeSupported('video/mp4;codecs="hev1.1.6.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.2.4.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.3.E.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.4.10.L120.90"')) ? t : t + 1e3,
                function(e) {
                    const t = {
                        supported: !1,
                        smooth: !1,
                        powerEfficient: !1
                    };
                    if (!e || typeof navigator > "u")
                        return Promise.resolve(t);
                    if (navigator.mediaCapabilities && navigator.mediaCapabilities.decodingInfo)
                        return navigator.mediaCapabilities.decodingInfo(e);
                    {
                        const n = e.video || {
                            contentType: ""
                        }
                          , i = e.audio || {
                            contentType: ""
                        };
                        try {
                            const e = MediaSource.isTypeSupported(n.contentType || "")
                              , t = MediaSource.isTypeSupported(i.contentType);
                            return Promise.resolve({
                                supported: e && t,
                                smooth: !1,
                                powerEfficient: !1
                            })
                        } catch {
                            return Promise.resolve(t)
                        }
                    }
                }({
                    type: "file",
                    video: {
                        contentType: 'video/mp4;codecs="hev1.1.6.L120.90"',
                        width: 1920,
                        height: 1080,
                        bitrate: 1e4,
                        framerate: 30
                    }
                }).then((n => {
                    n && n.supported ? t += 100 : t += 10,
                    e(t)
                }
                )).catch((n => {
                    t += 1,
                    e(t)
                }
                ))
            }((e => {
                kn.support = e
            }
            )),
            Yt("CommonData", kn)
        }();
        const Rn = "videoplayer_oneopera"
          , xn = "videoplayer_oneevent"
          , En = "mdl_video_data_size"
          , Dn = "mdl_video_preload"
          , Ln = {
            videoplayer_oneplay: "play_session_events",
            mdl_video_preload: "mdl_video_preload"
        }
          , In = "unknown"
          , On = 6e4
          , An = "playcatch"
          , Gn = "reset"
          , Nn = "page_unload";
        function Bn(e, t) {
            const n = {
                startPos: 0,
                endPos: 0,
                include: 0,
                diff: 0,
                cur: t,
                start: -1,
                end: -1
            }
              , i = e ? e.length : 0;
            if (i < 1)
                return n;
            n.start = nn(e.start(0)),
            n.end = nn(e.end(i - 1));
            let r = -1
              , o = -1;
            const a = nn(t);
            for (let t = e.length - 1; t > -1; t--) {
                const i = nn(e.start(t))
                  , s = nn(e.end(t));
                if (a >= i && a <= s) {
                    n.include = 1,
                    n.startPos = i,
                    n.endPos = s,
                    n.diff = s - a;
                    break
                }
                a < i && (r < 0 || i - a < r) ? (r = i - a,
                o = t) : a > s && (r < 0 || a - s < r) && (r = a - s,
                o = t)
            }
            return 1 !== n.include && (o < 0 && (o = e.length - 1),
            n.startPos = nn(e.start(o)),
            n.endPos = nn(e.end(o))),
            n
        }
        function $n(e) {
            const t = [];
            if (!e || e.length < 1)
                return t;
            const n = e.length;
            for (let i = 0; i < n; i++) {
                const n = nn(e.start(i)) / 1e3
                  , r = nn(e.end(i)) / 1e3;
                t.push({
                    start: n,
                    end: r
                })
            }
            return t
        }
        function Fn(e, t=0, n=1) {
            if (!e)
                return !1;
            t = nn(t);
            for (let i = 0; i < e.length; i++) {
                const r = nn(e.start(i)) + n
                  , o = nn(e.end(i)) - n;
                if (t > r && t < o)
                    return !0
            }
            return !1
        }
        const Hn = {
            PLAY: "play",
            PAUSE: "pause",
            PLAYING: "playing",
            WAITING: "waiting",
            ENDED: "ended",
            SEEKING: "seeking",
            SEEKED: "seeked",
            LOAD_START: "loadstart",
            LOADED_DATA: "loadeddata",
            TIMEUPDATE: "timeupdate",
            PROGRESS: "progress",
            CANPLAY: "canplay",
            VOLUME_CHANGE: "volumechange",
            RATE_CHANGE: "ratechange",
            LOADED_METADATA: "loadedmetadata",
            DURATION_CHANGE: "durationchange",
            EMPTIED: "emptied",
            ERROR: "error",
            SUSPEND: "suspend",
            ABORT: "abort",
            STALLED: "stalled"
        }
          , Un = {
            PLAY_CATCH: "playCatch",
            AUTOPLAY_PREVENTED: "autoplay_was_prevented",
            AUTOPLAY_STARTED: "autoplay_started",
            PLAYER_DESTROY: "destroy",
            NEXT: "playnext",
            RESET: "reset",
            SOURCE_ERROR: "source_error",
            INITIAL_URL: "initialUrl",
            LOADSTART_MSE: "loadstart_mse",
            DEFI_CHANGE: "definitionChange",
            BEFORE_DEFI_CHANGE: "beforeDefinitionChange",
            DEFI_CHANGE_SUCCESS: "definitionChangeSuccess",
            XG_LOG_CACHE: "xglog_cache",
            DEGRADE: "degrade",
            ABR_CHANGE: "ABR_CHANGE",
            DEFI_CHANGE_DETAIL: "definitionChangeDetail",
            PRF_DATA_SIZE: "prf_data_size",
            MEDIA_FORMAT_ERROR: "media_format_error",
            META_READY: "metaReady"
        }
          , Vn = {
            autoplay_started: "_onAutoPlayStart",
            autoplay_was_prevented: "_onAutoPlayPrevented",
            source_error: "_onSourceError",
            initialUrl: "_onInitialUrl",
            destroy: "_onPlayerDestroy",
            playnext: "_onPlayNext",
            reset: "_onPlayerReset",
            loadstart_mse: "_onLoadstartMse",
            definitionChange: "_onDefiChange",
            beforeDefinitionChange: "_onBeforeDefiChange",
            definitionChangeSuccess: "_onDefiChangeSuccess",
            xglog_cache: "_onXgLogCache",
            degrade: "_onDegrade",
            ABR_CHANGE: "_onAbrChange",
            definitionChangeDetail: "_onDefiChangeDetail",
            prf_data_size: "_onPrfDataSize",
            media_format_error: "_onMediaFormatError",
            metaReady: "_onMetaReady"
        };
        function jn(e, t, n=1) {
            if (!e || !t)
                return;
            const i = rn(e)
              , r = Object.keys(Hn).map((e => Hn[e]))
              , o = Object.keys(Un).map((e => Un[e]));
            (i ? r : [...r, ...o]).forEach((r => {
                const {handler: o, evt: a} = function(e, t) {
                    let n;
                    const i = `_on${e.charAt(0).toUpperCase()}${e.slice(1)}`;
                    return n = t[i] ? t[i] : t[Vn[e]],
                    {
                        evt: e,
                        handler: n
                    }
                }(r, t);
                if (o)
                    if (i) {
                        const t = e;
                        1 === n ? t.addEventListener(a, o) : t.removeEventListener(a, o)
                    } else {
                        const t = e;
                        1 === n ? t.on(a, o) : t.off(a, o)
                    }
            }
            ))
        }
        const zn = [];
        function Xn(e, t, n) {
            zn.push({
                id: e,
                name: t,
                handler: n
            })
        }
        function Kn(e, t) {
            let n = -1;
            for (let i = 0; i < zn.length; i++)
                if (zn[i].id === e && zn[i].name === t) {
                    n = i;
                    break
                }
            n > -1 && zn.splice(n, 1)
        }
        const Qn = "beforeunload"
          , Wn = "visibilitychange";
        function qn(e, t, ...n) {
            zn.forEach((i => {
                const {name: r, handler: o} = i;
                r === e && o(t, ...n)
            }
            ))
        }
        function Zn(e) {
            return rn(e) ? e : (null == e ? void 0 : e.media) || (null == e ? void 0 : e.video) || (null == e ? void 0 : e.core)
        }
        function Yn(e) {
            return e.rawSrc || e.currentSrc || e.src
        }
        function Jn(e) {
            return ei(e, ["readyState", "networkState"])
        }
        function ei(e, t) {
            const n = Zn(e);
            if (!n)
                return {};
            if (Array.isArray(t)) {
                const e = {};
                return t.forEach((t => {
                    e[t] = n[t]
                }
                )),
                e
            }
            return n[t]
        }
        function ti(e) {
            var t;
            return e ? (e.vtype ? e.vtype : (null == (t = e.config) ? void 0 : t.vtype) || "") || (e.dash ? "DASH" : "") : ""
        }
        function ni(e) {
            return e && e.config && e.config.codecType ? e.config.codecType : ""
        }
        function ii(e, t) {
            let n = 0;
            return e > 0 && t > 0 && e < t ? (n = parseInt((t - e).toFixed(0), 10),
            n > On ? On : n) : 0
        }
        function ri(e, t) {
            const n = Math.min(e, t);
            return n > 0 ? n > 2160 ? "8K" : n > 1792 ? "4K" : n > 1216 ? "2K" : n > 896 ? "1080P" : n > 640 ? "720P" : n > 512 ? "540P" : n > 416 ? "480P" : n > 288 ? "360P" : "240P" : In
        }
        function oi(e) {
            let t = 0;
            for (const n of e)
                n.end < 0 || n.start > n.end || (t += 1e3 * n.end - 1e3 * n.start);
            return Math.round(t) / 1e3
        }
        typeof document < "u" && (Yt("GLOBAL_EVENTS", "bindGlobalEvents", Sn.isPC, Sn.isMobile, Sn.isPad),
        !(typeof document > "u") && (Sn.isPC ? window.addEventListener("beforeunload", ( () => {
            qn("beforeunload")
        }
        )) : (Sn.isMobile || Sn.isPad) && window.addEventListener("pagehide", ( () => {
            qn("beforeunload")
        }
        )),
        document.addEventListener("visibilitychange", (e => {
            qn("visibilitychange", document.visibilityState)
        }
        ))));
        const ai = "Operate";
        class si {
            constructor(e) {
                this.suspendCallback = e,
                this.init()
            }
            reset() {
                this.init()
            }
            init() {
                this.seekCount = 0,
                this.sat = 0,
                this.ops = [],
                this.seek = this.getOperaInfo("seeked"),
                this.latestSeek = null,
                this.firstSeek = null,
                this.latestSwitch = this.getOperaInfo("switch"),
                this.firstSwitch = null,
                this.pauseLog = {
                    start: -1,
                    acuTime: 0,
                    totalCount: 0
                }
            }
            getOperaInfo(e) {
                return {
                    op: e,
                    stateBefore: -1,
                    stateAfter: -1,
                    start: 0,
                    end: 0,
                    pos: 0,
                    inBuffer: !1,
                    intervalId: 0,
                    readyState: -1,
                    networkState: -1
                }
            }
            pushOP(e) {
                const {ops: t} = this;
                t.length > 10 && t.splice(0, t.length - 10),
                t.push(e)
            }
            clearTimer() {
                const {seek: e} = this;
                e.intervalId && (clearTimeout(e.intervalId),
                e.intervalId = 0)
            }
            startSeekTimeout() {
                const {seek: e} = this;
                this.clearTimer(),
                e.intervalId = setTimeout(( () => {
                    e.start && this.suspendSeek("timeout", "timeout"),
                    this.clearTimer()
                }
                ), 6e4)
            }
            startSeek(e, t) {
                const {seek: n} = this;
                if (Yt(ai, "startSeek", `start1: ${Jt() - n.start} start:${n.start} currentTime:${e.currentTime} pos:${n.pos}`, t),
                n.start && Jt() - n.start > 6e3 && this.suspendSeek("seeking", "seeking"),
                n.start)
                    return;
                n.start = Jt();
                const {readyState: i, networkState: r} = Jn(e);
                n.pos = e.currentTime,
                n.stateBefore = t,
                n.inBuffer = Fn(e.buffered, e.currentTime, 1),
                n.readyState = i,
                n.networkState = r,
                Yt(ai, "startSeek", `start: ${Jt() - n.start} pos:${n.pos} inBuffer:${n.inBuffer}`, $n(e.buffered)),
                this.seekCount++,
                this.startSeekTimeout()
            }
            suspendSeek(e, t) {
                const {seek: n} = this;
                if (!n.start)
                    return;
                const i = Jt() - n.start;
                Yt(ai, "suspendSeek", `endType:${t} cost: ${i} inBuffer:${n.inBuffer}`);
                const {latestSeek: r} = this
                  , o = {
                    costTime: i,
                    stateBefore: n.stateBefore,
                    stateAfter: e,
                    start: n.start,
                    end: Jt(),
                    pos: n.pos,
                    inBuffer: n.inBuffer,
                    op: "seek",
                    endType: t,
                    interval: r ? n.start - r.start : 0,
                    readyState: n.readyState,
                    networkState: n.networkState
                };
                this.latestSeek = o,
                this.firstSeek || (this.firstSeek = o),
                this.pushOP(o),
                this.clearTimer(),
                n.start = 0,
                n.intervalId = 0,
                n.pos = 0,
                n.inBuffer = !1,
                this.sat += i,
                this.suspendCallback && this.suspendCallback(Rn, this.latestSeek)
            }
            startPause() {
                const {pauseLog: e} = this;
                Yt(ai, `endPause>pauseLog.start:${e.start}`),
                e.start < 0 && (e.start = Jt(),
                e.totalCount++)
            }
            endPause() {
                const {pauseLog: e} = this;
                e.start > 0 && (e.acuTime += Jt() - e.start,
                e.start = -1,
                Yt(ai, `endPause>pauseLog.acuTime:${e.acuTime}`))
            }
        }
        class li {
            constructor(e) {
                this._last = e,
                this._current = e,
                this._initVal = e
            }
            set initial(e) {
                this._initVal = e
            }
            get current() {
                return this._current
            }
            set current(e) {
                const {_current: t} = this;
                t !== e && (this._last = this._current,
                this._current = e)
            }
            get last() {
                return this._last
            }
            reset() {
                this._current = this._initVal,
                this._last = this._initVal
            }
        }
        class ui {
            constructor() {
                this.reset()
            }
            reset() {
                this.t = 0,
                this.visible = !1,
                this.fAcc = 0,
                this.bAcc = 0,
                this.acc = 0,
                this.loopAcc = 0
            }
            update(e, t) {
                if (this.t) {
                    const e = Jt() - this.t;
                    this.acc += e,
                    this.t = 0,
                    this.visible ? this.fAcc += e : this.bAcc += e,
                    t && (this.loopAcc = this.acc)
                }
            }
            start(e) {
                this.t || (Yt("ACC", "startACC", e, this.t, this.visible),
                this.t = Jt())
            }
            getWatchDuration(e=0) {
                switch (e) {
                case 1:
                    return this.fAcc;
                case 2:
                    return this.bAcc;
                default:
                    return this.acc
                }
            }
        }
        function ci() {
            return {
                networkState: -1,
                readyState: -1,
                pos: -1,
                inBuffer: !1,
                start: 0,
                end: 0,
                startDiff: -1,
                endDiff: -1,
                rate: 0,
                endType: In,
                costTime: 0
            }
        }
        const hi = "PlayPerformance";
        class di {
            constructor() {
                this.switchPlayerTime = 0,
                this.init()
            }
            init() {
                this.isMSE = !1,
                this.loadState = 0,
                this.playbackState = 0,
                this.seeking = !1,
                this.ended = !1,
                this.paused = !1,
                this.duration = 0,
                this.currentTime = new li(0),
                this.playbackRate = new li(0),
                this.muted = new li(!1),
                this.volume = new li(1),
                this.resolution = new li(""),
                this.definition = new li(In),
                this.bitrate = new li(0),
                this.width = 0,
                this.height = 0,
                this.state = new li(In),
                this.newTime = Jt(),
                this.startLoadTime = 0,
                this.autoplayStart = 1,
                this.playTime = 0,
                this.bufferFinishTime = 0,
                this.playCount = 0,
                this.vvTime = 0,
                this.metaTime = 0,
                this.firstUpdateTime = 0,
                this.autoplayTime = 0,
                this.startPlayInfo = {
                    bufEnd: 0,
                    bufStart: 0,
                    vvBuffer: 0,
                    startPos: -1,
                    mvt: 0,
                    updateVT: 0,
                    autoPlayVT: 0,
                    pos: 0
                },
                this.leave = {
                    time: 0,
                    method: ""
                },
                this.exit = {
                    time: 0,
                    method: ""
                },
                this.fvt = 0,
                this.nvt = 0,
                this.lpt = 0,
                this.loadvt = 0,
                this.switchPt = 0,
                this.userFvt = 0,
                this.buffFinishTime = 0,
                this.loopCount = 0,
                this.br = {
                    time: 0,
                    method: "",
                    count: 0,
                    lTime: 0,
                    lPos: -1,
                    pos: -1
                },
                this.visible = "visible" === document.visibilityState,
                this.initialUrl = {
                    url: "",
                    ip: "",
                    host: "",
                    resolution: "",
                    definition: "",
                    bitrate: 0,
                    width: 0,
                    height: 0
                },
                this.curUrlInfo = {
                    url: "",
                    ip: "",
                    host: "",
                    resolution: "",
                    definition: "",
                    bitrate: 0,
                    width: 0,
                    height: 0
                },
                this.accPlayed = new ui,
                this.accPlayed.visible = this.visible,
                this.startStep = 0,
                this.buffered = {
                    init: 0,
                    list: [],
                    cur: {}
                },
                this.buffered = null,
                this.readyState = -1,
                this.networkState = -1,
                this.preloadData = {
                    size: 0,
                    time: 0
                },
                this.meta = {
                    a_codec: "",
                    v_codec: "",
                    f_time: 0
                }
            }
            reset(e) {
                Yt(hi, "reset", e),
                e ? (this.loopCount++,
                this.startStep = 0,
                this.playTime = 0,
                this.vvTime = 0,
                this.metaTime = 0,
                this.firstUpdateTime = 0,
                this.autoplayTime = 0,
                this.bufferFinishTime = 0,
                this.br = {
                    time: 0,
                    method: "",
                    count: 0,
                    lTime: 0,
                    lPos: -1,
                    pos: -1
                },
                this.seeking = !1,
                this.ended = !1,
                this.accPlayed.reset(),
                this.autoplayStart = 1,
                this.startPlayInfo = {
                    bufEnd: 0,
                    bufStart: 0,
                    vvBuffer: 0,
                    startPos: 0,
                    mvt: 0,
                    updateVT: 0,
                    autoPlayVT: 0,
                    pos: 0
                }) : this.init()
            }
            setInitData(e) {
                ["playbackRate", "volume", "currentTime", "muted"].forEach((t => {
                    this.change(t, e[t])
                }
                ))
            }
            setMeta(e) {
                e ? gn(this.meta, e) : this.meta = {
                    a_codec: "",
                    v_codec: "",
                    f_time: 0
                }
            }
            updateUrl(e) {
                const {initialUrl: t} = this;
                t.url || (t.url = e.url || "",
                t.host = on(e.url)),
                e.definition && (t.definition = e.definition),
                e.ip && (t.ip = e.ip),
                e.bitrate && (t.bitrate = e.bitrate)
            }
            updatePState(e, t) {
                const {readyState: n, networkState: i} = Jn(e);
                this.readyState = n,
                this.networkState = i
            }
            setLoadStartTime() {
                this.startLoadTime = Jt(),
                this.switchPt = this.switchPlayerTime ? ii(this.switchPlayerTime, this.startLoadTime) : 0
            }
            setPT(e) {
                Yt(hi, `setPT>${e} playTime:${this.playTime}`),
                this.startStep = 1,
                this.startLoadTime || this.setLoadStartTime(),
                this.playTime || (this.playTime = Jt(),
                Yt(hi, "setPT", `init pt:${this.playTime}, document.visibilityState:${this.visible}`))
            }
            setVT(e, t, n) {
                if (1 === this.startStep) {
                    if (Yt(hi, `setVT>${e}`, t.length),
                    !this.vvTime) {
                        const e = Jt();
                        this.vvTime = e,
                        this.fvt = e - this.playTime,
                        this.nvt = e - this.newTime,
                        this.loadvt = e - this.startLoadTime,
                        this.userFvt = this.switchPlayerTime > 0 ? e - this.switchPlayerTime : this.loadvt;
                        const {startPlayInfo: i} = this
                          , {start: r, end: o, endPos: a} = Bn(t, 0);
                        i.bufEnd = o,
                        i.vvBuffer = a,
                        i.bufStart = r,
                        i.pos = nn(n);
                        const s = this.resolution.current;
                        s && (this.initialUrl.resolution = s),
                        Yt(hi, "setVT: first frame inited", `vt-pt:${this.fvt} vt-nt:${this.nvt} loadvt:${this.loadvt} start:${r} end:${o} endPos:${a}`)
                    }
                    this.startStep = 2
                }
            }
            setResolution(e) {
                this.resolution.current = e
            }
            setMetaDataInfo(e) {
                if (!this.metaTime) {
                    this.metaTime = Jt();
                    const {startPlayInfo: t} = this;
                    t.mvt = ii(this.playTime, Jt()),
                    t.pos = nn(e),
                    Yt(hi, "setMetaTime", `mvt:${t.mvt}`)
                }
            }
            setBreak(e, t) {
                const {br: n} = this;
                n.method = e,
                n.time || (n.time = Jt(),
                n.pos = t),
                n.lTime = Jt(),
                n.count++,
                n.lPos = t
            }
            setPreload(e) {
                this.preloadData = e
            }
            setFirstPlayInfo(e) {
                const {startPlayInfo: t, state: n} = this;
                if (this.firstUpdateTime > 0 || "playing" !== n.current)
                    return;
                const {start: i, end: r} = Bn(e.buffered, e.currentTime)
                  , o = Jt();
                this.firstUpdateTime = o,
                t.startPos = nn(e.currentTime),
                t.updateVT = ii(this.vvTime, o),
                t.autoPlayVT = ii(this.autoplayTime, o),
                t.bufEnd = r,
                t.bufStart = i,
                Yt(hi, "setFirstPlayInfo", `updateVT:${t.updateVT} autoPlayVT:${t.autoPlayVT} mvt:${t.mvt} fvt: ${this.fvt} start:${i} end:${r}`, t)
            }
            updateBuffed(e, t) {
                if (this.bufferFinishTime)
                    return;
                const n = $n(e);
                for (let e = n.length - 1; e >= 0; e--)
                    if (n[e].end >= this.duration - 1) {
                        this.bufferFinishTime = Jt();
                        break
                    }
            }
            setExit(e, t) {
                const {leave: n, exit: i} = this
                  , {startPos: r, endPos: o, diff: a} = Bn(t.buffered, t.currentTime);
                this.vvTime || (n.method = e,
                n.time = Jt(),
                this.playTime && (this.lpt = n.time - this.playTime)),
                i.method = e,
                i.time = Jt(),
                i.bufDiff = a,
                i.bufStart = r,
                i.bufEnd = o,
                i.codec = ni(t),
                i.ismse = ln(t) ? 1 : 0,
                i.vtype = ti(t);
                const s = Yn(t);
                i.url = s,
                i.host = on(s),
                Yt(hi, "setExit", e, i)
            }
            updateAcc(e, t=!1) {
                this.accPlayed.update(e, t)
            }
            startAccTime(e) {
                this.accPlayed.start(e)
            }
            change(e, t) {
                const n = en(e);
                "string" == typeof e ? this[e] && (this[e].current = t) : "Object" === n && Object.keys(e).forEach((t => {
                    "undefined" !== this[t] && (this[t].current = e[t])
                }
                ))
            }
            changeWidthHeight(e, t) {
                if (!e || !t)
                    return;
                this.width = e,
                this.height = t;
                const {current: n} = this.resolution;
                n || (this.resolution.current = ri(e, t))
            }
            getWatchDuration(e=0) {
                return this.accPlayed.getWatchDuration(e)
            }
            get ifFirstTimeUpdate() {
                return this.firstUpdateTime > 0
            }
        }
        const fi = "WaitData";
        class pi {
            constructor(e) {
                this.suspendCallback = e,
                this.init()
            }
            reset() {
                this.init()
            }
            init() {
                this._startTime = -1,
                this._realStartTime = -1,
                this._intervalId = 0,
                this._tIntervalId = 0,
                this._startPos = 0,
                this._inBuffer = !1,
                this._startDiff = 0,
                this._endDiff = 0,
                this._playRate = -1,
                this.nbc = 0,
                this.dbc = 0,
                this.dAcuTime = 0,
                this.nAcuTime = 0,
                this.firstWait = ci(),
                this.latestWait = ci(),
                this.waitList = []
            }
            _clearTimer(e) {
                const t = this[e];
                t && (clearTimeout(t),
                this[e] = void 0)
            }
            _startTimeout(e) {
                this._clearTimer("_tIntervalId"),
                this._tIntervalId = setTimeout(( () => {
                    this.suspendWait("timeout", e),
                    this._clearTimer("_tIntervalId")
                }
                ), 6e4)
            }
            _realStartWait(e) {
                if (this._startTime > 0) {
                    this._realStartTime = Jt();
                    const {buffered: t, currentTime: n, networkState: i, readyState: r} = e
                      , o = Fn(t, n, 1);
                    Yt(fi, "_realStartWait", `realStartTime:${this._realStartTime - this._startTime}\n       startPos:${this._startPos} curPos:${n} isInBuf:${o}`),
                    o ? this.dbc++ : this.nbc++;
                    const a = {
                        networkState: i,
                        readyState: r,
                        pos: this._startPos,
                        inBuffer: this._inBuffer,
                        start: this._startTime,
                        end: 0,
                        startDiff: this._startDiff,
                        endDiff: 0,
                        rate: this._playRate,
                        endType: In,
                        costTime: 0,
                        interval: this.latestWait.end > 0 ? this._startTime - this.latestWait.end : 0
                    };
                    this.latestWait = a,
                    this.firstWait.start || (this.firstWait = a)
                }
            }
            startWait(e) {
                if (this._startTime > 0)
                    return;
                this._tIntervalId && this._clearTimer("_tIntervalId"),
                this._startTime = Jt(),
                this._startPos = e.currentTime;
                const t = e ? Bn(e.buffered, this._startPos) : null;
                this._inBuffer = 1 === (null == t ? void 0 : t.include),
                this._startDiff = (null == t ? void 0 : t.diff) || 0,
                this._playRate = e.playbackRate,
                Yt(fi, `startWait>inBuffer:${this._inBuffer} startDiff:${this._startDiff} startPos:${this._startPos} seeking:${e.seeking}`),
                this._intervalId = setTimeout(( () => {
                    this._startTime > 0 && (this._realStartWait(e),
                    this._startTimeout(e)),
                    this._clearTimer("_intervalId")
                }
                ), 200)
            }
            suspendWait(e, t) {
                if (this._startTime < 0)
                    return;
                this._clearTimer("_intervalId"),
                this._clearTimer("_tIntervalId");
                const n = Jt();
                let i = n - this._startTime;
                if (i = i > 6e4 ? 6e4 : i,
                this._realStartTime < 0)
                    return Yt(fi, `suspendWait>${e} not realStart cost:${i}`),
                    this._startTime = -1,
                    this._inBuffer = !1,
                    void (this._startDiff = 0);
                const {latestWait: r} = this;
                this._inBuffer ? this.dAcuTime += i : this.nAcuTime += i;
                const o = t ? Bn(t.buffered, r.pos) : null;
                r.endType = e,
                r.costTime = i,
                r.endDiff = (null == o ? void 0 : o.diff) || 0,
                r.end = n,
                Yt(fi, `suspendWait>inBuffer:${this._inBuffer} endDiff:${r.endDiff} startDiff:${r.startDiff} startPos:${r.pos} realCost:${i} ${e}`),
                this._startTime = -1,
                this._realStartTime = -1,
                this._inBuffer = !1,
                this._playRate = -1,
                this.suspendCallback && this.suspendCallback(xn, r)
            }
        }
        class gi {
            constructor(e) {
                this.pIndex = -1,
                this.codec_type = "unknown",
                this.vtype = "default",
                this.defaultBitrate = 0,
                this.defaultDefinition = "unknown",
                this.play_type = 0,
                this.source_type = "dir_url",
                this.playMode = "unknown",
                this.vid = "",
                this.tag = "default",
                this.subtag = "default",
                this.preSubtag = "unknown",
                this.preTag = "unknown",
                this.envInfo = {},
                this.ext = {},
                this.bitrateSetHevc = [],
                this.bitrateSet = [],
                this.init(e)
            }
            init(e) {
                Object.keys(e).forEach((t => {
                    (function(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t)
                    }
                    )(this, t) && !un(e[t]) && (this[t] = e[t])
                }
                ))
            }
            reset(e) {
                this.init(e)
            }
        }
        function mi(e) {
            return e.map((e => {
                if (!e)
                    return "";
                if ("string" == typeof e)
                    return e;
                const t = [];
                return e.qualityType && t.push(e.qualityType),
                e.definition && t.push(e.definition),
                e.gearName && t.push(e.gearName),
                t.join("|")
            }
            ))
        }
        const vi = {
            manifest: 1e3,
            network: 2e3,
            demux: 3e3,
            remux: 4e3,
            media: 5e3,
            drm: 7e3,
            other: 8e3,
            runtime: 9e3,
            no_error_handler: 9997,
            custom_error: 9998,
            notSupport: 1005
        }
          , yi = {
            1: 5101,
            2: 5102,
            3: 5103,
            4: 5104,
            5: 5105,
            6: 5106
        };
        function _i(e) {
            const t = [];
            return ["errorMessage", "message", "httpCode"].forEach((n => {
                void 0 !== e[n] && t.push(e[n])
            }
            )),
            e.response && t.push(e.response.statusText || ""),
            t.join("_")
        }
        function Ti(e) {
            const {errorType: t} = e;
            return mn(t, vi) || ("number" == typeof t ? t : vi.media)
        }
        class bi {
            constructor() {
                this.first = null,
                this.latest = null,
                this.errors = [],
                this.count = 0,
                this.retryCount = 0
            }
            parseError(e, t) {
                let n = null;
                if (e)
                    if (rn(t) || e.code)
                        n = {
                            code: mn((e = t.error).code, yi) || e.code,
                            type: vi.media,
                            message: e.message
                        };
                    else {
                        const t = e;
                        n = {
                            code: t.errorCode,
                            type: Ti(t),
                            message: _i(t)
                        }
                    }
                else
                    n = {
                        code: 8101,
                        type: vi.other,
                        message: "error_is_undefined"
                    };
                n.pos = e.currentTime || t.currentTime;
                const i = e.url || e.src || ei(t, "currentSrc");
                n.isExpired = fn(i);
                const {readyState: r, networkState: o} = Jn(t);
                return {
                    ...n,
                    cdnUrl: i,
                    cdnHost: on(i),
                    time: Jt(),
                    readyState: r,
                    networkState: o
                }
            }
            setError(e, t) {
                var n;
                this.count++;
                const i = this.parseError(e, t);
                this.first ? i.interval = i.time - ((null == (n = this.latest) ? void 0 : n.time) || 0) : (i.interval = 0,
                this.first = i),
                Yt("ERROR", "setError", i),
                (Sn.isPC && !Sn.isSupportMP4 || Sn.isSpider) && (i.code = yi[5],
                i.type = vi.notSupport),
                i.stage = t.currentTime > 0 ? "playing" : "beforePlay",
                this.latest = i,
                this.errors.length >= 10 && this.errors.splice(0, 1),
                this.errors.push(i)
            }
            get errorCodes() {
                const e = [];
                return this.errors.forEach((t => {
                    e.push(t.code)
                }
                )),
                e.join(";")
            }
            reset() {
                this.first = null,
                this.latest = null,
                this.errors = [],
                this.count = 0
            }
        }
        function Si(e, t, n, i) {
            const {source_type: r, codec_type: o, vtype: a, preTag: s, tag: l, subtag: u, pIndex: c, preSubtag: h, vid: d, play_type: f, envInfo: p, ext: g, playMode: m} = t
              , {networkState: v, readyState: y, duration: _, currentTime: T, width: b, height: S, isMSE: w} = n
              , k = nn(i.currentTime || T.current)
              , C = ti(i) || a
              , M = ni(i) || o
              , P = rn(i) ? f + 2 : f
              , R = kn.pv ? kn.pv : i ? i.version : ""
              , {deviceScore: x={}} = kn;
            return {
                local_time: Jt(),
                player_sessionid: e,
                ...kn,
                ...x,
                pv: R || In,
                codec_type: M,
                play_type: P,
                source_type: r,
                v: d,
                width: b,
                height: S,
                vtype: C,
                tag: l || In,
                subtag: u || m || In,
                pre_tag: s,
                pre_subtag: h,
                p_index: c,
                video_net_s: v,
                video_ready_s: y,
                vd: nn(_),
                cur_play_pos: k,
                visible: n.visible ? 1 : 0,
                net: navigator.onLine ? "online" : "offline",
                is_mse: w ? 1 : 0,
                env_info: an(p),
                ext: an(g)
            }
        }
        const wi = {
            player_sessionid: "play_sess",
            p_index: "play_order",
            vd: "vduration"
        };
        function ki(e) {
            switch (e) {
            case 0:
                return "duration";
            case 1:
                return "size";
            default:
                return In
            }
        }
        function Ci(e) {
            let t = "";
            return t = "Array" === en(e.url) && e.url.length > 0 ? e.url[0].src || "" : e.url || "",
            {
                cdn_url: t || "",
                cdn_host: on(t) || "",
                cdn_ip: e.ip || ""
            }
        }
        const Mi = {
            preload_start: "onLoadStart",
            preload_ended: "onLoadEnded",
            error: "onError",
            prf_data_size: "onPrfDataSize",
            prf_meta_ready: "onPrfMetaReady",
            preloadstart: "onLoadStartNew",
            preloadend: "onLoadEndedNew",
            preloadedmetadata: "onLoadMetadataNew"
        }
          , Pi = "MDLPreload";
        const Ri = "MDLPlayback";
        class xi {
            constructor(e, t) {
                this.opts = t || {
                    openSizeLog: !0
                },
                this.suspendCallback = e,
                this.init()
            }
            getInitBitrate() {
                return {
                    bitrate: 0,
                    aBitrate: 0,
                    cdnSize: 0,
                    cdnVSize: 0,
                    pcdnSize: 0,
                    pcdnVSize: 0,
                    definition: "",
                    fileid: ""
                }
            }
            init() {
                this.played = [],
                this.playedSize = 0,
                this.cdnSize = 0,
                this.pcdnSize = 0,
                this.cdnVSize = 0,
                this.pcdnVSize = 0,
                this.lastBitrate = null,
                this.curBitrate = this.getInitBitrate(),
                this.nextBitrate = null,
                this.nextStart = -1,
                this.accDatas = {
                    cdnSize: 0,
                    cdnVSize: 0,
                    pcdnSize: 0,
                    pcdnVSize: 0,
                    playedSize: 0
                },
                this.buffers = []
            }
            reset() {
                this.init()
            }
            updatePlayed(e, t, n) {
                const {played: i, curBitrate: r} = this
                  , o = i.length
                  , {bitrate: a, aBitrate: s} = r;
                if (0 === t || o < 1) {
                    const t = o > 0 ? i[o - 1] : null;
                    t && t.end < 0 ? (t.start = e,
                    t.bitrate = a,
                    t.aBitrate = s) : i.push({
                        start: e,
                        end: -1,
                        bitrate: a,
                        aBitrate: s
                    })
                } else {
                    const t = i[o - 1];
                    t.end = e,
                    t.bitrate || (t.bitrate = a,
                    t.aBitrate = s)
                }
            }
            calculateVideoPlaySize() {
                return 0
            }
            getPlayedDuration() {
                const {played: e} = this;
                return oi(e)
            }
            calculatePlaySize() {
                const {played: e, curBitrate: t} = this
                  , n = oi(e)
                  , i = Math.round((t.aBitrate + t.bitrate) * n / 8);
                return this.playedSize += i,
                Yt(Ri, "calculatePlaySize", `duration: ${n} playedSize:${this.playedSize}`),
                this.played = [],
                this.playedSize
            }
            calculateCacheSize() {
                const {curBitrate: e, buffers: t} = this
                  , n = function(e) {
                    let t = 0;
                    return e.forEach((e => {
                        e.start < e.end && (t += e.end - e.start)
                    }
                    )),
                    t
                }(t)
                  , i = Math.round((e.aBitrate + e.bitrate) * n / 8);
                return this.cdnSize = i,
                this.cdnVSize = i,
                Yt(Ri, "calculateCacheSize", `duration: ${n} cdnSize:${this.cdnSize}`, e, t),
                this.buffers = [],
                this.cdnSize
            }
            updateAccData() {
                const {accDatas: e} = this;
                ["cdnSize", "cdnVSize", "pcdnSize", "pcdnVSize", "playedSize"].forEach((t => {
                    e[t] += this[t],
                    this[t] = 0
                }
                ))
            }
            updateBuffed(e) {
                this.buffers = $n(e)
            }
            breakPlaybackData(e, t) {
                ln(Zn(t)) || this.calculateCacheSize(),
                this.calculatePlaySize();
                const {cdnSize: n, cdnVSize: i, pcdnSize: r, pcdnVSize: o, accDatas: a} = this;
                if (Yt(Ri, "breakPlaybackData", e, n, i, r, o, a),
                [n, i, r, o].filter((e => e > 0)).length > 0) {
                    const t = {
                        cdnSize: n,
                        cdnVSize: i,
                        pcdnSize: r,
                        pcdnVSize: o
                    };
                    this.sendMDLEvent(e, t),
                    this.updateAccData()
                }
            }
            getFileSize(e) {
                return function(e, t) {
                    const {bitrate: n, aBitrate: i} = t;
                    return {
                        audio: Math.round(e * i / 8),
                        video: Math.round(e * (n - i) / 8),
                        total: Math.round(e * n / 8)
                    }
                }(e, this.curBitrate)
            }
            checkNextBitrateStart(e) {
                const {nextBitrate: t, nextStart: n} = this;
                n > -1 && e >= e && t && (this.calculatePlaySize(),
                Yt(Ri, "checkNextBitrate", e, e, this.cdnSize),
                t && (this.curBitrate = {
                    ...t
                }),
                this.updatePlayed(e, 0),
                this.nextStart = -1,
                this.nextBitrate = null)
            }
            updateDefInfo(e, t) {
                const {mediaType: n, start: i, bitrate: r, definition: o, fileid: a} = e;
                Yt(Ri, "updateDefInfo", t, n, e);
                const s = this.getInitBitrate();
                "audio" === n ? s.aBitrate = r || 0 : (s.bitrate = r || 0,
                s.definition = o,
                s.fileid = a,
                this.updateLastDefInfo(),
                this.nextStart = un(i) ? -1 : i,
                -1 === this.nextStart && (this.curBitrate = s))
            }
            updateLastDefInfo() {
                const {curBitrate: e} = this;
                e.bitrate > 0 && (this.lastBitrate = {
                    ...e
                })
            }
            updateDownload(e) {
                const {cdn_size: t, pcdn_size: n, mediaType: i, bitrate: r} = e
                  , {curBitrate: o, nextBitrate: a} = this
                  , s = t || 0
                  , l = n || 0;
                let u = 0
                  , c = 0;
                "audio" !== i && (u = s,
                c = l),
                this.cdnSize += s,
                this.pcdnSize += l,
                this.cdnVSize += u,
                this.pcdnVSize += c;
                const h = this.nextStart > 0 ? a : o;
                Yt(Ri, "updateDownload", null == h ? void 0 : h.bitrate, this.played.length > 0 ? `end:${this.played[0].end} bitrate:${this.played[0].bitrate}` : -1),
                h && (h.bitrate = r || 0,
                h.cdnSize += s,
                h.pcdnSize += l,
                h.cdnVSize += u,
                h.pcdnVSize += c)
            }
            sendMDLEvent(e, t) {
                const {suspendCallback: n, opts: i} = this;
                if (!i.openSizeLog || !n)
                    return;
                const {cdnSize: r, cdnVSize: o, pcdnSize: a, pcdnVSize: s, definition: l} = t
                  , u = {
                    vds: r,
                    pvds: a,
                    vvds: o,
                    pvvds: s,
                    df: l,
                    end_type: e
                };
                Yt(Ri, "sendMDLEvent", e, En, u),
                n(En, u)
            }
        }
        let Ei = 0;
        const Di = "Collector";
        class Li {
            constructor(e, t) {
                this._onLoadstartMse = () => {
                    Yt(Di, "onLoadstartMse", this.playPerf.startLoadTime),
                    this.playPerf.setLoadStartTime(),
                    this._onLoadstart(this.player, Un.LOADSTART_MSE),
                    this.playPerf.setMeta(null)
                }
                ,
                this._onMetaReady = e => {
                    const {audioCodec: t, videoCodec: n, timeRange: i=[]} = e;
                    this.playPerf.setMeta({
                        v_codec: t || "",
                        a_codec: n || "",
                        f_time: i.length > 0 ? nn(i[0].endTime || 0) : 0
                    })
                }
                ,
                this._onLoadstart = (e, t="loadstart") => {
                    const {playPerf: n, playMDL: i, player: r, vInfo: o} = this
                      , a = Yn(r);
                    Yt(Di, "onLoadstart", `startStep:${n.startStep}`);
                    const s = t !== Un.LOADSTART_MSE && (!(c = a) || window.location.href.indexOf(c) > -1)
                      , l = t
                      , u = t === Un.LOADSTART_MSE || ln(Zn(r));
                    var c;
                    if (n.isMSE = u,
                    n.updateBuffed(r.buffered, l),
                    i.updateBuffed(r.buffered),
                    n.change("state", l),
                    n.loadState = 1,
                    n.playbackState = 1,
                    n.setResolution(o.defaultDefinition),
                    n.seeking = !1,
                    n.updatePState(r, l),
                    n.setPreload(function(e) {
                        const {plugins: t} = e || {}
                          , n = {
                            vtype: In,
                            time: 0,
                            size: 0,
                            f_size: 0,
                            bitrate: 0,
                            codec: "UNKNOWN"
                        };
                        if (!t || !t.mp4encryptplayer)
                            return n;
                        const {preLoadData: i} = t.mp4encryptplayer;
                        if (i) {
                            const {type: e, fileSize: t, vtype: n, codecType: r, bitrate: o, preloadTime: a, byteLength: s, definition: l} = i;
                            return {
                                vtype: n,
                                time: nn(a),
                                size: s,
                                f_size: t || 0,
                                bitrate: o,
                                definition: l,
                                type: e,
                                codec: r
                            }
                        }
                        return n
                    }(r)),
                    Yt(Di, "onLoadstart", `startStep:${n.startStep} isSrcEmpty:${s}`),
                    n.setInitData(r),
                    !u) {
                        const e = {
                            url: a,
                            definition: o.defaultDefinition
                        };
                        this.setInitialUrl(e),
                        i.updateDefInfo(function(e, t) {
                            const {curDefinition: n, config: i} = e || {};
                            return n && n.bitrate ? n : i && i.defaultBitrate ? {
                                bitrate: i.defaultBitrate || 0,
                                definition: i.defaultDefinition || 0
                            } : t ? {
                                bitrate: t.defaultBitrate || 0,
                                definition: t.defaultDefinition || ""
                            } : {
                                bitrate: 0,
                                definition: ""
                            }
                        }(r, this.vInfo), 0)
                    }
                    0 === n.startStep && !s && n.setPT(l)
                }
                ,
                this._onDurationchange = () => {
                    const {player: e, playPerf: t} = this;
                    t.duration = e.duration,
                    Yt(Di, "onDurationchange", e.duration)
                }
                ,
                this._onLoadedmetadata = () => {
                    const {playPerf: e, player: t, vInfo: n} = this
                      , i = ln(Zn(this.player));
                    e.playbackState = 10,
                    e.setMetaDataInfo(t.currentTime),
                    e.isMSE = i,
                    Yt(Di, "onLoadedmetadata");
                    const r = {
                        url: Yn(t),
                        definition: n.defaultDefinition
                    };
                    this.setInitialUrl(r)
                }
                ,
                this._onLoadeddata = () => {
                    const {playPerf: e, playMDL: t, player: n} = this
                      , i = Hn.LOADED_DATA;
                    Yt(Di, "onLoadeddata");
                    const r = Zn(n)
                      , o = (null == r ? void 0 : r.videoWidth) || 0
                      , a = (null == r ? void 0 : r.videoHeight) || 0;
                    e.changeWidthHeight(o, a),
                    e.playbackState = 2,
                    e.change("state", i),
                    e.loadState = 9,
                    e.updatePState(n, i),
                    e.updateBuffed(n.buffered, i),
                    t.updateBuffed(n.buffered),
                    e.setVT(i, n.buffered, n.currentTime)
                }
                ,
                this._onCanplay = () => {
                    const {playPerf: e, playMDL: t, player: n} = this;
                    Yt(Di, "onCanplay", `startStep:${e.startStep} vvTime:${e.vvTime} playTime:${e.playTime}`),
                    e.updatePState(n, Hn.CANPLAY),
                    e.updateBuffed(n.buffered, Hn.CANPLAY),
                    t.updateBuffed(n.buffered),
                    e.setVT("canplay", n.buffered, n.currentTime)
                }
                ,
                this._onPause = () => {
                    const {operate: e, playPerf: t, player: n, playMDL: i} = this;
                    n.error || (Yt(Di, "onPause", t.state.current),
                    t.change({
                        state: Hn.PAUSE
                    }),
                    t.playbackState = 4,
                    t.paused = !1,
                    t.updateAcc(Hn.PAUSE),
                    i.updatePlayed(n.currentTime, 1),
                    e.startPause())
                }
                ,
                this._onPlaying = () => {
                    const {operate: e, playPerf: t, wait: n, player: i, playMDL: r} = this;
                    Yt(Di, "onPlaying");
                    const o = Hn.PLAYING;
                    t.paused = !1,
                    t.change("state", o),
                    t.playbackState = 3,
                    t.startAccTime(o),
                    r.updatePlayed(i.currentTime, 1),
                    n.suspendWait(o, i),
                    e.endPause()
                }
                ,
                this._onWaiting = () => {
                    const {playPerf: e, wait: t, player: n} = this
                      , {ifFirstTimeUpdate: i, vvTime: r} = e
                      , o = Hn.WAITING;
                    Yt(Di, "onWaiting", i, r),
                    !n.seeking && i && r && (t.startWait(n),
                    e.change("state", o),
                    e.playbackState = 7),
                    e.updatePState(n, o),
                    e.updateAcc(Hn.WAITING)
                }
                ,
                this._onSeeking = () => {
                    const {playPerf: e, wait: t, operate: n, player: i, playMDL: r} = this
                      , {ifFirstTimeUpdate: o, state: a, startStep: s, vvTime: l} = e;
                    Yt(Di, "onSeeking", i.currentTime, `curState:${a.current} lasteState:${a.last} vvTime:${l} ended1:${i.ended} ifFirstTimeUpdate:${o}`, i.seeking, a.current !== Hn.ENDED || l && o);
                    const u = Hn.SEEKING;
                    var c;
                    (c = a.current) !== Hn.ENDED && c !== Hn.LOAD_START && l && o && (e.seeking = !0,
                    t.suspendWait(u, i),
                    n.startSeek(i, a.current),
                    e.change("state", u),
                    e.playbackState = 8),
                    e.updatePState(i, u),
                    0 === s && e.setPT(u),
                    e.startAccTime(u),
                    r.updatePlayed(i.currentTime, 0)
                }
                ,
                this._onSeeked = () => {
                    const {player: e, playPerf: t, operate: n} = this;
                    Yt(Di, "onSeeked", e.seeking, e.currentTime),
                    t.updatePState(e, Hn.SEEKED),
                    t.seeking = !1;
                    const i = e.paused ? Hn.PAUSE : Hn.PLAYING;
                    t.change("state", i),
                    t.playbackState = e.paused ? 4 : 3,
                    n.suspendSeek(t.state.current, Hn.SEEKED)
                }
                ,
                this._onTimeupdate = () => {
                    const {playPerf: e, playMDL: t, player: n} = this;
                    if (n.error)
                        return;
                    const {currentTime: i} = n;
                    e.change({
                        currentTime: i
                    }),
                    t.updatePlayed(i, 1),
                    e.firstUpdateTime || (Yt(Di, "onTimeupdate"),
                    e.setFirstPlayInfo(n)),
                    !n.paused && !n.ended && e.startAccTime(Hn.TIMEUPDATE)
                }
                ,
                this._onProgress = () => {
                    const {player: e, playMDL: t, playPerf: n} = this;
                    n.updatePState(e, Hn.PROGRESS),
                    n.updateBuffed(e.buffered, Hn.PROGRESS),
                    t.updateBuffed(e.buffered)
                }
                ,
                this._onSuspend = () => {
                    const {player: e, playPerf: t} = this;
                    Yt(Di, "onSuspend"),
                    t.updatePState(e, Hn.SUSPEND)
                }
                ,
                this._onVolumechange = () => {
                    const {muted: e, volume: t} = this.player;
                    this.playPerf.change({
                        muted: e,
                        volume: t
                    })
                }
                ,
                this._onRatechange = () => {
                    this.playPerf.change("playbackRate", this.player.playbackRate)
                }
                ,
                this._onEmptied = () => {
                    const {player: e, playPerf: t} = this;
                    t.loadState = 0,
                    t.updatePState(e, Hn.EMPTIED),
                    t.updateBuffed(e.buffered, Hn.EMPTIED),
                    Yt(Di, "onEmptied")
                }
                ,
                this._onStalled = () => {
                    const {player: e, playPerf: t} = this
                      , n = Hn.STALLED;
                    t.updatePState(e, n),
                    "Safari" === Sn.name || (t.loadState = 11,
                    t.change("state", n)),
                    Yt(Di, "onStalled")
                }
                ,
                this._onAbort = () => {
                    const {player: e, playPerf: t} = this
                      , n = Hn.ABORT;
                    t.updatePState(e, n),
                    t.change("state", n),
                    Yt(Di, "onAbort")
                }
                ,
                this.options = e || {},
                this.player = t,
                Ei || (Ei = function() {
                    try {
                        return parseInt(window.performance.now().toFixed(0), 10)
                    } catch {
                        return 0
                    }
                }()),
                this.playPerf = new di,
                this.operate = new si(( (e, t) => {
                    this._suspendStateCallback(e, t)
                }
                )),
                this.wait = new pi(( (e, t) => {
                    this._suspendStateCallback(e, t)
                }
                )),
                this.vInfo = new gi({}),
                this.error = new bi,
                this.extData = {};
                const n = {
                    openSizeLog: this.options.openSizeLog
                }
                  , {ext: i, switchPlayerTime: r} = this.options;
                this.setExtData(i),
                this.setSwitchTime(r),
                this.playMDL = new xi(( (e, t) => this._suspendStateCallback(e, t)),n)
            }
            _suspendStateCallback(e, t) {
                Yt(Di, "_suspendStateCallback", e, t)
            }
            get performanceNow() {
                return Ei
            }
            resetDataOnEnded() {
                this.reset(!0)
            }
            reset(e) {
                Yt(Di, "reset", `isEnded:${e}`);
                const {operate: t, playPerf: n, wait: i, error: r, playMDL: o} = this;
                t.reset(),
                n.reset(e),
                i.reset(),
                r.reset(),
                o.reset()
            }
            setSwitchTime(e) {
                this.playPerf.switchPlayerTime = e || Jt()
            }
            setExtData(e={}) {
                Object.keys(e).forEach((t => {
                    this.extData[t] = e[t]
                }
                ))
            }
            setPlayLeaveInfo(e, t) {
                const n = e || Un.RESET
                  , i = t || Gn;
                Yt(Di, "setPlayLeaveInfo");
                const {playPerf: r, wait: o, operate: a, player: s} = this;
                r.setExit(i, s),
                o.suspendWait(n, s),
                a.suspendSeek(r.state.current, n)
            }
            setInitialUrl(e) {
                const {playPerf: t, vInfo: n} = this;
                e.definition || (e.definition = n.defaultDefinition),
                e.bitrate || (e.bitrate = 0 | n.defaultBitrate),
                t.updateUrl(e)
            }
            _onPlay() {
                const {playPerf: e, player: t, options: n} = this;
                t.error || (Yt(Di, "onPlay", `startStep :${e.startStep} this.ended:${e.ended}`),
                e.state.current === Hn.PAUSE && e.playCount++,
                e.ended && e.loopCount++,
                n.ifSendVVEnded && e.ended && (this.resetDataOnEnded(),
                e.ended = !1,
                e.setPT("play")))
            }
            _onEnded() {
                Yt(Di, "onEnded");
                const e = Hn.ENDED
                  , {playPerf: t, wait: n, player: i, options: r} = this;
                t.ended = !0,
                t.change("state", e),
                t.playbackState = 6,
                t.updateAcc(e, !0),
                n.suspendWait(e, i),
                r.ifSendVVEnded && t.setExit("ended", i)
            }
            _onError(e) {
                Yt(Di, "onError", e);
                const t = Hn.ERROR
                  , {playPerf: n, playMDL: i, wait: r, operate: o, error: a, player: s} = this;
                e || (e = this.player.error),
                a.setError(e, s),
                n.updatePState(s, t),
                n.updateBuffed(s.buffered, t),
                i.updateBuffed(s.buffered),
                n.change("state", t),
                n.loadState = 10,
                n.playbackState = 5,
                n.setExit("error", s),
                n.seeking = !1,
                n.updateAcc(t),
                r.suspendWait(t, s),
                i.breakPlaybackData(t, s),
                o.suspendSeek(n.state.current, t)
            }
            _onPlayCatch(e, t) {
                const {playPerf: n, wait: i, operate: r, playMDL: o, player: a} = this
                  , s = Un.PLAY_CATCH;
                n.updatePState(a, s),
                n.change("state", s),
                n.seeking = !1,
                n.updateAcc(s),
                n.setBreak(s, n.currentTime.current),
                i.suspendWait(s, a),
                o.breakPlaybackData(s, a),
                r.suspendSeek(n.state.current, s)
            }
            _onPlayerDestroy() {
                const {playPerf: e, playMDL: t, wait: n, operate: i, player: r} = this
                  , o = Un.PLAYER_DESTROY;
                e.setExit("destroy", r),
                e.updateAcc(o),
                n.suspendWait(o, r),
                t.breakPlaybackData(o, r),
                i.suspendSeek(e.state.current, o)
            }
            _onAutoPlayStart() {
                Yt(Di, "onAutoPlayStart");
                const {playPerf: e} = this;
                e.autoplayTime || (e.autoplayTime = Jt())
            }
            _onAutoPlayPrevented() {
                Yt(Di, "onAutoPlayPrevented");
                const {playPerf: e} = this;
                e.playbackState = 9,
                e.autoplayStart = 0
            }
            sendEvent(e, t) {}
        }
        const Ii = "Collector";
        let Oi = null;
        const Ai = new class {
            constructor(e) {
                this.onLoadStartNew = e => {
                    Yt(Pi, "onLoadStartNew", e);
                    const {url: t="", vid: n="", bitrate: i=0, formatType: r="MP4", fileid: o="", definition: a="", codecType: s=""} = e || {}
                      , l = Ci({
                        url: t
                    })
                      , u = {
                        ...e,
                        ...l,
                        v: n || "",
                        codec_type: s,
                        vtype: r,
                        bitrate: i,
                        fileid: o || "",
                        df: a,
                        task_type: -1,
                        errc: 0,
                        vds: 0,
                        pvds: 0,
                        vvds: 0,
                        pvvds: 0
                    };
                    this.vid = n,
                    this.data = u,
                    this.meta = {
                        a_codec: "",
                        v_codec: ""
                    },
                    this.startTime = Jt(),
                    this.state = "start"
                }
                ,
                this.onLoadStart = e => {
                    Yt(Pi, "onPreloadStart", e.cacheKey, e);
                    const {codecType: t, vtype: n, vid: i, width: r, height: o, bitrate: a, file_id: s, definition: l, type: u} = e
                      , {data: c} = this
                      , h = Ci(e);
                    let d = In;
                    d = r && o ? ri(r, o) : l;
                    const f = {
                        ...c,
                        ...h,
                        v: i,
                        codec_type: t,
                        vtype: n,
                        bitrate: a,
                        fileid: s || "",
                        df: d,
                        task_type: un(u) ? -1 : u
                    };
                    this.vid = i,
                    this.data = f,
                    this.meta = {
                        a_codec: "",
                        v_codec: "",
                        f_time: 0,
                        f_size: 0
                    },
                    this.startTime = Jt(),
                    this.state = "start"
                }
                ,
                this.onLoadEndedNew = e => {
                    Yt(Pi, "onLoadEndedNew", e);
                    const {stats: t, url: n} = e
                      , i = Ci({
                        url: n
                    })
                      , r = Jt() - this.startTime
                      , o = t.dataSize
                      , a = t.duration
                      , {data: s} = this;
                    s.cdn_url = i.cdn_url,
                    s.cdn_host = i.cdn_host,
                    s.isexpired = fn(i.cdn_url),
                    s.cost_time = r,
                    s.vpls = o,
                    s.vplt = a,
                    this.sendMDLEvent("loadended", s),
                    this.vid = "",
                    this.startTime = 0,
                    this.data = this.getInitData(),
                    this.state = "suspend"
                }
                ,
                this.onLoadEnded = e => {
                    if (Yt(Pi, "onPreloadEnded", e.cacheKey, e),
                    this.vid && this.vid === e.vid) {
                        const t = Ci(e)
                          , n = Jt() - this.startTime
                          , i = this.data.vds;
                        this.setMetaFirst(e);
                        const r = {
                            ...this.data,
                            vplt: tn(e.preloadTime, 2),
                            vpls: i || e.preloadSize,
                            cost_time: e.costTime || n,
                            bitrate: e.bitrate,
                            fileid: e.file_id || "",
                            isexpired: fn(t.cdn_url)
                        };
                        this.sendMDLEvent("loadended", r)
                    } else
                        console.warn(Pi, "onLoadEnded", "cacheKey_not_match", this.vid, e.cacheKey);
                    this.vid = "",
                    this.startTime = 0,
                    this.data = this.getInitData(),
                    this.state = "suspend"
                }
                ,
                this.onError = e => {
                    if (Yt(Pi, "onError", e),
                    this.vid) {
                        const {context: t} = e
                          , n = Jt() - this.startTime
                          , i = Ci(t || {})
                          , r = {
                            ...this.data,
                            errc: e.errorCode,
                            err_msg: _i(e),
                            cost_time: e.costTime || n,
                            fileid: e.file_id || "",
                            isexpired: fn(i.cdn_url),
                            ...i
                        };
                        this.sendMDLEvent("loaderror", r)
                    }
                    this.vid = "",
                    this.startTime = 0,
                    this.data = this.getInitData(),
                    this.state = "suspend"
                }
                ,
                this.onPrfDataSize = e => {
                    if (this.vid) {
                        const {cdn_size: t, pcdn_size: n, mediaType: i} = e
                          , {data: r} = this
                          , o = t || 0
                          , a = n || 0;
                        let s = 0
                          , l = 0;
                        "audio" !== i && (s = o,
                        l = a),
                        r.vds += o,
                        r.pvds += a,
                        r.vvds += s,
                        r.pvvds += l
                    }
                    this.state = "load"
                }
                ,
                this.onLoadMetadataNew = e => {
                    Yt(Pi, "onLoadMetadataNew", e);
                    const {tracks: t=[]} = e;
                    t.forEach((e => {
                        "audio" === e.type ? this.meta.a_codec = e.codec : this.meta.v_codec = e.codec
                    }
                    ))
                }
                ,
                this.onPrfMetaReady = e => {
                    this.setMetaFirst(e)
                }
                ,
                this.eventCallback = e,
                this.init()
            }
            init() {
                this.emptyCount = 0,
                this.data = this.getInitData(),
                this.vid = "",
                this.extData = {
                    tag: In,
                    subtag: In,
                    preSubtag: In,
                    preTag: In,
                    pIndex: -1,
                    isMSE: !1
                },
                this.meta = {
                    a_codec: "",
                    v_codec: "",
                    f_time: 0,
                    f_size: 0
                },
                this.state = "init"
            }
            getInitData() {
                return {
                    codec_type: In,
                    v: "",
                    vtype: In,
                    errc: 0,
                    err_msg: "",
                    vplt: 0,
                    vpls: 0,
                    vds: 0,
                    pvds: 0,
                    vvds: 0,
                    pvvds: 0,
                    cdn_host: "",
                    cdn_ip: "",
                    cost_time: 0,
                    df: In,
                    bitrate: 0,
                    fileid: "",
                    task_type: -1,
                    isexpired: 0
                }
            }
            setMetaFirst(e) {
                const {mediaSegList: t=[], meta: n} = e || {}
                  , i = t.length > 0 ? t[0] : {
                    timeRange: [],
                    totalRange: []
                }
                  , {timeRange: r=[], totalRange: o=[]} = i;
                this.meta.f_size = o.length > 1 ? o[1] : 0,
                this.meta.f_time = r.length > 1 ? nn(r[1]) : 0,
                this.meta.v_codec = (null == n ? void 0 : n.videoCodec) || "",
                this.meta.a_codec = (null == n ? void 0 : n.audioCodec) || ""
            }
            reset() {
                this.init()
            }
            setExtData(e) {
                e && gn(this.extData, e)
            }
            attach(e) {
                this.preload !== e && (Yt(Pi, "attach"),
                this.preload && this.detach(),
                this.preload = e,
                Object.keys(Mi).forEach((e => {
                    this.preload.on(e, this[Mi[e]])
                }
                )))
            }
            detach() {
                Yt(Pi, "attach "),
                this.preload && Object.keys(Mi).forEach((e => {
                    this.preload.off(e, this[Mi[e]])
                }
                )),
                this.reset(),
                this.preload = null
            }
            sendMDLEvent(e, t) {
                const {eventCallback: n, extData: i} = this
                  , r = {
                    ...kn,
                    ...t,
                    task_type: ki(t.task_type),
                    empty_c: 0,
                    tag: i.tag || In,
                    subtag: i.subtag || In,
                    pre_tag: i.preTag || In,
                    pre_subtag: i.preSubtag || In,
                    p_index: i.pIndex,
                    is_mse: i.isMSE ? 1 : 0,
                    meta: an(this.meta)
                };
                Yt(Pi, "event", e, Dn, r),
                n && n(Dn, r)
            }
        }
        (( (e, t) => {
            Oi && Oi.event(e, t)
        }
        ));
        let Gi = null;
        class Ni extends Li {
            constructor(e, t) {
                const n = function(e) {
                    const t = {
                        line_app_id: 0,
                        line_user_id: "",
                        playerCoreVersion: "",
                        playerVersion: "",
                        app_version: "",
                        channel: "cn",
                        channelDomain: "",
                        absdkVersion: "",
                        maxQueueCount: 5,
                        ifSendVVEnded: !1,
                        isTask: !1,
                        vtype: "MP4",
                        codec_type: "",
                        tag: "普通视频",
                        playType: 0,
                        sourceType: "vid",
                        subtag: "",
                        playMode: "",
                        sendLocalCallback: (e, t) => {}
                        ,
                        disableLocalCache: !1,
                        closeResolutionLog: !1,
                        closeSeekLog: !1,
                        needXhrCheck: !1,
                        trackerConfig: {},
                        envInfo: {},
                        ext: {},
                        openSizeLog: !0
                    };
                    return Object.keys(e).forEach((n => {
                        t[n] = e[n]
                    }
                    )),
                    t
                }(e);
                super(n, t),
                this._onPlay = () => {
                    const {ended: e, state: t, isMSE: n} = this.playPerf;
                    e && (this.isSendOnePlay = !1),
                    super._onPlay(),
                    Ai.setExtData({
                        isMSE: n
                    }),
                    Yt(Ii, "onPlay", t.current, t.last)
                }
                ,
                this._onEnded = () => {
                    super._onEnded();
                    const {ifSendVVEnded: e} = this.options;
                    e && this._trackOnePlay("ended")
                }
                ,
                this._onError = e => {
                    super._onError(e);
                    const {latest: t} = this.error
                      , {playPerf: n} = this;
                    if (Yt(Ii, "onError", e, t),
                    "dash" !== this.player.type || !this.player.replayRunning) {
                        if (n.playTime || n.setPT("error"),
                        (null == t ? void 0 : t.code) === yi[5])
                            return this._trackOneError("error", t),
                            void (this.isSendOnePlay = !0);
                        this._trackOneError("error", t),
                        this._trackOnePlay("error", t)
                    }
                }
                ,
                this._onSourceError = e => {
                    Yt(Ii, "onSourceError", e)
                }
                ,
                this._onPlayCatch = (e, t) => {
                    Yt(Ii, "onPlayCatch", e, t);
                    const n = t ? t.message : "";
                    if (!t || "MP4_0" === e && "no preload" === n)
                        return;
                    super._onPlayCatch(e, t);
                    const {initialUrl: i} = this.playPerf;
                    sn(t.url) && (t.url = i.url);
                    const {error: r} = this;
                    r.setError(t, this.player),
                    this.playMDL.breakPlaybackData(An, this.player),
                    this._trackOneError(An, r.latest)
                }
                ,
                this._onPlayerDestroy = () => {
                    super._onPlayerDestroy();
                    const {playTime: e} = this.playPerf;
                    Yt(Ii, "onPlayerDestroy", this.sessionId, e),
                    e > 0 && this._trackOnePlay("player_destroy"),
                    this.reset(!1),
                    this._unBindEvt()
                }
                ,
                this._onPlayNext = () => {
                    var e, t;
                    null != (t = null == (e = this.player) ? void 0 : e.getCore) && t.call(e) && (Yt(Ii, "_onPlayNext", this.sessionId),
                    this._onPlayerReset("next"))
                }
                ,
                this._onPlayerReset = e => {
                    const {playPerf: t} = this;
                    Yt(Ii, "onPlayerReset", this.sessionId, `type:${e} playTime:${t.playTime}`),
                    this.playMDL.breakPlaybackData(Gn, this.player),
                    t.updateAcc("reset"),
                    t.playTime > 0 && (this.setPlayLeaveInfo(Un.RESET, Gn),
                    this._trackOnePlay(e || Un.RESET)),
                    this.reset(!1)
                }
                ,
                this._onAutoPlayStart = () => {
                    super._onAutoPlayStart()
                }
                ,
                this._onAutoPlayPrevented = () => {
                    super._onAutoPlayPrevented()
                }
                ,
                this._onVisibilityChange = e => {
                    Yt(Ii, "onVisibilityChange", e);
                    const {playPerf: t} = this;
                    t.visible = "visible" === e,
                    t.updateAcc("visible", !1)
                }
                ,
                this._onInitialUrl = e => {
                    Yt(Ii, "onInitialUrl", e),
                    this.setInitialUrl(e)
                }
                ,
                this._onBeforeDefiChange = e => {
                    Yt(Ii, "onBeforeDefinitionChange", e)
                }
                ,
                this._onDefiChange = e => {
                    Yt(Ii, "onDefinitionChange", e)
                }
                ,
                this._onDefiChangeSuccess = () => {
                    Yt(Ii, "onDefiChangeSuccess")
                }
                ,
                this._onDefiChangeDetail = e => {
                    Yt(Ii, "onDefiChangeDetail", e);
                    const {playMDL: t, player: n} = this;
                    t.updateDefInfo(e, n.currentTime);
                    const {lastBitrate: i} = t;
                    i && e.mediaType
                }
                ,
                this._onPrfDataSize = e => {
                    Yt(Ii, "onPrfDataSize", e),
                    this.playMDL.updateDownload(e)
                }
                ,
                this._onXgLogCache = () => {
                    const e = (null == (t = this.player) ? void 0 : t.logCache) || (null == t ? void 0 : t.getLogCache);
                    var t;
                    e && (this.templog = {
                        vtype: ti(this.player),
                        log: e
                    })
                }
                ,
                this._onDegrade = () => {
                    Yt(Ii, "onDegrade")
                }
                ,
                this._onAbrChange = () => {
                    Yt(Ii, "onAbrChange")
                }
                ,
                this._onMediaFormatError = e => {
                    Yt(Ii, "onMediaFormatError", e)
                }
                ,
                this._onPageUnload = () => {
                    const {playTime: e} = this.playPerf;
                    if (Yt(Ii, "onPageUnload", this.sessionId, e),
                    e > 0) {
                        const e = Nn;
                        this.setPlayLeaveInfo(e, e),
                        this.playMDL.breakPlaybackData(e, this.player),
                        this._trackOnePlay(Nn)
                    }
                }
                ,
                e && e.line_app_id ? (this.isSendOnePlay = !1,
                this.sessionId = "",
                this.init(e),
                this.player && this._bindEvt(this.player)) : console.warn("player.config.vodLogOpts.line_app_id is necessary for plugin xgVodLogger")
            }
            static get version() {
                return vn
            }
            static get preloadMDL() {
                return Ai
            }
            static setCustomTracker(e) {
                Yt(Ii, "setCustomTracker", e),
                Gi = e
            }
            static set Tracker(e) {
                Oi = e
            }
            static get Tracker() {
                return Oi
            }
            static sendEvent(e, t) {
                Oi && Oi.event(e, t)
            }
            static set commonData(e) {
                Pn(e)
            }
            static set TEA_ID(e) {
                Mn = e,
                Cn = `__tea_cache_tokens_${Mn}`
            }
            static get TEA_ID() {
                return Mn
            }
            static set AB_SDK_VERSION(e) {
                kn.absdkVersion = Array.isArray(e) ? e.join(",") : e
            }
            static get AB_SDK_VERSION() {
                return kn.absdkVersion
            }
            static attachPreloader(e) {
                Ai.attach(e)
            }
            static detachPreloader() {
                Ai.detach()
            }
            static get defaultConfig() {
                return {
                    line_app_id: 0,
                    line_user_id: "",
                    playerCoreVersion: "",
                    playerVersion: "",
                    app_version: "",
                    channel: "cn",
                    channelDomain: "",
                    absdkVersion: "",
                    maxQueueCount: 5,
                    ifSendVVEnded: !1,
                    isTask: !1,
                    vtype: "MP4",
                    codec_type: "",
                    tag: "普通视频",
                    playType: 0,
                    sourceType: "vid",
                    subtag: "",
                    playMode: "",
                    sendLocalCallback: (e, t) => {}
                    ,
                    disableLocalCache: !1,
                    closeResolutionLog: !1,
                    closeSeekLog: !1,
                    needXhrCheck: !1,
                    trackerConfig: {},
                    envInfo: {},
                    ext: {},
                    openSizeLog: !0
                }
            }
            init(e) {
                Yt(Ii, "init", e);
                const t = this.options || {};
                Object.keys(e).forEach((n => {
                    t[n] = e[n]
                }
                ));
                const n = {
                    ...e.trackConfig
                };
                ["referrer", "channel", "channel_domain"].forEach((t => {
                    void 0 !== e[t] && (n[t] = e[t])
                }
                )),
                e.channelDomain && (n.channel_domain = e.channelDomain),
                Oi && Oi.config(n),
                this.initSessionId(),
                this.update(e)
            }
            update(e) {
                Pn(e),
                this.vInfo.init(e);
                const {ext: t={}, switchPlayerTime: n} = e;
                this.setExtData(t),
                n && this.setSwitchTime(n),
                Ai.setExtData(e)
            }
            initSessionId() {
                if (this.sessionId)
                    return;
                let e = "0";
                try {
                    e = function(e) {
                        if (!window.localStorage)
                            return "";
                        const t = window.localStorage.getItem(e) || "";
                        try {
                            return JSON.parse(t)
                        } catch {
                            return t
                        }
                    }(Cn).web_id || "0"
                } catch {
                    e = "0"
                }
                this.sessionId = function(e) {
                    let t = "0";
                    try {
                        const n = window.localStorage.getItem(e) || ""
                          , i = JSON.parse(n);
                        t = (null == i ? void 0 : i.web_id) || "0"
                    } catch {
                        t = "0"
                    }
                    return function(e) {
                        let t = (new Date).getTime()
                          , n = 0;
                        try {
                            n = parseInt(e)
                        } catch {
                            n = 0
                        }
                        return t += n,
                        window.performance && "function" == typeof window.performance.now && (t += window.performance.now()),
                        "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                            const n = (t + 16 * Math.random()) % 16 | 0;
                            return t = Math.floor(t / 16),
                            ("x" === e ? n : 3 & n | 8).toString(16)
                        }
                        ))
                    }(t)
                }(e),
                Yt(Ii, `sessionId webId:${e} ${this.sessionId}`)
            }
            attachPlayer(e) {
                e !== this.player && (this.detachPlayer(this.player),
                this.player = e,
                this.player.version && (kn.pv = this.player.version),
                this._bindEvt(e));
                const t = null == e ? void 0 : e.preloader;
                t && Ai.attach(t);
                const n = (null == e ? void 0 : e.version) || "";
                kn.pv = n
            }
            detachPlayer(e) {
                e && this._unBindEvt(),
                e === this.player && (this.player = null)
            }
            resetConfig(e) {
                Yt(Ii, "reset", e)
            }
            reset(e) {
                super.reset(e),
                this.isSendOnePlay = !1
            }
            destroy() {
                const {operate: e, playPerf: t, playMDL: n, wait: i, error: r, player: o} = this;
                Yt(Ii, "destroy", this.sessionId);
                const a = "log_destroy";
                t.setExit("log_destroy", o),
                t.updateAcc(a),
                n.breakPlaybackData(a, o),
                this._trackOnePlay(a),
                e.reset(),
                t.reset(!1),
                i.reset(),
                r.reset(),
                n.reset(),
                this.detachPlayer(this.player)
            }
            getTokenFromTracker() {
                return Oi ? Oi.getToken() : {}
            }
            _bindEvt(e) {
                e && (Xn(this.sessionId, Wn, this._onVisibilityChange),
                Xn(this.sessionId, Qn, this._onPageUnload),
                function(e, t) {
                    jn(e, t, 1)
                }(e, this))
            }
            _unBindEvt() {
                const {player: e} = this;
                e && (function(e, t) {
                    jn(e, t, 2)
                }(e, this),
                Kn(this.sessionId, Wn),
                Kn(this.sessionId, Qn))
            }
            _suspendStateCallback(e, t) {
                if (e && t)
                    switch (Yt(Ii, "_suspendStateCallback", e, t),
                    e) {
                    case xn:
                        this._trackOneEvent("wait", t);
                        break;
                    case Rn:
                        this._trackOneOpera(t);
                        break;
                    case En:
                        this._trackMdlVideoSize(t)
                    }
            }
            _trackOnePlay(e, t) {
                const {playPerf: n} = this;
                if (this.isSendOnePlay || !n.playTime)
                    return void Yt(Ii, `_trackOnePlay_${e} isSendOnePlay:${this.isSendOnePlay} pt:${n.playTime}`);
                const i = function(e, t, n) {
                    const {vInfo: i, playPerf: r, playMDL: o, wait: a, operate: s, error: l, player: u, sessionId: c, extData: h, performanceNow: d} = e
                      , f = Si(c, i, r, u)
                      , {url: p, host: g, ip: m, bitrate: v} = r.initialUrl
                      , {leave: y, exit: _, playTime: T, vvTime: b, newTime: S, volume: w, muted: k, playbackRate: C, bufferFinishTime: M, preloadData: P, br: R, resolution: x, startLoadTime: E, userFvt: D, width: L, height: I, switchPt: O, meta: A, startPlayInfo: G, autoplayStart: N} = r
                      , {seekCount: B, sat: $, pauseLog: F} = s
                      , {playedSize: H, cdnSize: U, cdnVSize: V, pcdnSize: j, pcdnVSize: z} = o.accDatas
                      , {firstWait: X} = a
                      , {errors: K} = l
                      , Q = l.first
                      , W = r.getWatchDuration()
                      , q = function(e) {
                        if (e && e.pcdnVVStat) {
                            const t = e.pcdnVVStat;
                            return {
                                try_req: t.try_req_num,
                                req_succ: t.req_node_succ,
                                has_ret: t.has_ret_node,
                                conn_ret: t.conn_ret_num,
                                conn_fail: t.conn_fail_num,
                                conn_jump: t.conn_jump_num
                            }
                        }
                        return {}
                    }(u)
                      , Z = function(e) {
                        return e && e.performance || {}
                    }(u)
                      , Y = function(e) {
                        const t = Zn(e)
                          , n = {
                            total: 0,
                            dropped: 0,
                            drop_rate: 0
                        };
                        try {
                            const e = null == t ? void 0 : t.getVideoPlaybackQuality();
                            return n.dropped = (null == e ? void 0 : e.droppedVideoFrames) || 0,
                            n.total = (null == e ? void 0 : e.totalVideoFrames) || 0,
                            n.total > 0 && (n.drop_rate = tn(n.dropped / n.total * 100)),
                            n
                        } catch {
                            return n
                        }
                    }(u)
                      , {bitrateSet: J, bitrateSetHevc: ee} = i
                      , te = function(e, t) {
                        return {
                            h1: e.length,
                            h2: t.length,
                            set1: mi(e),
                            set2: mi(t)
                        }
                    }(J, ee)
                      , ne = v;
                    return {
                        ...f,
                        perf_time: d,
                        prepare_start_time: 0,
                        prepare_end_time: 0,
                        initial_url: p || "",
                        initial_host: g,
                        initial_ip: m,
                        isexpired: fn(p),
                        width: L,
                        height: I,
                        initial_resolution: r.initialUrl.resolution,
                        pt: T,
                        vt: b,
                        fvt: ii(T, b),
                        svt: ii(E, b),
                        nvt: b > 0 ? b - S : T - S,
                        user_fvt: D,
                        switch_pt: O,
                        player_created_t: S,
                        lt: y.time,
                        lpt: _.time - T,
                        et: _.time,
                        lv_method: _.method,
                        bft: M,
                        volume: tn(w.current, 2),
                        mute: k.current ? 1 : 0,
                        play_speed: C.current,
                        sc: B,
                        sat: $,
                        dbc: a.dbc,
                        nbc: a.nbc,
                        bc: a.dbc + a.nbc,
                        bu_acu_t: a.dAcuTime + a.nAcuTime,
                        de_bu_acu_t: a.dAcuTime,
                        n_bu_acu_t: a.nAcuTime,
                        pause_acu_t: F.acuTime,
                        start_time: nn(r.startPlayInfo.startPos),
                        finish: r.ended || r.loopCount > 0 ? 1 : 0,
                        lc: r.loopCount,
                        watch_dur: W,
                        is_start_play_automatically: N,
                        first_buf_startt: X.start,
                        first_buf_endt: X.end,
                        play_c: r.playCount,
                        load_state: r.loadState,
                        playback_state: r.playbackState,
                        pcdn: an(q),
                        pre_info: an(P),
                        perf: an(Z),
                        frame_info: an(Y),
                        br: R.count,
                        fbrt: R.time,
                        df: x.current,
                        lf: x.last,
                        bitrate: ne,
                        errc: n ? n.code : 0,
                        errt: n ? n.type : 0,
                        vsc_message: n ? n.message : "",
                        fir_errc: Q ? Q.code : 0,
                        fir_errt: Q ? Q.type : 0,
                        accu_errc: l.count || 0,
                        merror: an(K),
                        end_type: t,
                        vps: H,
                        vds: U,
                        pvds: j,
                        vvds: V,
                        pvvds: z,
                        vplt: P.time,
                        vpls: P.size,
                        ext: an(h),
                        bitset: an(te),
                        meta: an(A),
                        exit: an(_),
                        start_info: an(G)
                    }
                }(this, e, t);
                Yt(Ii, `_trackOnePlay_${e}`, i),
                this.isSendOnePlay = !0,
                this.sendEvent("videoplayer_oneplay", i)
            }
            _trackOneEvent(e, t) {
                const n = function(e, t, n) {
                    const {vInfo: i, playPerf: r, operate: o, player: a, sessionId: s} = n
                      , l = Si(s, i, r, a)
                      , {playbackRate: u, firstUpdateTime: c} = r
                      , {latestSeek: h, latestSwitch: d} = o;
                    return {
                        ...l,
                        event_type: e,
                        cost_time: t.costTime,
                        end_type: t.endType,
                        first_frame_interval: cn(c, t.start),
                        last_seek_interval: h ? cn(h.start, t.start) : 0,
                        last_switch_interval: d ? cn(d.start, t.start) : 0,
                        last_event_interval: t.interval,
                        video_pos: nn(t.pos),
                        play_speed: u.current,
                        st: t.start,
                        et: t.end
                    }
                }(e, t, this);
                Yt(Ii, `_trackOneEvent_${e}`, t, n),
                this.sendEvent(xn, n)
            }
            _trackOneOpera(e) {
                const t = e.op
                  , n = function(e, t, n) {
                    const {vInfo: i, playPerf: r, player: o, sessionId: a} = n;
                    return {
                        ...Si(a, i, r, o),
                        opera_type: e,
                        end_type: t.endType,
                        state_before: t.stateBefore,
                        state_after: t.stateAfter,
                        cost_time: t.costTime,
                        is_seek_in_buffer: t.inBuffer ? 1 : 0,
                        last_interval: t.interval,
                        video_pos: nn(t.pos),
                        cdn_url: "",
                        cdn_ip: ""
                    }
                }(t, e, this);
                Yt(Ii, `_trackOneOpera_${t}`, e, n),
                this.sendEvent(Rn, n)
            }
            _trackOneError(e, t) {
                if (!t)
                    return;
                const n = function(e, t, n="") {
                    const {error: i, vInfo: r, playPerf: o, player: a, sessionId: s, extData: l} = t
                      , u = Si(s, r, o, a)
                      , {resolution: c} = o.initialUrl
                      , h = i.errorCodes;
                    return {
                        ...u,
                        errt: e.type,
                        errc: e.code,
                        err_msg: e.message,
                        cdn_url: e.cdnUrl,
                        cdn_host: e.cdnHost,
                        cdn_ip: e.cdnIp,
                        es: e.stage || "",
                        isexpired: e.isExpired,
                        resolution: pn(c),
                        end_type: n,
                        last_errors: h,
                        retry_count: i.retryCount,
                        ext: an(l)
                    }
                }(t, this, e);
                Yt(Ii, `_trackOneError_${e}`, t, n),
                this.sendEvent("videoplayer_oneerror", n)
            }
            _trackMdlVideoSize(e) {
                const t = function(e, t) {
                    const {vInfo: n, playPerf: i, player: r, sessionId: o} = e;
                    return {
                        ...Si(o, n, i, r),
                        ...t
                    }
                }(this, e);
                Yt(Ii, `_trackMdlVideoSize${e.end_type}`, t),
                this.sendEvent(En, t)
            }
            sendEvent(e, t) {
                if (Yt(Ii, "sendEvent", `eventName:${e} extNAme:${Ln[e]}`),
                Oi && Oi.event(e, t),
                Gi) {
                    const n = Ln[e];
                    n && Gi.event(n, function(e) {
                        const t = {
                            ...e
                        };
                        try {
                            return delete t.line_user_id,
                            delete t.deviceScore,
                            delete t.ua,
                            delete t.absdkVersion,
                            Object.keys(wi).forEach((e => {
                                t[wi[e]] = t[e],
                                delete t[e]
                            }
                            )),
                            t
                        } catch {
                            return t
                        }
                    }(t))
                }
            }
        }
        const Bi = "XGTracker"
          , $i = "__xgplayer_vod_log__"
          , Fi = {
            appId: 548444,
            _tt: {
                user_unique_id: ""
            },
            _tracker: null,
            _options: {},
            init(e, t, n) {
                var i, r, o;
                if ((t.appId || t.app_id) && (this.appId = t.appId || t.app_id),
                this._options = t,
                !bn)
                    return;
                Yt(Bi, "init", this.appId, t);
                const a = window[$i];
                !a && e ? (this._tracker = new e("xgplayer_tracker"),
                window[$i] = this._tracker) : this._tracker = a;
                const {channel: s, channel_domain: l} = t
                  , u = {
                    app_id: this.appId,
                    log: !1,
                    disable_sdk_monitor: !0,
                    enable_ab_test: !1,
                    disable_auto_pv: !0,
                    ...t,
                    channel: s || "cn",
                    channel_domain: l
                };
                return null == (i = this._tracker) || i.init(u),
                null == (r = this._tracker) || r.getToken((e => {
                    this._tt = e
                }
                )),
                this.config(n || {}),
                null == (o = this._tracker) || o.start(),
                this._tracker
            },
            config(e={}) {
                const t = {
                    ...e
                };
                Sn && Sn.name && !Sn.isChrome && !Sn.isSafari && (t.browser = Sn.name,
                Sn.appVersion && (t.browser_version = Sn.appVersion));
                const n = e.user_unique_id || e.line_user_id || "";
                n && (t.user_unique_id = n,
                t.web_id = n,
                this._tt = {
                    user_unique_id: n
                }),
                e.referrer && (t.referrer = e.referrer,
                t.referrer_host = on(e.referrer)),
                this._tracker && this._tracker.config(t)
            },
            getToken() {
                return this._tt
            },
            event(e, t) {
                const {appId: n, _tracker: i, _tt: r} = Fi;
                Yt(Bi, `sendEvent_${n}`, !i, e, t),
                i && (t.line_user_id || (t.line_user_id = (null == r ? void 0 : r.user_unique_id) || ""),
                "function" == typeof i ? i(e, t) : i.event(e, t))
            }
        };
        Ni.Tracker = Fi;
        const Hi = function(e) {
            if (e && e.player) {
                const t = e.player.config.vodLogOpts || {};
                e.player.vodLogger = new Ni(t,e.player),
                e.player.plugins.xgVodLogger = e.player.vodLogger
            } else
                this.vodLogger = new Ni(this.config.vodLogOpts || {},this)
        };
        Hi.initTracker = function(e, t={}) {
            Fi.init(e, t)
        }
        ,
        Hi.configTracker = function(e) {
            Fi.config(e)
        }
        ,
        Hi.pluginName = "__xgVodLogger",
        Hi.playerConfig = {},
        Hi.setABSdkVersion = e => {
            Ni.AB_SDK_VERSION = e
        }
        ;
        var Ui = Object.defineProperty
          , Vi = (e, t, n) => ( (e, t, n) => t in e ? Ui(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        class ji {
            static getDefaultConfig() {
                return {
                    rangeMaxDuration: 15,
                    rangeMinDuration: 5,
                    rangeMinSize: 409600,
                    safeFactor: .1,
                    cacheSafeFactor: 3,
                    minDangerThreshold: 5,
                    estPlayTime: 12,
                    minBandwidth: 1e6,
                    estPTcontrol: !1,
                    minTargetCacheDur: 30,
                    maxTargetCacheDur: 60,
                    targetCacheControl: !1,
                    rangeControl: !1
                }
            }
            constructor(e, t, n, i) {
                this.config = ji.getDefaultConfig(),
                Object.keys(i).map((e => {
                    void 0 !== i[e] && null !== i[e] && (this.config[e] = i[e])
                }
                )),
                this.duration = n,
                this.player = e,
                this.updateBitrate(t)
            }
            updateBitrate(e) {
                this.bitrate = e,
                this.bitrate || (this.bitrate = this.config.minBandwidth)
            }
            getAdaptLoadDuration() {
                const {player: e, config: t} = this;
                if (!t.rangeControl)
                    return -1;
                const n = (null == e ? void 0 : e.bufferedPoint) || null
                  , i = n && n.end ? n.end - e.currentTime : 0;
                return Math.max(t.rangeMaxDuration - i, t.rangeMinDuration)
            }
            getAdaptCacheBuffer() {
                const {player: e, config: t, bitrate: n} = this;
                if (!t.targetCacheControl)
                    return -1;
                const {estPlayTime: i} = t;
                let r = i;
                t.estPTcontrol && (r = Math.min(i, this.duration - ((null == e ? void 0 : e.currentTime) || 0)));
                const o = 1024 * (null == e ? void 0 : e.avgSpeed) || 0;
                let a = Math.max(t.safeFactor * o, t.minBandwidth);
                e && e.avgSpeed && (a = t.safeFactor * o);
                let s = n > 0 ? Math.floor((1 - a / n) * r) : 0;
                return s = t.minDangerThreshold + Math.max(s, 0),
                Math.min(Math.max(t.cacheSafeFactor * s, t.minTargetCacheDur), t.maxTargetCacheDur)
            }
        }
        class zi {
            static getDefaultConfig() {
                return {
                    rangeControl: !1,
                    rangeMaxDuration: 20,
                    rangeMinDuration: 5,
                    rangeMinSize: 409600,
                    rangeFloatSize: 10240,
                    safeFactor: .1,
                    cacheSafeFactor: 3,
                    minDangerThreshold: 5,
                    estPlayTime: 12,
                    minBandwidth: 1e6,
                    estPTcontrol: !1,
                    minTargetCacheDur: 30,
                    maxTargetCacheDur: 60,
                    targetCacheControl: !1
                }
            }
            constructor(e, t, n, i) {
                this.config = zi.getDefaultConfig(),
                Object.keys(i).map((e => {
                    void 0 !== i[e] && null !== i[e] && (this.config[e] = i[e])
                }
                )),
                this.duration = n,
                this.player = e,
                this.updateBitrate(t)
            }
            updateBitrate(e) {
                this.bitrate = e,
                this.bitrate || (this.bitrate = this.config.minBandwidth)
            }
            getBuffer() {
                const {player: e} = this
                  , t = (null == e ? void 0 : e.bufferedPoint) || null;
                return t && t.end ? t.end - e.currentTime : 0
            }
            getAdaptLoadDuration() {
                const {config: e, duration: t} = this;
                if (!e.rangeControl)
                    return -1;
                const n = this.getBuffer()
                  , i = t - n
                  , r = Math.min(i, e.rangeMaxDuration - n);
                return Math.max(r, e.rangeMinDuration)
            }
            getAdaptRangeSize(e) {
                const {config: t, bitrate: n, duration: i} = this;
                if (!t.rangeControl)
                    return -1;
                e || (e = this.getAdaptLoadDuration());
                const r = i - this.getBuffer();
                let o = Math.max(t.rangeMinSize, e * n / 8);
                const a = r * n / 8;
                return o + t.rangeFloatSize >= a && (o = a),
                Math.ceil(o)
            }
            getAdaptCacheBuffer() {
                const {player: e, config: t, bitrate: n} = this;
                if (!t.targetCacheControl)
                    return -1;
                const {estPlayTime: i} = t;
                let r = i;
                t.estPTcontrol && (r = Math.min(i, this.duration - ((null == e ? void 0 : e.currentTime) || 0)));
                const o = 1024 * (null == e ? void 0 : e.avgSpeed) || 0;
                let a = Math.max(t.safeFactor * o, t.minBandwidth);
                e && e.avgSpeed && (a = t.safeFactor * o);
                let s = n > 0 ? Math.floor((1 - a / n) * r) : 0;
                s = t.minDangerThreshold + Math.max(s, 0);
                const l = Math.max(t.cacheSafeFactor * s, t.minTargetCacheDur);
                return Math.min(l, t.maxTargetCacheDur)
            }
        }
        var Xi = (e => (e.CHANGE_FLYING_PLUGIN_CONFIG = "CHANGE_FLYING_PLUGIN_CONFIG",
        e))(Xi || {});
        function Ki(e, t, n) {
            return t = Wi(t),
            function(e, t) {
                if (t && ("object" == typeof t || "function" == typeof t))
                    return t;
                if (void 0 !== t)
                    throw new TypeError("Derived constructors may only return object or undefined");
                return function(e) {
                    if (void 0 === e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e
                }(e)
            }(e, qi() ? Reflect.construct(t, n || [], Wi(e).constructor) : t.apply(e, n))
        }
        function Qi(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, Yi(i.key), i)
            }
        }
        function Wi(e) {
            return (Wi = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }
            )(e)
        }
        function qi() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                )))
            } catch {}
            return (qi = function() {
                return !!e
            }
            )()
        }
        function Zi(e, t) {
            return (Zi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t,
                e
            }
            )(e, t)
        }
        function Yi(e) {
            var t = function(e) {
                if ("object" != typeof e || !e)
                    return e;
                var t = e[Symbol.toPrimitive];
                if (void 0 !== t) {
                    var n = t.call(e, "string");
                    if ("object" != typeof n)
                        return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return String(e)
            }(e);
            return "symbol" == typeof t ? t : t + ""
        }
        function Ji(e) {
            return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
        }
        var er = {
            exports: {}
        };
        !function(e) {
            var t = Object.prototype.hasOwnProperty
              , n = "~";
            function i() {}
            function r(e, t, n) {
                this.fn = e,
                this.context = t,
                this.once = n || !1
            }
            function o(e, t, i, o, a) {
                if ("function" != typeof i)
                    throw new TypeError("The listener must be a function");
                var s = new r(i,o || e,a)
                  , l = n ? n + t : t;
                return e._events[l] ? e._events[l].fn ? e._events[l] = [e._events[l], s] : e._events[l].push(s) : (e._events[l] = s,
                e._eventsCount++),
                e
            }
            function a(e, t) {
                0 == --e._eventsCount ? e._events = new i : delete e._events[t]
            }
            function s() {
                this._events = new i,
                this._eventsCount = 0
            }
            Object.create && (i.prototype = Object.create(null),
            (new i).__proto__ || (n = !1)),
            s.prototype.eventNames = function() {
                var e, i, r = [];
                if (0 === this._eventsCount)
                    return r;
                for (i in e = this._events)
                    t.call(e, i) && r.push(n ? i.slice(1) : i);
                return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(e)) : r
            }
            ,
            s.prototype.listeners = function(e) {
                var t = n ? n + e : e
                  , i = this._events[t];
                if (!i)
                    return [];
                if (i.fn)
                    return [i.fn];
                for (var r = 0, o = i.length, a = new Array(o); r < o; r++)
                    a[r] = i[r].fn;
                return a
            }
            ,
            s.prototype.listenerCount = function(e) {
                var t = n ? n + e : e
                  , i = this._events[t];
                return i ? i.fn ? 1 : i.length : 0
            }
            ,
            s.prototype.emit = function(e, t, i, r, o, a) {
                var s = n ? n + e : e;
                if (!this._events[s])
                    return !1;
                var l, u, c = this._events[s], h = arguments.length;
                if (c.fn) {
                    switch (c.once && this.removeListener(e, c.fn, void 0, !0),
                    h) {
                    case 1:
                        return c.fn.call(c.context),
                        !0;
                    case 2:
                        return c.fn.call(c.context, t),
                        !0;
                    case 3:
                        return c.fn.call(c.context, t, i),
                        !0;
                    case 4:
                        return c.fn.call(c.context, t, i, r),
                        !0;
                    case 5:
                        return c.fn.call(c.context, t, i, r, o),
                        !0;
                    case 6:
                        return c.fn.call(c.context, t, i, r, o, a),
                        !0
                    }
                    for (u = 1,
                    l = new Array(h - 1); u < h; u++)
                        l[u - 1] = arguments[u];
                    c.fn.apply(c.context, l)
                } else {
                    var d, f = c.length;
                    for (u = 0; u < f; u++)
                        switch (c[u].once && this.removeListener(e, c[u].fn, void 0, !0),
                        h) {
                        case 1:
                            c[u].fn.call(c[u].context);
                            break;
                        case 2:
                            c[u].fn.call(c[u].context, t);
                            break;
                        case 3:
                            c[u].fn.call(c[u].context, t, i);
                            break;
                        case 4:
                            c[u].fn.call(c[u].context, t, i, r);
                            break;
                        default:
                            if (!l)
                                for (d = 1,
                                l = new Array(h - 1); d < h; d++)
                                    l[d - 1] = arguments[d];
                            c[u].fn.apply(c[u].context, l)
                        }
                }
                return !0
            }
            ,
            s.prototype.on = function(e, t, n) {
                return o(this, e, t, n, !1)
            }
            ,
            s.prototype.once = function(e, t, n) {
                return o(this, e, t, n, !0)
            }
            ,
            s.prototype.removeListener = function(e, t, i, r) {
                var o = n ? n + e : e;
                if (!this._events[o])
                    return this;
                if (!t)
                    return a(this, o),
                    this;
                var s = this._events[o];
                if (s.fn)
                    s.fn === t && (!r || s.once) && (!i || s.context === i) && a(this, o);
                else {
                    for (var l = 0, u = [], c = s.length; l < c; l++)
                        (s[l].fn !== t || r && !s[l].once || i && s[l].context !== i) && u.push(s[l]);
                    u.length ? this._events[o] = 1 === u.length ? u[0] : u : a(this, o)
                }
                return this
            }
            ,
            s.prototype.removeAllListeners = function(e) {
                var t;
                return e ? (t = n ? n + e : e,
                this._events[t] && a(this, t)) : (this._events = new i,
                this._eventsCount = 0),
                this
            }
            ,
            s.prototype.off = s.prototype.removeListener,
            s.prototype.addListener = s.prototype.on,
            s.prefixed = n,
            s.EventEmitter = s,
            e.exports = s
        }(er);
        var tr = er.exports;
        const nr = Ji(tr);
        var ir = {}
          , rr = null
          , or = function(e) {
            function t() {
                return function(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, t),
                Ki(this, t, arguments)
            }
            return function(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }),
                Object.defineProperty(e, "prototype", {
                    writable: !1
                }),
                t && Zi(e, t)
            }(t, e),
            function(e, t, n) {
                return t && Qi(e.prototype, t),
                n && Qi(e, n),
                Object.defineProperty(e, "prototype", {
                    writable: !1
                }),
                e
            }(t, [{
                key: "add",
                value: function(e) {
                    e && (ir[e.playerId] = e,
                    1 === Object.keys(ir).length && this.setActive(e.playerId, !0))
                }
            }, {
                key: "remove",
                value: function(e) {
                    e && (e.isUserActive,
                    delete ir[e.playerId])
                }
            }, {
                key: "_iterate",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    for (var n in ir)
                        if (Object.prototype.hasOwnProperty.call(ir, n)) {
                            var i = ir[n];
                            if (t) {
                                if (e(i))
                                    break
                            } else
                                e(i)
                        }
                }
            }, {
                key: "forEach",
                value: function(e) {
                    this._iterate(e)
                }
            }, {
                key: "find",
                value: function(e) {
                    var t = null;
                    return this._iterate((function(n) {
                        var i = e(n);
                        return i && (t = n),
                        i
                    }
                    ), !0),
                    t
                }
            }, {
                key: "findAll",
                value: function(e) {
                    var t = [];
                    return this._iterate((function(n) {
                        e(n) && t.push(n)
                    }
                    )),
                    t
                }
            }, {
                key: "setActive",
                value: function(e) {
                    var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                    if (ir[e])
                        return t ? this.forEach((function(t) {
                            e === t.playerId ? (t.isUserActive = !0,
                            t.isInstNext = !1) : t.isUserActive = !1
                        }
                        )) : ir[e].isUserActive = t,
                        e
                }
            }, {
                key: "getActiveId",
                value: function() {
                    for (var e = Object.keys(ir), t = 0; t < e.length; t++) {
                        var n = ir[e[t]];
                        if (n && n.isUserActive)
                            return e[t]
                    }
                    return null
                }
            }, {
                key: "setNext",
                value: function(e) {
                    var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                    if (ir[e])
                        return t ? this.forEach((function(t) {
                            e === t.playerId ? (t.isUserActive = !1,
                            t.isInstNext = !0) : t.isInstNext = !1
                        }
                        )) : ir[e].isInstNext = t,
                        e
                }
            }], [{
                key: "getInstance",
                value: function() {
                    return rr || (rr = new t),
                    rr
                }
            }])
        }(tr.EventEmitter);
        function ar(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, i)
            }
            return n
        }
        function sr(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ar(Object(n), !0).forEach((function(t) {
                    gr(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ar(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function lr() {
            lr = function() {
                return e
            }
            ;
            var e = {}
              , t = Object.prototype
              , n = t.hasOwnProperty
              , i = Object.defineProperty || function(e, t, n) {
                e[t] = n.value
            }
              , r = "function" == typeof Symbol ? Symbol : {}
              , o = r.iterator || "@@iterator"
              , a = r.asyncIterator || "@@asyncIterator"
              , s = r.toStringTag || "@@toStringTag";
            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                l({}, "")
            } catch {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }
            function u(e, t, n, r) {
                var o = t && t.prototype instanceof d ? t : d
                  , a = Object.create(o.prototype)
                  , s = new C(r || []);
                return i(a, "_invoke", {
                    value: b(e, n, s)
                }),
                a
            }
            function c(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = u;
            var h = {};
            function d() {}
            function f() {}
            function p() {}
            var g = {};
            l(g, o, (function() {
                return this
            }
            ));
            var m = Object.getPrototypeOf
              , v = m && m(m(M([])));
            v && v !== t && n.call(v, o) && (g = v);
            var y = p.prototype = d.prototype = Object.create(g);
            function _(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function T(e, t) {
                function r(i, o, a, s) {
                    var l = c(e[i], e, o);
                    if ("throw" !== l.type) {
                        var u = l.arg
                          , h = u.value;
                        return h && "object" == typeof h && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            r("next", e, a, s)
                        }
                        ), (function(e) {
                            r("throw", e, a, s)
                        }
                        )) : t.resolve(h).then((function(e) {
                            u.value = e,
                            a(u)
                        }
                        ), (function(e) {
                            return r("throw", e, a, s)
                        }
                        ))
                    }
                    s(l.arg)
                }
                var o;
                i(this, "_invoke", {
                    value: function(e, n) {
                        function i() {
                            return new t((function(t, i) {
                                r(e, n, t, i)
                            }
                            ))
                        }
                        return o = o ? o.then(i, i) : i()
                    }
                })
            }
            function b(e, t, n) {
                var i = "suspendedStart";
                return function(r, o) {
                    if ("executing" === i)
                        throw new Error("Generator is already running");
                    if ("completed" === i) {
                        if ("throw" === r)
                            throw o;
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    for (n.method = r,
                    n.arg = o; ; ) {
                        var a = n.delegate;
                        if (a) {
                            var s = S(a, n);
                            if (s) {
                                if (s === h)
                                    continue;
                                return s
                            }
                        }
                        if ("next" === n.method)
                            n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === i)
                                throw i = "completed",
                                n.arg;
                            n.dispatchException(n.arg)
                        } else
                            "return" === n.method && n.abrupt("return", n.arg);
                        i = "executing";
                        var l = c(e, t, n);
                        if ("normal" === l.type) {
                            if (i = n.done ? "completed" : "suspendedYield",
                            l.arg === h)
                                continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (i = "completed",
                        n.method = "throw",
                        n.arg = l.arg)
                    }
                }
            }
            function S(e, t) {
                var n = t.method
                  , i = e.iterator[n];
                if (void 0 === i)
                    return t.delegate = null,
                    "throw" === n && e.iterator.return && (t.method = "return",
                    t.arg = void 0,
                    S(e, t),
                    "throw" === t.method) || "return" !== n && (t.method = "throw",
                    t.arg = new TypeError("The iterator does not provide a '" + n + "' method")),
                    h;
                var r = c(i, e.iterator, t.arg);
                if ("throw" === r.type)
                    return t.method = "throw",
                    t.arg = r.arg,
                    t.delegate = null,
                    h;
                var o = r.arg;
                return o ? o.done ? (t[e.resultName] = o.value,
                t.next = e.nextLoc,
                "return" !== t.method && (t.method = "next",
                t.arg = void 0),
                t.delegate = null,
                h) : o : (t.method = "throw",
                t.arg = new TypeError("iterator result is not an object"),
                t.delegate = null,
                h)
            }
            function w(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function k(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function C(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(w, this),
                this.reset(!0)
            }
            function M(e) {
                if (e) {
                    var t = e[o];
                    if (t)
                        return t.call(e);
                    if ("function" == typeof e.next)
                        return e;
                    if (!isNaN(e.length)) {
                        var i = -1
                          , r = function t() {
                            for (; ++i < e.length; )
                                if (n.call(e, i))
                                    return t.value = e[i],
                                    t.done = !1,
                                    t;
                            return t.value = void 0,
                            t.done = !0,
                            t
                        };
                        return r.next = r
                    }
                }
                return {
                    next: P
                }
            }
            function P() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p,
            i(y, "constructor", {
                value: p,
                configurable: !0
            }),
            i(p, "constructor", {
                value: f,
                configurable: !0
            }),
            f.displayName = l(p, s, "GeneratorFunction"),
            e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p,
                l(e, s, "GeneratorFunction")),
                e.prototype = Object.create(y),
                e
            }
            ,
            e.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            _(T.prototype),
            l(T.prototype, a, (function() {
                return this
            }
            )),
            e.AsyncIterator = T,
            e.async = function(t, n, i, r, o) {
                void 0 === o && (o = Promise);
                var a = new T(u(t, n, i, r),o);
                return e.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }
                ))
            }
            ,
            _(y),
            l(y, s, "Generator"),
            l(y, o, (function() {
                return this
            }
            )),
            l(y, "toString", (function() {
                return "[object Generator]"
            }
            )),
            e.keys = function(e) {
                var t = Object(e)
                  , n = [];
                for (var i in t)
                    n.push(i);
                return n.reverse(),
                function e() {
                    for (; n.length; ) {
                        var i = n.pop();
                        if (i in t)
                            return e.value = i,
                            e.done = !1,
                            e
                    }
                    return e.done = !0,
                    e
                }
            }
            ,
            e.values = M,
            C.prototype = {
                constructor: C,
                reset: function(e) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = void 0,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = void 0,
                    this.tryEntries.forEach(k),
                    !e)
                        for (var t in this)
                            "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done)
                        throw e;
                    var t = this;
                    function i(n, i) {
                        return a.type = "throw",
                        a.arg = e,
                        t.next = n,
                        i && (t.method = "next",
                        t.arg = void 0),
                        !!i
                    }
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var o = this.tryEntries[r]
                          , a = o.completion;
                        if ("root" === o.tryLoc)
                            return i("end");
                        if (o.tryLoc <= this.prev) {
                            var s = n.call(o, "catchLoc")
                              , l = n.call(o, "finallyLoc");
                            if (s && l) {
                                if (this.prev < o.catchLoc)
                                    return i(o.catchLoc, !0);
                                if (this.prev < o.finallyLoc)
                                    return i(o.finallyLoc)
                            } else if (s) {
                                if (this.prev < o.catchLoc)
                                    return i(o.catchLoc, !0)
                            } else {
                                if (!l)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < o.finallyLoc)
                                    return i(o.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var r = this.tryEntries[i];
                        if (r.tryLoc <= this.prev && n.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                            var o = r;
                            break
                        }
                    }
                    o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                    var a = o ? o.completion : {};
                    return a.type = e,
                    a.arg = t,
                    o ? (this.method = "next",
                    this.next = o.finallyLoc,
                    h) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            k(n),
                            h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var i = n.completion;
                            if ("throw" === i.type) {
                                var r = i.arg;
                                k(n)
                            }
                            return r
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: M(e),
                        resultName: t,
                        nextLoc: n
                    },
                    "next" === this.method && (this.arg = void 0),
                    h
                }
            },
            e
        }
        function ur(e) {
            return (ur = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            )(e)
        }
        function cr(e, t, n, i, r, o, a) {
            try {
                var s = e[o](a)
                  , l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(i, r)
        }
        function hr(e) {
            return function() {
                var t = this
                  , n = arguments;
                return new Promise((function(i, r) {
                    var o = e.apply(t, n);
                    function a(e) {
                        cr(o, i, r, a, s, "next", e)
                    }
                    function s(e) {
                        cr(o, i, r, a, s, "throw", e)
                    }
                    a(void 0)
                }
                ))
            }
        }
        function dr(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function fr(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, Mr(i.key), i)
            }
        }
        function pr(e, t, n) {
            return t && fr(e.prototype, t),
            n && fr(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function gr(e, t, n) {
            return (t = Mr(t))in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function mr(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            t && yr(e, t)
        }
        function vr(e) {
            return (vr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }
            )(e)
        }
        function yr(e, t) {
            return (yr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t,
                e
            }
            )(e, t)
        }
        function _r() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                return !1;
            if ("function" == typeof Proxy)
                return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                ))),
                !0
            } catch {
                return !1
            }
        }
        function Tr(e, t, n) {
            return Tr = _r() ? Reflect.construct.bind() : function(e, t, n) {
                var i = [null];
                i.push.apply(i, t);
                var r = new (Function.bind.apply(e, i));
                return n && yr(r, n.prototype),
                r
            }
            ,
            Tr.apply(null, arguments)
        }
        function br(e) {
            var t = "function" == typeof Map ? new Map : void 0;
            return br = function(e) {
                if (null === e || !function(e) {
                    return -1 !== Function.toString.call(e).indexOf("[native code]")
                }(e))
                    return e;
                if ("function" != typeof e)
                    throw new TypeError("Super expression must either be null or a function");
                if (typeof t < "u") {
                    if (t.has(e))
                        return t.get(e);
                    t.set(e, n)
                }
                function n() {
                    return Tr(e, arguments, vr(this).constructor)
                }
                return n.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: n,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                yr(n, e)
            }
            ,
            br(e)
        }
        function Sr(e) {
            if (void 0 === e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }
        function wr(e) {
            var t = _r();
            return function() {
                var n, i = vr(e);
                if (t) {
                    var r = vr(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else
                    n = i.apply(this, arguments);
                return function(e, t) {
                    if (t && ("object" == typeof t || "function" == typeof t))
                        return t;
                    if (void 0 !== t)
                        throw new TypeError("Derived constructors may only return object or undefined");
                    return Sr(e)
                }(this, n)
            }
        }
        function kr() {
            return kr = typeof Reflect < "u" && Reflect.get ? Reflect.get.bind() : function(e, t, n) {
                var i = function(e, t) {
                    for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = vr(e)); )
                        ;
                    return e
                }(e, t);
                if (i) {
                    var r = Object.getOwnPropertyDescriptor(i, t);
                    return r.get ? r.get.call(arguments.length < 3 ? e : n) : r.value
                }
            }
            ,
            kr.apply(this, arguments)
        }
        function Cr(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function Mr(e) {
            var t = function(e) {
                if ("object" != typeof e || null === e)
                    return e;
                var t = e[Symbol.toPrimitive];
                if (void 0 !== t) {
                    var n = t.call(e, "string");
                    if ("object" != typeof n)
                        return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return String(e)
            }(e);
            return "symbol" == typeof t ? t : String(t)
        }
        or || Object.prototype.constructor;
        var Pr = {
            DEBUG: 1,
            LOG: 2,
            WARN: 3,
            ERROR: 4
        }
          , Rr = ["Boolean", "Number", "String", "Undefined", "Null", "Date", "Object"]
          , xr = function() {
            function e(t, n) {
                dr(this, e),
                this.name = t || "",
                this._prefix = "[".concat(this.name, "]"),
                this.logCacheLevel = (null == n ? void 0 : n.logCacheLevel) || 3,
                this.logMaxSize = (null == n ? void 0 : n.logMaxSize) || 204800,
                this.logSize = 0,
                this.logTextArray = []
            }
            return pr(e, [{
                key: "debug",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Pr.DEBUG].concat(i)),
                    !e.disabled && (t = console).debug.apply(t, [this._prefix, Er()].concat(i))
                }
            }, {
                key: "log",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Pr.LOG].concat(i)),
                    !e.disabled && (t = console).log.apply(t, [this._prefix, Er()].concat(i))
                }
            }, {
                key: "warn",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Pr.WARN].concat(i)),
                    !e.disabled && (t = console).warn.apply(t, [this._prefix, Er()].concat(i))
                }
            }, {
                key: "error",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Pr.ERROR].concat(i)),
                    !e.disabled && (t = console).error.apply(t, [this._prefix, Er()].concat(i))
                }
            }, {
                key: "logCache",
                value: function(e) {
                    if (!(e < this.logCacheLevel)) {
                        var t = "";
                        try {
                            for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                                i[r - 1] = arguments[r];
                            var o = i.map((function(e) {
                                return Lr(e)
                            }
                            ));
                            t = this._prefix + Er() + JSON.stringify(o)
                        } catch {
                            return
                        }
                        if (e >= this.logCacheLevel && (this.logSize += t.length,
                        this.logTextArray.push(t)),
                        this.logSize > this.logMaxSize) {
                            var a = this.logTextArray.shift();
                            this.logSize -= a.length
                        }
                    }
                }
            }, {
                key: "getLogCache",
                value: function() {
                    var e = this.logTextArray.join("\n");
                    return this.reset(),
                    e
                }
            }, {
                key: "reset",
                value: function() {
                    this.logTextArray = [],
                    this.logSize = 0
                }
            }, {
                key: "table",
                value: function() {
                    var t;
                    e.disabled || (console.group(this._prefix),
                    (t = console).table.apply(t, arguments),
                    console.groupEnd())
                }
            }, {
                key: "setLogLevel",
                value: function(e) {
                    this.logCacheLevel = e
                }
            }], [{
                key: "enable",
                value: function() {
                    e.disabled = !1
                }
            }, {
                key: "disable",
                value: function() {
                    e.disabled = !0
                }
            }]),
            e
        }();
        function Er() {
            return (new Date).toLocaleString()
        }
        function Dr(e) {
            if ("object" !== ur(e))
                return e;
            var t = Object.prototype.toString.call(e).slice(8, -1);
            switch (t) {
            case "Array":
            case "Uint8Array":
            case "ArrayBuffer":
                return t + "[" + e.length + "]";
            case "Object":
                return "{}";
            default:
                return t
            }
        }
        function Lr(e, t, n) {
            n || (n = 1),
            t || (t = 2);
            var i = {};
            if (!e || "object" !== ur(e))
                return e;
            var r = Object.prototype.toString.call(e).slice(8, -1);
            if (!Rr.includes(r))
                return r;
            if (!(n > t)) {
                for (var o in e)
                    Object.prototype.hasOwnProperty.call(e, o) && (n === t ? i[o] = Dr(e[o]) : "object" === ur(e[o]) ? i[o] = Lr(e[o], t, n + 1) : i[o] = e[o]);
                return i
            }
        }
        function Ir() {
            var e, t, n = new Promise((function(n, i) {
                e = n,
                t = i
            }
            ));
            return n.used = !1,
            n.resolve = function() {
                return n.used = !0,
                e.apply(void 0, arguments)
            }
            ,
            n.reject = function() {
                return n.used = !0,
                t.apply(void 0, arguments)
            }
            ,
            n
        }
        gr(xr, "disabled", !0);
        var Or = "fetch"
          , Ar = "arraybuffer"
          , Gr = "text"
          , Nr = "json"
          , Br = function(e) {
            mr(n, e);
            var t = wr(n);
            function n(e, i, r, o) {
                var a;
                return dr(this, n),
                gr(Sr(a = t.call(this, o)), "retryCount", 0),
                gr(Sr(a), "isTimeout", !1),
                gr(Sr(a), "loaderType", Or),
                gr(Sr(a), "startTime", 0),
                gr(Sr(a), "endTime", 0),
                gr(Sr(a), "options", {}),
                a.url = e,
                a.request = i,
                a.response = r,
                a
            }
            return pr(n)
        }(br(Error))
          , $r = Object.prototype.toString;
        function Fr(e) {
            if ("[object Object]" !== $r.call(e))
                return !1;
            var t = Object.getPrototypeOf(e);
            return null === t || t === Object.prototype
        }
        function Hr(e) {
            if (e && null !== e[0] && void 0 !== e[0] && (0 !== e[0] || null !== e[1] && void 0 !== e[1])) {
                var t = "bytes=" + e[0] + "-";
                return e[1] && (t += e[1]),
                t
            }
        }
        function Ur(e) {
            return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
        }
        function Vr(e, t) {
            if (e) {
                if (!t)
                    return e;
                var n, i = Object.keys(t).map((function(e) {
                    if (null != (n = t[e]))
                        return Array.isArray(n) ? e += "[]" : n = [n],
                        n.map((function(t) {
                            return function(e) {
                                return "[object Date]" === $r.call(e)
                            }(t) ? t = t.toISOString() : function(e) {
                                return null !== e && "object" === ur(e)
                            }(t) && (t = JSON.stringify(t)),
                            "".concat(Ur(e), "=").concat(Ur(t))
                        }
                        )).join("&")
                }
                )).filter(Boolean).join("&");
                if (i) {
                    var r = e.indexOf("#");
                    -1 !== r && (e = e.slice(0, r)),
                    e += (-1 === e.indexOf("?") ? "?" : "&") + i
                }
                return e
            }
        }
        function jr(e, t, n, i, r, o, a, s, l, u, c) {
            return r = null != r ? parseFloat(r) : null,
            i = parseInt(i || "0", 10),
            Number.isNaN(i) && (i = 0),
            {
                data: e,
                done: t,
                options: {
                    range: l,
                    vid: u,
                    index: s,
                    contentLength: i,
                    age: r,
                    startTime: o,
                    firstByteTime: a,
                    endTime: Date.now(),
                    priOptions: c
                },
                response: n
            }
        }
        function zr(e, t) {
            return Math.round(8 * e * 1e3 / t / 1024)
        }
        var Xr = "real_time_speed"
          , Kr = 2097152
          , Qr = function(e) {
            mr(i, e);
            var t, n = wr(i);
            function i() {
                var e;
                return dr(this, i),
                gr(Sr(e = n.call(this)), "_abortController", null),
                gr(Sr(e), "_timeoutTimer", null),
                gr(Sr(e), "_reader", null),
                gr(Sr(e), "_response", null),
                gr(Sr(e), "_aborted", !1),
                gr(Sr(e), "_index", -1),
                gr(Sr(e), "_range", null),
                gr(Sr(e), "_receivedLength", 0),
                gr(Sr(e), "_running", !1),
                gr(Sr(e), "_logger", null),
                gr(Sr(e), "_vid", ""),
                gr(Sr(e), "_onProcessMinLen", 0),
                gr(Sr(e), "_onCancel", null),
                gr(Sr(e), "_priOptions", null),
                e
            }
            return pr(i, [{
                key: "load",
                value: function(e) {
                    var t, n = this, i = e.url, r = e.vid, o = e.timeout, a = e.responseType, s = e.onProgress, l = e.index, u = e.onTimeout, c = e.onCancel, h = e.range, d = e.transformResponse, f = e.request, p = e.params, g = e.logger, m = e.method, v = e.headers, y = e.body, _ = e.mode, T = e.credentials, b = e.cache, S = e.redirect, w = e.referrer, k = e.referrerPolicy, C = e.onProcessMinLen, M = e.priOptions;
                    this._logger = g,
                    this._aborted = !1,
                    this._onProcessMinLen = C,
                    this._onCancel = c,
                    this._abortController = typeof AbortController < "u" && new AbortController,
                    this._running = !0,
                    this._index = l,
                    this._range = h || [0, 0],
                    this._vid = r || i,
                    this._priOptions = M || {};
                    var P = {
                        method: m,
                        headers: v,
                        body: y,
                        mode: _,
                        credentials: T,
                        cache: b,
                        redirect: S,
                        referrer: w,
                        referrerPolicy: k,
                        signal: null === (t = this._abortController) || void 0 === t ? void 0 : t.signal
                    }
                      , R = !1;
                    clearTimeout(this._timeoutTimer),
                    i = Vr(i, p);
                    var x = Hr(h);
                    x && (v = f ? f.headers : P.headers = P.headers || (Headers ? new Headers : {}),
                    Headers && v instanceof Headers ? v.append("Range", x) : v.Range = x),
                    o && (this._timeoutTimer = setTimeout((function() {
                        if (R = !0,
                        n.cancel(),
                        u) {
                            var e = new Br(i,P,null,"timeout");
                            e.isTimeout = !0,
                            u(e, {
                                index: n._index,
                                range: n._range,
                                vid: n._vid,
                                priOptions: n._priOptions
                            })
                        }
                    }
                    ), o));
                    var E = Date.now();
                    return this._logger.debug("[fetch load start], index,", l, ",range,", h),
                    new Promise((function(e, t) {
                        fetch(f || i, f ? void 0 : P).then(function() {
                            var r = hr(lr().mark((function r(o) {
                                var u, c, f, p;
                                return lr().wrap((function(r) {
                                    for (; ; )
                                        switch (r.prev = r.next) {
                                        case 0:
                                            if (clearTimeout(n._timeoutTimer),
                                            n._response = o,
                                            !n._aborted && n._running) {
                                                r.next = 4;
                                                break
                                            }
                                            return r.abrupt("return");
                                        case 4:
                                            if (d && (o = d(o, i) || o),
                                            o.ok) {
                                                r.next = 7;
                                                break
                                            }
                                            throw new Br(i,P,o,"bad network response");
                                        case 7:
                                            if (u = Date.now(),
                                            a !== Gr) {
                                                r.next = 15;
                                                break
                                            }
                                            return r.next = 11,
                                            o.text();
                                        case 11:
                                            c = r.sent,
                                            n._running = !1,
                                            r.next = 37;
                                            break;
                                        case 15:
                                            if (a !== Nr) {
                                                r.next = 22;
                                                break
                                            }
                                            return r.next = 18,
                                            o.json();
                                        case 18:
                                            c = r.sent,
                                            n._running = !1,
                                            r.next = 37;
                                            break;
                                        case 22:
                                            if (!s) {
                                                r.next = 29;
                                                break
                                            }
                                            return n.resolve = e,
                                            n.reject = t,
                                            n._loadChunk(o, s, E, u),
                                            r.abrupt("return");
                                        case 29:
                                            return r.next = 31,
                                            o.arrayBuffer();
                                        case 31:
                                            c = r.sent,
                                            c = new Uint8Array(c),
                                            n._running = !1,
                                            f = Date.now() - E,
                                            p = zr(c.byteLength, f),
                                            n.emit(Xr, {
                                                speed: p,
                                                len: c.byteLength,
                                                time: f,
                                                vid: n._vid,
                                                index: n._index,
                                                range: n._range,
                                                priOptions: n._priOptions
                                            });
                                        case 37:
                                            n._logger.debug("[fetch load end], index,", l, ",range,", h),
                                            e(jr(c, !0, o, o.headers.get("Content-Length"), o.headers.get("age"), E, u, l, h, n._vid, n._priOptions));
                                        case 39:
                                        case "end":
                                            return r.stop()
                                        }
                                }
                                ), r)
                            }
                            )));
                            return function(e) {
                                return r.apply(this, arguments)
                            }
                        }()).catch((function(e) {
                            var r;
                            clearTimeout(n._timeoutTimer),
                            n._running = !1,
                            (!n._aborted || R) && ((e = e instanceof Br ? e : new Br(i,P,null,null === (r = e) || void 0 === r ? void 0 : r.message)).startTime = E,
                            e.endTime = Date.now(),
                            e.isTimeout = R,
                            e.options = {
                                index: n._index,
                                range: n._range,
                                vid: n._vid,
                                priOptions: n._priOptions
                            },
                            t(e))
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "cancel",
                value: (t = hr(lr().mark((function e() {
                    return lr().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (!this._aborted) {
                                    e.next = 2;
                                    break
                                }
                                return e.abrupt("return");
                            case 2:
                                if (this._aborted = !0,
                                this._running = !1,
                                !this._response) {
                                    e.next = 14;
                                    break
                                }
                                if (e.prev = 5,
                                !this._reader) {
                                    e.next = 9;
                                    break
                                }
                                return e.next = 9,
                                this._reader.cancel();
                            case 9:
                                e.next = 13;
                                break;
                            case 11:
                                e.prev = 11,
                                e.t0 = e.catch(5);
                            case 13:
                                this._response = this._reader = null;
                            case 14:
                                if (this._abortController) {
                                    try {
                                        this._abortController.abort()
                                    } catch {}
                                    this._abortController = null
                                }
                                this._onCancel && this._onCancel({
                                    index: this._index,
                                    range: this._range,
                                    vid: this._vid,
                                    priOptions: this._priOptions
                                });
                            case 16:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this, [[5, 11]])
                }
                ))),
                function() {
                    return t.apply(this, arguments)
                }
                )
            }, {
                key: "_loadChunk",
                value: function(e, t, n, i) {
                    var r = this;
                    if (!e.body || !e.body.getReader) {
                        this._running = !1;
                        var o = new Br(e.url,"",e,"onProgress of bad response.body.getReader");
                        return o.options = {
                            index: this._index,
                            range: this._range,
                            vid: this._vid,
                            priOptions: this._priOptions
                        },
                        void this.reject(o)
                    }
                    this._onProcessMinLen > 0 && (this._cache = new Uint8Array(Kr),
                    this._writeIdx = 0);
                    var a, s, l, u = this._reader = e.body.getReader(), c = function() {
                        var o = hr(lr().mark((function o() {
                            var h, d, f, p, g, m, v, y;
                            return lr().wrap((function(o) {
                                for (; ; )
                                    switch (o.prev = o.next) {
                                    case 0:
                                        return s = Date.now(),
                                        o.prev = 1,
                                        o.next = 4,
                                        u.read();
                                    case 4:
                                        a = o.sent,
                                        l = Date.now(),
                                        o.next = 13;
                                        break;
                                    case 8:
                                        return o.prev = 8,
                                        o.t0 = o.catch(1),
                                        l = Date.now(),
                                        r._aborted || (r._running = !1,
                                        o.t0.options = {
                                            index: r._index,
                                            range: r._range,
                                            vid: r._vid,
                                            priOptions: r._priOptions
                                        },
                                        r.reject(o.t0)),
                                        o.abrupt("return");
                                    case 13:
                                        if (d = (null === (h = r._range) || void 0 === h ? void 0 : h.length) > 0 ? r._range[0] : 0,
                                        f = d + r._receivedLength,
                                        !r._aborted) {
                                            o.next = 19;
                                            break
                                        }
                                        return r._running = !1,
                                        t(void 0, !1, {
                                            range: [f, f],
                                            vid: r._vid,
                                            index: r._index,
                                            startTime: s,
                                            endTime: l,
                                            st: n,
                                            firstByteTime: i,
                                            priOptions: r._priOptions
                                        }, e),
                                        o.abrupt("return");
                                    case 19:
                                        p = a.value ? a.value.byteLength : 0,
                                        r._receivedLength += p,
                                        r._logger.debug("【fetchLoader,onProgress call】,task,", r._range, ", start,", f, ", end,", d + r._receivedLength, ", done,", a.done),
                                        r._onProcessMinLen > 0 ? r._writeIdx + p >= r._onProcessMinLen || a.done ? ((g = new Uint8Array(r._writeIdx + p)).set(r._cache.slice(0, r._writeIdx), 0),
                                        p > 0 && g.set(a.value, r._writeIdx),
                                        r._writeIdx = 0,
                                        r._logger.debug("【fetchLoader,onProgress enough】,done,", a.done, ",len,", g.byteLength, ", writeIdx,", r._writeIdx)) : p > 0 && r._writeIdx + p < Kr ? (r._cache.set(a.value, r._writeIdx),
                                        r._writeIdx += p,
                                        r._logger.debug("【fetchLoader,onProgress cache】,len,", p, ", writeIdx,", r._writeIdx)) : p > 0 && (m = new Uint8Array(r._writeIdx + p + 2048),
                                        r._logger.debug("【fetchLoader,onProgress extra start】,size,", r._writeIdx + p + 2048, ", datalen,", p, ", writeIdx,", r._writeIdx),
                                        m.set(r._cache.slice(0, r._writeIdx), 0),
                                        p > 0 && m.set(a.value, r._writeIdx),
                                        r._writeIdx += p,
                                        delete r._cache,
                                        r._cache = m,
                                        r._logger.debug("【fetchLoader,onProgress extra end】,len,", p, ", writeIdx,", r._writeIdx)) : g = a.value,
                                        (g && g.byteLength > 0 || a.done) && t(g, a.done, {
                                            range: [r._range[0] + r._receivedLength - (g ? g.byteLength : 0), r._range[0] + r._receivedLength],
                                            vid: r._vid,
                                            index: r._index,
                                            startTime: s,
                                            endTime: l,
                                            st: n,
                                            firstByteTime: i,
                                            priOptions: r._priOptions
                                        }, e),
                                        a.done ? (v = Date.now() - n,
                                        y = zr(r._receivedLength, v),
                                        r.emit(Xr, {
                                            speed: y,
                                            len: r._receivedLength,
                                            time: v,
                                            vid: r._vid,
                                            index: r._index,
                                            range: r._range,
                                            priOptions: r._priOptions
                                        }),
                                        r._running = !1,
                                        r._logger.debug("[fetchLoader onProgress end],task,", r._range, ",done,", a.done),
                                        r.resolve(jr(a, !0, e, e.headers.get("Content-Length"), e.headers.get("age"), n, i, r._index, r._range, r._vid, r._priOptions))) : c();
                                    case 25:
                                    case "end":
                                        return o.stop()
                                    }
                            }
                            ), o, null, [[1, 8]])
                        }
                        )));
                        return function() {
                            return o.apply(this, arguments)
                        }
                    }();
                    c()
                }
            }, {
                key: "receiveLen",
                get: function() {
                    return this._receivedLength
                }
            }, {
                key: "running",
                get: function() {
                    return this._running
                },
                set: function(e) {
                    this._running = e
                }
            }], [{
                key: "isSupported",
                value: function() {
                    return typeof fetch < "u"
                }
            }]),
            i
        }(nr)
          , Wr = function(e) {
            mr(n, e);
            var t = wr(n);
            function n() {
                var e;
                return dr(this, n),
                gr(Sr(e = t.call(this)), "_xhr", null),
                gr(Sr(e), "_aborted", !1),
                gr(Sr(e), "_timeoutTimer", null),
                gr(Sr(e), "_range", null),
                gr(Sr(e), "_receivedLength", 0),
                gr(Sr(e), "_url", null),
                gr(Sr(e), "_onProgress", null),
                gr(Sr(e), "_index", -1),
                gr(Sr(e), "_headers", null),
                gr(Sr(e), "_currentChunkSizeKB", 384),
                gr(Sr(e), "_timeout", null),
                gr(Sr(e), "_xhr", null),
                gr(Sr(e), "_withCredentials", null),
                gr(Sr(e), "_startTime", -1),
                gr(Sr(e), "_loadCompleteResolve", null),
                gr(Sr(e), "_loadCompleteReject", null),
                gr(Sr(e), "_runing", !1),
                gr(Sr(e), "_logger", !1),
                gr(Sr(e), "_vid", ""),
                gr(Sr(e), "_responseType", void 0),
                gr(Sr(e), "_credentials", void 0),
                gr(Sr(e), "_method", void 0),
                gr(Sr(e), "_transformResponse", void 0),
                gr(Sr(e), "_firstRtt", void 0),
                gr(Sr(e), "_onCancel", null),
                gr(Sr(e), "_priOptions", null),
                e
            }
            return pr(n, [{
                key: "load",
                value: function(e) {
                    var t = this;
                    clearTimeout(this._timeoutTimer),
                    this._logger = e.logger,
                    this._range = e.range,
                    this._onProgress = e.onProgress,
                    this._index = e.index,
                    this._headers = e.headers,
                    this._withCredentials = "include" === e.credentials || "same-origin" === e.credentials,
                    this._body = e.body || null,
                    e.method && (this._method = e.method),
                    this._timeout = e.timeout || null,
                    this._runing = !0,
                    this._vid = e.vid || e.url,
                    this._responseType = e.responseType,
                    this._firstRtt = -1,
                    this._onTimeout = e.onTimeout,
                    this._onCancel = e.onCancel,
                    this._request = e.request,
                    this._priOptions = e.priOptions || {},
                    this._logger.debug("【xhrLoader task】, range", this._range),
                    this._url = Vr(e.url, e.params);
                    var n = Date.now();
                    return new Promise((function(e, n) {
                        t._loadCompleteResolve = e,
                        t._loadCompleteReject = n,
                        t._startLoad()
                    }
                    )).catch((function(e) {
                        if (clearTimeout(t._timeoutTimer),
                        t._runing = !1,
                        !t._aborted)
                            throw (e = e instanceof Br ? e : new Br(t._url,t._request)).startTime = n,
                            e.endTime = Date.now(),
                            e.options = {
                                index: t._index,
                                vid: t._vid,
                                priOptions: t._priOptions
                            },
                            e
                    }
                    ))
                }
            }, {
                key: "_startLoad",
                value: function() {
                    var e = null;
                    if (this._responseType === Ar && this._range && this._range.length > 1)
                        if (this._onProgress) {
                            this._firstRtt = -1;
                            var t = 1024 * this._currentChunkSizeKB
                              , n = this._range[0] + this._receivedLength
                              , i = this._range[1];
                            t < this._range[1] - n && (i = n + t),
                            e = [n, i],
                            this._logger.debug("[xhr_loader->],tast :", this._range, ", SubRange, ", e)
                        } else
                            e = this._range,
                            this._logger.debug("[xhr_loader->],tast :", this._range, ", allRange, ", e);
                    this._internalOpen(e)
                }
            }, {
                key: "_internalOpen",
                value: function(e) {
                    var t = this;
                    try {
                        this._startTime = Date.now();
                        var n = this._xhr = new XMLHttpRequest;
                        n.open(this._method || "GET", this._url, !0),
                        n.responseType = this._responseType,
                        this._timeout && (n.timeout = this._timeout),
                        n.withCredentials = this._withCredentials,
                        n.onload = this._onLoad.bind(this),
                        n.onreadystatechange = this._onReadyStatechange.bind(this),
                        n.onerror = function(e) {
                            var n, i, r;
                            t._running = !1;
                            var o = new Br(t._url,t._request,null == e || null === (n = e.currentTarget) || void 0 === n ? void 0 : n.response,"xhr.onerror.status:" + (null == e || null === (i = e.currentTarget) || void 0 === i ? void 0 : i.status) + ",statusText," + (null == e || null === (r = e.currentTarget) || void 0 === r ? void 0 : r.statusText));
                            o.options = {
                                index: t._index,
                                range: t._range,
                                vid: t._vid,
                                priOptions: t._priOptions
                            },
                            t._loadCompleteReject(o)
                        }
                        ,
                        n.ontimeout = function(e) {
                            t.cancel();
                            var n = new Br(t._url,t._request,{
                                status: 408
                            },"timeout");
                            t._onTimeout && (n.isTimeout = !0,
                            t._onTimeout(n, {
                                index: t._index,
                                range: t._range,
                                vid: t._vid,
                                priOptions: t._priOptions
                            })),
                            n.options = {
                                index: t._index,
                                range: t._range,
                                vid: t._vid,
                                priOptions: t._priOptions
                            },
                            t._loadCompleteReject(n)
                        }
                        ;
                        var i = this._headers || {}
                          , r = Hr(e);
                        r && (i.Range = r),
                        i && Object.keys(i).forEach((function(e) {
                            n.setRequestHeader(e, i[e])
                        }
                        )),
                        this._logger.debug("[xhr.send->] tast,", this._range, ",load sub range, ", e),
                        n.send(this._body)
                    } catch (t) {
                        t.options = {
                            index: this._index,
                            range: e,
                            vid: this._vid,
                            priOptions: this._priOptions
                        },
                        this._loadCompleteReject(t)
                    }
                }
            }, {
                key: "_onReadyStatechange",
                value: function(e) {
                    2 === e.target.readyState && this._firstRtt < 0 && (this._firstRtt = Date.now())
                }
            }, {
                key: "_onLoad",
                value: function(e) {
                    var t, n = e.target.status;
                    if (n < 200 || n > 299) {
                        var i = new Br(this._url,null,sr(sr({}, e.target.response), {}, {
                            status: n
                        }),"bad response,status:" + n);
                        return i.options = {
                            index: this._index,
                            range: this._range,
                            vid: this._vid,
                            priOptions: this._priOptions
                        },
                        this._loadCompleteReject(i)
                    }
                    var r, o = null, a = !1, s = (null === (t = this._range) || void 0 === t ? void 0 : t.length) > 0 ? this._range[0] : 0;
                    if (this._responseType === Ar) {
                        var l, u = new Uint8Array(e.target.response);
                        if (r = s + this._receivedLength,
                        u && u.byteLength > 0) {
                            this._receivedLength += u.byteLength;
                            var c = Date.now() - this._startTime
                              , h = zr(this._receivedLength, c);
                            this.emit(Xr, {
                                speed: h,
                                len: this._receivedLength,
                                time: c,
                                vid: this._vid,
                                index: this._index,
                                range: [r, s + this._receivedLength],
                                priOptions: this._priOptions
                            })
                        }
                        o = u,
                        a = !((null === (l = this._range) || void 0 === l ? void 0 : l.length) > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]),
                        this._logger.debug("[xhr load done->], tast :", this._range, ", start", r, "end ", s + this._receivedLength, ",dataLen,", u ? u.byteLength : 0, ",receivedLength", this._receivedLength, ",index,", this._index, ", done,", a)
                    } else
                        a = !0,
                        o = e.target.response;
                    var d = {
                        ok: n >= 200 && n < 300,
                        status: n,
                        statusText: this._xhr.statusText,
                        url: this._xhr.responseURL,
                        headers: this._getHeaders(this._xhr),
                        body: this._xhr.response
                    };
                    this._transformResponse && (d = this._transformResponse(d, this._url) || d),
                    this._onProgress && this._onProgress(o, a, {
                        index: this._index,
                        vid: this._vid,
                        range: [r, s + this._receivedLength],
                        startTime: this._startTime,
                        endTime: Date.now(),
                        priOptions: this._priOptions
                    }, d),
                    a ? (this._runing = !1,
                    this._loadCompleteResolve && this._loadCompleteResolve(jr(this._onProgress ? null : o, a, d, d.headers["content-length"], d.headers.age, this._startTime, this._firstRtt, this._index, this._range, this._vid, this._priOptions))) : this._startLoad()
                }
            }, {
                key: "cancel",
                value: function() {
                    if (!this._aborted && (this._aborted = !0,
                    this._runing = !1,
                    kr(vr(n.prototype), "removeAllListeners", this).call(this),
                    this._onCancel && this._onCancel({
                        index: this._index,
                        range: this._range,
                        vid: this._vid,
                        priOptions: this._priOptions
                    }),
                    this._xhr))
                        return this._xhr.abort()
                }
            }, {
                key: "receiveLen",
                get: function() {
                    return this._receivedLength
                }
            }, {
                key: "running",
                get: function() {
                    return this._running
                },
                set: function(e) {
                    this._running = e
                }
            }, {
                key: "_getHeaders",
                value: function(e) {
                    var t, n = {}, i = function(e, t) {
                        var n = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
                        if (!n) {
                            if (Array.isArray(e) || (n = function(e, t) {
                                if (e) {
                                    if ("string" == typeof e)
                                        return Cr(e, t);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    if ("Object" === n && e.constructor && (n = e.constructor.name),
                                    "Map" === n || "Set" === n)
                                        return Array.from(e);
                                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                                        return Cr(e, t)
                                }
                            }(e)) || t) {
                                n && (e = n);
                                var i = 0
                                  , r = function() {};
                                return {
                                    s: r,
                                    n: function() {
                                        return i >= e.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: e[i++]
                                        }
                                    },
                                    e: function(e) {
                                        throw e
                                    },
                                    f: r
                                }
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }
                        var o, a = !0, s = !1;
                        return {
                            s: function() {
                                n = n.call(e)
                            },
                            n: function() {
                                var e = n.next();
                                return a = e.done,
                                e
                            },
                            e: function(e) {
                                s = !0,
                                o = e
                            },
                            f: function() {
                                try {
                                    !a && null != n.return && n.return()
                                } finally {
                                    if (s)
                                        throw o
                                }
                            }
                        }
                    }(e.getAllResponseHeaders().trim().split("\r\n"));
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var r = t.value.split(": ");
                            n[r[0].toLowerCase()] = r.slice(1).join(": ")
                        }
                    } catch (e) {
                        i.e(e)
                    } finally {
                        i.f()
                    }
                    return n
                }
            }], [{
                key: "isSupported",
                value: function() {
                    return typeof XMLHttpRequest < "u"
                }
            }]),
            n
        }(nr)
          , qr = ["retry", "retryDelay", "onRetryError", "transformError"]
          , Zr = function() {
            function e(t, n) {
                dr(this, e),
                this.promise = Ir(),
                this.alive = !!n.onProgress,
                !n.logger && (n.logger = new xr("Loader")),
                this._loaderType = t,
                this._loader = t === Or && typeof fetch < "u" ? new Qr : new Wr,
                this._config = n,
                this._retryCount = 0,
                this._retryTimer = null,
                this._canceled = !1,
                this._retryCheckFunc = n.retryCheckFunc,
                this._logger = n.logger
            }
            return pr(e, [{
                key: "exec",
                value: function() {
                    var e = this
                      , t = this._config
                      , n = t.retry
                      , i = t.retryDelay
                      , r = t.onRetryError
                      , o = t.transformError
                      , a = function(e, t) {
                        if (null == e)
                            return {};
                        var n, i, r = function(e, t) {
                            if (null == e)
                                return {};
                            var n, i, r = {}, o = Object.keys(e);
                            for (i = 0; i < o.length; i++)
                                n = o[i],
                                !(t.indexOf(n) >= 0) && (r[n] = e[n]);
                            return r
                        }(e, t);
                        if (Object.getOwnPropertySymbols) {
                            var o = Object.getOwnPropertySymbols(e);
                            for (i = 0; i < o.length; i++)
                                n = o[i],
                                !(t.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n])
                        }
                        return r
                    }(t, qr)
                      , s = function() {
                        var t = hr(lr().mark((function t() {
                            var l, u, c;
                            return lr().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        return t.prev = 0,
                                        t.next = 3,
                                        e._loader.load(a);
                                    case 3:
                                        l = t.sent,
                                        e.promise.resolve(l),
                                        t.next = 27;
                                        break;
                                    case 7:
                                        if (t.prev = 7,
                                        t.t0 = t.catch(0),
                                        e._loader.running = !1,
                                        e._logger.debug("[task request catch err]", t.t0),
                                        !e._canceled) {
                                            t.next = 13;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 13:
                                        if (t.t0.loaderType = e._loaderType,
                                        t.t0.retryCount = e._retryCount,
                                        u = t.t0,
                                        o && (u = o(u) || u),
                                        r && e._retryCount > 0 && r(u, e._retryCount, {
                                            index: a.index,
                                            vid: a.vid,
                                            range: a.range,
                                            priOptions: a.priOptions
                                        }),
                                        e._retryCount++,
                                        c = !0,
                                        e._retryCheckFunc && (c = e._retryCheckFunc(t.t0)),
                                        !(c && e._retryCount <= n)) {
                                            t.next = 26;
                                            break
                                        }
                                        return clearTimeout(e._retryTimer),
                                        e._logger.debug("[task request setTimeout],retry", e._retryCount, ",retry range,", a.range),
                                        e._retryTimer = setTimeout(s, i),
                                        t.abrupt("return");
                                    case 26:
                                        e.promise.reject(u);
                                    case 27:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t, null, [[0, 7]])
                        }
                        )));
                        return function() {
                            return t.apply(this, arguments)
                        }
                    }();
                    return s(),
                    this.promise
                }
            }, {
                key: "cancel",
                value: (t = hr(lr().mark((function e() {
                    return lr().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return clearTimeout(this._retryTimer),
                                this._canceled = !0,
                                this._loader.running = !1,
                                e.abrupt("return", this._loader.cancel());
                            case 4:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function() {
                    return t.apply(this, arguments)
                }
                )
            }, {
                key: "running",
                get: function() {
                    return this._loader && this._loader.running
                }
            }, {
                key: "loader",
                get: function() {
                    return this._loader
                }
            }]),
            e;
            var t
        }();
        function Yr() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            return new Promise((function(t) {
                return setTimeout(t, e)
            }
            ))
        }
        var Jr = function(e) {
            mr(i, e);
            var t, n = wr(i);
            function i(e) {
                var t;
                return dr(this, i),
                gr(Sr(t = n.call(this, e)), "type", Or),
                gr(Sr(t), "_queue", []),
                gr(Sr(t), "_alive", []),
                gr(Sr(t), "_currentTask", null),
                gr(Sr(t), "_finnalUrl", ""),
                gr(Sr(t), "_config", void 0),
                t._config = function(e) {
                    return sr({
                        loaderType: Or,
                        retry: 0,
                        retryDelay: 0,
                        timeout: 0,
                        request: null,
                        onTimeout: void 0,
                        onProgress: void 0,
                        onRetryError: void 0,
                        transformRequest: void 0,
                        transformResponse: void 0,
                        transformError: void 0,
                        responseType: Gr,
                        range: void 0,
                        url: "",
                        params: void 0,
                        method: "GET",
                        headers: {},
                        body: void 0,
                        mode: void 0,
                        credentials: void 0,
                        cache: void 0,
                        redirect: void 0,
                        referrer: void 0,
                        referrerPolicy: void 0,
                        integrity: void 0,
                        onProcessMinLen: 0
                    }, e)
                }(e),
                ("xhr" === t._config.loaderType || !Qr.isSupported()) && (t.type = "xhr"),
                t.log = e.logger,
                t
            }
            return pr(i, [{
                key: "isFetch",
                value: function() {
                    return this.type === Or
                }
            }, {
                key: "load",
                value: function(e) {
                    var t = this
                      , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    "string" != typeof e && e ? n = e : n.url = e || n.url || this._config.url,
                    (n = Object.assign({}, this._config, n)).params && (n.params = Object.assign({}, n.params)),
                    n.headers && Fr(n.headers) && (n.headers = Object.assign({}, n.headers)),
                    n.body && Fr(n.body) && (n.body = Object.assign({}, n.body)),
                    n.transformRequest && (n = n.transformRequest(n) || n),
                    n.logger = this.log;
                    var i = new Zr(this.type,n);
                    return i.loader.on(Xr, (function(e) {
                        t.emit(Xr, e)
                    }
                    )),
                    this._queue.push(i),
                    1 === this._queue.length && (!this._currentTask || !this._currentTask.running) && this._processTask(),
                    i.promise
                }
            }, {
                key: "cancel",
                value: (t = hr(lr().mark((function e() {
                    var t;
                    return lr().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return t = this._queue.map((function(e) {
                                    return e.cancel()
                                }
                                )).concat(this._alive.map((function(e) {
                                    return e.cancel()
                                }
                                ))),
                                this._currentTask && t.push(this._currentTask.cancel()),
                                this._queue = [],
                                this._alive = [],
                                e.next = 6,
                                Promise.all(t);
                            case 6:
                                return e.next = 8,
                                Yr();
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function() {
                    return t.apply(this, arguments)
                }
                )
            }, {
                key: "_processTask",
                value: function() {
                    var e = this;
                    if (this._currentTask = this._queue.shift(),
                    this._currentTask) {
                        this._currentTask.alive && this._alive.push(this._currentTask);
                        var t = this._currentTask.exec().catch((function(e) {}
                        ));
                        t && "function" == typeof t.finally && t.finally((function() {
                            var t, n;
                            null !== (t = e._currentTask) && void 0 !== t && t.alive && (null === (n = e._alive) || void 0 === n ? void 0 : n.length) > 0 && (e._alive = e._alive.filter((function(t) {
                                return t && t !== e._currentTask
                            }
                            ))),
                            e._processTask()
                        }
                        ))
                    }
                }
            }], [{
                key: "isFetchSupport",
                value: function() {
                    return Qr.isSupported()
                }
            }]),
            i
        }(nr);
        class eo {
            static getDefaultConfig() {
                return {
                    PCDNBufferControl: !1,
                    PCDNCntControl: !1,
                    estPTcontrol: !1,
                    minPCDNInBuffer: 8,
                    maxPCDNInBuffer: 12,
                    minPCDNOutBuffer: 3,
                    maxPCDNOutBuffer: 6,
                    safePCDNInFactor: .1,
                    safePCDNOutFactor: .4,
                    alpha: .5,
                    estPlayTime: 12,
                    minBandwidth: 1e6
                }
            }
            constructor(e, t, n, i) {
                this.config = eo.getDefaultConfig(),
                Object.keys(i).map((e => {
                    void 0 !== i[e] && null !== i[e] && (this.config[e] = i[e])
                }
                )),
                this.duration = n,
                this.player = e,
                this.updateBitrate(t),
                this.curPCDNInBuffer = this.config.maxPCDNInBuffer,
                this.curPCDNOutBuffer = this.config.maxPCDNOutBuffer,
                this.PCDNChangeCnt = 0
            }
            updateBitrate(e) {
                this.bitrate = e,
                this.bitrate || (this.bitrate = this.config.minBandwidth)
            }
            getPCDNInBuffer() {
                const {config: e, player: t, bitrate: n} = this;
                if (!e.PCDNBufferControl)
                    return null;
                const {estPlayTime: i} = e;
                let r = i;
                e.estPTcontrol && (r = Math.min(i, Math.max(0, this.duration - ((null == t ? void 0 : t.currentTime) || 0))));
                const {safePCDNInFactor: o, minBandwidth: a, maxPCDNInBuffer: s, minPCDNInBuffer: l} = e
                  , u = o * Math.max(1024 * (null == t ? void 0 : t.avgSpeedPCDN) || 0, a)
                  , c = n > 0 ? (1 - u / n) * r : 0;
                return this.curPCDNInBuffer = Math.min(s, Math.max(l, c)),
                this.curPCDNInBuffer
            }
            getPCDNOutBuffer() {
                const {config: e, player: t, bitrate: n} = this;
                if (!e.PCDNBufferControl)
                    return null;
                const {estPlayTime: i} = e;
                let r = i;
                e.estPTcontrol && (r = Math.min(i, Math.max(0, this.duration - ((null == t ? void 0 : t.currentTime) || 0))));
                const {safePCDNOutFactor: o, minBandwidth: a, maxPCDNOutBuffer: s, minPCDNOutBuffer: l} = e
                  , u = o * Math.max(1024 * (null == t ? void 0 : t.avgSpeedPCDN) || 0, a)
                  , c = n > 0 ? (1 - u / n) * r : 0;
                return this.curPCDNOutBuffer = Math.min(s, Math.max(l, c)),
                this.curPCDNOutBuffer
            }
            getPCDNChangeCnt() {
                const {PCDNCntControl: e, alpha: t} = this.config
                  , {curPCDNInBuffer: n, player: i} = this
                  , r = (null == i ? void 0 : i.bufferedPoint) || null
                  , o = r && r.end ? r.end - i.currentTime : 0;
                return e ? o > n + (this.PCDNChangeCnt - 1) * t && this.PCDNChangeCnt++ : o >= n && this.PCDNChangeCnt < 2 && this.PCDNChangeCnt++,
                this.PCDNChangeCnt
            }
        }
        const to = new Map
          , no = class e {
            static get pluginName() {
                return "PCDN"
            }
            static get pcdnReqCnt() {
                const {pcdn_tracker_request_cnt: t, pcdn_tracker_success_cnt: n} = e;
                return e.pcdn_tracker_request_cnt = 0,
                e.pcdn_tracker_success_cnt = 0,
                {
                    pcdn_tracker_request_cnt: t,
                    pcdn_tracker_failed_cnt: t - n
                }
            }
            static getDefaultConfig() {
                return {
                    trackerUrl: "",
                    loaderType: Or,
                    responseType: Nr,
                    mode: "cors",
                    method: "POST",
                    retry: 0,
                    retryDelay: 3e3,
                    timeout: 5e3,
                    node_num: 5,
                    client_info: null,
                    maxCnt: 30,
                    withReferer: 0,
                    NULLNodeTimeStep: 6e4,
                    ErrorTimeStep: 15e3
                }
            }
            constructor(t, n, i, r) {
                var o, a;
                this.options = e.getDefaultConfig(),
                Object.keys(t).map((e => {
                    void 0 !== t[e] && null !== t[e] && (this.options[e] = t[e])
                }
                )),
                (!this.options.productConfig || !this.options.productConfig.app_id) && console.error("productConfig must has"),
                this.loader = new Jr(this.options),
                this.resetTrackeArgs(),
                this._lastFileInfo = null,
                this.lastfetchNodeTime = -1,
                this._lastRetFileKey = null,
                this._minUpdateNodeStep = this.options.ErrorTimeStep,
                null != (a = null == (o = this.options) ? void 0 : o.adaptPCDNConfig) && a.PCDNBufferControl && (this.pcdnAdapt = new eo(n,i,r,this.options.adaptPCDNConfig))
            }
            get isOpenAdaptPCDN() {
                return !!this.pcdnAdapt
            }
            get curPCDNInBuffer() {
                return this.pcdnAdapt.curPCDNInBuffer
            }
            getPCDNInBuffer() {
                var e;
                return null == (e = this.pcdnAdapt) ? void 0 : e.getPCDNInBuffer()
            }
            get curPCDNOutBuffer() {
                return this.pcdnAdapt.curPCDNOutBuffer
            }
            getPCDNOutBuffer() {
                var e;
                return null == (e = this.pcdnAdapt) ? void 0 : e.getPCDNOutBuffer()
            }
            get curPCDNChangeCnt() {
                return this.pcdnAdapt.PCDNChangeCnt
            }
            getPCDNChangeCnt() {
                var e;
                return null == (e = this.pcdnAdapt) ? void 0 : e.getPCDNChangeCnt()
            }
            resetTrackeArgs(e) {
                this.trackeArgs = {
                    fid: null,
                    trace_id: null,
                    req_times: (null == e ? void 0 : e.req_times) || 0,
                    resp_times: (null == e ? void 0 : e.resp_times) || 0,
                    token: null,
                    node_num: this.options.node_num,
                    client_info: this.options.client_info
                }
            }
            static async gainPCDNNode(t, n, i, r) {
                var o, a, s;
                const l = e.getDefaultConfig();
                Object.keys(n).map((e => {
                    void 0 !== n[e] && null !== n[e] && (l[e] = n[e])
                }
                )),
                (!r || !r.app_id) && console.error("productConfig must has");
                const u = new Ir;
                i ? (i.byterate = ro(i.bitrate),
                delete i.bitrate) : u.reject("video fileInfo need set");
                const c = Object.assign(r, {
                    file_info: i
                }, {
                    node_num: (null == n ? void 0 : n.node_num) || 3
                })
                  , h = JSON.stringify(c)
                  , d = new Jr(l);
                try {
                    e.pcdn_tracker_request_cnt++;
                    const n = await d.load(t, {
                        body: h
                    });
                    n.done && (null == (s = null == (a = null == (o = n.data) ? void 0 : o.Result) ? void 0 : a.nodes) ? void 0 : s.length) > 0 && e.pcdn_tracker_success_cnt++,
                    u.resolve(n)
                } catch (e) {
                    u.reject((null == e ? void 0 : e.message) || "get pcdnNode error")
                }
                return u
            }
            getPCDNNode(e, t, n) {
                var i;
                const r = ro(t)
                  , o = to.get(io(e, r))
                  , a = new Ir;
                return null == o || !o.nodes || (null == (i = null == o ? void 0 : o.nodes) ? void 0 : i.length) < 1 ? this.fetchPCDNNode(null, null, n).then((e => {
                    a.resolve(e)
                }
                )).catch((e => {
                    a.reject(e)
                }
                )) : (o.fromCache = !0,
                a.resolve(o)),
                a
            }
            removePCDNNode(e, t, n) {
                const i = ro(t)
                  , r = to.get(io(e, i))
                  , o = null == r ? void 0 : r.nodes;
                o && (n ? r.nodes = o.filter((e => e && n.indexOf(e.url) < 0)) : o.shift(),
                to.set(io(e, i), r)),
                (!o || !o.length) && this.fetchPCDNNode().then().catch(( () => {}
                ))
            }
            async fetchPCDNNode(t, n, i) {
                var r, o;
                const a = new Ir;
                if (n) {
                    n.byterate = ro(n.bitrate);
                    const e = to.get(io(n.vid, n.byterate));
                    if ((null == (r = null == e ? void 0 : e.nodes) ? void 0 : r.length) > 0)
                        return e.fromCache = !0,
                        a.resolve(e),
                        a;
                    delete n.bitrate,
                    this._lastFileInfo = n
                } else
                    n = this._lastFileInfo;
                if (!n)
                    return a.resolve(null),
                    a;
                let s = !1;
                const l = io(n.vid, n.byterate);
                if (this._lastRetFileKey !== l && (this.resetTrackeArgs(),
                s = !0),
                Date.now() - this.lastfetchNodeTime < this._minUpdateNodeStep && !s)
                    return a.resolve(null),
                    a;
                this.lastfetchNodeTime = Date.now(),
                this._lastRetFileKey = l,
                n.sfid ? n.version = 1 : n.vid && (n.version = 2),
                this.options.withReferer && (n.with_referer = this.options.withReferer);
                const u = Object.assign(this.options.productConfig, {
                    file_info: n
                }, this.trackeArgs, {
                    req_id: i
                })
                  , c = JSON.stringify(u);
                if (this.trackeArgs.req_times >= this.options.maxCnt)
                    return a.resolve(null),
                    a;
                this.loader || (this.loader = new Jr(this.options)),
                this.trackeArgs.req_times += 1;
                try {
                    e.pcdn_tracker_request_cnt++;
                    const i = await this.loader.load(t || this.options.trackerUrl, {
                        body: c
                    });
                    let r = null;
                    if (i) {
                        this.trackeArgs.resp_times += 1;
                        const t = 8 * n.byterate;
                        if (i.done && null != (o = i.data) && o.Result) {
                            const o = i.data.Result;
                            r = o.nodes,
                            r && r.length > 0 ? e.pcdn_tracker_success_cnt++ : this._minUpdateNodeStep = this.options.NULLNodeTimeStep,
                            r.map((e => {
                                e.vid = n.vid,
                                e.bitrate = t
                            }
                            ));
                            const {fid: s, trace_id: l, req_id: u} = o
                              , c = {
                                nodes: r,
                                fid: s,
                                vid: n.vid,
                                trace_id: l,
                                req_id: u,
                                bitrate: t
                            }
                              , h = io(n.vid, n.byterate);
                            to.set(h, c),
                            this.trackeArgs.fid = o.fid,
                            this.trackeArgs.trace_id = o.trace_id,
                            this.trackeArgs.token = o.token,
                            a.resolve(c)
                        } else
                            this._minUpdateNodeStep = this.options.ErrorTimeStep,
                            a.reject(i)
                    }
                } catch (e) {
                    this._minUpdateNodeStep = this.options.ErrorTimeStep,
                    console.warn("tracker catch ERR,", e),
                    a.reject(e)
                }
                return a
            }
        }
        ;
        function io(e, t) {
            return `${e}-${t}`
        }
        function ro(e) {
            return Math.floor(e / 8)
        }
        function oo(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function ao(e, t, n, i, r, o, a) {
            try {
                var s = e[o](a)
                  , l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(i, r)
        }
        function so(e) {
            return function() {
                var t = this
                  , n = arguments;
                return new Promise((function(i, r) {
                    var o = e.apply(t, n);
                    function a(e) {
                        ao(o, i, r, a, s, "next", e)
                    }
                    function s(e) {
                        ao(o, i, r, a, s, "throw", e)
                    }
                    a(void 0)
                }
                ))
            }
        }
        function lo(e, t, n) {
            return t = go(t),
            function(e, t) {
                if (t && ("object" == typeof t || "function" == typeof t))
                    return t;
                if (void 0 !== t)
                    throw new TypeError("Derived constructors may only return object or undefined");
                return function(e) {
                    if (void 0 === e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e
                }(e)
            }(e, vo() ? Reflect.construct(t, n || [], go(e).constructor) : t.apply(e, n))
        }
        function uo(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function co(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, So(i.key), i)
            }
        }
        function ho(e, t, n) {
            return t && co(e.prototype, t),
            n && co(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function fo(e, t, n) {
            return (t = So(t))in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function po() {
            return po = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e, t, n) {
                var i = function(e, t) {
                    for (; !{}.hasOwnProperty.call(e, t) && null !== (e = go(e)); )
                        ;
                    return e
                }(e, t);
                if (i) {
                    var r = Object.getOwnPropertyDescriptor(i, t);
                    return r.get ? r.get.call(arguments.length < 3 ? e : n) : r.value
                }
            }
            ,
            po.apply(null, arguments)
        }
        function go(e) {
            return (go = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }
            )(e)
        }
        function mo(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            t && bo(e, t)
        }
        function vo() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                )))
            } catch (e) {}
            return (vo = function() {
                return !!e
            }
            )()
        }
        function yo(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, i)
            }
            return n
        }
        function _o(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? yo(Object(n), !0).forEach((function(t) {
                    fo(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : yo(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function To() {
            To = function() {
                return t
            }
            ;
            var e, t = {}, n = Object.prototype, i = n.hasOwnProperty, r = Object.defineProperty || function(e, t, n) {
                e[t] = n.value
            }
            , o = "function" == typeof Symbol ? Symbol : {}, a = o.iterator || "@@iterator", s = o.asyncIterator || "@@asyncIterator", l = o.toStringTag || "@@toStringTag";
            function u(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                u({}, "")
            } catch (e) {
                u = function(e, t, n) {
                    return e[t] = n
                }
            }
            function c(e, t, n, i) {
                var o = t && t.prototype instanceof v ? t : v
                  , a = Object.create(o.prototype)
                  , s = new E(i || []);
                return r(a, "_invoke", {
                    value: M(e, n, s)
                }),
                a
            }
            function h(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            t.wrap = c;
            var d = "suspendedStart"
              , f = "suspendedYield"
              , p = "executing"
              , g = "completed"
              , m = {};
            function v() {}
            function y() {}
            function _() {}
            var T = {};
            u(T, a, (function() {
                return this
            }
            ));
            var b = Object.getPrototypeOf
              , S = b && b(b(D([])));
            S && S !== n && i.call(S, a) && (T = S);
            var w = _.prototype = v.prototype = Object.create(T);
            function k(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    u(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function C(e, t) {
                function n(r, o, a, s) {
                    var l = h(e[r], e, o);
                    if ("throw" !== l.type) {
                        var u = l.arg
                          , c = u.value;
                        return c && "object" == typeof c && i.call(c, "__await") ? t.resolve(c.__await).then((function(e) {
                            n("next", e, a, s)
                        }
                        ), (function(e) {
                            n("throw", e, a, s)
                        }
                        )) : t.resolve(c).then((function(e) {
                            u.value = e,
                            a(u)
                        }
                        ), (function(e) {
                            return n("throw", e, a, s)
                        }
                        ))
                    }
                    s(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, i) {
                        function r() {
                            return new t((function(t, r) {
                                n(e, i, t, r)
                            }
                            ))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }
            function M(t, n, i) {
                var r = d;
                return function(o, a) {
                    if (r === p)
                        throw Error("Generator is already running");
                    if (r === g) {
                        if ("throw" === o)
                            throw a;
                        return {
                            value: e,
                            done: !0
                        }
                    }
                    for (i.method = o,
                    i.arg = a; ; ) {
                        var s = i.delegate;
                        if (s) {
                            var l = P(s, i);
                            if (l) {
                                if (l === m)
                                    continue;
                                return l
                            }
                        }
                        if ("next" === i.method)
                            i.sent = i._sent = i.arg;
                        else if ("throw" === i.method) {
                            if (r === d)
                                throw r = g,
                                i.arg;
                            i.dispatchException(i.arg)
                        } else
                            "return" === i.method && i.abrupt("return", i.arg);
                        r = p;
                        var u = h(t, n, i);
                        if ("normal" === u.type) {
                            if (r = i.done ? g : f,
                            u.arg === m)
                                continue;
                            return {
                                value: u.arg,
                                done: i.done
                            }
                        }
                        "throw" === u.type && (r = g,
                        i.method = "throw",
                        i.arg = u.arg)
                    }
                }
            }
            function P(t, n) {
                var i = n.method
                  , r = t.iterator[i];
                if (r === e)
                    return n.delegate = null,
                    "throw" === i && t.iterator.return && (n.method = "return",
                    n.arg = e,
                    P(t, n),
                    "throw" === n.method) || "return" !== i && (n.method = "throw",
                    n.arg = new TypeError("The iterator does not provide a '" + i + "' method")),
                    m;
                var o = h(r, t.iterator, n.arg);
                if ("throw" === o.type)
                    return n.method = "throw",
                    n.arg = o.arg,
                    n.delegate = null,
                    m;
                var a = o.arg;
                return a ? a.done ? (n[t.resultName] = a.value,
                n.next = t.nextLoc,
                "return" !== n.method && (n.method = "next",
                n.arg = e),
                n.delegate = null,
                m) : a : (n.method = "throw",
                n.arg = new TypeError("iterator result is not an object"),
                n.delegate = null,
                m)
            }
            function R(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function x(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function E(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(R, this),
                this.reset(!0)
            }
            function D(t) {
                if (t || "" === t) {
                    var n = t[a];
                    if (n)
                        return n.call(t);
                    if ("function" == typeof t.next)
                        return t;
                    if (!isNaN(t.length)) {
                        var r = -1
                          , o = function n() {
                            for (; ++r < t.length; )
                                if (i.call(t, r))
                                    return n.value = t[r],
                                    n.done = !1,
                                    n;
                            return n.value = e,
                            n.done = !0,
                            n
                        };
                        return o.next = o
                    }
                }
                throw new TypeError(typeof t + " is not iterable")
            }
            return y.prototype = _,
            r(w, "constructor", {
                value: _,
                configurable: !0
            }),
            r(_, "constructor", {
                value: y,
                configurable: !0
            }),
            y.displayName = u(_, l, "GeneratorFunction"),
            t.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === y || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            t.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, _) : (e.__proto__ = _,
                u(e, l, "GeneratorFunction")),
                e.prototype = Object.create(w),
                e
            }
            ,
            t.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            k(C.prototype),
            u(C.prototype, s, (function() {
                return this
            }
            )),
            t.AsyncIterator = C,
            t.async = function(e, n, i, r, o) {
                void 0 === o && (o = Promise);
                var a = new C(c(e, n, i, r),o);
                return t.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }
                ))
            }
            ,
            k(w),
            u(w, l, "Generator"),
            u(w, a, (function() {
                return this
            }
            )),
            u(w, "toString", (function() {
                return "[object Generator]"
            }
            )),
            t.keys = function(e) {
                var t = Object(e)
                  , n = [];
                for (var i in t)
                    n.push(i);
                return n.reverse(),
                function e() {
                    for (; n.length; ) {
                        var i = n.pop();
                        if (i in t)
                            return e.value = i,
                            e.done = !1,
                            e
                    }
                    return e.done = !0,
                    e
                }
            }
            ,
            t.values = D,
            E.prototype = {
                constructor: E,
                reset: function(t) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = e,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = e,
                    this.tryEntries.forEach(x),
                    !t)
                        for (var n in this)
                            "t" === n.charAt(0) && i.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(t) {
                    if (this.done)
                        throw t;
                    var n = this;
                    function r(i, r) {
                        return s.type = "throw",
                        s.arg = t,
                        n.next = i,
                        r && (n.method = "next",
                        n.arg = e),
                        !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var a = this.tryEntries[o]
                          , s = a.completion;
                        if ("root" === a.tryLoc)
                            return r("end");
                        if (a.tryLoc <= this.prev) {
                            var l = i.call(a, "catchLoc")
                              , u = i.call(a, "finallyLoc");
                            if (l && u) {
                                if (this.prev < a.catchLoc)
                                    return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc)
                                    return r(a.finallyLoc)
                            } else if (l) {
                                if (this.prev < a.catchLoc)
                                    return r(a.catchLoc, !0)
                            } else {
                                if (!u)
                                    throw Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc)
                                    return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var r = this.tryEntries[n];
                        if (r.tryLoc <= this.prev && i.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                            var o = r;
                            break
                        }
                    }
                    o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                    var a = o ? o.completion : {};
                    return a.type = e,
                    a.arg = t,
                    o ? (this.method = "next",
                    this.next = o.finallyLoc,
                    m) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    m
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            x(n),
                            m
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var i = n.completion;
                            if ("throw" === i.type) {
                                var r = i.arg;
                                x(n)
                            }
                            return r
                        }
                    }
                    throw Error("illegal catch attempt")
                },
                delegateYield: function(t, n, i) {
                    return this.delegate = {
                        iterator: D(t),
                        resultName: n,
                        nextLoc: i
                    },
                    "next" === this.method && (this.arg = e),
                    m
                }
            },
            t
        }
        function bo(e, t) {
            return (bo = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t,
                e
            }
            )(e, t)
        }
        function So(e) {
            var t = function(e) {
                if ("object" != typeof e || !e)
                    return e;
                var t = e[Symbol.toPrimitive];
                if (void 0 !== t) {
                    var n = t.call(e, "string");
                    if ("object" != typeof n)
                        return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return String(e)
            }(e);
            return "symbol" == typeof t ? t : t + ""
        }
        function wo(e) {
            return (wo = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            )(e)
        }
        function ko(e) {
            var t = "function" == typeof Map ? new Map : void 0;
            return ko = function(e) {
                if (null === e || !function(e) {
                    try {
                        return -1 !== Function.toString.call(e).indexOf("[native code]")
                    } catch (t) {
                        return "function" == typeof e
                    }
                }(e))
                    return e;
                if ("function" != typeof e)
                    throw new TypeError("Super expression must either be null or a function");
                if (void 0 !== t) {
                    if (t.has(e))
                        return t.get(e);
                    t.set(e, n)
                }
                function n() {
                    return function(e, t, n) {
                        if (vo())
                            return Reflect.construct.apply(null, arguments);
                        var i = [null];
                        i.push.apply(i, t);
                        var r = new (e.bind.apply(e, i));
                        return n && bo(r, n.prototype),
                        r
                    }(e, arguments, go(this).constructor)
                }
                return n.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: n,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                bo(n, e)
            }
            ,
            ko(e)
        }
        Vi(no, "pcdn_tracker_request_cnt", 0),
        Vi(no, "pcdn_tracker_success_cnt", 0);
        var Co = {
            DEBUG: 1,
            LOG: 2,
            WARN: 3,
            ERROR: 4
        }
          , Mo = ["Boolean", "Number", "String", "Undefined", "Null", "Date", "Object"]
          , Po = function() {
            function e(t, n) {
                uo(this, e),
                this.name = t || "",
                this._prefix = "[".concat(this.name, "]"),
                this.logCacheLevel = (null == n ? void 0 : n.logCacheLevel) || 3,
                this.logMaxSize = (null == n ? void 0 : n.logMaxSize) || 204800,
                this.logSize = 0,
                this.logTextArray = []
            }
            return ho(e, [{
                key: "debug",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Co.DEBUG].concat(i)),
                    e.disabled || (t = console).debug.apply(t, [this._prefix, Ro()].concat(i))
                }
            }, {
                key: "log",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Co.LOG].concat(i)),
                    e.disabled || (t = console).log.apply(t, [this._prefix, Ro()].concat(i))
                }
            }, {
                key: "warn",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Co.WARN].concat(i)),
                    e.disabled || (t = console).warn.apply(t, [this._prefix, Ro()].concat(i))
                }
            }, {
                key: "error",
                value: function() {
                    for (var t, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                        i[r] = arguments[r];
                    this.logCache.apply(this, [Co.ERROR].concat(i)),
                    e.disabled || (t = console).error.apply(t, [this._prefix, Ro()].concat(i))
                }
            }, {
                key: "logCache",
                value: function(e) {
                    if (!(e < this.logCacheLevel)) {
                        var t = "";
                        try {
                            for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                                i[r - 1] = arguments[r];
                            var o = i.map((function(e) {
                                return Eo(e)
                            }
                            ));
                            t = this._prefix + Ro() + JSON.stringify(o)
                        } catch (e) {
                            return
                        }
                        if (e >= this.logCacheLevel && (this.logSize += t.length,
                        this.logTextArray.push(t)),
                        this.logSize > this.logMaxSize) {
                            var a = this.logTextArray.shift();
                            this.logSize -= a.length
                        }
                    }
                }
            }, {
                key: "getLogCache",
                value: function() {
                    var e = this.logTextArray.join("\n");
                    return this.reset(),
                    e
                }
            }, {
                key: "reset",
                value: function() {
                    this.logTextArray = [],
                    this.logSize = 0
                }
            }, {
                key: "table",
                value: function() {
                    var t;
                    e.disabled || (console.group(this._prefix),
                    (t = console).table.apply(t, arguments),
                    console.groupEnd())
                }
            }, {
                key: "setLogLevel",
                value: function(e) {
                    this.logCacheLevel = e
                }
            }], [{
                key: "enable",
                value: function() {
                    e.disabled = !1
                }
            }, {
                key: "disable",
                value: function() {
                    e.disabled = !0
                }
            }])
        }();
        function Ro() {
            return (new Date).toLocaleString()
        }
        function xo(e) {
            if ("object" !== wo(e))
                return e;
            var t = Object.prototype.toString.call(e).slice(8, -1);
            switch (t) {
            case "Array":
            case "Uint8Array":
            case "ArrayBuffer":
                return t + "[" + e.length + "]";
            case "Object":
                return "{}";
            default:
                return t
            }
        }
        function Eo(e, t, n) {
            n || (n = 1),
            t || (t = 2);
            var i = {};
            if (!e || "object" !== wo(e))
                return e;
            var r = Object.prototype.toString.call(e).slice(8, -1);
            if (!Mo.includes(r))
                return r;
            if (!(n > t)) {
                for (var o in e)
                    Object.prototype.hasOwnProperty.call(e, o) && (n === t ? i[o] = xo(e[o]) : "object" === wo(e[o]) ? i[o] = Eo(e[o], t, n + 1) : i[o] = e[o]);
                return i
            }
        }
        fo(Po, "disabled", !0);
        var Do, Lo = function() {
            function e() {
                uo(this, e)
            }
            return ho(e, null, [{
                key: "start",
                value: function(e) {
                    return e && e.length ? 1 === e.length && e.end(0) - e.start(0) < 1e-6 || 1 === e.length && e.start(0) < 0 ? 0 : e.start(0) : 0
                }
            }, {
                key: "end",
                value: function(e) {
                    return e && e.length ? 1 === e.length && e.end(0) - e.start(0) < 1e-6 ? 0 : e.end(e.length - 1) : 0
                }
            }, {
                key: "get",
                value: function(e) {
                    if (e)
                        try {
                            return e.buffered
                        } catch (e) {}
                }
            }, {
                key: "buffers",
                value: function(e, t) {
                    if (!e || !e.length)
                        return [];
                    for (var n = [], i = 0, r = e.length; i < r; i++) {
                        var o = n.length;
                        if (o && t) {
                            var a = n[o - 1]
                              , s = a[1];
                            if (e.start(i) - s <= t) {
                                var l = e.end(i);
                                l > s && (a[1] = l)
                            } else
                                n.push([e.start(i), e.end(i)])
                        } else
                            n.push([e.start(i), e.end(i)])
                    }
                    return n
                }
            }, {
                key: "totalLength",
                value: function(e) {
                    return e && e.length ? e.reduce((function(e, t) {
                        return e + (t[1] - t[0])
                    }
                    ), 0) : 0
                }
            }, {
                key: "info",
                value: function(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                      , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    if (!t || !t.length)
                        return {
                            start: 0,
                            end: 0,
                            buffers: []
                        };
                    for (var r = 0, o = 0, a = 0, s = 0, l = 0, u = 0, c = 0, h = e.buffers(t, i), d = 0, f = h.length; d < f; d++) {
                        var p = h[d];
                        if (n + i >= p[0] && n <= p[1])
                            r = p[0],
                            o = p[1],
                            a = d;
                        else {
                            if (n + i < p[0]) {
                                s = p[0],
                                l = p[1];
                                break
                            }
                            n + i > p[1] && (u = p[0],
                            c = p[1])
                        }
                    }
                    return {
                        start: r,
                        end: o,
                        index: a,
                        buffers: h,
                        nextStart: s,
                        nextEnd: l,
                        prevStart: u,
                        prevEnd: c,
                        currentTime: n,
                        behind: n - r,
                        remaining: o ? o - n : 0,
                        length: e.totalLength && e.totalLength(h)
                    }
                }
            }, {
                key: "isBuffered",
                value: function(t, n) {
                    if (t) {
                        var i = e.get(t);
                        if (null != i && i.length)
                            for (var r = 0; r < i.length; r++)
                                if (n >= i.start(r) && n <= i.end(r))
                                    return !0
                    }
                    return !1
                }
            }])
        }(), Io = "undefined" != typeof window, Oo = {
            MANIFEST: "manifest",
            NETWORK: "network",
            NETWORK_TIMEOUT: "network_timeout",
            NETWORK_FORBIDDEN: "network_forbidden",
            NETWORK_NOTFOUND: "network_notfound",
            NETWROK_RANGE_NOT_SATISFIABLE: "network_range_not_satisfiable",
            DEMUX: "demux",
            REMUX: "remux",
            MEDIA: "media",
            DRM: "drm",
            OTHER: "other",
            RUNTIME: "runtime",
            SUB_TYPES: {
                FLV: "FLV",
                HLS: "HLS",
                MP4: "MP4",
                FMP4: "FMP4",
                MSE_ADD_SB: "MSE_ADD_SB",
                MSE_APPEND_BUFFER: "MSE_APPEND_BUFFER",
                MSE_OTHER: "MSE_OTHER",
                MSE_FULL: "MSE_FULL",
                MSE_CHANGE_TYPE: "MSE_CHANGE_TYPE",
                OPTION: "OPTION",
                DASH: "DASH",
                LICENSE: "LICENSE",
                CUSTOM_LICENSE: "CUSTOM_LICENSE",
                MSE_HIJACK: "MSE_HIJACK",
                EME_HIJACK: "EME_HIJACK",
                SIDX: "SIDX",
                NO_CANPLAY_ERROR: "NO_CANPLAY_ERROR",
                BUFFERBREAK_ERROR: "BUFFERBREAK_ERROR",
                WAITING_TIMEOUT_ERROR: "WAITING_TIMEOUT_ERROR",
                MEDIA_ERR_ABORTED: "MEDIA_ERR_ABORTED",
                MEDIA_ERR_NETWORK: "MEDIA_ERR_NETWORK",
                MEDIA_ERR_DECODE: "MEDIA_ERR_DECODE",
                MEDIA_ERR_SRC_NOT_SUPPORTED: "MEDIA_ERR_SRC_NOT_SUPPORTED",
                MEDIA_ERR_CODEC_NOT_SUPPORTED: "MEDIA_ERR_CODEC_NOT_SUPPORTED",
                MEDIA_ERR_URL_EMPTY: "MEDIA_ERR_URL_EMPTY"
            }
        }, Ao = (fo(fo(fo(fo(fo(fo(fo(fo(fo(fo(Do = {}, Oo.MANIFEST, {
            HLS: 1100,
            DASH: 1200
        }), Oo.NETWORK, 2100), Oo.NETWORK_TIMEOUT, 2101), Oo.NETWORK_FORBIDDEN, 2103), Oo.NETWORK_NOTFOUND, 2104), Oo.NETWROK_RANGE_NOT_SATISFIABLE, 2116), Oo.DEMUX, {
            FLV: 3100,
            HLS: 3200,
            MP4: 3300,
            FMP4: 3400,
            SIDX: 3410
        }), Oo.REMUX, {
            FMP4: 4100,
            MP4: 4200
        }), Oo.MEDIA, {
            MEDIA_ERR_ABORTED: 5101,
            MEDIA_ERR_NETWORK: 5102,
            MEDIA_ERR_DECODE: 5103,
            MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,
            MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,
            MEDIA_ERR_URL_EMPTY: 5106,
            MSE_ADD_SB: 5200,
            MSE_APPEND_BUFFER: 5201,
            MSE_OTHER: 5202,
            MSE_FULL: 5203,
            MSE_HIJACK: 5204,
            MSE_CHANGE_TYPE: 5205,
            EME_HIJACK: 5301
        }), Oo.DRM, {
            LICENSE: 7100,
            CUSTOM_LICENSE: 7200
        }),
        fo(fo(Do, Oo.OTHER, 8e3), Oo.RUNTIME, {
            NO_CANPLAY_ERROR: 9001,
            BUFFERBREAK_ERROR: 9002,
            WAITING_TIMEOUT_ERROR: 9003
        })), Go = function(e) {
            function t(e, n, i, r, o) {
                var a;
                return uo(this, t),
                (a = lo(this, t, [o || (null == i ? void 0 : i.message)])).errorType = e === Oo.NETWORK_TIMEOUT ? Oo.NETWORK : e,
                a.originError = i,
                a.ext = r,
                a.errorCode = Ao[e][n] || Ao[e],
                a.errorMessage = a.message,
                a.errorCode || (a.errorType = Oo.OTHER,
                a.errorCode = Ao[a.errorType]),
                a
            }
            return mo(t, e),
            ho(t, null, [{
                key: "create",
                value: function(e, n, i, r, o) {
                    return e instanceof t ? e : (e instanceof Error && (i = e,
                    e = ""),
                    e || (e = Oo.OTHER),
                    new t(e,n,i,r,o))
                }
            }, {
                key: "network",
                value: function(e) {
                    var n;
                    return new t(null != e && e.isTimeout ? Oo.NETWORK_TIMEOUT : Oo.NETWORK,null,e instanceof Error ? e : null,{
                        url: null == e ? void 0 : e.url,
                        response: null == e ? void 0 : e.response,
                        httpCode: null == e || null === (n = e.response) || void 0 === n ? void 0 : n.status
                    })
                }
            }])
        }(ko(Error));
        function No() {
            var e, t, n = new Promise((function(n, i) {
                e = n,
                t = i
            }
            ));
            return n.used = !1,
            n.resolve = function() {
                return n.used = !0,
                e.apply(void 0, arguments)
            }
            ,
            n.reject = function() {
                return n.used = !0,
                t.apply(void 0, arguments)
            }
            ,
            n
        }
        function Bo() {
            try {
                return parseInt(performance.now(), 10)
            } catch (e) {
                return (new Date).getTime()
            }
        }
        function $o() {
            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
            try {
                return Io ? e && "undefined" != typeof ManagedMediaSource ? ManagedMediaSource : window.MediaSource : null
            } catch (e) {}
        }
        function Fo(e) {
            return /ManagedMediaSource/gi.test(Object.prototype.toString.call(e))
        }
        var Ho = "updateDuration"
          , Uo = function() {
            function e(t, n) {
                var i = this;
                uo(this, e),
                fo(this, "media", null),
                fo(this, "mediaSource", null),
                fo(this, "_openPromise", No()),
                fo(this, "_queue", Object.create(null)),
                fo(this, "_sourceBuffer", Object.create(null)),
                fo(this, "_mseFullFlag", {}),
                fo(this, "_st", 0),
                fo(this, "_opst", 0),
                fo(this, "_logger", null),
                fo(this, "_config", null),
                fo(this, "_url", null),
                fo(this, "_onStartStreaming", (function() {
                    i._logger.debug("startstreaming")
                }
                )),
                fo(this, "_onEndStreaming", (function() {
                    i._logger.debug("endstreaming")
                }
                )),
                fo(this, "_onSBUpdateEnd", (function(e) {
                    var t = i._queue[e];
                    if (t) {
                        var n = t[0];
                        if ((null == n ? void 0 : n.opName) !== Ho && t.shift(),
                        n) {
                            var r, o, a = Bo() - i._opst;
                            i._logger.debug("UpdateEnd(".concat(e, "/").concat(n.opName, ")"), function(e) {
                                try {
                                    return JSON.stringify(e)
                                } catch (e) {
                                    return ""
                                }
                            }(function(e) {
                                var t = [];
                                if (e instanceof TimeRanges)
                                    for (var n = 0; n < e.length; n++)
                                        t.push({
                                            start: e.start(n),
                                            end: e.end(n)
                                        });
                                return t
                            }(null === (r = i._sourceBuffer[e]) || void 0 === r ? void 0 : r.buffered)), a, n.context),
                            n.promise.resolve({
                                name: n.opName,
                                context: n.context,
                                costtime: a
                            });
                            var s = null === (o = n.context) || void 0 === o ? void 0 : o.callback;
                            s && "function" == typeof s && s(n.context),
                            i._startQueue(e)
                        }
                    }
                }
                )),
                fo(this, "_onSBUpdateError", (function(e, t) {
                    var n = i._queue[e];
                    if (n) {
                        var r = n[0];
                        r && (i._logger.error("UpdateError", e, r.opName, r.context),
                        r.promise.reject(new Go(Oo.MEDIA,Oo.SUB_TYPES.MSE_APPEND_BUFFER,t)))
                    }
                }
                )),
                this._config = Object.assign(e.getDefaultConfig(), n),
                t && this.bindMedia(t),
                this._logger = new Po("MSE"),
                this._config.openLog && Po.enable()
            }
            return ho(e, [{
                key: "isOpened",
                get: function() {
                    var e;
                    return "open" === (null === (e = this.mediaSource) || void 0 === e ? void 0 : e.readyState)
                }
            }, {
                key: "hasOpTasks",
                get: function() {
                    var e = this
                      , t = !1;
                    return Object.keys(this._queue).forEach((function(n) {
                        var i = e._queue[n];
                        Array.isArray(i) && (t || (t = i.length > 0))
                    }
                    )),
                    t
                }
            }, {
                key: "url",
                get: function() {
                    return this._url
                }
            }, {
                key: "duration",
                get: function() {
                    var e;
                    return (null === (e = this.mediaSource) || void 0 === e ? void 0 : e.duration) || -1
                }
            }, {
                key: "isEnded",
                get: function() {
                    return !!this.mediaSource && "ended" === this.mediaSource.readyState
                }
            }, {
                key: "streaming",
                get: function() {
                    return !Fo(this.mediaSource) || this.mediaSource.streaming
                }
            }, {
                key: "isFull",
                value: function(t) {
                    return t ? this._mseFullFlag[t] : this._mseFullFlag[e.VIDEO]
                }
            }, {
                key: "updateDuration",
                value: function(e) {
                    var t = this
                      , n = this.mediaSource && this.mediaSource.duration > e;
                    if (this.mediaSource && this.mediaSource.duration > e) {
                        var i = 0;
                        if (Object.keys(this._sourceBuffer).forEach((function(e) {
                            try {
                                i = Math.max(t.bufferEnd(e) || 0, i)
                            } catch (e) {}
                        }
                        )),
                        e < i)
                            return Promise.resolve()
                    }
                    return this._enqueueBlockingOp((function() {
                        t.isEnded ? t._logger.debug("setDuration but ended") : t.mediaSource && (t.mediaSource.duration = e,
                        t._logger.debug("setDuration", e))
                    }
                    ), Ho, {
                        isReduceDuration: n
                    })
                }
            }, {
                key: "open",
                value: function() {
                    var e = this;
                    if (this._openPromise.used && !this.isOpened && this.mediaSource) {
                        var t = this.mediaSource
                          , n = function() {
                            var i = Bo() - e._st;
                            e._logger.debug("sourceopen", i),
                            t.removeEventListener("sourceopen", n),
                            e._openPromise.resolve({
                                costtime: i
                            })
                        };
                        t.addEventListener("sourceopen", n),
                        this._openPromise = No()
                    }
                    return this._openPromise
                }
            }, {
                key: "bindMedia",
                value: (i = so(To().mark((function e(t) {
                    var n, i, r, o, a = this;
                    return To().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (!this.mediaSource && !this.media) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3,
                                this.unbindMedia();
                            case 3:
                                if (n = $o(this._config.preferMMS),
                                t && n) {
                                    e.next = 6;
                                    break
                                }
                                throw new Error("Param media or MediaSource does not exist");
                            case 6:
                                return this.media = t,
                                i = this.mediaSource = new n,
                                r = Fo(i),
                                this._st = Bo(),
                                o = function() {
                                    var e = Bo() - a._st;
                                    a._logger.debug("sourceopen"),
                                    i.removeEventListener("sourceopen", o),
                                    URL.revokeObjectURL(t.src),
                                    a._openPromise.resolve({
                                        costtime: e
                                    })
                                }
                                ,
                                i.addEventListener("sourceopen", o),
                                r && (i.addEventListener("startstreaming", this._onStartStreaming),
                                i.addEventListener("endstreaming", this._onEndStreaming)),
                                this._url = URL.createObjectURL(i),
                                t.src = this._url,
                                t.disableRemotePlayback = r,
                                e.abrupt("return", this._openPromise);
                            case 17:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e) {
                    return i.apply(this, arguments)
                }
                )
            }, {
                key: "unbindMedia",
                value: (n = so(To().mark((function e() {
                    var t, n, i, r = this;
                    return To().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (this._openPromise.used || this._openPromise.resolve(),
                                t = this.mediaSource) {
                                    if (Object.keys(this._queue).forEach((function(e) {
                                        var t = r._queue[e];
                                        t && t.forEach((function(e) {
                                            var t, n;
                                            return null === (t = e.promise) || void 0 === t || null === (n = t.resolve) || void 0 === n ? void 0 : n.call(t)
                                        }
                                        ))
                                    }
                                    )),
                                    n = !!this.media && this.media.readyState >= 1,
                                    i = "open" === t.readyState,
                                    n && i)
                                        try {
                                            t.endOfStream()
                                        } catch (e) {}
                                    Object.keys(this._sourceBuffer).forEach((function(e) {
                                        try {
                                            t.removeSourceBuffer(r._sourceBuffer[e])
                                        } catch (e) {}
                                    }
                                    )),
                                    Fo(t) && (t.removeEventListener("startstreaming", this._onStartStreaming),
                                    t.removeEventListener("endstreaming", this._onEndStreaming))
                                }
                                if (this.media) {
                                    this.media.disableRemotePlayback = !1,
                                    this.media.removeAttribute("src");
                                    try {
                                        this.media.load()
                                    } catch (e) {}
                                    this.media = null
                                }
                                this.mediaSource = null,
                                this._openPromise = No(),
                                this._queue = Object.create(null),
                                this._sourceBuffer = Object.create(null);
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function() {
                    return n.apply(this, arguments)
                }
                )
            }, {
                key: "createSource",
                value: function(e, t) {
                    if (!this._sourceBuffer[e] && this.mediaSource) {
                        var n;
                        try {
                            n = this._sourceBuffer[e] = this.mediaSource.addSourceBuffer(t)
                        } catch (e) {
                            throw new Go(Oo.MEDIA,Oo.SUB_TYPES.MSE_ADD_SB,e)
                        }
                        n.mimeType = t,
                        n.addEventListener("updateend", this._onSBUpdateEnd.bind(this, e)),
                        n.addEventListener("error", this._onSBUpdateError.bind(this, e))
                    }
                }
            }, {
                key: "changeType",
                value: function(e, t) {
                    var n = this
                      , i = this._sourceBuffer[e];
                    return this.mediaSource && i && i.mimeType !== t ? "function" != typeof i.changeType ? Promise.reject(new Go(Oo.MEDIA,Oo.SUB_TYPES.MSE_CHANGE_TYPE,new Error("changeType is not a function"))) : this._enqueueOp(e, (function() {
                        try {
                            i.changeType(t)
                        } catch (e) {
                            throw new Go(Oo.MEDIA,Oo.SUB_TYPES.MSE_CHANGE_TYPE,e)
                        }
                        i.mimeType = t,
                        n._onSBUpdateEnd(e)
                    }
                    ), "changeType", {
                        mimeType: t
                    }) : Promise.resolve()
                }
            }, {
                key: "createOrChangeSource",
                value: function(e, t) {
                    return this.createSource(e, t),
                    this.changeType(e, t)
                }
            }, {
                key: "append",
                value: function(e, t, n) {
                    var i = this;
                    return t && t.byteLength && this._sourceBuffer[e] ? this._enqueueOp(e, (function() {
                        var r;
                        i.mediaSource && !i.media.error && (i._logger.debug("MSE APPEND START", n),
                        i._opst = Bo(),
                        null === (r = i._sourceBuffer[e]) || void 0 === r || r.appendBuffer(t))
                    }
                    ), "appendBuffer", n) : Promise.resolve()
                }
            }, {
                key: "remove",
                value: function(e, t, n, i) {
                    var r = this
                      , o = !1;
                    return this._mseFullFlag[e] && (o = !0),
                    this._enqueueOp(e, (function() {
                        if (r.mediaSource && !r.media.error) {
                            var o = r._sourceBuffer[e];
                            t >= n || !o ? r._onSBUpdateEnd(e) : (r._opst = Bo(),
                            r._logger.debug("MSE REMOVE START", e, t, n, i),
                            o.remove(t, n))
                        }
                    }
                    ), "removeBuffer", i, o)
                }
            }, {
                key: "clearBuffer",
                value: function(e, t) {
                    var n, i = this;
                    return Object.keys(this._sourceBuffer).forEach((function(r) {
                        n = i.remove(r, e, t)
                    }
                    )),
                    n || Promise.resolve()
                }
            }, {
                key: "clearAllBuffer",
                value: function() {
                    var e, t = this;
                    return Object.keys(this._sourceBuffer).forEach((function(n) {
                        var i = t._sourceBuffer[n];
                        e = t.remove(n, 0, Lo.end(Lo.get(i)))
                    }
                    )),
                    e
                }
            }, {
                key: "clearOpQueues",
                value: function(e, t) {
                    var n;
                    this._logger.debug("MSE clearOpQueue START");
                    var i = this._queue[e];
                    if (t && i)
                        this._queue[e] = [];
                    else if (i && i[e] && !(i.length < 5)) {
                        var r = [];
                        i.forEach((function(e) {
                            e.context && e.context.isinit && r.push(e)
                        }
                        )),
                        this._queue[e] = i.slice(0, 2),
                        r.length > 0 && (n = this._queue[e]).push.apply(n, r)
                    }
                }
            }, {
                key: "endOfStream",
                value: function(e) {
                    var t = this;
                    return this.mediaSource && "open" === this.mediaSource.readyState ? this._enqueueBlockingOp((function() {
                        var n = t.mediaSource;
                        n && "open" === n.readyState && (t._logger.debug("MSE endOfStream START"),
                        e ? n.endOfStream(e) : n.endOfStream())
                    }
                    ), "endOfStream") : Promise.resolve()
                }
            }, {
                key: "setLiveSeekableRange",
                value: function(e, t) {
                    var n = this.mediaSource;
                    e < 0 || t < e || null == n || !n.setLiveSeekableRange || "open" !== n.readyState || n.setLiveSeekableRange(e, t)
                }
            }, {
                key: "getSourceBuffer",
                value: function(e) {
                    return this._sourceBuffer[e]
                }
            }, {
                key: "buffered",
                value: function(e) {
                    return Lo.get(this._sourceBuffer[e])
                }
            }, {
                key: "bufferStart",
                value: function(e) {
                    return Lo.start(this.buffered(e))
                }
            }, {
                key: "bufferEnd",
                value: function(e) {
                    return Lo.end(this.buffered(e))
                }
            }, {
                key: "_enqueueOp",
                value: function(e, t, n, i, r) {
                    var o = this;
                    if (!this.mediaSource)
                        return Promise.resolve();
                    var a = this._queue[e] = this._queue[e] || []
                      , s = {
                        exec: t,
                        promise: No(),
                        opName: n,
                        context: i
                    };
                    return r ? (a.splice(0, 0, s),
                    this._mseFullFlag[e] = !1,
                    this._startQueue(e)) : a.push(s),
                    this.isOpened || this.isEnded ? 1 === a.length && this._startQueue(e) : this._openPromise.then((function() {
                        1 === a.length && o._startQueue(e)
                    }
                    )),
                    s.promise
                }
            }, {
                key: "_enqueueBlockingOp",
                value: (t = so(To().mark((function e(t, n, i) {
                    var r, o, a = this;
                    return To().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (this.mediaSource) {
                                    e.next = 2;
                                    break
                                }
                                return e.abrupt("return", Promise.resolve());
                            case 2:
                                if ((r = Object.keys(this._sourceBuffer)).length) {
                                    e.next = 5;
                                    break
                                }
                                return e.abrupt("return", t());
                            case 5:
                                return o = [],
                                r.forEach((function(e) {
                                    var t = a._queue[e]
                                      , r = No();
                                    o.push(r),
                                    t.push({
                                        exec: function() {
                                            r.resolve()
                                        },
                                        promise: r,
                                        opName: n,
                                        context: i
                                    }),
                                    1 === t.length && a._startQueue(e)
                                }
                                )),
                                e.abrupt("return", Promise.all(o).then((function() {
                                    try {
                                        return t()
                                    } finally {
                                        r.forEach((function(e) {
                                            var t = a._queue[e]
                                              , n = a._sourceBuffer[e];
                                            null == t || t.shift(),
                                            n && n.updating || a._startQueue(e)
                                        }
                                        ))
                                    }
                                }
                                )));
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e, n, i) {
                    return t.apply(this, arguments)
                }
                )
            }, {
                key: "_startQueue",
                value: function(e) {
                    var t = this._queue[e];
                    if (t) {
                        var n = t[0];
                        if (n && !this._mseFullFlag[e])
                            try {
                                n.exec()
                            } catch (i) {
                                i && i.message && i.message.indexOf("SourceBuffer is full") >= 0 ? (this._mseFullFlag[e] = !0,
                                n.context && "object" === wo(n.context) && (n.context.isFull = !0),
                                this._logger.error("[MSE error],  context,", n.context, " ,name,", n.opName, ",err,SourceBuffer is full"),
                                n.promise.reject(new Go(Oo.MEDIA,Oo.SUB_TYPES.MSE_FULL,i))) : (this._logger.error(i),
                                n.promise.reject(i.constructor === Go ? i : new Go(Oo.MEDIA,Oo.SUB_TYPES.MSE_OTHER,i)),
                                t.shift(),
                                this._startQueue(e))
                            }
                    }
                }
            }, {
                key: "setTimeoffset",
                value: function(e, t, n) {
                    var i = this;
                    return this._enqueueOp(e, (function() {
                        t < 0 && (t += .001),
                        i._sourceBuffer[e].timestampOffset = t,
                        i._onSBUpdateEnd(e)
                    }
                    ), "setTimeoffset", n)
                }
            }, {
                key: "abort",
                value: function(e, t) {
                    var n = this;
                    return this.isOpened ? this._enqueueOp(e, (function() {
                        n._sourceBuffer[e].abort(),
                        n._onSBUpdateEnd(e)
                    }
                    ), "abort", t) : Promise.resolve()
                }
            }], [{
                key: "isSupported",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'video/mp4; codecs="avc1.42E01E,mp4a.40.2"'
                      , t = $o();
                    if (!t)
                        return !1;
                    try {
                        return t.isTypeSupported(e)
                    } catch (t) {
                        return this._logger.error(e, t),
                        !1
                    }
                }
            }, {
                key: "isMMSOnly",
                value: function() {
                    return "undefined" != typeof ManagedMediaSource && "undefined" == typeof MediaSource
                }
            }, {
                key: "getDefaultConfig",
                value: function() {
                    return {
                        openLog: !1,
                        preferMMS: !1
                    }
                }
            }]);
            var t, n, i
        }();
        fo(Uo, "VIDEO", "video"),
        fo(Uo, "AUDIO", "audio");
        const Vo = function() {
            try {
                return typeof localStorage < "u" && "setItem"in localStorage && !!localStorage.setItem
            } catch {
                return !1
            }
        }
        && !function() {
            const e = "_localstorage_support_test";
            try {
                return localStorage.setItem(e, !0),
                localStorage.removeItem(e),
                !1
            } catch {
                return !0
            }
        }();
        Vo && localStorage.length;
        class jo {
            constructor() {
                let e, t;
                const n = new Promise(( (n, i) => {
                    e = n,
                    t = i
                }
                ));
                return n.resolve = e,
                n.reject = t,
                n
            }
            resolve(e) {}
            reject(e) {}
        }
        const zo = "KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NvbnN0IHQ9e30se2hhc093blByb3BlcnR5OmN9PU9iamVjdC5wcm90b3R5cGU7cG9zdE1lc3NhZ2Uoe2V2ZW50OiJyZWFkeSJ9KTtmdW5jdGlvbiBvKHMsYSl7dFtzXT1zZXRUaW1lb3V0KCgpPT57cG9zdE1lc3NhZ2Uoe2RhdGE6e2Zha2VJZDpzfX0pLG8ocyxhKX0sYSl9YWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24ocyl7dHJ5e2NvbnN0e2RhdGE6YT17fX09cyx7YWN0aW9uOm4sZmFrZUlkOmUsdGltZTpyfT1hO3N3aXRjaChuKXtjYXNlInNldEludGVydmFsIjpvKGUscik7YnJlYWs7Y2FzZSJjbGVhckludGVydmFsIjpjLmNhbGwodCxlKSYmKGNsZWFyVGltZW91dCh0W2VdKSxkZWxldGUgdFtlXSk7YnJlYWs7Y2FzZSJzZXRUaW1lb3V0Ijp0W2VdPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtwb3N0TWVzc2FnZSh7ZGF0YTp7ZmFrZUlkOmV9fSksYy5jYWxsKHQsZSkmJmRlbGV0ZSB0W2VdfSxyKTticmVhaztjYXNlImNsZWFyVGltZW91dCI6Yy5jYWxsKHQsZSkmJihjbGVhclRpbWVvdXQodFtlXSksZGVsZXRlIHRbZV0pO2JyZWFrO2RlZmF1bHQ6YnJlYWt9fWNhdGNoKGEpe3Bvc3RNZXNzYWdlKHtldmVudDoiZXJyb3IiLGRhdGE6e2Vycm9yOmF9fSl9fSl9KSgpOwo="
          , Xo = typeof self < "u" && self.Blob && new Blob([(Ko = zo,
        Uint8Array.from(atob(Ko), (e => e.charCodeAt(0))))],{
            type: "text/javascript;charset=utf-8"
        });
        var Ko;
        function Qo(e) {
            let t;
            try {
                if (t = Xo && (self.URL || self.webkitURL).createObjectURL(Xo),
                !t)
                    throw "";
                const n = new Worker(t,{
                    name: null == e ? void 0 : e.name
                });
                return n.addEventListener("error", ( () => {
                    (self.URL || self.webkitURL).revokeObjectURL(t)
                }
                )),
                n
            } catch {
                return new Worker("data:text/javascript;base64," + zo,{
                    name: null == e ? void 0 : e.name
                })
            } finally {
                t && (self.URL || self.webkitURL).revokeObjectURL(t)
            }
        }
        let Wo, qo, Zo, Yo, Jo, ea = {}, ta = 0;
        function na() {
            do {
                2147483647 === ta ? ta = 0 : ta++
            } while (ta in ea);
            return ta
        }
        if (typeof Worker < "u") {
            let e, t = !1, n = !1;
            const i = () => {
                if (!e) {
                    const {promise: i, resolve: r, reject: o} = Promise.withResolvers();
                    e = i;
                    try {
                        Wo = new Qo,
                        Wo.addEventListener("message", (e => {
                            const {event: i, data: a} = e.data;
                            switch (i) {
                            case "error":
                                n = !0,
                                o(a.error);
                                break;
                            case "ready":
                                t = !0,
                                r();
                                break;
                            default:
                                {
                                    const {fakeId: e} = a;
                                    if (e in ea) {
                                        const {cb: t, param: n, keepAlive: i, type: r} = ea[e] || {};
                                        if ("setInterval" !== r && delete ea[e],
                                        !i && document.hidden)
                                            return;
                                        if ("function" == typeof t)
                                            try {
                                                t.apply(window, n)
                                            } catch (e) {
                                                console.error("Error when parse callback function, code %s", e)
                                            }
                                    }
                                }
                            }
                        }
                        )),
                        Wo.addEventListener("error", (function(e) {
                            console.error(e),
                            n = !0,
                            o(e)
                        }
                        ))
                    } catch (e) {
                        n = !0,
                        o(e)
                    }
                }
                return e
            }
              , r = (e, r) => {
                n ? r && r() : t ? e() : i().then(e, r)
            }
            ;
            qo = function(e, t, n=!1, ...i) {
                if ("function" != typeof e)
                    throw new Error("cb must be a function");
                const o = na();
                return ea[o] = {
                    cb: e,
                    param: i,
                    keepAlive: !!n,
                    type: "setInterval"
                },
                r(( () => {
                    Wo.postMessage({
                        action: "setInterval",
                        fakeId: o,
                        time: t
                    })
                }
                ), ( () => {
                    o in ea && (ea[o].degradeId = setInterval(e, t))
                }
                )),
                o
            }
            ,
            Yo = function(e) {
                if ("number" == typeof e && e in ea) {
                    const {degradeId: t} = ea[e];
                    delete ea[e],
                    r(( () => {
                        Wo.postMessage({
                            action: "clearInterval",
                            fakeId: e
                        })
                    }
                    ), ( () => {
                        t && clearInterval(t)
                    }
                    ))
                }
            }
            ,
            Zo = function(e, t, n=!0, ...i) {
                if ("function" != typeof e)
                    throw new Error("cb must be a function");
                const o = na();
                return ea[o] = {
                    cb: e,
                    param: i,
                    keepAlive: !!n,
                    type: "setTimeout"
                },
                r(( () => {
                    Wo.postMessage({
                        action: "setTimeout",
                        fakeId: o,
                        time: t
                    })
                }
                ), ( () => {
                    o in ea && (ea[o].degradeId = setTimeout(e, t))
                }
                )),
                o
            }
            ,
            Jo = function(e) {
                if ("number" == typeof e && e in ea) {
                    const {degradeId: t} = ea[e];
                    delete ea[e],
                    r(( () => {
                        Wo.postMessage({
                            action: "clearTimeout",
                            fakeId: e
                        })
                    }
                    ), ( () => {
                        t && clearTimeout(t)
                    }
                    ))
                }
            }
        } else
            qo = setInterval,
            Zo = setTimeout,
            Yo = clearInterval,
            Jo = clearTimeout,
            console.error("the browser not support web worker, fallback to unWarp function!");
        Promise.withResolvers || (Promise.withResolvers = function() {
            const e = {};
            return e.promise = new Promise(( (t, n) => {
                e.resolve = t,
                e.reject = n
            }
            )),
            e
        }
        );
        const ia = "PRELOAD_NEXT"
          , ra = "PRELOAD_SEG_DONE"
          , oa = {
            PREPARE: "PREPARE",
            IDLE: "IDLE",
            PRELOADING: "PRELOADING",
            FINISH: "FINISH"
        }
          , aa = "ONE_STEP_DONE"
          , sa = {
            INDEXDB: 0,
            MEMORY: 1
        }
          , la = {
            FAIL: -1,
            SUCCESS: 0,
            DOWNLOADING: 1
        }
          , ua = {
            MP4: "MP4",
            DASH: "DASH",
            HLS: "HLS"
        }
          , ca = Object.freeze(Object.defineProperty({
            __proto__: null,
            CACHE_TYPES: sa,
            DOWN_STATES: la,
            MEDIA_FORMAT: {
                DASH: 0,
                MP4: 1
            },
            MEDIA_TYPES: {
                VIDEO: 0,
                AUDIO: 1,
                MIXED: 2
            },
            ONE_STEP_DONE: aa,
            PRELOAD_NEXT: ia,
            PRELOAD_SEG_DONE: ra,
            PRELOAD_TYPES: {
                DURATION: 0,
                SIZE: 1
            },
            STATES: oa,
            VTYPES: ua
        }, Symbol.toStringTag, {
            value: "Module"
        }));
        class ha extends A {
            constructor(e, t, n, i, r) {
                super(),
                this.state = oa.PREPARE,
                this.options = e || {},
                this.logger = e.logger || function() {}
                ,
                this._preloadManager = t,
                this.player = t.player;
                const {handlers: o, predictInst: a, readyPromise: s} = n;
                this._predictInst = a,
                this._handlers = o,
                this._predictInstReadyPromise = s,
                this._toLoadList = [],
                this.retryCount = 0,
                this._cachedHandler = i,
                this._cachedDataHandler = r,
                this.cnt = 0
            }
            start() {
                const e = new jo;
                return this._handlers.start(this.options).then((t => {
                    t.onObtain().then((n => {
                        this._predictInstReadyPromise.then(( () => {
                            this._predictInst.updateMediaInfos(n);
                            const i = this._predictInst.preloadPredict(this.options)
                              , {cachedData: r} = this._predictInst;
                            this._cachedDataHandler(Object.assign({
                                vid: this.options.vid
                            }, {
                                data: r
                            }));
                            const o = Object.assign(i, this.options);
                            t.onTransform(o).then((t => {
                                this._toLoadList = t,
                                e.resolve(t)
                            }
                            ))
                        }
                        ))
                    }
                    ))
                }
                )).catch(( () => {
                    e.reject(new Error("preload unit start error"))
                }
                )),
                e
            }
            preloadSeg() {
                if (0 === this._toLoadList.length)
                    return this.state = oa.FINISH,
                    void this.emit(ra, !0);
                this.state = "PRELOADING";
                const e = this._toLoadList.shift();
                this._handlers.onRequest(e, (t => {
                    const n = Object.assign({}, e.extData, t);
                    this._cachedHandler(n)
                }
                )).then(( () => {
                    this.state = oa.IDLE,
                    this.emit(ra)
                }
                )).catch(( () => {
                    this.requestError(),
                    this.emit(ra, !1)
                }
                ))
            }
            requestError() {
                this.retryCount++,
                this.state = oa.IDLE,
                this.retryCount >= 10 && (this.state = oa.FINISH),
                this.emit(aa),
                this.logger("preload request error")
            }
            cancelLoading() {
                this._toLoadList = []
            }
            destroy() {
                this.removeAllListeners()
            }
        }
        const da = function() {
            try {
                if (typeof indexedDB < "u")
                    return indexedDB
            } catch {}
        }();
        function fa(e, t) {
            t || (t = () => {}
            ),
            t && e.then((function(e) {
                t(null, e)
            }
            ), (function(e) {
                t(e)
            }
            ))
        }
        function pa(e) {
            return "string" != typeof e && (console.warn(`${e} used as a key, but it is not a string.`),
            e = String(e)),
            e
        }
        const ga = {}
          , ma = "readonly"
          , va = "readwrite";
        function ya(e) {
            const t = ga[e.name]
              , n = {};
            n.promise = new Promise((function(e, t) {
                n.resolve = e,
                n.reject = t
            }
            )),
            t.deferredOperations.push(n),
            t.dbReady ? t.dbReady = t.dbReady.then((function() {
                return n.promise
            }
            )) : t.dbReady = n.promise
        }
        function _a(e, t) {
            return new Promise((function(n, i) {
                if (ga[e.name] = ga[e.name] || {
                    forages: [],
                    db: null,
                    dbReady: null,
                    deferredOperations: []
                },
                e.db) {
                    if (!t)
                        return n(e.db);
                    ya(e),
                    e.db.close()
                }
                const r = [e.name];
                t && r.push(e.version);
                const o = null == da ? void 0 : da.open.apply(da, r);
                t && (o.onupgradeneeded = function(t) {
                    const n = o.result;
                    try {
                        n.createObjectStore(e.storeName)
                    } catch (t) {
                        const n = t;
                        if ("ConstraintError" !== n.name)
                            throw t;
                        {
                            const {oldVersion: t, newVersion: i} = n;
                            console.warn(`The database "${e.name}" has been upgraded from version ${t} to\n            version ${i}, but the storage "${e.storeName}" already exists.`)
                        }
                    }
                }
                ),
                o.onerror = function(e) {
                    e.preventDefault(),
                    i(o.error)
                }
                ,
                o.onsuccess = function() {
                    n(o.result),
                    function(e) {
                        const t = ga[e.name].deferredOperations.pop();
                        t && (t.resolve(),
                        t.promise)
                    }(e)
                }
            }
            ))
        }
        function Ta(e) {
            return _a(e, !1)
        }
        function ba(e) {
            return _a(e, !0)
        }
        function Sa(e, t) {
            if (!e.db)
                return !0;
            const n = !e.db.objectStoreNames.contains(e.storeName)
              , i = e.version < e.db.version
              , r = e.version > e.db.version;
            if (i && (e.version !== t && console.warn(`The database "${e.name}" can't be downgraded from version ${e.db.version} to\n      version ${e.version}.`),
            e.version = e.db.version),
            r || n) {
                if (n) {
                    const t = e.db.version + 1;
                    t > e.version && (e.version = t)
                }
                return !0
            }
            return !1
        }
        function wa(e, t, n, i) {
            var r;
            void 0 === i && (i = 1);
            try {
                const i = null == (r = e.db) ? void 0 : r.transaction(e.storeName, t);
                n(null, i)
            } catch (r) {
                const o = r;
                if (i > 0 && (!e.db || "InvalidStateError" === o.name || "NotFoundError" === o.name))
                    return Promise.resolve().then(( () => {
                        if (!e.db || "NotFoundError" === o.name && !e.db.objectStoreNames.contains(e.storeName) && e.version <= e.db.version)
                            return e.db && (e.version = e.db.version + 1),
                            ba(e)
                    }
                    )).then(( () => function(e) {
                        ya(e);
                        const t = ga[e.name]
                          , {forages: n} = t;
                        for (let e = 0; e < n.length; e++) {
                            const t = n[e];
                            t._dbInfo.db && (t._dbInfo.db.close(),
                            t._dbInfo.db = null)
                        }
                        return e.db = null,
                        Ta(e).then((t => (e.db = t,
                        Sa(e) ? ba(e) : t))).then((i => {
                            e.db = t.db = i;
                            for (let e = 0; e < n.length; e++)
                                n[e]._dbInfo.db = i
                        }
                        )).catch((t => {
                            throw function(e, t) {
                                const n = ga[e.name].deferredOperations.pop();
                                n && (n.reject(t),
                                n.promise)
                            }(e, t),
                            t
                        }
                        ))
                    }(e).then(( () => {
                        wa(e, t, n, i - 1)
                    }
                    )))).catch(n);
                n(o)
            }
        }
        class ka {
            ready() {
                return this._ready
            }
            _initStorage(e) {
                const t = this;
                t._defaultConfig = e;
                const n = {
                    db: null,
                    name: "",
                    version: "",
                    storeName: ""
                };
                if (e)
                    for (const t in e)
                        n[t] = e[t];
                let i = ga[n.name];
                i || (i = {
                    forages: [],
                    db: null,
                    dbReady: null,
                    deferredOperations: []
                },
                ga[n.name] = i),
                i.forages.push(t),
                t._initReady || (t._initReady = t.ready,
                t._ready = t._fullyReady);
                const r = [];
                function o() {
                    return Promise.resolve()
                }
                for (let e = 0; e < i.forages.length; e++) {
                    const n = i.forages[e];
                    n !== t && r.push(n._initReady().catch(o))
                }
                const a = i.forages.slice(0);
                return t._ready = Promise.all(r).then((function() {
                    return n.db = i.db,
                    Ta(n)
                }
                )).then((function(e) {
                    return n.db = e,
                    Sa(n, t._defaultConfig.version) ? ba(n) : e
                }
                )).then((function(e) {
                    n.db = i.db = e,
                    t._dbInfo = n;
                    for (let e = 0; e < a.length; e++) {
                        const i = a[e];
                        i !== t && (i._dbInfo.db = n.db,
                        i._dbInfo.version = n.version)
                    }
                }
                )),
                t._ready
            }
            get probeSupport() {
                return function() {
                    try {
                        if (null == da || !da.open)
                            return !1;
                        const e = /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform)
                          , t = "function" == typeof fetch && -1 !== fetch.toString().indexOf("[native code");
                        return (!e || t) && typeof indexedDB < "u" && typeof IDBKeyRange < "u"
                    } catch {
                        return !1
                    }
                }()
            }
            getItem(e, t) {
                const n = this;
                e = pa(e);
                const i = new Promise((function(t, i) {
                    n.ready().then((function() {
                        wa(n._dbInfo, ma, (function(r, o) {
                            if (r)
                                return i(r);
                            const a = o;
                            try {
                                const r = a.objectStore(n._dbInfo.storeName).get(e);
                                r.onsuccess = function() {
                                    let e = r.result;
                                    void 0 === e && (e = null),
                                    t(e)
                                }
                                ,
                                r.onerror = function() {
                                    i(r.error)
                                }
                            } catch (e) {
                                i(e)
                            }
                        }
                        ))
                    }
                    )).catch(i)
                }
                ));
                return fa(i, t),
                i
            }
            setItem(e, t, n) {
                const i = this;
                e = pa(e);
                const r = new Promise((function(n, r) {
                    i.ready().then((function() {
                        return i._dbInfo,
                        t
                    }
                    )).then((function(t) {
                        wa(i._dbInfo, va, (function(o, a) {
                            if (o)
                                return r(o);
                            const s = a;
                            try {
                                const o = s.objectStore(i._dbInfo.storeName);
                                null === t && (t = void 0);
                                const a = o.put(t, e);
                                s.oncomplete = function() {
                                    void 0 === t && (t = null),
                                    n(t)
                                }
                                ,
                                s.onabort = s.onerror = function() {
                                    var e;
                                    const t = a.error ? a.error : null == (e = a.transaction) ? void 0 : e.error;
                                    r(t)
                                }
                            } catch (e) {
                                r(e)
                            }
                        }
                        ))
                    }
                    )).catch(r)
                }
                ));
                return fa(r, n),
                r
            }
            removeItem(e, t) {
                const n = this;
                e = pa(e);
                const i = new Promise((function(t, i) {
                    n.ready().then((function() {
                        wa(n._dbInfo, va, (function(r, o) {
                            if (r)
                                return i(r);
                            const a = o;
                            try {
                                const r = a.objectStore(n._dbInfo.storeName).delete(e);
                                a.oncomplete = function() {
                                    t()
                                }
                                ,
                                a.onerror = function() {
                                    i(r.error)
                                }
                                ,
                                a.onabort = function() {
                                    var e;
                                    const t = r.error ? r.error : null == (e = r.transaction) ? void 0 : e.error;
                                    i(t)
                                }
                            } catch (e) {
                                i(e)
                            }
                        }
                        ))
                    }
                    )).catch(i)
                }
                ));
                return fa(i, t),
                i
            }
            clear(e) {
                const t = this
                  , n = new Promise((function(e, n) {
                    t.ready().then((function() {
                        wa(t._dbInfo, va, (function(i, r) {
                            if (i)
                                return n(i);
                            const o = r;
                            try {
                                const i = o.objectStore(t._dbInfo.storeName).clear();
                                o.oncomplete = function() {
                                    e()
                                }
                                ,
                                o.onabort = o.onerror = function() {
                                    var e;
                                    const t = i.error ? i.error : null == (e = i.transaction) ? void 0 : e.error;
                                    n(t)
                                }
                            } catch (e) {
                                n(e)
                            }
                        }
                        ))
                    }
                    )).catch(n)
                }
                ));
                return fa(n, e),
                n
            }
            length(e) {
                const t = this
                  , n = new Promise((function(e, n) {
                    t.ready().then((function() {
                        wa(t._dbInfo, ma, (function(i, r) {
                            if (i)
                                return n(i);
                            const o = r;
                            try {
                                const i = o.objectStore(t._dbInfo.storeName).count();
                                i.onsuccess = function() {
                                    e(i.result)
                                }
                                ,
                                i.onerror = function() {
                                    n(i.error)
                                }
                            } catch (e) {
                                n(e)
                            }
                        }
                        ))
                    }
                    )).catch(n)
                }
                ));
                return fa(n, e),
                n
            }
            all(e) {
                const t = this
                  , n = new Promise((function(e, n) {
                    t.ready().then((function() {
                        wa(t._dbInfo, ma, (function(i, r) {
                            if (i)
                                return n(i);
                            const o = r;
                            try {
                                const i = o.objectStore(t._dbInfo.storeName).openCursor()
                                  , r = [];
                                i.onsuccess = function() {
                                    const t = i.result;
                                    t ? (r.push({
                                        key: t.key,
                                        value: t.value
                                    }),
                                    t.continue()) : e(r)
                                }
                                ,
                                i.onerror = function() {
                                    n(i.error)
                                }
                            } catch (e) {
                                n(e)
                            }
                        }
                        ))
                    }
                    )).catch(n)
                }
                ));
                return fa(n, e),
                n
            }
            _fullyReady(e) {
                const t = this
                  , n = t._initReady().then((function() {
                    const e = ga[t._dbInfo.name];
                    if (null != e && e.dbReady)
                        return e.dbReady
                }
                ));
                return function(e, t, n) {
                    "function" == typeof t && e.then(t),
                    "function" == typeof n && e.catch(n)
                }(n, e, e),
                n
            }
        }
        class Ca {
            constructor() {
                this.key = "",
                this.store = {}
            }
            _initStorage(e) {
                const {name: t} = e
                  , {storeName: n} = e
                  , i = `${t}_${n}`;
                return this.key = i,
                (!window[i] || "object" != typeof window[i]) && (window[i] = {}),
                this.store = window[i],
                Promise.resolve()
            }
            getItem(e, t) {
                let n = this.store[e];
                return void 0 === n && (n = null),
                this._internalPromise(t, n)
            }
            setItem(e, t, n) {
                return this.store[e] = t,
                this._internalPromise(n)
            }
            removeItem(e, t) {
                return delete this.store[e],
                this._internalPromise(t)
            }
            clear(e) {
                return this.store = {},
                window[this.key] = {},
                this._internalPromise(e)
            }
            length(e) {
                const t = Object.keys(this.store).length;
                return this._internalPromise(e, t)
            }
            _internalPromise(e, t) {
                const n = t ? Promise.resolve(t) : Promise.resolve();
                return fa(n, e),
                n
            }
            all(e) {
                const t = []
                  , n = Object.keys(this.store);
                for (let e = 0; e < n.length; e++) {
                    const i = n[e];
                    t.push({
                        key: i,
                        value: this.store[i]
                    })
                }
                return this._internalPromise(e, t)
            }
            probeSupport() {
                return !0
            }
        }
        const Ma = {
            description: "",
            name: "__PRE_CACHE__",
            storeName: "keyvaluepairs",
            version: 1
        }
          , Pa = "__PRE_CACHE__KEYS";
        class Ra {
            constructor(e, t) {
                const n = t === sa.MEMORY ? Ca : ka;
                this._driver = new n,
                this._driver._initStorage(Ma).catch(( () => {}
                )),
                this._hasIdbForbidden = !1,
                this._maxCache = !e || e <= 0 ? 200 : e,
                this.setMaxCache(this._maxCache),
                this._allCachedKeys = {},
                this._allCachedTimeKeys = {},
                this.getCachedKeysFromLocal(),
                this._readyPromise = new jo,
                this.init()
            }
            getCachedKeysFromLocal() {
                const e = (e => {
                    try {
                        return localStorage.getItem(e)
                    } catch {
                        return null
                    }
                }
                )(Pa);
                if (e) {
                    const t = e.split("|");
                    for (let e = 0; e < t.length; e++) {
                        const n = t[e]
                          , {time: i, cachedKey: r} = this._getCacheKeyInfos(n);
                        this._allCachedKeys[r] = 1,
                        this._allCachedTimeKeys[r] = i
                    }
                }
            }
            _getCacheKeyInfos(e) {
                const t = e.split("$");
                let n;
                return 2 === t.length && (n = t[0],
                e = t[1]),
                {
                    time: n,
                    cachedKey: e
                }
            }
            writeCachedKeysToLocal(e) {
                const t = [];
                this._allCachedKeys = {},
                this._allCachedTimeKeys = {};
                for (let n = 0; n < e.length; n++) {
                    const i = e[n].key
                      , {time: r, cachedKey: o} = this._getCacheKeyInfos(i);
                    this._allCachedKeys[o] = 1,
                    this._allCachedTimeKeys[o] = r,
                    t.push(i)
                }
                const n = t.join("|");
                ( (e, t) => {
                    try {
                        localStorage.setItem(e, t)
                    } catch {}
                }
                )(Pa, n)
            }
            init() {
                this._driver.setItem("test", "test").then(( () => {}
                )).catch(( () => {
                    this._hasIdbForbidden = !0
                }
                )).finally(( () => {
                    this._driver.removeItem("test").catch(( () => {}
                    )),
                    this._hasIdbForbidden && (this._driver = new Ca,
                    this._driver._initStorage(Ma)),
                    this._getAll(),
                    this._readyPromise.resolve()
                }
                ))
            }
            _getAll() {
                this._driver.all().then((e => {
                    const t = e.length - this._maxCache;
                    let n = e;
                    if (t > 0) {
                        const i = e.slice(0, t);
                        n = e.slice(t);
                        for (let e = 0; e < i.length; e++)
                            this.removeItem(i[e].key).then(( () => {}
                            ))
                    }
                    this.writeCachedKeysToLocal(n)
                }
                )).catch(( () => {}
                ))
            }
            getItem(e, t) {
                if (!this.hasItem(e))
                    return Promise.resolve(!1);
                const {timeKey: n} = this._getTimeKey(e);
                return this._driver.getItem(n, t)
            }
            setItem(e, t, n) {
                const {timeKey: i} = this._getTimeKey(e);
                i && this.removeItem(e);
                const r = (new Date).getTime();
                this._allCachedKeys[e] = 1,
                this._allCachedTimeKeys[e] = r;
                const o = this._genTimeKey(e, r);
                return n = n ? () => {
                    this._getAll(),
                    n()
                }
                : () => {
                    this._getAll()
                }
                ,
                this._driver.setItem(o, t, n)
            }
            _getTimeKey(e) {
                const t = this._allCachedTimeKeys[e];
                let n = e;
                return t && (n = this._genTimeKey(e, t)),
                {
                    timeKey: n,
                    time: t
                }
            }
            _genTimeKey(e, t) {
                return `${t}$${e}`
            }
            removeItem(e, t) {
                const {timeKey: n} = this._getTimeKey(e)
                  , i = this._driver.removeItem(n, t);
                return delete this._allCachedKeys[e],
                delete this._allCachedTimeKeys[e],
                i
            }
            hasItem(e) {
                return !!this._allCachedKeys[e]
            }
            clear(e) {
                return this._driver.clear(e)
            }
            length(e) {
                return this._driver.length(e)
            }
            setMaxCache(e) {
                "number" == typeof e && e > 0 && (this._maxCache = e)
            }
        }
        const xa = class e extends A {
            constructor(e, t, n=null) {
                super(),
                this._preloadDataList = [],
                this._currentPreloadInst = null,
                this.autoPreload = e.autoPreload || !1,
                this._autoCheck = e.autoCheck || {
                    enable: !1,
                    interval: 1e3
                },
                this._onPreloadNext = this.onPreloadNextReady.bind(this),
                this.on(ia, this._onPreloadNext),
                this._preloaderConfigs = {},
                this.update(e, t, n),
                this._cacheInst = new Ra(e.preloadMaxCacheCount,e.preloadCacheType || 0),
                this._preloadCacheProgress = {},
                this._ptag_ = !0,
                this._cachedDatas = {},
                this._taskIntervalId = null
            }
            setMaxCache(e) {
                var t;
                null == (t = this._cacheInst) || t.setMaxCache(e)
            }
            startCheckTask() {
                const {_autoCheck: e, _preloadDataList: t} = this;
                this._taskIntervalId && (window.clearTimeout(this._taskIntervalId),
                this._taskIntervalId = null),
                0 !== t.length && (this._checkIfCanPreload() && this.onPreloadNext(),
                this._taskIntervalId = window.setTimeout(( () => {
                    this.startCheckTask()
                }
                ), e.interval || 1e3))
            }
            stopCheckTask() {
                this._taskIntervalId && (window.clearTimeout(this._taskIntervalId),
                this._taskIntervalId = null)
            }
            _checkIfCanPreload() {
                if (null == this._currentPreloadInst && this._preloadDataList.length > 0) {
                    const e = this._preloadDataList[0].data;
                    if (e.payload) {
                        const t = this._getPreloaderKey(e)
                          , n = this._preloaderConfigs[t];
                        if (null != n && n.handlers) {
                            const {checkIfCanPreload: t} = n.handlers;
                            return t ? t(e) : (this.stopCheckTask(),
                            !1)
                        }
                        return console.warn("need to set vtype, no preloader", e),
                        this.stopCheckTask(),
                        !1
                    }
                }
                return !1
            }
            _getPreloaderKey(e) {
                return e.vtype ? e.vtype : "DEFAULT"
            }
            update(e, t, n) {
                if (!n)
                    throw new Error("PreloaderManager predictInst is null");
                const i = this._getPreloaderKey(e);
                this._preloaderConfigs[i] = {
                    predictInst: n,
                    readyPromise: n.init(e),
                    handlers: t
                }
            }
            get cachedDatas() {
                return this._cachedDatas
            }
            onCacheSegment(e) {
                const {vid: t, format: n, cacheKey: i, total: r, loaded: o, isInitSegment: a, mediaType: s} = e
                  , l = this.getProgressCacheKey(t, n, s);
                let u = this._preloadCacheProgress[l];
                u || (u = this._preloadCacheProgress[l] = {}),
                u[i] = {
                    total: r,
                    loaded: o,
                    isInitSegment: a
                }
            }
            onCachePredict(e) {
                const {vid: t, data: n} = e;
                t && n && (this._cachedDatas[t] = n)
            }
            getProgressCacheKey(e, t, n) {
                return `${e}-${t}-${n}`
            }
            onPreloadNextReady() {
                this.onPreloadNext()
            }
            onPreloadSegDone() {
                this.autoPreload && this.emit(ia)
            }
            onPreloadNext() {
                if (null == this._currentPreloadInst && this._preloadDataList.length > 0) {
                    if (this._preloadDataList.length > 0) {
                        const e = this._preloadDataList.shift()
                          , t = null == e ? void 0 : e.data;
                        if (null != t && t.payload) {
                            const e = this._getPreloaderKey(t)
                              , n = this._preloaderConfigs[e];
                            if (!n)
                                return void console.warn("need to set vtype, no preloader", t);
                            this._currentPreloadInst = new ha(t,this,n,(e => {
                                this.onCacheSegment(e)
                            }
                            ),(e => {
                                this.onCachePredict(e)
                            }
                            )),
                            this._currentPreloadInst.on(ra, this.onPreloadSegDone.bind(this)),
                            this._currentPreloadInst.start().then(( () => {
                                this._currentPreloadInst.preloadSeg()
                            }
                            )).catch(( () => {
                                this._currentPreloadInst = null
                            }
                            ))
                        }
                    }
                } else
                    null != this._currentPreloadInst && (this._currentPreloadInst.state === oa.IDLE ? this._currentPreloadInst.preloadSeg() : this._currentPreloadInst.state === oa.FINISH ? (this._currentPreloadInst.destroy(),
                    this._currentPreloadInst = null) : this._currentPreloadInst.state === oa.PREPARE && (this._currentPreloadInst.cnt++,
                    this._currentPreloadInst.cnt > 2 && (this._currentPreloadInst.destroy(),
                    this._currentPreloadInst = null)))
            }
            addDashPreloader(e) {
                e.data && (this._preloadDataList.push(e),
                this.sort(this._preloadDataList),
                this.autoPreload && this.emit(ia),
                this._autoCheck.enable && !this._taskIntervalId && this.startCheckTask())
            }
            _addDashPreloader(e) {
                e.data && this._preloadDataList.push(e)
            }
            addDashPreloaderList(e=[]) {
                this.sort(e);
                for (let t = 0; t < e.length; t++)
                    this._addDashPreloader(e[t]);
                this._autoCheck.enable && !this._taskIntervalId && this.startCheckTask()
            }
            sort(e) {
                e.sort(( (e, t) => void 0 === e.order && void 0 === e.order || "number" == typeof e.order && "number" == typeof t.order && e.order < t.order ? -1 : 1))
            }
            destroy() {
                this.off(ia, this._onPreloadNext)
            }
            cancelLoading() {
                this._currentPreloadInst && (this._currentPreloadInst.cancelLoading(),
                this._currentPreloadInst = null),
                this._preloadDataList = []
            }
            static getInstance(t, n, i=null) {
                const r = e.GLOBAL_KEY + (t.globalKey ? t.globalKey : "")
                  , o = window[r];
                if (null != o && o._ptag_)
                    return o.update(t, n, i),
                    o;
                const a = new e(t,n,i);
                return window[r] = a,
                a
            }
            preloadCacheProgress(e) {
                const {vid: t, format: n, mediaType: i, prelaodType: r, bitrate: o, set_duration: a, set_size: s, media_type: l, start_time: u} = e
                  , c = this.getProgressCacheKey(t, n, i)
                  , h = this._preloadCacheProgress[c];
                if (h) {
                    const e = Object.values(h);
                    let t = 0
                      , n = 0
                      , i = 0
                      , c = 0
                      , d = 0;
                    for (let r = 0; r < e.length; r++) {
                        const o = e[r];
                        o.isInitSegment && (t = o.total,
                        i = o.loaded,
                        c = o.loaded === o.total ? la.SUCCESS : la.DOWNLOADING),
                        n += o.total,
                        d += o.loaded
                    }
                    return {
                        media_type: l,
                        preload_type: r,
                        stream_bitrate: o,
                        header_size: t,
                        content_total_size: n,
                        start_time: u || -1,
                        state_info: {
                            set_duration: a,
                            set_size: s,
                            current_header_download_size: i,
                            current_content_download_size: d,
                            header_download_state: c,
                            content_download_state: d === n ? la.SUCCESS : la.DOWNLOADING
                        }
                    }
                }
                return null
            }
            getPreloadTaskInfos() {}
            getItem(e, t) {
                return this._cacheInst.getItem(e, t)
            }
            setItem(e, t, n) {
                return this._cacheInst.setItem(e, t, n)
            }
            removeItem(e, t) {
                return this._cacheInst.removeItem(e, t)
            }
        }
        ;
        xa.GLOBAL_KEY = "__preloadcontext__";
        let Ea = xa;
        class Da extends A {
            constructor(e) {
                super(),
                this.options = e,
                this.promisePolyfill(),
                this.before(),
                this.check(),
                this._preloadManager = Ea.getInstance(e, this.handlers, this.predictInst),
                this.loadingTasks = []
            }
            promisePolyfill() {
                Promise.prototype.finally || (Promise.prototype.finally = {
                    finally(e) {
                        const t = t => Promise.resolve(e()).then(t);
                        return this.then((e => t(( () => e))), (e => t(( () => Promise.reject(e)))))
                    }
                }.finally)
            }
            before() {
                throw new Error("need")
            }
            check() {
                if (!this.handlers)
                    throw new Error("handlers null");
                if (!this.handlers.start || !this.handlers.onRequest)
                    throw new Error("handlers callback null");
                if (!this.predictInst)
                    throw new Error("predictInst null");
                if (!this.predictInst.__p__)
                    throw new Error("predictInst need extends predictbase")
            }
            preloadNext() {
                this._preloadManager.emit(ia)
            }
            get preloadManager() {
                return this._preloadManager
            }
            start() {
                throw new Error("start need implment, return Promise")
            }
            cancelLoading() {
                for (let e = 0; e < this.loadingTasks.length; e++)
                    try {
                        const t = this.loadingTasks[e];
                        "function" == typeof t.cancel && t.cancel()
                    } catch {}
                this.loadingTasks = [],
                this._preloadManager.cancelLoading()
            }
            addTasker(e) {
                this.loadingTasks.push(e)
            }
            removeTasker(e) {
                setTimeout(( () => {
                    for (let t = this.loadingTasks.length - 1; t > -1; t--)
                        if (this.loadingTasks[t] === e) {
                            this.loadingTasks.splice(t, 1);
                            break
                        }
                }
                ))
            }
            addDashPreloader(e) {
                this._preloadManager.addDashPreloader(e)
            }
            addDashPreloaderList(e=[]) {
                this._preloadManager.addDashPreloaderList(e)
            }
        }
        class La {
            constructor() {
                this.bandwidth2item = {},
                this._mediaInfos = void 0,
                this.__p__ = !0
            }
            init() {
                throw new Error("init func not implement, return promise")
            }
            preloadPredict(e) {
                throw new Error(`preloadPredict error: ${e}`)
            }
            updateMediaInfos(e) {
                if (this._mediaInfos = e,
                this.bandwidth2item = {},
                this.dynamic_video = e.dynamic_video_list,
                this.dynamic_video.length > 0)
                    for (let e = 0; e < this.dynamic_video.length; e++) {
                        const t = this.dynamic_video[e]
                          , n = (null == t ? void 0 : t.bitrate) || (null == t ? void 0 : t.bandwidth);
                        this.bandwidth2item[n] = t
                    }
            }
            getIdx(e, t) {
                let n = 0;
                return e.forEach(( (e, i) => {
                    e.definition === t && (n = i)
                }
                )),
                n
            }
            get cachedData() {
                return null
            }
        }
        const Ia = ua;
        var Oa = n(96802);
        function Aa(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function Ga(e, t, n, i, r, o, a) {
            try {
                var s = e[o](a)
                  , l = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(l) : Promise.resolve(l).then(i, r)
        }
        function Na(e) {
            return function() {
                var t = this
                  , n = arguments;
                return new Promise((function(i, r) {
                    var o = e.apply(t, n);
                    function a(e) {
                        Ga(o, i, r, a, s, "next", e)
                    }
                    function s(e) {
                        Ga(o, i, r, a, s, "throw", e)
                    }
                    a(void 0)
                }
                ))
            }
        }
        function Ba(e, t, n) {
            return t = Va(t),
            function(e, t) {
                if (t && ("object" == typeof t || "function" == typeof t))
                    return t;
                if (void 0 !== t)
                    throw new TypeError("Derived constructors may only return object or undefined");
                return function(e) {
                    if (void 0 === e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e
                }(e)
            }(e, ja() ? Reflect.construct(t, n || [], Va(e).constructor) : t.apply(e, n))
        }
        function $a(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function Fa(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, Za(i.key), i)
            }
        }
        function Ha(e, t, n) {
            return t && Fa(e.prototype, t),
            n && Fa(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function Ua(e, t, n) {
            return (t = Za(t))in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Va(e) {
            return (Va = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }
            )(e)
        }
        function ja() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                )))
            } catch (e) {}
            return (ja = function() {
                return !!e
            }
            )()
        }
        function za(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, i)
            }
            return n
        }
        function Xa(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? za(Object(n), !0).forEach((function(t) {
                    Ua(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : za(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Ka(e) {
            throw new TypeError('"' + e + '" is read-only')
        }
        function Qa() {
            Qa = function() {
                return t
            }
            ;
            var e, t = {}, n = Object.prototype, i = n.hasOwnProperty, r = Object.defineProperty || function(e, t, n) {
                e[t] = n.value
            }
            , o = "function" == typeof Symbol ? Symbol : {}, a = o.iterator || "@@iterator", s = o.asyncIterator || "@@asyncIterator", l = o.toStringTag || "@@toStringTag";
            function u(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                u({}, "")
            } catch (e) {
                u = function(e, t, n) {
                    return e[t] = n
                }
            }
            function c(e, t, n, i) {
                var o = t && t.prototype instanceof v ? t : v
                  , a = Object.create(o.prototype)
                  , s = new E(i || []);
                return r(a, "_invoke", {
                    value: M(e, n, s)
                }),
                a
            }
            function h(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            t.wrap = c;
            var d = "suspendedStart"
              , f = "suspendedYield"
              , p = "executing"
              , g = "completed"
              , m = {};
            function v() {}
            function y() {}
            function _() {}
            var T = {};
            u(T, a, (function() {
                return this
            }
            ));
            var b = Object.getPrototypeOf
              , S = b && b(b(D([])));
            S && S !== n && i.call(S, a) && (T = S);
            var w = _.prototype = v.prototype = Object.create(T);
            function k(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    u(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function C(e, t) {
                function n(r, o, a, s) {
                    var l = h(e[r], e, o);
                    if ("throw" !== l.type) {
                        var u = l.arg
                          , c = u.value;
                        return c && "object" == typeof c && i.call(c, "__await") ? t.resolve(c.__await).then((function(e) {
                            n("next", e, a, s)
                        }
                        ), (function(e) {
                            n("throw", e, a, s)
                        }
                        )) : t.resolve(c).then((function(e) {
                            u.value = e,
                            a(u)
                        }
                        ), (function(e) {
                            return n("throw", e, a, s)
                        }
                        ))
                    }
                    s(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, i) {
                        function r() {
                            return new t((function(t, r) {
                                n(e, i, t, r)
                            }
                            ))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }
            function M(t, n, i) {
                var r = d;
                return function(o, a) {
                    if (r === p)
                        throw Error("Generator is already running");
                    if (r === g) {
                        if ("throw" === o)
                            throw a;
                        return {
                            value: e,
                            done: !0
                        }
                    }
                    for (i.method = o,
                    i.arg = a; ; ) {
                        var s = i.delegate;
                        if (s) {
                            var l = P(s, i);
                            if (l) {
                                if (l === m)
                                    continue;
                                return l
                            }
                        }
                        if ("next" === i.method)
                            i.sent = i._sent = i.arg;
                        else if ("throw" === i.method) {
                            if (r === d)
                                throw r = g,
                                i.arg;
                            i.dispatchException(i.arg)
                        } else
                            "return" === i.method && i.abrupt("return", i.arg);
                        r = p;
                        var u = h(t, n, i);
                        if ("normal" === u.type) {
                            if (r = i.done ? g : f,
                            u.arg === m)
                                continue;
                            return {
                                value: u.arg,
                                done: i.done
                            }
                        }
                        "throw" === u.type && (r = g,
                        i.method = "throw",
                        i.arg = u.arg)
                    }
                }
            }
            function P(t, n) {
                var i = n.method
                  , r = t.iterator[i];
                if (r === e)
                    return n.delegate = null,
                    "throw" === i && t.iterator.return && (n.method = "return",
                    n.arg = e,
                    P(t, n),
                    "throw" === n.method) || "return" !== i && (n.method = "throw",
                    n.arg = new TypeError("The iterator does not provide a '" + i + "' method")),
                    m;
                var o = h(r, t.iterator, n.arg);
                if ("throw" === o.type)
                    return n.method = "throw",
                    n.arg = o.arg,
                    n.delegate = null,
                    m;
                var a = o.arg;
                return a ? a.done ? (n[t.resultName] = a.value,
                n.next = t.nextLoc,
                "return" !== n.method && (n.method = "next",
                n.arg = e),
                n.delegate = null,
                m) : a : (n.method = "throw",
                n.arg = new TypeError("iterator result is not an object"),
                n.delegate = null,
                m)
            }
            function R(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function x(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function E(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(R, this),
                this.reset(!0)
            }
            function D(t) {
                if (t || "" === t) {
                    var n = t[a];
                    if (n)
                        return n.call(t);
                    if ("function" == typeof t.next)
                        return t;
                    if (!isNaN(t.length)) {
                        var r = -1
                          , o = function n() {
                            for (; ++r < t.length; )
                                if (i.call(t, r))
                                    return n.value = t[r],
                                    n.done = !1,
                                    n;
                            return n.value = e,
                            n.done = !0,
                            n
                        };
                        return o.next = o
                    }
                }
                throw new TypeError(typeof t + " is not iterable")
            }
            return y.prototype = _,
            r(w, "constructor", {
                value: _,
                configurable: !0
            }),
            r(_, "constructor", {
                value: y,
                configurable: !0
            }),
            y.displayName = u(_, l, "GeneratorFunction"),
            t.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === y || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            t.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, _) : (e.__proto__ = _,
                u(e, l, "GeneratorFunction")),
                e.prototype = Object.create(w),
                e
            }
            ,
            t.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            k(C.prototype),
            u(C.prototype, s, (function() {
                return this
            }
            )),
            t.AsyncIterator = C,
            t.async = function(e, n, i, r, o) {
                void 0 === o && (o = Promise);
                var a = new C(c(e, n, i, r),o);
                return t.isGeneratorFunction(n) ? a : a.next().then((function(e) {
                    return e.done ? e.value : a.next()
                }
                ))
            }
            ,
            k(w),
            u(w, l, "Generator"),
            u(w, a, (function() {
                return this
            }
            )),
            u(w, "toString", (function() {
                return "[object Generator]"
            }
            )),
            t.keys = function(e) {
                var t = Object(e)
                  , n = [];
                for (var i in t)
                    n.push(i);
                return n.reverse(),
                function e() {
                    for (; n.length; ) {
                        var i = n.pop();
                        if (i in t)
                            return e.value = i,
                            e.done = !1,
                            e
                    }
                    return e.done = !0,
                    e
                }
            }
            ,
            t.values = D,
            E.prototype = {
                constructor: E,
                reset: function(t) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = e,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = e,
                    this.tryEntries.forEach(x),
                    !t)
                        for (var n in this)
                            "t" === n.charAt(0) && i.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(t) {
                    if (this.done)
                        throw t;
                    var n = this;
                    function r(i, r) {
                        return s.type = "throw",
                        s.arg = t,
                        n.next = i,
                        r && (n.method = "next",
                        n.arg = e),
                        !!r
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var a = this.tryEntries[o]
                          , s = a.completion;
                        if ("root" === a.tryLoc)
                            return r("end");
                        if (a.tryLoc <= this.prev) {
                            var l = i.call(a, "catchLoc")
                              , u = i.call(a, "finallyLoc");
                            if (l && u) {
                                if (this.prev < a.catchLoc)
                                    return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc)
                                    return r(a.finallyLoc)
                            } else if (l) {
                                if (this.prev < a.catchLoc)
                                    return r(a.catchLoc, !0)
                            } else {
                                if (!u)
                                    throw Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc)
                                    return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var r = this.tryEntries[n];
                        if (r.tryLoc <= this.prev && i.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                            var o = r;
                            break
                        }
                    }
                    o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                    var a = o ? o.completion : {};
                    return a.type = e,
                    a.arg = t,
                    o ? (this.method = "next",
                    this.next = o.finallyLoc,
                    m) : this.complete(a)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    m
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            x(n),
                            m
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var i = n.completion;
                            if ("throw" === i.type) {
                                var r = i.arg;
                                x(n)
                            }
                            return r
                        }
                    }
                    throw Error("illegal catch attempt")
                },
                delegateYield: function(t, n, i) {
                    return this.delegate = {
                        iterator: D(t),
                        resultName: n,
                        nextLoc: i
                    },
                    "next" === this.method && (this.arg = e),
                    m
                }
            },
            t
        }
        function Wa(e, t) {
            return (Wa = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t,
                e
            }
            )(e, t)
        }
        function qa(e) {
            return function(e) {
                if (Array.isArray(e))
                    return Aa(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || Ya(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function Za(e) {
            var t = function(e) {
                if ("object" != typeof e || !e)
                    return e;
                var t = e[Symbol.toPrimitive];
                if (void 0 !== t) {
                    var n = t.call(e, "string");
                    if ("object" != typeof n)
                        return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return String(e)
            }(e);
            return "symbol" == typeof t ? t : t + ""
        }
        function Ya(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return Aa(e, t);
                var n = {}.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Aa(e, t) : void 0
            }
        }
        var Ja = "fetch"
          , es = "arraybuffer"
          , ts = "text"
          , ns = function(e) {
            function t(e, n, i, r) {
                var o;
                return uo(this, t),
                fo(o = lo(this, t, [r]), "retryCount", 0),
                fo(o, "isTimeout", !1),
                fo(o, "loaderType", Ja),
                fo(o, "startTime", 0),
                fo(o, "endTime", 0),
                fo(o, "options", {}),
                o.url = e,
                o.request = n,
                o.response = i,
                o
            }
            return mo(t, e),
            ho(t)
        }(ko(Error))
          , is = Object.prototype.toString;
        function rs(e) {
            if ("[object Object]" !== is.call(e))
                return !1;
            var t = Object.getPrototypeOf(e);
            return null === t || t === Object.prototype
        }
        function os(e) {
            if (e && null !== e[0] && void 0 !== e[0] && (0 !== e[0] || null !== e[1] && void 0 !== e[1])) {
                var t = "bytes=" + e[0] + "-";
                return e[1] && (t += e[1]),
                t
            }
        }
        function as(e) {
            return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
        }
        function ss(e, t) {
            if (e) {
                if (!t)
                    return e;
                var n, i = Object.keys(t).map((function(e) {
                    if (null != (n = t[e]))
                        return Array.isArray(n) ? e += "[]" : n = [n],
                        n.map((function(t) {
                            var n;
                            return n = t,
                            "[object Date]" === is.call(n) ? t = t.toISOString() : function(e) {
                                return null !== e && "object" === wo(e)
                            }(t) && (t = JSON.stringify(t)),
                            "".concat(as(e), "=").concat(as(t))
                        }
                        )).join("&")
                }
                )).filter(Boolean).join("&");
                if (i) {
                    var r = e.indexOf("#");
                    -1 !== r && (e = e.slice(0, r)),
                    e += (-1 === e.indexOf("?") ? "?" : "&") + i
                }
                return e
            }
        }
        function ls(e, t, n, i, r, o, a, s, l, u, c) {
            return r = null != r ? parseFloat(r) : null,
            i = parseInt(i || "0", 10),
            Number.isNaN(i) && (i = 0),
            {
                data: e,
                done: t,
                options: {
                    range: l,
                    vid: u,
                    index: s,
                    contentLength: i,
                    age: r,
                    startTime: o,
                    firstByteTime: a,
                    endTime: Date.now(),
                    priOptions: c
                },
                response: n
            }
        }
        function us(e, t) {
            return Math.round(8 * e * 1e3 / t / 1024)
        }
        var cs = "real_time_speed"
          , hs = 2097152
          , ds = function(e) {
            function t() {
                var e;
                return uo(this, t),
                fo(e = lo(this, t), "_abortController", null),
                fo(e, "_timeoutTimer", null),
                fo(e, "_reader", null),
                fo(e, "_response", null),
                fo(e, "_aborted", !1),
                fo(e, "_index", -1),
                fo(e, "_range", null),
                fo(e, "_receivedLength", 0),
                fo(e, "_running", !1),
                fo(e, "_logger", null),
                fo(e, "_vid", ""),
                fo(e, "_onProcessMinLen", 0),
                fo(e, "_onCancel", null),
                fo(e, "_priOptions", null),
                fo(e, "_processMaxGapTime", 1 / 0),
                e
            }
            return mo(t, e),
            ho(t, [{
                key: "load",
                value: function(e) {
                    var t, n = this, i = e.url, r = e.vid, o = e.timeout, a = e.responseType, s = e.onProgress, l = e.index, u = e.onTimeout, c = e.onCancel, h = e.range, d = e.transformResponse, f = e.request, p = e.params, g = e.logger, m = e.method, v = e.headers, y = e.body, _ = e.mode, T = e.credentials, b = e.cache, S = e.redirect, w = e.referrer, k = e.referrerPolicy, C = e.onProcessMinLen, M = e.processMaxGapTime, P = e.priOptions;
                    this._logger = g,
                    this._aborted = !1,
                    this._onProcessMinLen = C,
                    this._onCancel = c,
                    this._abortController = "undefined" != typeof AbortController && new AbortController,
                    this._running = !0,
                    this._receivedLength = 0,
                    this._index = l,
                    this._range = h || [0, 0],
                    this._vid = r || i,
                    this._priOptions = P || {},
                    this._processMaxGapTime = M;
                    var R = {
                        method: m,
                        headers: v,
                        body: y,
                        mode: _,
                        credentials: T,
                        cache: b,
                        redirect: S,
                        referrer: w,
                        referrerPolicy: k,
                        signal: null === (t = this._abortController) || void 0 === t ? void 0 : t.signal
                    }
                      , x = !1;
                    clearTimeout(this._timeoutTimer),
                    i = ss(i, p);
                    var E = os(h);
                    E && (v = f ? f.headers : R.headers = R.headers || (Headers ? new Headers : {}),
                    Headers && v instanceof Headers ? v.append("Range", E) : v.Range = E),
                    o && (this._timeoutTimer = setTimeout(so(To().mark((function e() {
                        var t;
                        return To().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return x = !0,
                                    e.next = 3,
                                    n.cancel();
                                case 3:
                                    u && ((t = new ns(i,R,null,"timeout")).isTimeout = !0,
                                    u(t, {
                                        index: n._index,
                                        range: n._range,
                                        vid: n._vid,
                                        priOptions: n._priOptions
                                    }));
                                case 4:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    ))), o));
                    var D = Date.now();
                    return this._logger.debug("[fetch load start], index,", l, ",range,", h),
                    new Promise((function(e, t) {
                        fetch(f || i, f ? void 0 : R).then(function() {
                            var r = so(To().mark((function r(o) {
                                var u, c, f, p;
                                return To().wrap((function(r) {
                                    for (; ; )
                                        switch (r.prev = r.next) {
                                        case 0:
                                            if (clearTimeout(n._timeoutTimer),
                                            n._response = o,
                                            !n._aborted && n._running) {
                                                r.next = 4;
                                                break
                                            }
                                            return r.abrupt("return");
                                        case 4:
                                            if (d && (o = d(o, i) || o),
                                            o.ok) {
                                                r.next = 7;
                                                break
                                            }
                                            throw new ns(i,R,o,"bad network response");
                                        case 7:
                                            if (u = Date.now(),
                                            a !== ts) {
                                                r.next = 15;
                                                break
                                            }
                                            return r.next = 11,
                                            o.text();
                                        case 11:
                                            c = r.sent,
                                            n._running = !1,
                                            r.next = 37;
                                            break;
                                        case 15:
                                            if ("json" !== a) {
                                                r.next = 22;
                                                break
                                            }
                                            return r.next = 18,
                                            o.json();
                                        case 18:
                                            c = r.sent,
                                            n._running = !1,
                                            r.next = 37;
                                            break;
                                        case 22:
                                            if (!s) {
                                                r.next = 29;
                                                break
                                            }
                                            return n.resolve = e,
                                            n.reject = t,
                                            n._loadChunk(o, s, D, u),
                                            r.abrupt("return");
                                        case 29:
                                            return r.next = 31,
                                            o.arrayBuffer();
                                        case 31:
                                            c = r.sent,
                                            c = new Uint8Array(c),
                                            n._running = !1,
                                            f = Date.now() - D,
                                            p = us(c.byteLength, f),
                                            n.emit(cs, {
                                                speed: p,
                                                len: c.byteLength,
                                                time: f,
                                                vid: n._vid,
                                                index: n._index,
                                                range: n._range,
                                                priOptions: n._priOptions
                                            });
                                        case 37:
                                            n._logger.debug("[fetch load end], index,", l, ",range,", h),
                                            e(ls(c, !0, o, o.headers.get("Content-Length"), o.headers.get("age"), D, u, l, h, n._vid, n._priOptions));
                                        case 39:
                                        case "end":
                                            return r.stop()
                                        }
                                }
                                ), r)
                            }
                            )));
                            return function(e) {
                                return r.apply(this, arguments)
                            }
                        }()).catch((function(e) {
                            var r;
                            clearTimeout(n._timeoutTimer),
                            n._running = !1,
                            n._aborted && !x || ((e = e instanceof ns ? e : new ns(i,R,null,null === (r = e) || void 0 === r ? void 0 : r.message)).startTime = D,
                            e.endTime = Date.now(),
                            e.isTimeout = x,
                            e.options = {
                                index: n._index,
                                range: n._range,
                                vid: n._vid,
                                priOptions: n._priOptions
                            },
                            t(e))
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "cancel",
                value: (n = so(To().mark((function e() {
                    return To().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (!this._aborted) {
                                    e.next = 2;
                                    break
                                }
                                return e.abrupt("return");
                            case 2:
                                if (this._aborted = !0,
                                this._running = !1,
                                !this._response) {
                                    e.next = 14;
                                    break
                                }
                                if (e.prev = 5,
                                !this._reader) {
                                    e.next = 9;
                                    break
                                }
                                return e.next = 9,
                                this._reader.cancel();
                            case 9:
                                e.next = 13;
                                break;
                            case 11:
                                e.prev = 11,
                                e.t0 = e.catch(5);
                            case 13:
                                this._response = this._reader = null;
                            case 14:
                                if (this._abortController) {
                                    try {
                                        this._abortController.abort()
                                    } catch (e) {}
                                    this._abortController = null
                                }
                                this._onCancel && this._onCancel({
                                    index: this._index,
                                    range: this._range,
                                    vid: this._vid,
                                    priOptions: this._priOptions
                                });
                            case 16:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this, [[5, 11]])
                }
                ))),
                function() {
                    return n.apply(this, arguments)
                }
                )
            }, {
                key: "_loadChunk",
                value: function(e, t, n, i) {
                    var r = this;
                    if (!e.body || !e.body.getReader) {
                        this._running = !1;
                        var o = new ns(e.url,"",e,"onProgress of bad response.body.getReader");
                        return o.options = {
                            index: this._index,
                            range: this._range,
                            vid: this._vid,
                            priOptions: this._priOptions
                        },
                        void this.reject(o)
                    }
                    this._onProcessMinLen > 0 && (this._cache = new Uint8Array(hs),
                    this._writeIdx = 0);
                    var a, s, l, u = this._reader = e.body.getReader(), c = Date.now(), h = function() {
                        var o = so(To().mark((function o() {
                            var d, f, p, g, m, v, y, _, T;
                            return To().wrap((function(o) {
                                for (; ; )
                                    switch (o.prev = o.next) {
                                    case 0:
                                        return s = Date.now(),
                                        o.prev = 1,
                                        o.next = 4,
                                        u.read();
                                    case 4:
                                        a = o.sent,
                                        l = Date.now(),
                                        o.next = 13;
                                        break;
                                    case 8:
                                        return o.prev = 8,
                                        o.t0 = o.catch(1),
                                        l = Date.now(),
                                        r._aborted || (r._running = !1,
                                        o.t0.options = {
                                            index: r._index,
                                            range: r._range,
                                            vid: r._vid,
                                            priOptions: r._priOptions
                                        },
                                        r.reject(o.t0)),
                                        o.abrupt("return");
                                    case 13:
                                        if (f = (null === (d = r._range) || void 0 === d ? void 0 : d.length) > 0 ? r._range[0] : 0,
                                        p = f + r._receivedLength,
                                        !r._aborted) {
                                            o.next = 19;
                                            break
                                        }
                                        return r._running = !1,
                                        t(void 0, !1, {
                                            range: [p, p],
                                            vid: r._vid,
                                            index: r._index,
                                            startTime: s,
                                            endTime: l,
                                            st: n,
                                            firstByteTime: i,
                                            priOptions: r._priOptions
                                        }, e),
                                        o.abrupt("return");
                                    case 19:
                                        if (g = a.value ? a.value.byteLength : 0,
                                        r._receivedLength += g,
                                        r._onProcessMinLen > 0 ? r._writeIdx + g >= r._onProcessMinLen || a.done ? ((m = new Uint8Array(r._writeIdx + g)).set(r._cache.subarray(0, r._writeIdx), 0),
                                        g > 0 && m.set(a.value, r._writeIdx),
                                        r._writeIdx = 0,
                                        r._logger.debug("【fetchLoader,onProgress enough】,done,", a.done, ",len,", m.byteLength, ", writeIdx,", r._writeIdx)) : g > 0 && r._writeIdx + g < hs ? (r._cache.set(a.value, r._writeIdx),
                                        r._writeIdx += g,
                                        r._logger.debug("【fetchLoader,onProgress cache】,len,", g, ", writeIdx,", r._writeIdx)) : g > 0 && (v = new Uint8Array(r._writeIdx + g + 2048),
                                        r._logger.debug("【fetchLoader,onProgress extra start】,size,", r._writeIdx + g + 2048, ", datalen,", g, ", writeIdx,", r._writeIdx),
                                        v.set(r._cache.subarray(0, r._writeIdx), 0),
                                        g > 0 && v.set(a.value, r._writeIdx),
                                        r._writeIdx += g,
                                        delete r._cache,
                                        r._cache = v,
                                        r._logger.debug("【fetchLoader,onProgress extra end】,len,", g, ", writeIdx,", r._writeIdx)) : m = a.value,
                                        !(m && m.byteLength > 0 || a.done)) {
                                            o.next = 28;
                                            break
                                        }
                                        r._logger.debug("【fetchLoader,onProgress call】,task,", r._range, ", start,", p, ", end,", f + r._receivedLength, ", done,", a.done, n),
                                        t(m, a.done, {
                                            range: [r._range[0] + r._receivedLength - (m ? m.byteLength : 0), r._range[0] + r._receivedLength],
                                            vid: r._vid,
                                            index: r._index,
                                            startTime: s,
                                            endTime: l,
                                            st: n,
                                            firstByteTime: i,
                                            priOptions: r._priOptions
                                        }, e),
                                        c = Date.now(),
                                        o.next = 37;
                                        break;
                                    case 28:
                                        if (!(Date.now() - c >= r._processMaxGapTime)) {
                                            o.next = 37;
                                            break
                                        }
                                        return r._logger.debug("[onProgress timeout],task: ".concat(JSON.stringify(r._range), " done: ").concat(a.done, " processMaxGapTime: ").concat(r._processMaxGapTime)),
                                        (y = new ns(e.url,null,e,"process timeout")).options = {
                                            index: r._index,
                                            range: r._range,
                                            vid: r._vid,
                                            priOptions: r._priOptions
                                        },
                                        r.running = !1,
                                        o.next = 35,
                                        r.cancel();
                                    case 35:
                                        return r.reject(y),
                                        o.abrupt("return");
                                    case 37:
                                        a.done ? (_ = Date.now() - n,
                                        T = us(r._receivedLength, _),
                                        r.emit(cs, {
                                            speed: T,
                                            len: r._receivedLength,
                                            time: _,
                                            vid: r._vid,
                                            index: r._index,
                                            range: r._range,
                                            priOptions: r._priOptions
                                        }),
                                        r._running = !1,
                                        r._logger.debug("[fetchLoader onProgress end],task,", r._range, ",done,", a.done),
                                        r.resolve(ls(a, !0, e, e.headers.get("Content-Length"), e.headers.get("age"), n, i, r._index, r._range, r._vid, r._priOptions))) : h();
                                    case 38:
                                    case "end":
                                        return o.stop()
                                    }
                            }
                            ), o, null, [[1, 8]])
                        }
                        )));
                        return function() {
                            return o.apply(this, arguments)
                        }
                    }();
                    h()
                }
            }, {
                key: "receiveLen",
                get: function() {
                    return this._receivedLength
                }
            }, {
                key: "running",
                get: function() {
                    return this._running
                },
                set: function(e) {
                    this._running = e
                }
            }], [{
                key: "isSupported",
                value: function() {
                    return !("undefined" == typeof fetch)
                }
            }]);
            var n
        }(G())
          , fs = function(e) {
            function t() {
                var e;
                return uo(this, t),
                fo(e = lo(this, t), "_xhr", null),
                fo(e, "_aborted", !1),
                fo(e, "_timeoutTimer", null),
                fo(e, "_range", null),
                fo(e, "_receivedLength", 0),
                fo(e, "_url", null),
                fo(e, "_onProgress", null),
                fo(e, "_index", -1),
                fo(e, "_headers", null),
                fo(e, "_currentChunkSizeKB", 384),
                fo(e, "_timeout", null),
                fo(e, "_xhr", null),
                fo(e, "_withCredentials", null),
                fo(e, "_startTime", -1),
                fo(e, "_loadCompleteResolve", null),
                fo(e, "_loadCompleteReject", null),
                fo(e, "_runing", !1),
                fo(e, "_logger", !1),
                fo(e, "_vid", ""),
                fo(e, "_responseType", void 0),
                fo(e, "_credentials", void 0),
                fo(e, "_method", void 0),
                fo(e, "_transformResponse", void 0),
                fo(e, "_firstRtt", void 0),
                fo(e, "_onCancel", null),
                fo(e, "_priOptions", null),
                e
            }
            return mo(t, e),
            ho(t, [{
                key: "load",
                value: function(e) {
                    var t = this;
                    clearTimeout(this._timeoutTimer),
                    this._logger = e.logger,
                    this._range = e.range,
                    this._onProgress = e.onProgress,
                    this._index = e.index,
                    this._headers = e.headers,
                    this._withCredentials = "include" === e.credentials || "same-origin" === e.credentials,
                    this._body = e.body || null,
                    e.method && (this._method = e.method),
                    this._timeout = e.timeout || null,
                    this._runing = !0,
                    this._vid = e.vid || e.url,
                    this._responseType = e.responseType,
                    this._firstRtt = -1,
                    this._onTimeout = e.onTimeout,
                    this._onCancel = e.onCancel,
                    this._request = e.request,
                    this._priOptions = e.priOptions || {},
                    this._logger.debug("【xhrLoader task】, range", this._range),
                    this._url = ss(e.url, e.params);
                    var n = Date.now();
                    return new Promise((function(e, n) {
                        t._loadCompleteResolve = e,
                        t._loadCompleteReject = n,
                        t._startLoad()
                    }
                    )).catch((function(e) {
                        if (clearTimeout(t._timeoutTimer),
                        t._runing = !1,
                        !t._aborted)
                            throw (e = e instanceof ns ? e : new ns(t._url,t._request)).startTime = n,
                            e.endTime = Date.now(),
                            e.options = {
                                index: t._index,
                                vid: t._vid,
                                priOptions: t._priOptions
                            },
                            e
                    }
                    ))
                }
            }, {
                key: "_startLoad",
                value: function() {
                    var e = null;
                    if (this._responseType === es && this._range && this._range.length > 1)
                        if (this._onProgress) {
                            this._firstRtt = -1;
                            var t = 1024 * this._currentChunkSizeKB
                              , n = this._range[0] + this._receivedLength
                              , i = this._range[1];
                            t < this._range[1] - n && (i = n + t),
                            e = [n, i],
                            this._logger.debug("[xhr_loader->],tast :", this._range, ", SubRange, ", e)
                        } else
                            e = this._range,
                            this._logger.debug("[xhr_loader->],tast :", this._range, ", allRange, ", e);
                    this._internalOpen(e)
                }
            }, {
                key: "_internalOpen",
                value: function(e) {
                    var t = this;
                    try {
                        this._startTime = Date.now();
                        var n = this._xhr = new XMLHttpRequest;
                        n.open(this._method || "GET", this._url, !0),
                        n.responseType = this._responseType,
                        this._timeout && (n.timeout = this._timeout),
                        n.withCredentials = this._withCredentials,
                        n.onload = this._onLoad.bind(this),
                        n.onreadystatechange = this._onReadyStatechange.bind(this),
                        n.onerror = function(e) {
                            var n, i, r;
                            t._running = !1;
                            var o = new ns(t._url,t._request,null == e || null === (n = e.currentTarget) || void 0 === n ? void 0 : n.response,"xhr.onerror.status:" + (null == e || null === (i = e.currentTarget) || void 0 === i ? void 0 : i.status) + ",statusText," + (null == e || null === (r = e.currentTarget) || void 0 === r ? void 0 : r.statusText));
                            o.options = {
                                index: t._index,
                                range: t._range,
                                vid: t._vid,
                                priOptions: t._priOptions
                            },
                            t._loadCompleteReject(o)
                        }
                        ,
                        n.ontimeout = function(e) {
                            t.cancel();
                            var n = new ns(t._url,t._request,{
                                status: 408
                            },"timeout");
                            t._onTimeout && (n.isTimeout = !0,
                            t._onTimeout(n, {
                                index: t._index,
                                range: t._range,
                                vid: t._vid,
                                priOptions: t._priOptions
                            })),
                            n.options = {
                                index: t._index,
                                range: t._range,
                                vid: t._vid,
                                priOptions: t._priOptions
                            },
                            t._loadCompleteReject(n)
                        }
                        ;
                        var i = this._headers || {}
                          , r = os(e);
                        r && (i.Range = r),
                        i && Object.keys(i).forEach((function(e) {
                            n.setRequestHeader(e, i[e])
                        }
                        )),
                        this._logger.debug("[xhr.send->] tast,", this._range, ",load sub range, ", e),
                        n.send(this._body)
                    } catch (t) {
                        t.options = {
                            index: this._index,
                            range: e,
                            vid: this._vid,
                            priOptions: this._priOptions
                        },
                        this._loadCompleteReject(t)
                    }
                }
            }, {
                key: "_onReadyStatechange",
                value: function(e) {
                    2 === e.target.readyState && this._firstRtt < 0 && (this._firstRtt = Date.now())
                }
            }, {
                key: "_onLoad",
                value: function(e) {
                    var t, n = e.target.status;
                    if (n < 200 || n > 299) {
                        var i = new ns(this._url,null,_o(_o({}, e.target.response), {}, {
                            status: n
                        }),"bad response,status:" + n);
                        return i.options = {
                            index: this._index,
                            range: this._range,
                            vid: this._vid,
                            priOptions: this._priOptions
                        },
                        this._loadCompleteReject(i)
                    }
                    var r, o = null, a = !1, s = (null === (t = this._range) || void 0 === t ? void 0 : t.length) > 0 ? this._range[0] : 0;
                    if (this._responseType === es) {
                        var l, u = new Uint8Array(e.target.response);
                        if (r = s + this._receivedLength,
                        u && u.byteLength > 0) {
                            this._receivedLength += u.byteLength;
                            var c = Date.now() - this._startTime
                              , h = us(this._receivedLength, c);
                            this.emit(cs, {
                                speed: h,
                                len: this._receivedLength,
                                time: c,
                                vid: this._vid,
                                index: this._index,
                                range: [r, s + this._receivedLength],
                                priOptions: this._priOptions
                            })
                        }
                        o = u,
                        a = !((null === (l = this._range) || void 0 === l ? void 0 : l.length) > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]),
                        this._logger.debug("[xhr load done->], tast :", this._range, ", start", r, "end ", s + this._receivedLength, ",dataLen,", u ? u.byteLength : 0, ",receivedLength", this._receivedLength, ",index,", this._index, ", done,", a)
                    } else
                        a = !0,
                        o = e.target.response;
                    var d = {
                        ok: n >= 200 && n < 300,
                        status: n,
                        statusText: this._xhr.statusText,
                        url: this._xhr.responseURL,
                        headers: this._getHeaders(this._xhr),
                        body: this._xhr.response
                    };
                    this._transformResponse && (d = this._transformResponse(d, this._url) || d),
                    this._onProgress && this._onProgress(o, a, {
                        index: this._index,
                        vid: this._vid,
                        range: [r, s + this._receivedLength],
                        startTime: this._startTime,
                        endTime: Date.now(),
                        priOptions: this._priOptions
                    }, d),
                    a ? (this._runing = !1,
                    this._loadCompleteResolve && this._loadCompleteResolve(ls(this._onProgress ? null : o, a, d, d.headers["content-length"], d.headers.age, this._startTime, this._firstRtt, this._index, this._range, this._vid, this._priOptions))) : this._startLoad()
                }
            }, {
                key: "cancel",
                value: function() {
                    if (!this._aborted)
                        return this._aborted = !0,
                        this._runing = !1,
                        function(e, t, n) {
                            var i = po(go(e.prototype), "removeAllListeners", n);
                            return "function" == typeof i ? function(e) {
                                return i.apply(n, e)
                            }
                            : i
                        }(t, 0, this)([]),
                        this._onCancel && this._onCancel({
                            index: this._index,
                            range: this._range,
                            vid: this._vid,
                            priOptions: this._priOptions
                        }),
                        this._xhr ? this._xhr.abort() : void 0
                }
            }, {
                key: "receiveLen",
                get: function() {
                    return this._receivedLength
                }
            }, {
                key: "running",
                get: function() {
                    return this._running
                },
                set: function(e) {
                    this._running = e
                }
            }, {
                key: "_getHeaders",
                value: function(e) {
                    var t, n = {}, i = function(e, t) {
                        var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (!n) {
                            if (Array.isArray(e) || (n = function(e, t) {
                                if (e) {
                                    if ("string" == typeof e)
                                        return oo(e, t);
                                    var n = {}.toString.call(e).slice(8, -1);
                                    return "Object" === n && e.constructor && (n = e.constructor.name),
                                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? oo(e, t) : void 0
                                }
                            }(e)) || t && e && "number" == typeof e.length) {
                                n && (e = n);
                                var i = 0
                                  , r = function() {};
                                return {
                                    s: r,
                                    n: function() {
                                        return i >= e.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: e[i++]
                                        }
                                    },
                                    e: function(e) {
                                        throw e
                                    },
                                    f: r
                                }
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }
                        var o, a = !0, s = !1;
                        return {
                            s: function() {
                                n = n.call(e)
                            },
                            n: function() {
                                var e = n.next();
                                return a = e.done,
                                e
                            },
                            e: function(e) {
                                s = !0,
                                o = e
                            },
                            f: function() {
                                try {
                                    a || null == n.return || n.return()
                                } finally {
                                    if (s)
                                        throw o
                                }
                            }
                        }
                    }(e.getAllResponseHeaders().trim().split("\r\n"));
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var r = t.value.split(": ");
                            n[r[0].toLowerCase()] = r.slice(1).join(": ")
                        }
                    } catch (e) {
                        i.e(e)
                    } finally {
                        i.f()
                    }
                    return n
                }
            }], [{
                key: "isSupported",
                value: function() {
                    return "undefined" != typeof XMLHttpRequest
                }
            }])
        }(G())
          , ps = ["retry", "retryDelay", "onRetryError", "transformError"]
          , gs = function() {
            return ho((function e(t, n) {
                uo(this, e),
                this.promise = No(),
                this.alive = !!n.onProgress,
                !n.logger && (n.logger = new Po("Loader")),
                this._loaderType = t,
                this._loader = t === Ja && "undefined" != typeof fetch ? new ds : new fs,
                this._config = n,
                this._retryCount = 0,
                this._retryTimer = null,
                this._canceled = !1,
                this._retryCheckFunc = n.retryCheckFunc,
                this._logger = n.logger
            }
            ), [{
                key: "exec",
                value: function() {
                    var e = this
                      , t = this._config
                      , n = t.retry
                      , i = t.retryDelay
                      , r = t.onRetryError
                      , o = t.transformError
                      , a = function(e, t) {
                        if (null == e)
                            return {};
                        var n, i, r = function(e, t) {
                            if (null == e)
                                return {};
                            var n = {};
                            for (var i in e)
                                if ({}.hasOwnProperty.call(e, i)) {
                                    if (t.includes(i))
                                        continue;
                                    n[i] = e[i]
                                }
                            return n
                        }(e, t);
                        if (Object.getOwnPropertySymbols) {
                            var o = Object.getOwnPropertySymbols(e);
                            for (i = 0; i < o.length; i++)
                                n = o[i],
                                t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (r[n] = e[n])
                        }
                        return r
                    }(t, ps)
                      , s = function() {
                        var t = so(To().mark((function t() {
                            var l, u, c;
                            return To().wrap((function(t) {
                                for (; ; )
                                    switch (t.prev = t.next) {
                                    case 0:
                                        return t.prev = 0,
                                        t.next = 3,
                                        e._loader.load(a);
                                    case 3:
                                        l = t.sent,
                                        e.promise.resolve(l),
                                        t.next = 27;
                                        break;
                                    case 7:
                                        if (t.prev = 7,
                                        t.t0 = t.catch(0),
                                        e._loader.running = !1,
                                        e._logger.debug("[task request catch err]", t.t0),
                                        !e._canceled) {
                                            t.next = 13;
                                            break
                                        }
                                        return t.abrupt("return");
                                    case 13:
                                        if (t.t0.loaderType = e._loaderType,
                                        t.t0.retryCount = e._retryCount,
                                        u = t.t0,
                                        o && (u = o(u) || u),
                                        r && e._retryCount > 0 && r(u, e._retryCount, {
                                            index: a.index,
                                            vid: a.vid,
                                            range: a.range,
                                            priOptions: a.priOptions
                                        }),
                                        e._retryCount++,
                                        c = !0,
                                        e._retryCheckFunc && (c = e._retryCheckFunc(t.t0)),
                                        !(c && e._retryCount <= n)) {
                                            t.next = 26;
                                            break
                                        }
                                        return clearTimeout(e._retryTimer),
                                        e._logger.debug("[task request setTimeout],retry", e._retryCount, ",retry range,", a.range),
                                        e._retryTimer = setTimeout(s, i),
                                        t.abrupt("return");
                                    case 26:
                                        e.promise.reject(u);
                                    case 27:
                                    case "end":
                                        return t.stop()
                                    }
                            }
                            ), t, null, [[0, 7]])
                        }
                        )));
                        return function() {
                            return t.apply(this, arguments)
                        }
                    }();
                    return s(),
                    this.promise
                }
            }, {
                key: "cancel",
                value: (e = so(To().mark((function e() {
                    return To().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return clearTimeout(this._retryTimer),
                                this._canceled = !0,
                                this._loader.running = !1,
                                e.abrupt("return", this._loader.cancel());
                            case 4:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function() {
                    return e.apply(this, arguments)
                }
                )
            }, {
                key: "running",
                get: function() {
                    return this._loader && this._loader.running
                }
            }, {
                key: "loader",
                get: function() {
                    return this._loader
                }
            }]);
            var e
        }()
          , ms = 10;
        function vs() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                t[n] = arguments[n];
            if ((t = t.filter(Boolean)).length < 2)
                return t[0];
            var i = t.reduce((function(e, t) {
                return e + t.byteLength
            }
            ), 0)
              , r = ys(i)
              , o = 0;
            return t.forEach((function(e) {
                r.set(e, o),
                o += e.byteLength
            }
            )),
            r
        }
        function ys(e) {
            for (var t, n = 0; n < ms; )
                try {
                    if ((t = new Uint8Array(e)) && t.byteLength > 0)
                        break;
                    n++
                } catch (e) {
                    if (!(n < ms))
                        throw new Error("new array failed final,".concat(null == e ? void 0 : e.message));
                    n++
                }
            return t
        }
        function _s() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            return new Promise((function(t) {
                return setTimeout(t, e)
            }
            ))
        }
        var Ts = function(e) {
            function t(e) {
                var n;
                return uo(this, t),
                fo(n = lo(this, t, [e]), "type", Ja),
                fo(n, "_queue", []),
                fo(n, "_alive", []),
                fo(n, "_currentTask", null),
                fo(n, "_finnalUrl", ""),
                fo(n, "_config", void 0),
                n._config = function(e) {
                    return _o({
                        loaderType: Ja,
                        retry: 0,
                        retryDelay: 0,
                        timeout: 0,
                        request: null,
                        onTimeout: void 0,
                        onProgress: void 0,
                        onRetryError: void 0,
                        transformRequest: void 0,
                        transformResponse: void 0,
                        transformError: void 0,
                        responseType: ts,
                        range: void 0,
                        url: "",
                        params: void 0,
                        method: "GET",
                        headers: {},
                        body: void 0,
                        mode: void 0,
                        credentials: void 0,
                        cache: void 0,
                        redirect: void 0,
                        referrer: void 0,
                        referrerPolicy: void 0,
                        integrity: void 0,
                        onProcessMinLen: 0,
                        processMaxGapTime: 1 / 0
                    }, e)
                }(e),
                "xhr" !== n._config.loaderType && ds.isSupported() || (n.type = "xhr"),
                n.log = e.logger,
                n
            }
            return mo(t, e),
            ho(t, [{
                key: "isFetch",
                value: function() {
                    return this.type === Ja
                }
            }, {
                key: "load",
                value: function(e) {
                    var t = this
                      , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    "string" != typeof e && e ? n = e : n.url = e || n.url || this._config.url,
                    (n = Object.assign({}, this._config, n)).params && (n.params = Object.assign({}, n.params)),
                    n.headers && rs(n.headers) && (n.headers = Object.assign({}, n.headers)),
                    n.body && rs(n.body) && (n.body = Object.assign({}, n.body)),
                    n.transformRequest && (n = n.transformRequest(n) || n),
                    n.logger = this.log;
                    var i = new gs(this.type,n);
                    return i.loader.on(cs, (function(e) {
                        t.emit(cs, e)
                    }
                    )),
                    this._queue.push(i),
                    1 !== this._queue.length || this._currentTask && this._currentTask.running || this._processTask(),
                    i.promise
                }
            }, {
                key: "cancel",
                value: (n = so(To().mark((function e() {
                    var t;
                    return To().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return t = this._queue.map((function(e) {
                                    return e.cancel()
                                }
                                )).concat(this._alive.map((function(e) {
                                    return e.cancel()
                                }
                                ))),
                                this._currentTask && t.push(this._currentTask.cancel()),
                                this._queue = [],
                                this._alive = [],
                                e.next = 6,
                                Promise.all(t);
                            case 6:
                                return e.next = 8,
                                _s();
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function() {
                    return n.apply(this, arguments)
                }
                )
            }, {
                key: "_processTask",
                value: function() {
                    var e = this;
                    if (this._currentTask = this._queue.shift(),
                    this._currentTask) {
                        this._currentTask.alive && this._alive.push(this._currentTask);
                        var t = this._currentTask.exec().catch((function(e) {}
                        ));
                        t && "function" == typeof t.finally && t.finally((function() {
                            var t, n;
                            null !== (t = e._currentTask) && void 0 !== t && t.alive && (null === (n = e._alive) || void 0 === n ? void 0 : n.length) > 0 && (e._alive = e._alive.filter((function(t) {
                                return t && t !== e._currentTask
                            }
                            ))),
                            e._processTask()
                        }
                        ))
                    }
                }
            }], [{
                key: "isFetchSupport",
                value: function() {
                    return ds.isSupported()
                }
            }]);
            var n
        }(G());
        function bs(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function Ss(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function ws(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, Ps(i.key), i)
            }
        }
        function ks(e, t, n) {
            return t && ws(e.prototype, t),
            n && ws(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function Cs(e, t, n) {
            return (t = Ps(t))in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Ms(e) {
            return function(e) {
                if (Array.isArray(e))
                    return bs(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || Rs(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function Ps(e) {
            var t = function(e) {
                if ("object" != typeof e || !e)
                    return e;
                var t = e[Symbol.toPrimitive];
                if (void 0 !== t) {
                    var n = t.call(e, "string");
                    if ("object" != typeof n)
                        return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return String(e)
            }(e);
            return "symbol" == typeof t ? t : t + ""
        }
        function Rs(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return bs(e, t);
                var n = {}.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? bs(e, t) : void 0
            }
        }
        function xs() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                t[n] = arguments[n];
            t = t.filter(Boolean);
            var i = new Uint8Array(t.reduce((function(e, t) {
                return e + t.byteLength
            }
            ), 0))
              , r = 0;
            return t.forEach((function(e) {
                i.set(e, r),
                r += e.byteLength
            }
            )),
            i
        }
        var Es = Math.pow(2, 32);
        function Ds(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            return (e[t] << 8) + (e[t + 1] || 0)
        }
        function Ls(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            return (e[t] << 24 >>> 0) + (e[t + 1] << 16) + (e[t + 2] << 8) + (e[t + 3] || 0)
        }
        function Is(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt32(t)
        }
        function Os(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            return Ls(e, t) * Es + Ls(e, t + 4)
        }
        function As(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = new DataView(e.buffer,e.byteOffset,e.byteLength);
            return n.getUint32(t) << 32 | n.getUint32(t + 4)
        }
        function Gs(e) {
            if (!Array.isArray(e)) {
                for (var t = [], n = "", i = 0; i < e.length; i++)
                    i % 2 && (n = e[i - 1] + e[i],
                    t.push(parseInt(n, 16)),
                    n = "");
                return t
            }
            return e.map((function(e) {
                return parseInt(e, 16)
            }
            ))
        }
        function Ns(e, t) {
            return Number(e + "." + t)
        }
        var Bs = "undefined" != typeof window
          , $s = Bs && navigator.userAgent.toLocaleLowerCase()
          , Fs = (Bs && /^((?!chrome|android).)*safari/.test($s),
        Bs && $s.includes("firefox"))
          , Hs = Bs && $s.includes("android")
          , Us = function() {
            function e() {
                Ss(this, e)
            }
            return ks(e, null, [{
                key: "getRateIndexByRate",
                value: function(t) {
                    return e.FREQ.indexOf(t)
                }
            }, {
                key: "parseADTS",
                value: function(t, n) {
                    for (var i = t.length, r = 0; r + 2 < i && (255 !== t[r] || 240 != (246 & t[r + 1])); )
                        r++;
                    if (!(r >= i)) {
                        var o = r
                          , a = []
                          , s = (60 & t[r + 2]) >>> 2
                          , l = e.FREQ[s];
                        if (!l)
                            throw new Error("Invalid sampling index: ".concat(s));
                        for (var u, c, h = 1 + ((192 & t[r + 2]) >>> 6), d = (1 & t[r + 2]) << 2 | (192 & t[r + 3]) >>> 6, f = e._getConfig(s, d, h), p = f.config, g = f.codec, m = 0, v = e.getFrameDuration(l); r + 7 < i; )
                            if (255 === t[r] && 240 == (246 & t[r + 1])) {
                                if (!(c = (3 & t[r + 3]) << 11 | t[r + 4] << 3 | (224 & t[r + 5]) >> 5) || i - r < c)
                                    break;
                                u = 2 * (1 & ~t[r + 1]),
                                a.push({
                                    pts: n + m * v,
                                    data: t.subarray(r + 7 + u, r + c)
                                }),
                                m++,
                                r += c
                            } else
                                r++;
                        return {
                            skip: o,
                            remaining: r >= i ? void 0 : t.subarray(r),
                            frames: a,
                            samplingFrequencyIndex: s,
                            sampleRate: l,
                            objectType: h,
                            channelCount: d,
                            codec: g,
                            config: p,
                            originCodec: "mp4a.40.".concat(h)
                        }
                    }
                }
            }, {
                key: "parseAudioSpecificConfig",
                value: function(t) {
                    if (t.length) {
                        var n = t[0] >>> 3
                          , i = (7 & t[0]) << 1 | t[1] >>> 7
                          , r = (120 & t[1]) >>> 3
                          , o = e.FREQ[i];
                        if (o) {
                            var a = e._getConfig(i, r, n)
                              , s = a.config
                              , l = a.codec;
                            return t.length >= 4 && 695 == (t[2] << 3 | (224 & t[3]) >> 5) && (128 & t[4]) >> 7 && (n = 31 & t[3]),
                            {
                                samplingFrequencyIndex: i,
                                sampleRate: o,
                                objectType: n,
                                channelCount: r,
                                config: s,
                                codec: l,
                                originCodec: "mp4a.40.".concat(n)
                            }
                        }
                    }
                }
            }, {
                key: "getFrameDuration",
                value: function(e) {
                    return 1024 * (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 9e4) / e
                }
            }, {
                key: "_getConfig",
                value: function(e, t, n) {
                    var i, r, o = [];
                    return Fs ? e >= 6 ? (i = 5,
                    r = e - 3) : (i = 2,
                    r = e) : Hs ? (i = 2,
                    r = e) : (i = 2 === n || 5 === n ? n : 5,
                    r = e,
                    e >= 6 ? r = e - 3 : 1 === t && (i = 2,
                    r = e)),
                    o[0] = i << 3,
                    o[0] |= (14 & e) >> 1,
                    o[1] = (1 & e) << 7,
                    o[1] |= t << 3,
                    5 === i && (o[1] |= (14 & r) >> 1,
                    o[2] = (1 & r) << 7,
                    o[2] |= 8,
                    o[3] = 0),
                    {
                        config: o,
                        codec: "mp4a.40.".concat(i)
                    }
                }
            }, {
                key: "getSilentFrame",
                value: function(e, t, n) {
                    if ("mp4a.40.2" === e) {
                        if (1 === t)
                            return new Uint8Array([0, 200, 0, 128, 35, 128]);
                        if (2 === t)
                            return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                        if (3 === t)
                            return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                        if (4 === t)
                            return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                        if (5 === t)
                            return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                        if (6 === t)
                            return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224])
                    } else {
                        if ("mp4a.40.5" === e && 2 === t && 22050 === n)
                            return new Uint8Array([33, 17, 69, 0, 20, 80, 1, 70, 173, 200, 65, 117, 0, 0, 0, 28, 96, 24, 13, 230, 66, 20, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 188]);
                        if ("mp40.40.5" === e && 2 === t && 24e3 === n)
                            return new Uint8Array([33, 17, 69, 0, 20, 80, 1, 70, 173, 200, 65, 117, 0, 0, 0, 28, 96, 24, 13, 229, 98, 20, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 188]);
                        if (1 === t)
                            return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                        if (2 === t)
                            return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                        if (3 === t)
                            return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                    }
                }
            }])
        }();
        Cs(Us, "FREQ", [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350]);
        var Vs = function() {
            return ks((function e(t) {
                if (Ss(this, e),
                Cs(this, "_bytesAvailable", void 0),
                Cs(this, "_bitsAvailable", 0),
                Cs(this, "_word", 0),
                !t)
                    throw new Error("ExpGolomb data params is required");
                this._data = t,
                this._bytesAvailable = t.byteLength,
                this._bytesAvailable && this._loadWord()
            }
            ), [{
                key: "_loadWord",
                value: function() {
                    var e = this._data.byteLength - this._bytesAvailable
                      , t = Math.min(4, this._bytesAvailable);
                    if (0 === t)
                        throw new Error("No bytes available");
                    var n = new Uint8Array(4);
                    n.set(this._data.subarray(e, e + t)),
                    this._word = new DataView(n.buffer).getUint32(0),
                    this._bitsAvailable = 8 * t,
                    this._bytesAvailable -= t
                }
            }, {
                key: "bitsPos",
                value: function() {
                    return 8 * this._bytesAvailable - this._bitsAvailable
                }
            }, {
                key: "bitsLeft",
                value: function() {
                    return 8 * this._data.length - this.bitsPos()
                }
            }, {
                key: "byteAligned",
                value: function() {
                    return 0 === this.bitsPos() || this.bitsPos() % 8 == 0
                }
            }, {
                key: "skipBits",
                value: function(e) {
                    if (this._bitsAvailable > e)
                        this._word <<= e,
                        this._bitsAvailable -= e;
                    else {
                        e -= this._bitsAvailable;
                        var t = Math.floor(e / 8);
                        e -= 8 * t,
                        this._bytesAvailable -= t,
                        this._loadWord(),
                        this._word <<= e,
                        this._bitsAvailable -= e
                    }
                }
            }, {
                key: "readBits",
                value: function(e) {
                    if (e > 32)
                        throw new Error("Cannot read more than 32 bits");
                    var t = Math.min(this._bitsAvailable, e)
                      , n = this._word >>> 32 - t;
                    return this._bitsAvailable -= t,
                    this._bitsAvailable > 0 ? this._word <<= t : this._bytesAvailable > 0 && this._loadWord(),
                    (t = e - t) > 0 && this._bitsAvailable ? n << t | this.readBits(t) : n
                }
            }, {
                key: "skipLZ",
                value: function() {
                    var e;
                    for (e = 0; e < this._bitsAvailable; ++e)
                        if (this._word & 2147483648 >>> e)
                            return this._word <<= e,
                            this._bitsAvailable -= e,
                            e;
                    return this._loadWord(),
                    e + this.skipLZ()
                }
            }, {
                key: "skipUEG",
                value: function() {
                    this.skipBits(1 + this.skipLZ())
                }
            }, {
                key: "readUEG",
                value: function() {
                    var e = this.skipLZ();
                    return this.readBits(e + 1) - 1
                }
            }, {
                key: "readEG",
                value: function() {
                    var e = this.readUEG();
                    return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                }
            }, {
                key: "readBool",
                value: function() {
                    return 1 === this.readBits(1)
                }
            }, {
                key: "readUByte",
                value: function() {
                    return this.readBits(8)
                }
            }, {
                key: "skipScalingList",
                value: function(e) {
                    for (var t = 8, n = 8, i = 0; i < e; i++)
                        0 !== n && (n = (t + this.readEG() + 256) % 256),
                        t = 0 === n ? t : n
                }
            }])
        }()
          , js = function() {
            return ks((function e(t) {
                Ss(this, e),
                this._buffer = t,
                this._offset = 0,
                this._heldBits = 0,
                this._numHeldBits = 0
            }
            ), [{
                key: "readUint8",
                value: function() {
                    return this._buffer[this._offset++]
                }
            }, {
                key: "readUint16",
                value: function() {
                    return this._buffer[this._offset++] << 8 | this._buffer[this._offset++]
                }
            }, {
                key: "readUint32",
                value: function() {
                    return this._buffer[this._offset++] << 24 | this._buffer[this._offset++] << 16 | this._buffer[this._offset++] << 8 | this._buffer[this._offset++]
                }
            }, {
                key: "readUint8Array",
                value: function(e) {
                    var t = this._buffer.slice(this._offset, this._offset + e);
                    return this._offset += e,
                    t
                }
            }, {
                key: "streamRead1Bytes",
                value: function() {
                    this._heldBits = this.readUint8(),
                    this._numHeldBits = 8
                }
            }, {
                key: "streamRead2Bytes",
                value: function() {
                    this._heldBits = this.readUint16(),
                    this._numHeldBits = 16
                }
            }, {
                key: "extractBits",
                value: function(e) {
                    var t = this._heldBits >> this._numHeldBits - e & (1 << e) - 1;
                    return this._numHeldBits -= e,
                    t
                }
            }])
        }()
          , zs = function() {
            function e() {
                Ss(this, e)
            }
            return ks(e, null, [{
                key: "parseVVCDecoderConfigurationRecord",
                value: function(t) {
                    var n = new js(t)
                      , i = n.readUint8();
                    n.streamRead1Bytes(),
                    n.extractBits(5);
                    var r, o, a, s, l, u, c, h, d = n.extractBits(2) + 1, f = n.extractBits(1), p = {};
                    f && (n.streamRead2Bytes(),
                    s = n.extractBits(2),
                    l = n.extractBits(3),
                    o = n.extractBits(3),
                    a = n.extractBits(2),
                    n.extractBits(6),
                    p = e.parseVVCPTLRecord(n, o),
                    r = n.readUint16(),
                    u = n.readUint16(),
                    c = n.readUint16(),
                    h = n.readUint16());
                    for (var g = n.readUint8(), m = [], v = [], y = [], _ = null, T = 0; T < g; T++) {
                        n.streamRead1Bytes(),
                        n.extractBits(1),
                        n.extractBits(2);
                        var b = n.extractBits(5)
                          , S = 1;
                        13 !== b && 12 !== b && (S = n.readUint16());
                        for (var w = 0; w < S; w++) {
                            var k = n.readUint16();
                            switch (b) {
                            case 14:
                                m.push(n.readUint8Array(k));
                                break;
                            case 15:
                                var C = n.readUint8Array(k);
                                _ || (_ = e.parseSPS(e.removeEPB(C))),
                                v.push(C);
                                break;
                            case 16:
                                y.push(n.readUint8Array(k))
                            }
                        }
                    }
                    return {
                        data: t,
                        configurationVersion: i,
                        codec: "bvc2.1.6.L93.B0",
                        nalUnitSize: d,
                        ptlPresentFlag: f,
                        olsIdx: r,
                        numSublayers: o,
                        constantFrameRate: a,
                        chromaFormatIdc: s,
                        bitDepthLumaMinus8: l,
                        ptlRecord: p,
                        width: u,
                        height: c,
                        sampleRate: h,
                        numOfArrays: g,
                        vps: m,
                        sps: v,
                        pps: y,
                        spsParsed: _
                    }
                }
            }, {
                key: "parseVVCPTLRecord",
                value: function(e, t) {
                    e.streamRead2Bytes(),
                    e.extractBits(2);
                    var n = e.extractBits(6)
                      , i = e.extractBits(7)
                      , r = e.extractBits(1)
                      , o = e.readUint8();
                    e.streamRead1Bytes();
                    var a = e.extractBits(1)
                      , s = e.extractBits(1)
                      , l = new Uint8Array(n);
                    if (n) {
                        for (var u = 0; u < n - 1; u++) {
                            var c = e.extractBits(6);
                            e.streamRead1Bytes();
                            var h = e.extractBits(2);
                            l[u] = c << 2 | h
                        }
                        l[n - 1] = e.extractBits(6)
                    } else
                        e.extractBits(6);
                    var d = [];
                    if (t > 1) {
                        e.streamRead1Bytes();
                        for (var f = 0, p = t - 2; p >= 0; --p)
                            f |= e.extractBits(1) << p;
                        for (var g = t; g <= 8 && t > 1; ++g)
                            e.extractBits(1);
                        for (var m = t - 2; m >= 0; --m)
                            f & 1 << m && (d[m] = e.readUint8())
                    }
                    var v = e.readUint8()
                      , y = [];
                    if (v)
                        for (var _ = 0; _ < v; _++)
                            y.push(e.readUint32());
                    return {
                        generalProfileIdc: i,
                        generalTierFlag: r,
                        generalLevelIdc: o,
                        ptlFrameOnlyConstraintFlag: a,
                        ptlMultilayerEnabledFlag: s,
                        generalConstraintInfo: l,
                        subLayerLevelIdc: d,
                        generalSubProfileIdc: y,
                        ptlNumSubProfiles: v,
                        numBytesConstraintInfo: n
                    }
                }
            }, {
                key: "getAvccNals",
                value: function(e) {
                    for (var t = []; e.position < e.length - 4; ) {
                        var n = e.dataview.getInt32(e.dataview.position);
                        if (!(e.length - e.position >= n))
                            break;
                        var i = e.buffer.slice(e.position, e.position + 4);
                        e.skip(4);
                        var r = new Uint8Array(e.buffer.slice(e.position, e.position + n));
                        e.skip(n),
                        t.push({
                            header: i,
                            body: r
                        })
                    }
                    return t
                }
            }, {
                key: "analyseNal",
                value: function(e) {
                    var t = (248 & e.body[1]) >> 3;
                    switch (e.type = t,
                    t) {
                    case 23:
                    case 24:
                        break;
                    case 7:
                    case 8:
                        e.key = !0;
                        break;
                    case 14:
                        e.vps = !0;
                        break;
                    case 15:
                        e.sps = !0;
                        break;
                    case 16:
                        e.pps = !0;
                        break;
                    case 17:
                        e.aps = !0
                    }
                }
            }, {
                key: "removeEPB",
                value: function(e) {
                    for (var t = e.byteLength, n = [], i = 1; i < t - 2; )
                        0 === e[i] && 0 === e[i + 1] && 3 === e[i + 2] ? (n.push(i + 2),
                        i += 2) : i++;
                    if (!n.length)
                        return e;
                    var r = t - n.length
                      , o = new Uint8Array(r)
                      , a = 0;
                    for (i = 0; i < r; a++,
                    i++)
                        a === n[0] && (a++,
                        n.shift()),
                        o[i] = e[a];
                    return o
                }
            }, {
                key: "parseVps",
                value: function() {}
            }, {
                key: "parseSPS",
                value: function(t) {
                    var n = new Vs(t);
                    n.readUByte(),
                    n.readUByte(),
                    n.skipBits(4);
                    var i = n.readBits(4)
                      , r = n.readBits(3)
                      , o = n.readBits(2)
                      , a = 420;
                    o <= 3 && (a = [0, 420, 422, 444][o]),
                    n.readBits(2),
                    n.readBits(1);
                    var s = e._parseProfileTierLevel(n, 1, r);
                    return n.readBits(1),
                    n.readBits(1) && n.readBits(1),
                    {
                        width: n.readUEG(),
                        height: n.readUEG(),
                        spsMaxSubLayerMinus1: r,
                        spsVideoParameterSetId: i,
                        chromaFormatIdc: o,
                        chromaFormat: a,
                        ptlInfo: s
                    }
                }
            }, {
                key: "_parseProfileTierLevel",
                value: function(t, n, i) {
                    var r, o = t.readBits(7), a = t.readBits(1), s = t.readBits(8), l = t.readBits(1), u = t.readBits(1);
                    n && (r = e._parseGeneralConstraintsInfo(t));
                    for (var c = i - 1, h = [], d = [], f = [], p = c; p >= 0; --p)
                        h[p] = t.readBits(1);
                    for (; !t.byteAligned(); )
                        t.readBits(1);
                    for (var g = c; g >= 0; --g)
                        h[g] && (d[g] = t.readUByte());
                    if (n)
                        for (var m = t.readUByte(), v = 0; v < m; v++)
                            f[v] = t.readBits(32);
                    return {
                        generalProfileIdc: o,
                        generalTierFlag: a,
                        generalLevelIdc: s,
                        ptlFrameOnlyConstraintFlag: l,
                        ptlMultilayerEnabledFlag: u,
                        ptlSublayerLevelPresentFlags: h,
                        ptlSublayerLevelIdcs: d,
                        ptlSubProfileIdcs: f,
                        gciInfo: r
                    }
                }
            }, {
                key: "_parseGeneralConstraintsInfo",
                value: function(e) {
                    var t = e.readBits(1);
                    if (t) {
                        e.skipBits(71);
                        var n = e.readBits(8);
                        n && e.skipBits(n)
                    }
                    var i = 8 - e.bitsPos() % 8;
                    return e.skipBits(i),
                    {
                        gciPresentFlag: t
                    }
                }
            }])
        }()
          , Xs = "video"
          , Ks = "hevc"
          , Qs = "vvcC"
          , Ws = function() {
            function e(t, n, i) {
                Ss(this, e),
                this.dv = new DataView(t),
                this.start = this.offset = n || this.dv.byteOffset,
                this.end = i ? this.start + i : this.start + this.dv.byteLength
            }
            return ks(e, [{
                key: "buffer",
                get: function() {
                    return this.dv.buffer
                }
            }, {
                key: "unreadLength",
                get: function() {
                    return Math.max(this.end - this.offset, 0)
                }
            }, {
                key: "size",
                get: function() {
                    return this.end - this.start
                }
            }, {
                key: "readFloat",
                value: function(e) {
                    var t = 0;
                    switch (e) {
                    case 4:
                        t = this.dv.getFloat32(this.offset);
                        break;
                    case 8:
                        t = this.dv.getFloat64(this.offset);
                        break;
                    default:
                        throw new Error("read ".concat(e, "-byte float is not supported"))
                    }
                    return this.offset += e,
                    t
                }
            }, {
                key: "back",
                value: function(e) {
                    this.offset -= e
                }
            }, {
                key: "skip",
                value: function(e) {
                    this.offset += e
                }
            }, {
                key: "readInt",
                value: function(e) {
                    var t = this.offset;
                    switch (this.offset += e,
                    e) {
                    case 1:
                        return this.dv.getInt8(t);
                    case 2:
                        return this.dv.getInt16(t);
                    case 4:
                        return this.dv.getInt32(t);
                    default:
                        throw new Error("read ".concat(e, "-byte integers is not supported"))
                    }
                }
            }, {
                key: "read",
                value: function(e) {
                    var t = this.offset;
                    switch (this.offset += e,
                    e) {
                    case 1:
                        return this.dv.getUint8(t);
                    case 2:
                        return this.dv.getUint16(t);
                    case 3:
                        return (this.dv.getUint16(t) << 8) + this.dv.getUint8(t + 2);
                    case 4:
                        return this.dv.getUint32(t);
                    default:
                        return this.back(e - 4),
                        this.read(e - 4) + this.dv.getUint32(t) * Math.pow(256, e - 4)
                    }
                }
            }, {
                key: "write",
                value: function(e, t) {
                    var n = this.offset;
                    switch (this.offset += e,
                    e) {
                    case 1:
                        return this.dv.setUint8(n, t);
                    case 2:
                        return this.dv.setUint16(n, t);
                    case 3:
                        return this.dv.setUint8(n, t >>> 16),
                        this.dv.setUint16(n + 1, 65535 & t);
                    case 4:
                        return this.dv.setUint32(n, t);
                    default:
                        throw new Error("write ".concat(e, "-byte integers is not supported"))
                    }
                }
            }, {
                key: "readToBuffer",
                value: function(e) {
                    var t;
                    return t = this.offset || e ? this.dv.buffer.slice(this.offset, e ? this.offset + e : this.end) : this.dv.buffer,
                    this.offset += t.byteLength,
                    t
                }
            }, {
                key: "readToUint8",
                value: function(e) {
                    var t = new Uint8Array(this.dv.buffer,this.offset,e || this.unreadLength);
                    return this.offset += t.byteLength,
                    t
                }
            }, {
                key: "readString",
                value: function(e) {
                    for (var t = 0, n = ""; t < e; t++)
                        n += String.fromCharCode(this.dv.getUint8(this.offset)),
                        this.offset++;
                    return n
                }
            }], [{
                key: "fromUint8",
                value: function(t) {
                    return new e(t.buffer,t.byteOffset,t.byteLength)
                }
            }, {
                key: "concatUint8s",
                value: function(e) {
                    var t = new Uint8Array(e.reduce((function(e, t) {
                        return e + t.byteLength
                    }
                    ), 0))
                      , n = 0;
                    return e.forEach((function(e) {
                        t.set(e, n),
                        n += e.byteLength
                    }
                    )),
                    t
                }
            }, {
                key: "concatUint8",
                value: function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                        t[n] = arguments[n];
                    return this.concatUint8s(t)
                }
            }])
        }()
          , qs = function() {
            function e(t, n) {
                Ss(this, e),
                this.offset = 0,
                this.val = t,
                this.size = n
            }
            return ks(e, [{
                key: "skip",
                value: function(e) {
                    this.offset += e
                }
            }, {
                key: "read",
                value: function(e) {
                    var t = this.size - this.offset - e;
                    if (t >= 0) {
                        var n = 0
                          , i = 0;
                        if (this.offset += e,
                        this.size > 31) {
                            for (; i < e; i++)
                                n += Math.pow(2, i);
                            return this.val / Math.pow(2, t) & n
                        }
                        for (; i < e; i++)
                            n += 1 << i;
                        return this.val >>> t & n
                    }
                    throw new Error("the number of the read operation exceeds the total length limit of bits")
                }
            }], [{
                key: "fromByte",
                value: function(t, n) {
                    return new e(t.read(n),n << 3)
                }
            }])
        }()
          , Zs = function() {
            function e() {
                Ss(this, e)
            }
            return ks(e, null, [{
                key: "findBox",
                value: function(t, n) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
                      , r = [];
                    if (!t)
                        return r;
                    for (var o = 0, a = "", s = 0; t.length > 7; ) {
                        if (o = Ls(t),
                        a = String.fromCharCode.apply(null, t.subarray(4, 8)),
                        s = 8,
                        1 === o ? (o = Os(t, 8),
                        s += 8) : o || (o = t.length),
                        !n[0] || a === n[0]) {
                            var l = t.subarray(0, o);
                            if (!(n.length < 2))
                                return e.findBox(l.subarray(s), n.slice(1), i + s);
                            r.push({
                                start: i,
                                size: o,
                                headerSize: s,
                                type: a,
                                data: l
                            })
                        }
                        i += o,
                        t = t.subarray(o)
                    }
                    return r
                }
            }, {
                key: "tfhd",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        e.trackId = Ls(t);
                        var n = 4
                          , i = 1 & e.flags
                          , r = 2 & e.flags
                          , o = 8 & e.flags
                          , a = 16 & e.flags
                          , s = 32 & e.flags;
                        i && (n += 4,
                        e.baseDataOffset = Ls(t, n),
                        n += 4),
                        r && (e.sampleDescriptionIndex = Ls(t, n),
                        n += 4),
                        o && (e.defaultSampleDuration = Ls(t, n),
                        n += 4),
                        a && (e.defaultSampleSize = Ls(t, n),
                        n += 4),
                        s && (e.defaultSampleFlags = Ls(t, n))
                    }
                    ))
                }
            }, {
                key: "sidx",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        var n = 0;
                        e.reference_ID = Ls(t, n),
                        n += 4,
                        e.timescale = Ls(t, n),
                        n += 4,
                        0 === e.version ? (e.earliest_presentation_time = Ls(t, n),
                        n += 4,
                        e.first_offset = Ls(t, n),
                        n += 4) : (e.earliest_presentation_time = Os(t, n),
                        n += 8,
                        e.first_offset = Os(t, n),
                        n += 8),
                        n += 2,
                        e.references = [];
                        var i = Ds(t, n);
                        n += 2;
                        for (var r = 0; r < i; r++) {
                            var o = {};
                            e.references.push(o);
                            var a = Ls(t, n);
                            n += 4,
                            o.reference_type = a >> 31 & 1,
                            o.referenced_size = 2147483647 & a,
                            o.subsegment_duration = Ls(t, n),
                            a = Ls(t, n += 4),
                            n += 4,
                            o.starts_with_SAP = a >> 31 & 1,
                            o.SAP_type = a >> 28 & 7,
                            o.SAP_delta_time = 268435455 & a
                        }
                    }
                    ))
                }
            }, {
                key: "moov",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.mvhd = e.mvhd(e.findBox(n, ["mvhd"], i)[0]),
                        t.trak = e.findBox(n, ["trak"], i).map((function(t) {
                            return e.trak(t)
                        }
                        )),
                        t.pssh = e.pssh(e.findBox(n, ["pssh"], i)[0])
                    }
                    ))
                }
            }, {
                key: "mvhd",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        var n = 0;
                        1 === e.version ? (e.timescale = Ls(t, 16),
                        e.duration = Os(t, 20),
                        n += 28) : (e.timescale = Ls(t, 8),
                        e.duration = Ls(t, 12),
                        n += 16),
                        e.nextTrackId = Ls(t, n + 76)
                    }
                    ))
                }
            }, {
                key: "trak",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.tkhd = e.tkhd(e.findBox(n, ["tkhd"], i)[0]),
                        t.mdia = e.mdia(e.findBox(n, ["mdia"], i)[0]),
                        t.edts = e.edts(e.findBox(n, ["edts"], i)[0])
                    }
                    ))
                }
            }, {
                key: "tkhd",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        var n = Ws.fromUint8(t);
                        1 === e.version ? (n.read(8),
                        n.read(8),
                        e.trackId = n.read(4),
                        n.read(4),
                        e.duration = n.read(8)) : (n.read(4),
                        n.read(4),
                        e.trackId = n.read(4),
                        n.read(4),
                        e.duration = n.read(4)),
                        n.skip(16),
                        e.matrix = [];
                        for (var i = 0; i < 36; i++)
                            e.matrix.push(n.read(1));
                        n.back(36);
                        for (var r, o = [], a = 0; a < 3; a++)
                            o.push(Ns(n.readInt(2), n.readInt(2))),
                            o.push(Ns(n.readInt(2), n.readInt(2))),
                            r = n.readInt(4),
                            o.push(Ns(r >> 30, 1073741823 & r));
                        e.rotation = function(e) {
                            if (e.length < 5)
                                return 0;
                            var t = Math.hypot(e[0], e[3])
                              , n = Math.hypot(e[1], e[4]);
                            return 0 === t || 0 === n ? 0 : 180 * Math.atan2(e[1] / n, e[0] / t) / Math.PI
                        }(o),
                        e.width = n.read(4),
                        e.height = n.read(4)
                    }
                    ))
                }
            }, {
                key: "mdia",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.mdhd = e.mdhd(e.findBox(n, ["mdhd"], i)[0]),
                        t.hdlr = e.hdlr(e.findBox(n, ["hdlr"], i)[0]),
                        t.minf = e.minf(e.findBox(n, ["minf"], i)[0])
                    }
                    ))
                }
            }, {
                key: "edts",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.elst = e.elst(e.findBox(n, ["elst"], i)[0])
                    }
                    ))
                }
            }, {
                key: "elst",
                value: function(e) {
                    return tl(e, !0, (function(e, t, n) {
                        e.entries = [],
                        e.entriesData = t;
                        var i = 0
                          , r = Ls(t, i);
                        i += 4;
                        for (var o = 0; o < r; o++) {
                            var a = {};
                            e.entries.push(a),
                            1 === e.version ? (a.segment_duration = Os(t, i),
                            i += 8,
                            a.media_time = As(t, i),
                            i += 8) : (a.segment_duration = Ls(t, i),
                            i += 4,
                            a.media_time = Is(t, i),
                            i += 4),
                            a.media_rate_integer = Ds(t, i),
                            i += 2,
                            a.media_rate_fraction = Ds(t, n),
                            i += 2
                        }
                    }
                    ))
                }
            }, {
                key: "mdhd",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        var n = 0;
                        1 === e.version ? (e.timescale = Ls(t, 16),
                        e.duration = Os(t, 20),
                        n += 28) : (e.timescale = Ls(t, 8),
                        e.duration = Ls(t, 12),
                        n += 16);
                        var i = Ds(t, n);
                        e.language = String.fromCharCode(96 + (i >> 10 & 31), 96 + (i >> 5 & 31), 96 + (31 & i))
                    }
                    ))
                }
            }, {
                key: "hdlr",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        0 === e.version && (e.handlerType = String.fromCharCode.apply(null, t.subarray(4, 8)))
                    }
                    ))
                }
            }, {
                key: "minf",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.vmhd = e.vmhd(e.findBox(n, ["vmhd"], i)[0]),
                        t.smhd = e.smhd(e.findBox(n, ["smhd"], i)[0]),
                        t.stbl = e.stbl(e.findBox(n, ["stbl"], i)[0])
                    }
                    ))
                }
            }, {
                key: "vmhd",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        e.graphicsmode = Ds(t),
                        e.opcolor = [Ds(t, 2), Ds(t, 4), Ds(t, 6)]
                    }
                    ))
                }
            }, {
                key: "smhd",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        e.balance = Ds(t)
                    }
                    ))
                }
            }, {
                key: "stbl",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        var r, o, a;
                        t.stsd = e.stsd(e.findBox(n, ["stsd"], i)[0]),
                        t.stts = e.stts(e.findBox(n, ["stts"], i)[0]),
                        t.ctts = e.ctts(e.findBox(n, ["ctts"], i)[0]),
                        t.stsc = e.stsc(e.findBox(n, ["stsc"], i)[0]),
                        t.stsz = e.stsz(e.findBox(n, ["stsz"], i)[0]),
                        t.stco = e.stco(e.findBox(n, ["stco"], i)[0]),
                        t.stco || (t.co64 = e.co64(e.findBox(n, ["co64"], i)[0]),
                        t.stco = t.co64);
                        var s = null === (r = t.stsd.entries[0]) || void 0 === r || null === (o = r.sinf) || void 0 === o || null === (a = o.schi) || void 0 === a ? void 0 : a.tenc.default_IV_size;
                        t.stss = e.stss(e.findBox(n, ["stss"], i)[0]),
                        t.senc = e.senc(e.findBox(n, ["senc"], i)[0], s)
                    }
                    ))
                }
            }, {
                key: "senc",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 8;
                    return tl(e, !0, (function(e, n) {
                        var i = 0
                          , r = Ls(n, i);
                        i += 4,
                        e.samples = [];
                        for (var o = 0; o < r; o++) {
                            for (var a = {
                                InitializationVector: []
                            }, s = 0; s < t; s++)
                                a.InitializationVector[s] = n[i + s];
                            if (i += t,
                            2 & e.flags) {
                                a.subsamples = [];
                                var l = Ds(n, i);
                                i += 2;
                                for (var u = 0; u < l; u++) {
                                    var c = {};
                                    c.BytesOfClearData = Ds(n, i),
                                    i += 2,
                                    c.BytesOfProtectedData = Ls(n, i),
                                    i += 4,
                                    a.subsamples.push(c)
                                }
                            }
                            e.samples.push(a)
                        }
                    }
                    ))
                }
            }, {
                key: "pssh",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        for (var n = [], i = [], r = 0, o = 0; o < 16; o++)
                            i.push(nl(t[r + o]));
                        if (r += 16,
                        e.version > 0) {
                            var a = Ls(t, r);
                            r += 4;
                            for (var s = 0; s < ("" + a).length; s++)
                                for (var l = 0; l < 16; l++) {
                                    var u = t[r];
                                    r += 1,
                                    n.push(nl(u))
                                }
                        }
                        var c = Ls(t, r);
                        e.data_size = c,
                        r += 4,
                        e.kid = n,
                        e.system_id = i,
                        e.buffer = t
                    }
                    ))
                }
            }, {
                key: "bvc2",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        var r = Js(t, n)
                          , o = n.subarray(r);
                        i += r,
                        t.vvcC = e.bv2C(e.findBox(o, ["bv2C"], i)[0]),
                        t.pasp = e.pasp(e.findBox(o, ["pasp"], i)[0])
                    }
                    ))
                }
            }, {
                key: "bv2C",
                value: function(e) {
                    return tl(e, !1, (function(e, t, n) {
                        var i = zs.parseVVCDecoderConfigurationRecord(t);
                        for (var r in i)
                            Object.prototype.hasOwnProperty.call(i, r) && (e[r] = i[r])
                    }
                    ))
                }
            }, {
                key: "stsd",
                value: function(t) {
                    return tl(t, !0, (function(t, n, i) {
                        t.entryCount = Ls(n),
                        t.entries = e.findBox(n.subarray(4), [], i + 4).map((function(t) {
                            switch (t.type) {
                            case "av01":
                                return e.av01(t);
                            case "avc1":
                            case "avc2":
                            case "avc3":
                            case "avc4":
                                return e.avc1(t);
                            case "hvc1":
                            case "hev1":
                                return e.hvc1(t);
                            case "bvc2":
                                return e.bvc2(t);
                            case "mp4a":
                                return e.mp4a(t);
                            case "alaw":
                            case "ulaw":
                                return e.alaw(t);
                            case "enca":
                                return tl(t, !1, (function(t, n, i) {
                                    t.channelCount = Ds(n, 16),
                                    t.samplesize = Ds(n, 18),
                                    t.sampleRate = Ls(n, 24) / 65536,
                                    n = n.subarray(28),
                                    t.sinf = e.sinf(e.findBox(n, ["sinf"], i)[0]),
                                    t.esds = e.esds(e.findBox(n, ["esds"], i)[0])
                                }
                                ));
                            case "encv":
                                return tl(t, !1, (function(t, n, i) {
                                    t.width = Ds(n, 24),
                                    t.height = Ds(n, 26),
                                    t.horizresolution = Ls(n, 28),
                                    t.vertresolution = Ls(n, 32),
                                    n = n.subarray(78),
                                    t.sinf = e.sinf(e.findBox(n, ["sinf"], i)[0]),
                                    t.avcC = e.avcC(e.findBox(n, ["avcC"], i)[0]),
                                    t.hvcC = e.hvcC(e.findBox(n, ["hvcC"], i)[0]),
                                    t.pasp = e.pasp(e.findBox(n, ["pasp"], i)[0])
                                }
                                ))
                            }
                        }
                        )).filter(Boolean)
                    }
                    ))
                }
            }, {
                key: "tenc",
                value: function(e) {
                    return tl(e, !1, (function(e, t) {
                        var n = 6;
                        e.default_IsEncrypted = t[n],
                        n += 1,
                        e.default_IV_size = t[n],
                        n += 1,
                        e.default_KID = [];
                        for (var i = 0; i < 16; i++)
                            e.default_KID.push(nl(t[n])),
                            n += 1
                    }
                    ))
                }
            }, {
                key: "schi",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.tenc = e.tenc(e.findBox(n, ["tenc"], i)[0])
                    }
                    ))
                }
            }, {
                key: "sinf",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.schi = e.schi(e.findBox(n, ["schi"], i)[0]),
                        t.frma = e.frma(e.findBox(n, ["frma"], i)[0])
                    }
                    ))
                }
            }, {
                key: "frma",
                value: function(e) {
                    return tl(e, !1, (function(e, t) {
                        e.data_format = "";
                        for (var n = 0; n < 4; n++)
                            e.data_format += String.fromCharCode(t[n])
                    }
                    ))
                }
            }, {
                key: "colr",
                value: function(e) {
                    return tl(e, !1, (function(t, n) {
                        var i = Ws.fromUint8(n);
                        t.data = e.data,
                        t.colorType = i.readString(4),
                        "nclx" === t.colorType ? (t.colorPrimaries = i.read(2),
                        t.transferCharacteristics = i.read(2),
                        t.matrixCoefficients = i.read(2),
                        t.fullRangeFlag = i.read(1) >> 7) : "rICC" !== t.colorType && "prof" !== t.colorType || (t.iccProfile = n.readToUint8())
                    }
                    ))
                }
            }, {
                key: "av01",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        var r = Js(t, n)
                          , o = n.subarray(r);
                        i += r,
                        t.av1C = e.av1C(e.findBox(o, ["av1C"], i)[0]),
                        t.colr = e.colr(e.findBox(o, ["colr"], i)[0])
                    }
                    ))
                }
            }, {
                key: "av1C",
                value: function(e) {
                    return tl(e, !1, (function(t, n) {
                        t.data = e.data;
                        var i, r = Ws.fromUint8(n), o = qs.fromByte(r, 4);
                        t.marker = o.read(1),
                        t.version = o.read(7),
                        t.seqProfile = o.read(3),
                        t.seqLevelIdx0 = o.read(5),
                        t.seqTier0 = o.read(1),
                        t.highBitdepth = o.read(1),
                        t.twelveBit = o.read(1),
                        t.monochrome = o.read(1),
                        t.chromaSubsamplingX = o.read(1),
                        t.chromaSubsamplingY = o.read(1),
                        t.chromaSamplePosition = o.read(2),
                        t.reserved = o.read(3),
                        t.initialPresentationDelayPresent = o.read(1),
                        t.initialPresentationDelayPresent ? t.initialPresentationDelayMinusOne = o.read(4) : t.initialPresentationDelayMinusOne = 0,
                        t.configOBUs = r.readToUint8(),
                        2 === t.seqLevelIdx0 && 1 === t.highBitdepth ? i = 1 === t.twelveBit ? "12" : "10" : t.seqProfile <= 2 && (i = 1 === t.highBitdepth ? "10" : "08"),
                        t.codec = ["av01", t.seqProfile, (t.seqLevelIdx0 < 10 ? "0" + t.seqLevelIdx0 : t.seqLevelIdx0) + (t.seqTier0 ? "H" : "M"), i].join(".")
                    }
                    ))
                }
            }, {
                key: "avc1",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        var r = Js(t, n)
                          , o = n.subarray(r);
                        i += r,
                        t.avcC = e.avcC(e.findBox(o, ["avcC"], i)[0]),
                        t.pasp = e.pasp(e.findBox(o, ["pasp"], i)[0])
                    }
                    ))
                }
            }, {
                key: "avcC",
                value: function(e) {
                    return tl(e, !1, (function(t, n) {
                        t.data = e.data,
                        t.configurationVersion = n[0],
                        t.AVCProfileIndication = n[1],
                        t.profileCompatibility = n[2],
                        t.AVCLevelIndication = n[3],
                        t.codec = function(e) {
                            for (var t, n = "avc1.", i = 0; i < 3; i++)
                                (t = e[i].toString(16)).length < 2 && (t = "0".concat(t)),
                                n += t;
                            return n
                        }([n[1], n[2], n[3]]),
                        t.lengthSizeMinusOne = 3 & n[4],
                        t.spsLength = 31 & n[5],
                        t.sps = [];
                        for (var i = 6, r = 0; r < t.spsLength; r++) {
                            var o = Ds(n, i);
                            i += 2,
                            t.sps.push(n.subarray(i, i + o)),
                            i += o
                        }
                        t.ppsLength = n[i],
                        i += 1,
                        t.pps = [];
                        for (var a = 0; a < t.ppsLength; a++) {
                            var s = Ds(n, i);
                            i += 2,
                            t.pps.push(n.subarray(i, i += s)),
                            i += s
                        }
                    }
                    ))
                }
            }, {
                key: "hvc1",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        var r = Js(t, n)
                          , o = n.subarray(r);
                        i += r,
                        t.hvcC = e.hvcC(e.findBox(o, ["hvcC"], i)[0]),
                        t.pasp = e.pasp(e.findBox(o, ["pasp"], i)[0])
                    }
                    ))
                }
            }, {
                key: "hvcC",
                value: function(e) {
                    return tl(e, !1, (function(t, n) {
                        t.data = e.data,
                        t.codec = "hev1.1.6.L93.B0",
                        t.configurationVersion = n[0];
                        var i = n[1];
                        t.generalProfileSpace = i >> 6,
                        t.generalTierFlag = (32 & i) >> 5,
                        t.generalProfileIdc = 31 & i,
                        t.generalProfileCompatibility = Ls(n, 2),
                        t.generalConstraintIndicatorFlags = n.subarray(6, 12),
                        t.generalLevelIdc = n[12],
                        t.avgFrameRate = Ds(n, 19),
                        t.numOfArrays = n[22],
                        t.vps = [],
                        t.sps = [],
                        t.pps = [];
                        for (var r = 23, o = 0, a = 0, s = 0, l = 0; l < t.numOfArrays; l++) {
                            o = 63 & n[r],
                            a = Ds(n, r + 1),
                            r += 3;
                            for (var u, c = [], h = 0; h < a; h++)
                                s = Ds(n, r),
                                r += 2,
                                c.push(n.subarray(r, r + s)),
                                r += s;
                            if (32 === o)
                                (u = t.vps).push.apply(u, c);
                            else if (33 === o) {
                                var d;
                                (d = t.sps).push.apply(d, c)
                            } else if (34 === o) {
                                var f;
                                (f = t.pps).push.apply(f, c)
                            }
                        }
                    }
                    ))
                }
            }, {
                key: "pasp",
                value: function(e) {
                    return tl(e, !1, (function(e, t) {
                        e.hSpacing = Ls(t),
                        e.vSpacing = Ls(t, 4)
                    }
                    ))
                }
            }, {
                key: "mp4a",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        var r = el(t, n);
                        t.esds = e.esds(e.findBox(n.subarray(r), ["esds"], i + r)[0])
                    }
                    ))
                }
            }, {
                key: "esds",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        e.codec = "mp4a.";
                        for (var n = 0, i = 0, r = 0, o = 0; t.length; ) {
                            for (o = t[n = 0],
                            i = t[n + 1],
                            n += 2; 128 & i; )
                                r = (127 & i) << 7,
                                i = t[n],
                                n += 1;
                            if (r += 127 & i,
                            3 === o)
                                t = t.subarray(n + 3);
                            else {
                                if (4 !== o) {
                                    if (5 === o) {
                                        var a = e.config = t.subarray(n, n + r)
                                          , s = (248 & a[0]) >> 3;
                                        return 31 === s && a.length >= 2 && (s = 32 + ((7 & a[0]) << 3) + ((224 & a[1]) >> 5)),
                                        e.objectType = s,
                                        e.codec += s.toString(16),
                                        void ("." === e.codec[e.codec.length - 1] && (e.codec = e.codec.substring(0, e.codec.length - 1)))
                                    }
                                    return void ("." === e.codec[e.codec.length - 1] && (e.codec = e.codec.substring(0, e.codec.length - 1)))
                                }
                                e.codec += (t[n].toString(16) + ".").padStart(3, "0"),
                                t = t.subarray(n + 13)
                            }
                        }
                    }
                    ))
                }
            }, {
                key: "alaw",
                value: function(e) {
                    return tl(e, !1, (function(e, t) {
                        el(e, t)
                    }
                    ))
                }
            }, {
                key: "stts",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        for (var n = Ls(t), i = [], r = 4, o = 0; o < n; o++)
                            i.push({
                                count: Ls(t, r),
                                delta: Ls(t, r + 4)
                            }),
                            r += 8;
                        e.entryCount = n,
                        e.entries = i
                    }
                    ))
                }
            }, {
                key: "ctts",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        var n = Ls(t)
                          , i = []
                          , r = 4;
                        if (1 === e.version)
                            for (var o = 0; o < n; o++)
                                i.push({
                                    count: Ls(t, r),
                                    offset: Ls(t, r + 4)
                                }),
                                r += 8;
                        else
                            for (var a = 0; a < n; a++)
                                i.push({
                                    count: Ls(t, r),
                                    offset: -(1 + ~Ls(t, r + 4))
                                }),
                                r += 8;
                        e.entryCount = n,
                        e.entries = i
                    }
                    ))
                }
            }, {
                key: "stsc",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        for (var n = Ls(t), i = new Array(n), r = 4, o = 0; o < n; o++)
                            i[o] = {
                                firstChunk: Ls(t, r),
                                samplesPerChunk: Ls(t, r + 4),
                                sampleDescriptionIndex: Ls(t, r + 8)
                            },
                            r += 12;
                        e.entryCount = n,
                        e.entries = i
                    }
                    ))
                }
            }, {
                key: "stsz",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        var n = Ls(t)
                          , i = Ls(t, 4)
                          , r = new Array(i);
                        if (!n)
                            for (var o = 8, a = 0; a < i; a++)
                                r[a] = Ls(t, o),
                                o += 4;
                        e.sampleSize = n,
                        e.sampleCount = i,
                        e.entrySizes = r
                    }
                    ))
                }
            }, {
                key: "stco",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        for (var n = Ls(t), i = new Array(n), r = 4, o = 0; o < n; o++)
                            i[o] = Ls(t, r),
                            r += 4;
                        e.entryCount = n,
                        e.entries = i
                    }
                    ))
                }
            }, {
                key: "co64",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        for (var n = Ls(t), i = new Array(n), r = 4, o = 0; o < n; o++)
                            i[o] = Os(t, r),
                            r += 8;
                        e.entryCount = n,
                        e.entries = i
                    }
                    ))
                }
            }, {
                key: "stss",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        for (var n = Ls(t), i = new Array(n), r = 4, o = 0; o < n; o++)
                            i[o] = Ls(t, r),
                            r += 4;
                        e.entryCount = n,
                        e.entries = i
                    }
                    ))
                }
            }, {
                key: "moof",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.mfhd = e.mfhd(e.findBox(n, ["mfhd"], i)[0]),
                        t.traf = e.findBox(n, ["traf"], i).map((function(t) {
                            return e.traf(t)
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "mfhd",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        e.sequenceNumber = Ls(t)
                    }
                    ))
                }
            }, {
                key: "traf",
                value: function(t) {
                    return tl(t, !1, (function(t, n, i) {
                        t.tfhd = e.tfhd(e.findBox(n, ["tfhd"], i)[0]),
                        t.tfdt = e.tfdt(e.findBox(n, ["tfdt"], i)[0]),
                        t.trun = e.trun(e.findBox(n, ["trun"], i)[0])
                    }
                    ))
                }
            }, {
                key: "trun",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        var n = e.version
                          , i = e.flags
                          , r = t.length
                          , o = e.sampleCount = Ls(t)
                          , a = 4;
                        if (r > a && 1 & i && (e.dataOffset = -(1 + ~Ls(t, a)),
                        a += 4),
                        r > a && 4 & i && (e.firstSampleFlags = Ls(t, a),
                        a += 4),
                        r > a) {
                            var s;
                            e.samples = new Array(o);
                            for (var l = 0; l < o; l++)
                                s = {},
                                256 & i && (s.duration = Ls(t, a),
                                a += 4),
                                512 & i && (s.size = Ls(t, a),
                                a += 4),
                                1024 & i && (s.flags = Ls(t, a),
                                a += 4),
                                2048 & i && (s.cts = n ? -(1 + ~Ls(t, a + 4)) : Ls(t, a),
                                a += 4),
                                e.samples[l] = s
                        }
                    }
                    ))
                }
            }, {
                key: "tfdt",
                value: function(e) {
                    return tl(e, !0, (function(e, t) {
                        1 === e.version ? e.baseMediaDecodeTime = Os(t) : e.baseMediaDecodeTime = Ls(t)
                    }
                    ))
                }
            }, {
                key: "probe",
                value: function(t) {
                    return !!e.findBox(t, ["ftyp"])
                }
            }, {
                key: "parseSampleFlags",
                value: function(e) {
                    return {
                        isLeading: (12 & e[0]) >>> 2,
                        dependsOn: 3 & e[0],
                        isDependedOn: (192 & e[1]) >>> 6,
                        hasRedundancy: (48 & e[1]) >>> 4,
                        paddingValue: (14 & e[1]) >>> 1,
                        isNonSyncSample: 1 & e[1],
                        degradationPriority: e[2] << 8 | e[3]
                    }
                }
            }, {
                key: "moovToTrack",
                value: function(e, t, n) {
                    var i, r, o = e.trak;
                    if (o && o.length) {
                        var a = o.find((function(e) {
                            var t, n;
                            return "vide" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                        }
                        ))
                          , s = o.find((function(e) {
                            var t, n;
                            return "soun" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                        }
                        ));
                        if (a && t) {
                            var l, u, c, h, d, f, p, g, m = t;
                            null != (null === (l = a.tkhd) || void 0 === l ? void 0 : l.trackId) && (m.id = a.tkhd.trackId),
                            m.tkhdDuration = a.tkhd.duration,
                            m.mvhdDurtion = e.mvhd.duration,
                            m.mvhdTimecale = e.mvhd.timescale,
                            m.timescale = m.formatTimescale = a.mdia.mdhd.timescale,
                            m.duration = a.mdia.mdhd.duration || m.mvhdDurtion / m.mvhdTimecale * m.timescale,
                            m.rotation = a.tkhd.rotation,
                            m.matrix = a.tkhd.matrix,
                            null !== (u = a.edts) && void 0 !== u && u.elst && (m.editList = a.edts.elst,
                            m.editListApplied = a.editListApplied);
                            var v, y, _, T, b, S, w, k, C = a.mdia.minf.stbl.stsd.entries[0];
                            if (m.width = C.width,
                            m.height = C.height,
                            C.pasp && (m.sarRatio = [C.pasp.hSpacing, C.pasp.vSpacing]),
                            C.av1C)
                                m.codecType = "av1",
                                m.codec = C.av1C.codec,
                                m.av1C = C.av1C.data,
                                m.colr = C.colr.data;
                            else if (C.hvcC)
                                m.codecType = Ks,
                                m.codec = C.hvcC.codec,
                                m.vps = C.hvcC.vps,
                                m.sps = C.hvcC.sps,
                                m.pps = C.hvcC.pps,
                                m.hvcC = C.hvcC.data;
                            else if (C.avcC)
                                m.codec = C.avcC.codec,
                                m.sps = C.avcC.sps,
                                m.pps = C.avcC.pps;
                            else {
                                if (!C.vvcC)
                                    throw new Error("unknown video stsd entry");
                                m.codecType = Qs,
                                m.codec = C.vvcC.codec,
                                m.sps = C.vvcC.sps,
                                m.pps = C.vvcC.pps,
                                m.vps = C.vvcC.vps,
                                m.vvcC = C.vvcC.data
                            }
                            m.present = !0,
                            m.ext = {},
                            m.ext.stss = null === (c = a.mdia) || void 0 === c || null === (h = c.minf) || void 0 === h || null === (d = h.stbl) || void 0 === d ? void 0 : d.stss,
                            m.ext.ctts = null === (f = a.mdia) || void 0 === f || null === (p = f.minf) || void 0 === p || null === (g = p.stbl) || void 0 === g ? void 0 : g.ctts,
                            C && "encv" === C.type && (m.isVideoEncryption = !0,
                            C.default_KID = null === (v = C.sinf) || void 0 === v || null === (y = v.schi) || void 0 === y ? void 0 : y.tenc.default_KID,
                            C.default_IsEncrypted = null === (_ = C.sinf) || void 0 === _ || null === (T = _.schi) || void 0 === T ? void 0 : T.tenc.default_IsEncrypted,
                            C.default_IV_size = null === (b = C.sinf) || void 0 === b || null === (S = b.schi) || void 0 === S ? void 0 : S.tenc.default_IV_size,
                            m.videoSenc = a.mdia.minf.stbl.senc && a.mdia.minf.stbl.senc.samples,
                            C.data_format = null === (w = C.sinf) || void 0 === w || null === (k = w.frma) || void 0 === k ? void 0 : k.data_format,
                            m.useEME = e.useEME,
                            m.kidValue = e.kidValue,
                            m.pssh = e.pssh,
                            m.encv = C)
                        }
                        if (s && n) {
                            var M, P, R, x, E, D, L, I, O, A, G = n;
                            null != (null === (M = s.tkhd) || void 0 === M ? void 0 : M.trackId) && (G.id = s.tkhd.trackId),
                            G.tkhdDuration = s.tkhd.duration,
                            G.mvhdDurtion = e.mvhd.duration,
                            G.mvhdTimecale = e.mvhd.timescale,
                            G.timescale = G.formatTimescale = s.mdia.mdhd.timescale,
                            G.duration = s.mdia.mdhd.duration || G.mvhdDurtion / G.mvhdTimecale * G.timescale,
                            null !== (P = s.edts) && void 0 !== P && P.elst && (G.editList = s.edts.elst,
                            G.editListApplied = s.editListApplied);
                            var N, B, $, F, H, U, V, j, z = s.mdia.minf.stbl.stsd.entries[0];
                            switch (G.sampleSize = z.sampleSize,
                            G.sampleRate = z.sampleRate,
                            G.channelCount = z.channelCount,
                            G.present = !0,
                            z.type) {
                            case "alaw":
                                G.codecType = G.codec = "g7110a",
                                G.sampleRate = 8e3;
                                break;
                            case "ulaw":
                                G.codecType = G.codec = "g7110m",
                                G.sampleRate = 8e3;
                                break;
                            default:
                                G.sampleDuration = Us.getFrameDuration(G.sampleRate, G.timescale),
                                G.sampleRateIndex = Us.getRateIndexByRate(G.sampleRate),
                                G.objectType = (null === (i = z.esds) || void 0 === i ? void 0 : i.objectType) || 2,
                                z.esds && (G.config = Array.from(z.esds.config)),
                                G.codec = (null === (r = z.esds) || void 0 === r ? void 0 : r.codec) || "mp4a.40.2"
                            }
                            G.sampleDuration = Us.getFrameDuration(G.sampleRate, G.timescale),
                            G.objectType = (null === (R = z.esds) || void 0 === R ? void 0 : R.objectType) || 2,
                            z.esds && (z.esds.config ? G.config = Array.from(z.esds.config) : console.warn("esds config is null")),
                            G.codec = (null === (x = z.esds) || void 0 === x ? void 0 : x.codec) || "mp4a.40.2",
                            G.sampleRateIndex = Us.getRateIndexByRate(G.sampleRate),
                            G.ext = {},
                            G.ext.stss = null === (E = s.mdia) || void 0 === E || null === (D = E.minf) || void 0 === D || null === (L = D.stbl) || void 0 === L ? void 0 : L.stss,
                            G.ext.ctts = null === (I = s.mdia) || void 0 === I || null === (O = I.minf) || void 0 === O || null === (A = O.stbl) || void 0 === A ? void 0 : A.ctts,
                            G.present = !0,
                            z && "enca" === z.type && (G.isAudioEncryption = !0,
                            z.data_format = null === (N = z.sinf) || void 0 === N || null === (B = N.frma) || void 0 === B ? void 0 : B.data_format,
                            z.default_KID = null === ($ = z.sinf) || void 0 === $ || null === (F = $.schi) || void 0 === F ? void 0 : F.tenc.default_KID,
                            z.default_IsEncrypted = null === (H = z.sinf) || void 0 === H || null === (U = H.schi) || void 0 === U ? void 0 : U.tenc.default_IsEncrypted,
                            z.default_IV_size = null === (V = z.sinf) || void 0 === V || null === (j = V.schi) || void 0 === j ? void 0 : j.tenc.default_IV_size,
                            G.audioSenc = s.mdia.minf.stbl.senc && s.mdia.minf.stbl.senc.samples,
                            G.useEME = e.useEME,
                            G.kidValue = e.kidValue,
                            G.enca = z)
                        }
                        if (n && (n.isVideoEncryption = !!t && t.isVideoEncryption),
                        t && (t.isAudioEncryption = !!n && n.isAudioEncryption),
                        null != t && t.encv || null != n && n.enca) {
                            var X, K, Q = null == t || null === (X = t.encv) || void 0 === X ? void 0 : X.default_KID, W = null == n || null === (K = n.enca) || void 0 === K ? void 0 : K.default_KID, q = Q || W ? (Q || W).join("") : null;
                            t && (t.kid = q),
                            n && (n.kid = q)
                        }
                        return t && (t.flags = 3841),
                        n && (n.flags = 1793),
                        {
                            videoTrack: t,
                            audioTrack: n
                        }
                    }
                }
            }, {
                key: "evaluateDefaultDuration",
                value: function(e, t, n) {
                    var i, r = null == t || null === (i = t.samples) || void 0 === i ? void 0 : i.length;
                    return r ? 1024 * r / t.timescale * e.timescale / n : 1024
                }
            }, {
                key: "moofToSamples",
                value: function(t, n, i) {
                    var r = {};
                    return t.mfhd && (n && (n.sequenceNumber = t.mfhd.sequenceNumber),
                    i && (i.sequenceNumber = t.mfhd.sequenceNumber)),
                    t.traf.forEach((function(t) {
                        var o = t.tfhd
                          , a = t.tfdt
                          , s = t.trun;
                        if (o && s) {
                            a && (n && n.id === o.trackId && (n.baseMediaDecodeTime = a.baseMediaDecodeTime),
                            i && i.id === o.trackId && (i.baseMediaDecodeTime = a.baseMediaDecodeTime));
                            var l = o.defaultSampleSize || 0
                              , u = o.defaultSampleDuration || e.evaluateDefaultDuration(n, i, s.samples.length || s.sampleCount)
                              , c = s.dataOffset || 0
                              , h = 0
                              , d = -1;
                            if (!s.samples.length && s.sampleCount) {
                                r[o.trackId] = new Array(s.sampleCount);
                                for (var f = 0; f < s.sampleCount; f++)
                                    r[o.trackId][f] = {
                                        offset: c,
                                        dts: h,
                                        duration: u,
                                        size: l
                                    },
                                    h += u,
                                    c += l
                            } else
                                r[o.trackId] = s.samples.map((function(e, t) {
                                    return (e = {
                                        offset: c,
                                        dts: h,
                                        pts: h + (e.cts || 0),
                                        duration: e.duration || u,
                                        size: e.size || l,
                                        gopId: d,
                                        keyframe: 0 === t || null !== e.flags && void 0 !== e.flags && (65536 & e.flags) >>> 0 != 65536
                                    }).keyframe && (d++,
                                    e.gopId = d),
                                    h += e.duration,
                                    c += e.size,
                                    e
                                }
                                ))
                        }
                    }
                    )),
                    r
                }
            }, {
                key: "moovToSamples",
                value: function(e) {
                    var t = e.trak;
                    if (t && t.length) {
                        var n = t.find((function(e) {
                            var t, n;
                            return "vide" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                        }
                        ))
                          , i = t.find((function(e) {
                            var t, n;
                            return "soun" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                        }
                        ));
                        if (n || i) {
                            var r, o;
                            if (n) {
                                var a, s, l = null === (a = n.mdia) || void 0 === a || null === (s = a.minf) || void 0 === s ? void 0 : s.stbl;
                                if (!l)
                                    return;
                                var u = l.stts
                                  , c = l.stsc
                                  , h = l.stsz
                                  , d = l.stco
                                  , f = l.stss
                                  , p = l.ctts;
                                if (!(u && c && h && d && f))
                                    return;
                                r = Ys(u, c, h, d, p, f)
                            }
                            if (i) {
                                var g, m, v, y = null === (g = i.mdia) || void 0 === g || null === (m = g.minf) || void 0 === m ? void 0 : m.stbl;
                                if (!y)
                                    return;
                                var _ = null === (v = i.mdia.mdhd) || void 0 === v ? void 0 : v.timescale
                                  , T = y.stts
                                  , b = y.stsc
                                  , S = y.stsz
                                  , w = y.stco;
                                if (!(_ && T && b && S && w))
                                    return;
                                o = Ys(T, b, S, w)
                            }
                            return {
                                videoSamples: r,
                                audioSamples: o
                            }
                        }
                    }
                }
            }])
        }();
        function Ys(e, t, n, i, r, o) {
            var a, s, l, u = [], c = null == r ? void 0 : r.entries, h = t.entries, d = i.entries, f = n.entrySizes, p = null == o ? void 0 : o.entries;
            p && (a = {},
            p.forEach((function(e) {
                a[e - 1] = !0
            }
            ))),
            c && (s = [],
            c.forEach((function(e) {
                for (var t = e.count, n = e.offset, i = 0; i < t; i++)
                    s.push(n)
            }
            )));
            var g = -1
              , m = 0
              , v = 0
              , y = 0
              , _ = 0
              , T = 0
              , b = h[0].samplesPerChunk
              , S = h[1] ? h[1].firstChunk - 1 : 1 / 0;
            return e.entries.forEach((function(e) {
                for (var t = e.count, i = e.delta, r = 0; r < t; r++)
                    l = {
                        dts: m,
                        duration: i,
                        size: f[v] || n.sampleSize,
                        offset: d[y] + T,
                        index: v
                    },
                    p && (l.keyframe = a[v],
                    l.keyframe && g++,
                    l.gopId = g),
                    s && v < s.length && (l.pts = l.dts + s[v]),
                    u.push(l),
                    m += i,
                    ++v < b ? T += l.size : (y++,
                    T = 0,
                    y >= S && (_++,
                    S = h[_ + 1] ? h[_ + 1].firstChunk - 1 : 1 / 0),
                    b += h[_].samplesPerChunk)
            }
            )),
            u
        }
        function Js(e, t) {
            return e.dataReferenceIndex = Ds(t, 6),
            e.width = Ds(t, 24),
            e.height = Ds(t, 26),
            e.horizresolution = Ls(t, 28),
            e.vertresolution = Ls(t, 32),
            e.frameCount = Ds(t, 40),
            e.depth = Ds(t, 74),
            78
        }
        function el(e, t) {
            return e.dataReferenceIndex = Ds(t, 6),
            e.channelCount = Ds(t, 16),
            e.sampleSize = Ds(t, 18),
            e.sampleRate = Ls(t, 24) / 65536,
            28
        }
        function tl(e, t, n) {
            if (e) {
                if (e.size !== e.data.length)
                    throw new Error("box ".concat(e.type, " size !== data.length"));
                var i = {
                    start: e.start,
                    size: e.size,
                    headerSize: e.headerSize,
                    type: e.type
                };
                return t && (i.version = e.data[e.headerSize],
                i.flags = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return (e[t] << 16) + (e[t + 1] << 8) + (e[t + 2] || 0)
                }(e.data, e.headerSize + 1),
                i.headerSize += 4),
                n(i, e.data.subarray(i.headerSize), i.start + i.headerSize),
                i
            }
        }
        var nl = function() {
            for (var e = [], t = arguments.length, n = new Array(t), i = 0; i < t; i++)
                n[i] = arguments[i];
            return n.forEach((function(t) {
                e.push(function(e) {
                    for (var t = String(0), n = Math.ceil(2 / t.length), i = [], r = String(e); n--; )
                        i.push(t);
                    return i.join("").substring(0, 2 - r.length) + r
                }(Number(t).toString(16)))
            }
            )),
            e[0]
        }
          , il = Ha((function e(t, n) {
            $a(this, e),
            this.type = "file",
            this.message = t,
            this.data = n
        }
        ))
          , rl = function() {
            return Ha((function e() {
                $a(this, e),
                Ua(this, "_data", Object.create(null))
            }
            ), [{
                key: "set",
                value: function(e, t) {
                    this._data[e] = t
                }
            }, {
                key: "get",
                value: function(e) {
                    return this._data[e]
                }
            }, {
                key: "clear",
                value: function() {
                    this._data = Object.create(null)
                }
            }])
        }()
          , ol = function() {
            return Ha((function e() {
                $a(this, e),
                this.frames = [],
                this.dur = 0,
                this.minPts = Number.MAX_VALUE,
                this.maxPts = 0
            }
            ), [{
                key: "appendFrame",
                value: function(e) {
                    this.frames.push(e),
                    this.dur += e.duration
                }
            }, {
                key: "calMinMaxPts",
                value: function(e) {
                    e.pts < this.minPts && (this.minPts = e.pts);
                    var t = e.pts + e.duration;
                    t > this.maxPts && (this.maxPts = t)
                }
            }])
        }();
        function al(e, t) {
            var n = e.trak;
            if (n && n.length) {
                var i = n.find((function(e) {
                    var t, n;
                    return "vide" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                }
                ))
                  , r = n.find((function(e) {
                    var t, n;
                    return "soun" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                }
                ));
                if (i || r) {
                    var o = []
                      , a = [];
                    if (t) {
                        var s = []
                          , l = 0
                          , u = t.start + t.size;
                        t.references.forEach((function(e, n) {
                            s.push({
                                index: n,
                                startTime: l,
                                endTime: l + e.subsegment_duration / t.timescale,
                                duration: e.subsegment_duration / t.timescale,
                                range: [u, u + e.referenced_size],
                                frames: []
                            }),
                            l += e.subsegment_duration / t.timescale,
                            u += e.referenced_size
                        }
                        )),
                        o = s,
                        a = s
                    } else {
                        var c, h, d = function(t) {
                            return t ? [{
                                index: 0,
                                startTime: 0,
                                endTime: t.duration / t.timescale,
                                duration: t.duration / t.timescale,
                                range: [e.start + e.size, ""],
                                frames: []
                            }] : []
                        };
                        a = d(e.mvhd.duration ? e.mvhd : null === (c = i.mdia) || void 0 === c ? void 0 : c.mdhd),
                        o = d(e.mvhd.duration ? e.mvhd : null === (h = r.mdia) || void 0 === h ? void 0 : h.mdhd)
                    }
                    return {
                        videoSegments: a,
                        audioSegments: o
                    }
                }
            }
        }
        function sl(e, t) {
            var n = t.segmentDuration
              , i = e.trak;
            if (i && i.length) {
                var r = i.find((function(e) {
                    var t, n;
                    return "vide" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                }
                ))
                  , o = i.find((function(e) {
                    var t, n;
                    return "soun" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                }
                ));
                if (r || o) {
                    var a, s = [], l = [];
                    return r && (a = (s = ll("video", r, n, t)).map((function(e) {
                        return e.duration
                    }
                    ))),
                    o && (l = ll("audio", o, n, t, a, s)),
                    {
                        videoSegments: s,
                        audioSegments: l
                    }
                }
            }
        }
        function ll(e, t, n, i) {
            var r, o, a, s, l, u = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [], c = arguments.length > 5 ? arguments[5] : void 0, h = i.fixEditListOffset, d = i.fixEditListOffsetThreshold, f = i.audioGroupingStrategy, p = i.memoryOpt, g = null === (r = t.mdia) || void 0 === r || null === (o = r.minf) || void 0 === o ? void 0 : o.stbl;
            if (!g)
                return [];
            var m = null === (a = t.mdia.mdhd) || void 0 === a ? void 0 : a.timescale
              , v = g.stts
              , y = g.stsc
              , _ = g.stsz
              , T = g.stco
              , b = g.stss
              , S = g.ctts;
            if (!(m && v && y && _ && T) || "video" === e && !b)
                return [];
            var w = 0
              , k = null === (s = t.edts) || void 0 === s || null === (l = s.elst) || void 0 === l ? void 0 : l.entries;
            if (h && function() {
                var e = !0
                  , t = navigator.userAgent || "";
                if (/Chrome/gi.test(t) && !/Edge\//gi.test(t)) {
                    var n = t.match(/Chrome\/(\d+)/i)
                      , i = n ? parseInt(n[1], 10) : 0;
                    e = !!i && i >= 75
                }
                return e
            }() && Array.isArray(k) && k.length > 0) {
                var C = k[0].media_time;
                C > 0 && C < (d ? d * m : 5 * m) && (w = C)
            }
            var M, P, R = [], x = [], E = [], D = [], L = [], I = y.entries, O = T.entries, A = _.entrySizes, G = null == b ? void 0 : b.entries, N = null == S ? void 0 : S.entries, B = [], $ = {};
            p || (N && N.forEach((function(e) {
                for (var t = e.count, n = e.offset, i = 0; i < t; i++)
                    B.push(n)
            }
            )),
            G && G.forEach((function(e) {
                $[e - 1] = !0
            }
            )));
            var F, H = 0, U = 0, V = 0, j = 0, z = I.length > 0 ? I[0].samplesPerChunk : 0, X = I.length > 1 && I[1] ? I[1].firstChunk - 1 : 1 / 0, K = 0, Q = -1, W = !1, q = {};
            (null == N ? void 0 : N.length) > 0 && w > 0 && (K -= w,
            W = !0),
            t.editListApplied = W,
            p && (F = null == G ? void 0 : G.shift()),
            v.entries.forEach((function(e) {
                var t = e.count
                  , n = e.delta;
                P = n;
                for (var i = 0; i < t; i++) {
                    if (M = {
                        dts: K,
                        duration: P,
                        size: A[H] || _.sampleSize,
                        offset: O[U] + j,
                        index: H
                    },
                    N && (p ? (ul(N, H, q),
                    M.pts = K + ((null == q ? void 0 : q.offset) || 0)) : B && H < B.length && (M.pts = K + B[H])),
                    0 === w && 0 === H && (M.pts = 0),
                    void 0 === M.pts && (M.pts = M.dts),
                    G) {
                        if (p ? H + 1 === F && (M.keyframe = !0,
                        F = G.shift()) : M.keyframe = $[H],
                        M.keyframe)
                            if (Q++,
                            p) {
                                var r = new ol;
                                r.appendFrame(M),
                                x.push(r)
                            } else
                                x.push([M]),
                                E.push(M.duration);
                        else
                            p ? x[x.length - 1].appendFrame(M) : (x[x.length - 1].push(M),
                            E[x.length - 1] += M.duration);
                        M.gopId = Q,
                        p && x[x.length - 1].calMinMaxPts(M)
                    }
                    if (!p)
                        if (M.keyframe ? D[D.length] = M.pts : M.pts < D[x.length - 1] && (D[x.length - 1] = M.pts),
                        M.keyframe)
                            L[L.length] = M.index;
                        else if (x.length > 0 && void 0 !== L[x.length - 1]) {
                            var o, a = null === (o = R[L[x.length - 1]]) || void 0 === o ? void 0 : o.pts;
                            void 0 !== a && M.pts > a && (L[x.length - 1] = M.index)
                        }
                    R[R.length] = M,
                    K += n,
                    ++H < z ? j += M.size : (U++,
                    j = 0,
                    U >= X && (V++,
                    X = I[V + 1] ? I[V + 1].firstChunk - 1 : 1 / 0),
                    z += I[V].samplesPerChunk)
                }
            }
            ));
            var Z = R.length;
            if (!Z || b && !R[0].keyframe)
                return [];
            var Y, J, ee = [], te = [], ne = 0, ie = 0, re = 0, oe = 0, ae = function(e, t, n) {
                Y = te[te.length - 1],
                p ? (re = (null == x ? void 0 : x.length) > 0 ? x[t].minPts : te[0].pts,
                oe = (null == x ? void 0 : x.length) > 0 ? x[n].maxPts : Y.pts + Y.duration) : (re = D[t],
                J = R[L[n]],
                oe = J.pts + J.duration),
                0 === ee.length && (e = (oe - re) / m),
                ee.push({
                    index: ee.length,
                    startTime: re / m,
                    endTime: oe / m,
                    duration: e,
                    range: [te[0].offset, Y.offset + Y.size - 1],
                    frames: te
                }),
                1 !== f && (ne = 0),
                te = []
            }, se = 0;
            if (b)
                for (var le = n * m, ue = 0, ce = x.length; ue < ce; ue++) {
                    var he, de;
                    p ? (ne += x[ue].dur,
                    (he = te).push.apply(he, qa(x[ue].frames))) : (ne += E[ue],
                    (de = te).push.apply(de, qa(x[ue]))),
                    ue + 1 < ce ? (0 === ue || ne > le) && (ae(ne / m, se, ue),
                    ne = 0,
                    se = ue + 1) : (ae(ne / m, se, ue),
                    ne = 0,
                    se = ue + 1)
                }
            else {
                p || (D = [],
                L = []);
                var fe = u[0] || n;
                if (1 === f)
                    for (var pe, ge = 0; ge < Z; ge++) {
                        var me = R[ge]
                          , ve = R[ge + 1]
                          , ye = ge === Z - 1;
                        te.push(me),
                        ne += me.duration;
                        var _e = pe || ne / m;
                        pe = (ve ? ne + ve.duration : 0) / m,
                        (ye || (c[ee.length] ? pe > c[ee.length].endTime : pe - te[0].pts / m >= fe)) && (p || (D.push(te[0].pts),
                        L.push(te[te.length - 1].index)),
                        ae(_e, ee.length, ee.length),
                        fe = u[ee.length] || n)
                    }
                else
                    for (var Te, be = 0; be < Z; be++) {
                        var Se = R[be]
                          , we = R[be + 1]
                          , ke = be === Z - 1;
                        te.push(Se),
                        ne += Se.duration;
                        var Ce = Te || ne / m;
                        Te = (we ? ne + we.duration : 0) / m,
                        (ke || Te + ie >= fe) && (ie += 2 === f ? ne / m - fe : Te - fe,
                        p || (D.push(te[0].pts),
                        L.push(te[te.length - 1].index)),
                        ae(Ce, ee.length, ee.length),
                        fe = u[ee.length] || n)
                    }
            }
            return ee
        }
        function ul(e, t, n) {
            n.offset = 0;
            var i = (null == n ? void 0 : n.beforeFrameNum) || 0
              , r = (null == n ? void 0 : n.usedCttsIdx) || 0;
            if (!e || (null == e ? void 0 : e.length) <= 0 || (null == n ? void 0 : n.usedCttsIdx) >= e.length)
                n.offset = 0,
                n.usedCttsIdx = r,
                n.beforeFrameNum = i;
            else {
                var o = e[r];
                if (t < i + ((null == o ? void 0 : o.count) || 1))
                    n.offset = (null == o ? void 0 : o.offset) || 0;
                else {
                    var a = e[++r];
                    a ? (n.offset = a.offset || 0,
                    n.beforeFrameNum = i + o.count) : (n.offset = 0,
                    n.beforeFrameNum = i + 1),
                    n.usedCttsIdx = r
                }
            }
        }
        function cl(e, t) {
            var n = ""
              , i = ""
              , r = 0
              , o = 0
              , a = 0
              , s = 0
              , l = 0
              , u = 0
              , c = 0;
            e.mvhd && (l = e.mvhd.duration / e.mvhd.timescale);
            var h = e.trak;
            if (h) {
                var d, f, p, g, m, v, y, _, T, b, S, w, k, C, M, P, R, x = h.find((function(e) {
                    var t, n;
                    return "vide" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                }
                )), E = h.find((function(e) {
                    var t, n;
                    return "soun" === (null === (t = e.mdia) || void 0 === t || null === (n = t.hdlr) || void 0 === n ? void 0 : n.handlerType)
                }
                )), D = null;
                return x && (D = null === (f = x.mdia) || void 0 === f || null === (p = f.minf) || void 0 === p || null === (g = p.stbl) || void 0 === g ? void 0 : g.stsd.entries[0]) && (r = D.width,
                o = D.height,
                u = null === (m = x.mdia) || void 0 === m || null === (v = m.mdhd) || void 0 === v ? void 0 : v.timescale,
                n = null === (y = D.avcC || D.hvcC || D.av1C || D.vvcC) || void 0 === y ? void 0 : y.codec,
                "encv" === D.type && (d = null === (_ = D.sinf) || void 0 === _ || null === (T = _.schi) || void 0 === T ? void 0 : T.tenc.default_KID)),
                E && (D = null === (b = E.mdia) || void 0 === b || null === (S = b.minf) || void 0 === S || null === (w = S.stbl) || void 0 === w ? void 0 : w.stsd.entries[0]) && (a = D.channelCount,
                s = D.sampleRate,
                i = null === (k = D.esds) || void 0 === k ? void 0 : k.codec,
                c = null === (C = E.mdia) || void 0 === C || null === (M = C.mdhd) || void 0 === M ? void 0 : M.timescale,
                "enca" === D.type && (d = d || (null === (P = D.sinf) || void 0 === P || null === (R = P.schi) || void 0 === R ? void 0 : R.tenc.default_KID))),
                {
                    kid: d ? d.join("") : null,
                    videoCodec: n,
                    audioCodec: i,
                    width: r,
                    height: o,
                    videoTimescale: u,
                    audioChannelCount: a,
                    audioSampleRate: s,
                    duration: l,
                    audioTimescale: c,
                    moov: e,
                    isFragmentMP4: t
                }
            }
        }
        function hl(e) {
            return "number" == typeof e && !Number.isNaN(e)
        }
        function dl(e) {
            if (!e)
                return !1;
            var t = e.audioSegments
              , n = e.videoSegments
              , i = !n || 0 === n.length
              , r = !t || 0 === t.length;
            return !i || !r
        }
        var fl = ["vid", "cache"]
          , pl = function(e) {
            function t(e) {
                var n, i;
                $a(this, t),
                Ua(n = Ba(this, t), "vid", ""),
                Ua(n, "url", ""),
                Ua(n, "meta", {}),
                Ua(n, "downloadInfo", []),
                Ua(n, "videoSegments", []),
                Ua(n, "audioSegments", []),
                Ua(n, "cache", null),
                Ua(n, "_currentSegmentIndex", -1),
                Ua(n, "_currentLoadingSegmentIndex", -1),
                Ua(n, "buffer", void 0),
                Ua(n, "bufferDataLen", 0),
                Ua(n, "_error", void 0),
                Ua(n, "_transformError", (function(e) {
                    return e
                }
                )),
                n._config = ("boolean" != typeof (i = e).fixEditListOffset && delete i.fixEditListOffset,
                Xa({
                    vid: "",
                    moovEnd: 8e4,
                    segmentDuration: 2,
                    maxDownloadInfoSize: 30,
                    responseType: "arraybuffer",
                    fixEditListOffset: !0,
                    cache: null
                }, i));
                var r = n._config
                  , o = r.vid
                  , a = r.cache
                  , s = function(e, t) {
                    if (null == e)
                        return {};
                    var n, i, r = function(e, t) {
                        if (null == e)
                            return {};
                        var n = {};
                        for (var i in e)
                            if ({}.hasOwnProperty.call(e, i)) {
                                if (t.includes(i))
                                    continue;
                                n[i] = e[i]
                            }
                        return n
                    }(e, t);
                    if (Object.getOwnPropertySymbols) {
                        var o = Object.getOwnPropertySymbols(e);
                        for (i = 0; i < o.length; i++)
                            n = o[i],
                            t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (r[n] = e[n])
                    }
                    return r
                }(r, fl);
                return n.cache = a || new rl,
                n.vid = o || s.url,
                n.url = s.url,
                s.transformError = n._transformError,
                n.logger = new Po("MP4Loader_" + n.vid),
                e.openLog && Po.enable(),
                s.logger = n.logger,
                n._loader = new Ts(s),
                n._loader.on(cs, (function(e) {
                    n.emit(cs, e)
                }
                )),
                n
            }
            return function(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }),
                Object.defineProperty(e, "prototype", {
                    writable: !1
                }),
                t && Wa(e, t)
            }(t, e),
            Ha(t, [{
                key: "isMetaLoaded",
                get: function() {
                    return this.videoSegments.length || this.audioSegments.length
                }
            }, {
                key: "setCurrentSegment",
                value: function(e) {
                    hl(e) && (this._currentSegmentIndex = e)
                }
            }, {
                key: "isLastSegment",
                value: function(e) {
                    var t, n;
                    return !!hl(e) && e >= ((null === (t = this.videoSegments[this.videoSegments.length - 1]) || void 0 === t ? void 0 : t.index) || (null === (n = this.audioSegments[this.audioSegments.length - 1]) || void 0 === n ? void 0 : n.index) || 0)
                }
            }, {
                key: "isSegmentLoading",
                value: function(e) {
                    return e === this._currentLoadingSegmentIndex
                }
            }, {
                key: "changeUrl",
                value: (d = Na(Qa().mark((function e(t) {
                    var n, i, r, o = arguments;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return n = o.length > 1 && void 0 !== o[1] ? o[1] : t,
                                i = o.length > 2 ? o[2] : void 0,
                                r = o.length > 3 ? o[3] : void 0,
                                e.next = 5,
                                this.reset(r);
                            case 5:
                                t && (this.url = t),
                                n && (this.vid = n),
                                i && (this._config.moovEnd = i);
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e) {
                    return d.apply(this, arguments)
                }
                )
            }, {
                key: "getOrLoadMeta",
                value: (h = Na(Qa().mark((function e(t) {
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (this.isMetaLoaded) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3,
                                this.loadMeta(t);
                            case 3:
                                return e.abrupt("return", this.meta);
                            case 4:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e) {
                    return h.apply(this, arguments)
                }
                )
            }, {
                key: "newBufferArray",
                value: function(e, t) {
                    var n;
                    if (this.buffer) {
                        if (t || (null === (n = this.buffer) || void 0 === n ? void 0 : n.byteLength) < e) {
                            var i, r = this.buffer.subarray(0, this.bufferDataLen), o = ys(((null === (i = this.buffer) || void 0 === i ? void 0 : i.byteLength) || 0) + e);
                            o.set(r, 0),
                            delete this.buffer,
                            this.buffer = o
                        }
                    } else
                        this.buffer = ys(e),
                        this.bufferDataLen = 0
                }
            }, {
                key: "loadMetaProcess",
                value: (c = Na(Qa().mark((function e(t, n, i) {
                    var r, o, a, s, l, u, c = this, h = arguments;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (f = 2,
                                o = function(e) {
                                    if (Array.isArray(e))
                                        return e
                                }(d = n) || function(e, t) {
                                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                    if (null != n) {
                                        var i, r, o, a, s = [], l = !0, u = !1;
                                        try {
                                            if (o = (n = n.call(e)).next,
                                            0 === t) {
                                                if (Object(n) !== n)
                                                    return;
                                                l = !1
                                            } else
                                                for (; !(l = (i = o.call(n)).done) && (s.push(i.value),
                                                s.length !== t); l = !0)
                                                    ;
                                        } catch (e) {
                                            u = !0,
                                            r = e
                                        } finally {
                                            try {
                                                if (!l && null != n.return && (a = n.return(),
                                                Object(a) !== a))
                                                    return
                                            } finally {
                                                if (u)
                                                    throw r
                                            }
                                        }
                                        return s
                                    }
                                }(d, f) || Ya(d, f) || function() {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                }(),
                                a = o[0],
                                s = o[1],
                                l = h.length > 3 && void 0 !== h[3] ? h[3] : {},
                                this._error = !1,
                                this.logger.debug("[loadMetaProcess start], range,", [a, s]),
                                null !== (r = this._config) && void 0 !== r && r.memoryOpt && (!this.buffer || null != l && l.isExp))
                                    try {
                                        this.newBufferArray(s - a + 1, null == l ? void 0 : l.isExp)
                                    } catch (f) {
                                        i(null, !0, {}, new il(null == f ? void 0 : f.message), {})
                                    }
                                return u = function() {
                                    var e = Na(Qa().mark((function e(n, r, o, u) {
                                        var h, d, f, p, g, m, v, y, _, T, b, S, w, k, C, M;
                                        return Qa().wrap((function(e) {
                                            for (; ; )
                                                switch (e.prev = e.next) {
                                                case 0:
                                                    if (c.meta && null != o && o.range && o.range.length > 0 && o.range[1] >= s && (r = !0,
                                                    c.logger.debug("[loadMetaProcess],data done,setstate true,[", a, s, "]")),
                                                    r && null != o && o.range && o.range.length > 0 && o.range[1] < s && (r = !1,
                                                    c.logger.debug("[loadMetaProcess],data not done,setstate false,[", a, s, "]")),
                                                    c.logger.debug("[loadMetaProcess],task,[", a, s, "], range,", o.range, ",dataLen,", n ? n.byteLength : void 0, ", state,", r, ",err,", c._error),
                                                    !c._error && n && n.byteLength > 0 && i(n, r, o, null, u),
                                                    !c.meta.moov && !c._error) {
                                                        e.next = 6;
                                                        break
                                                    }
                                                    return e.abrupt("return");
                                                case 6:
                                                    if (!(n && n.byteLength > 0)) {
                                                        e.next = 59;
                                                        break
                                                    }
                                                    e.prev = 7,
                                                    null !== (d = c._config) && void 0 !== d && d.memoryOpt ? (c.buffer.set(n, c.bufferDataLen),
                                                    c.bufferDataLen += (null == n ? void 0 : n.byteLength) || 0,
                                                    h = c.buffer.subarray(0, c.bufferDataLen)) : (c.buffer = vs(c.buffer, n),
                                                    h = c.buffer),
                                                    e.next = 15;
                                                    break;
                                                case 11:
                                                    return e.prev = 11,
                                                    e.t0 = e.catch(7),
                                                    i(null, r, o, new il(null === e.t0 || void 0 === e.t0 ? void 0 : e.t0.message), u),
                                                    e.abrupt("return");
                                                case 15:
                                                    if (f = Zs.findBox(h, ["moov"])[0]) {
                                                        e.next = 30;
                                                        break
                                                    }
                                                    if (p = Zs.findBox(h, ["mdat"])[0],
                                                    !r) {
                                                        e.next = 30;
                                                        break
                                                    }
                                                    if (p) {
                                                        e.next = 25;
                                                        break
                                                    }
                                                    return c._error = !0,
                                                    i(null, r, o, new il("cannot find moov or mdat box"), u),
                                                    e.abrupt("return");
                                                case 25:
                                                    return g = p.start + p.size,
                                                    e.next = 28,
                                                    c.loadData([g, ""], t, l);
                                                case 28:
                                                    (m = e.sent) && (f = Zs.findBox(m.data, ["moov"])[0]);
                                                case 30:
                                                    if (!(f && r && f.size > f.data.length)) {
                                                        e.next = 34;
                                                        break
                                                    }
                                                    return c.logger.debug("[loadMetaProcess],moov not all, range,", o.range[1], ",dataLen,", c.bufferDataLen, ", state,", r),
                                                    e.next = 34,
                                                    c.loadMetaProcess(t, [o.range[1], f.start + f.size - 1], i, {
                                                        isExp: !0
                                                    });
                                                case 34:
                                                    if (!(f && f.size <= f.data.length) || c.meta.moov) {
                                                        e.next = 59;
                                                        break
                                                    }
                                                    if (y = Zs.moov(f)) {
                                                        e.next = 40;
                                                        break
                                                    }
                                                    return c._error = !0,
                                                    i(null, r, o, new il("cannot parse moov box"), u),
                                                    e.abrupt("return");
                                                case 40:
                                                    if (_ = sl(y, c._config),
                                                    T = function() {
                                                        var e = Na(Qa().mark((function e(n) {
                                                            var i, r;
                                                            return Qa().wrap((function(e) {
                                                                for (; ; )
                                                                    switch (e.prev = e.next) {
                                                                    case 0:
                                                                        if (!(i = Zs.findBox(c.buffer, [n])[0])) {
                                                                            e.next = 11;
                                                                            break
                                                                        }
                                                                        if (!(i.size > i.data.length)) {
                                                                            e.next = 10;
                                                                            break
                                                                        }
                                                                        return e.next = 5,
                                                                        c.loadData([i.start, i.start + i.size - 1], t, l);
                                                                    case 5:
                                                                        if (!(r = e.sent)) {
                                                                            e.next = 8;
                                                                            break
                                                                        }
                                                                        return e.abrupt("return", Zs.findBox(r.data, [n])[0]);
                                                                    case 8:
                                                                        e.next = 11;
                                                                        break;
                                                                    case 10:
                                                                        return e.abrupt("return", i);
                                                                    case 11:
                                                                    case "end":
                                                                        return e.stop()
                                                                    }
                                                            }
                                                            ), e)
                                                        }
                                                        )));
                                                        return function(t) {
                                                            return e.apply(this, arguments)
                                                        }
                                                    }(),
                                                    b = !1,
                                                    _ && _.videoSegments.length && _.audioSegments.length) {
                                                        e.next = 48;
                                                        break
                                                    }
                                                    return e.next = 46,
                                                    T("sidx");
                                                case 46:
                                                    (S = e.sent) && (w = Zs.sidx(S)) && (al(y, w),
                                                    Ka("segments"),
                                                    b = !0);
                                                case 48:
                                                    if (dl(_)) {
                                                        e.next = 52;
                                                        break
                                                    }
                                                    return c._error = !0,
                                                    i(null, r, o, new il("cannot parse segments"), u),
                                                    e.abrupt("return");
                                                case 52:
                                                    c.meta = cl(y, b),
                                                    C = (k = _).videoSegments,
                                                    M = k.audioSegments,
                                                    c.videoSegments = C,
                                                    c.audioSegments = M,
                                                    null !== (v = c._config) && void 0 !== v && v.memoryOpt && (delete c.buffer,
                                                    c.bufferDataLen = 0),
                                                    c.logger.debug("[loadMetaProcess] moov ok"),
                                                    i(void 0, r, {
                                                        meta: {
                                                            meta: c.meta,
                                                            videoSegments: C,
                                                            audioSegments: M
                                                        }
                                                    }, null, u);
                                                case 59:
                                                case "end":
                                                    return e.stop()
                                                }
                                        }
                                        ), e, null, [[7, 11]])
                                    }
                                    )));
                                    return function(t, n, i, r) {
                                        return e.apply(this, arguments)
                                    }
                                }(),
                                e.next = 8,
                                this.loadData([a, s || this._config.moovEnd], t, Xa({
                                    onProgress: u
                                }, l));
                            case 8:
                            case "end":
                                return e.stop()
                            }
                        var d, f
                    }
                    ), e, this)
                }
                ))),
                function(e, t, n) {
                    return c.apply(this, arguments)
                }
                )
            }, {
                key: "loadMeta",
                value: (u = Na(Qa().mark((function e(t, n) {
                    var i, r, o, a, s, l, u, c, h, d, f, p, g, m, v, y = arguments;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return i = y.length > 2 && void 0 !== y[2] ? y[2] : {},
                                r = [],
                                this.logger.debug("[loadMeta start]"),
                                e.next = 5,
                                this.loadData([0, n || this._config.moovEnd], t, i);
                            case 5:
                                if (o = e.sent) {
                                    e.next = 8;
                                    break
                                }
                                return e.abrupt("return");
                            case 8:
                                if (r.push(o),
                                a = Zs.findBox(o.data, ["moov"])[0]) {
                                    e.next = 24;
                                    break
                                }
                                if (s = Zs.findBox(o.data, ["mdat"])[0]) {
                                    e.next = 14;
                                    break
                                }
                                throw new il("cannot find moov or mdat box",o.data);
                            case 14:
                                return l = s.start + s.size,
                                e.next = 17,
                                this.loadData([l], t, i);
                            case 17:
                                if (o = e.sent) {
                                    e.next = 20;
                                    break
                                }
                                return e.abrupt("return");
                            case 20:
                                if (r.push(o),
                                a = Zs.findBox(o.data, ["moov"], l)[0]) {
                                    e.next = 24;
                                    break
                                }
                                throw new il("cannot find moov box",o.data);
                            case 24:
                                if (!(a.size > a.data.length)) {
                                    e.next = 32;
                                    break
                                }
                                return e.next = 27,
                                this.loadData([o.data.length, a.start + a.size - 1], t, i);
                            case 27:
                                if (o = e.sent) {
                                    e.next = 30;
                                    break
                                }
                                return e.abrupt("return");
                            case 30:
                                r.push(o),
                                a.data = vs(a.data, o.data);
                            case 32:
                                if (u = Zs.moov(a)) {
                                    e.next = 35;
                                    break
                                }
                                throw new il("cannot parse moov box",a.data);
                            case 35:
                                if (dl(c = sl(u, this._config))) {
                                    e.next = 38;
                                    break
                                }
                                throw new il("cannot parse segments",a.data);
                            case 38:
                                return c.videoSegments.length && c.audioSegments.length || (d = Zs.findBox(this.buffer, ["moof"])[0],
                                f = Zs.findBox(this.buffer, ["sidx"])[0],
                                d && d.size <= d.data.length && f && (p = Zs.moof(d),
                                h = Zs.sidx(f),
                                p && h && (al(u, h),
                                Ka("segments")))),
                                this.meta = cl(u, h),
                                m = (g = c).videoSegments,
                                v = g.audioSegments,
                                this.videoSegments = m,
                                this.audioSegments = v,
                                delete this.buffer,
                                this.bufferDataLen = 0,
                                this.logger.debug("[load moov end!!!!!]"),
                                e.abrupt("return", {
                                    meta: this.meta,
                                    videoSegments: m,
                                    audioSegments: v,
                                    responses: r
                                });
                            case 47:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e, t) {
                    return u.apply(this, arguments)
                }
                )
            }, {
                key: "loadCacheMeta",
                value: function(e, t) {
                    var n = sl(e.moov, this._config)
                      , i = n.videoSegments
                      , r = n.audioSegments;
                    this.videoSegments = i,
                    this.audioSegments = r,
                    this._currentSegmentIndex = t,
                    this.meta = e
                }
            }, {
                key: "getSegmentByTime",
                value: function(e) {
                    var t, n;
                    return this.videoSegments.length ? (t = this.videoSegments.find((function(t) {
                        return t.startTime <= e && t.endTime > e
                    }
                    )),
                    t && (n = this.audioSegments[t.index])) : n = this.audioSegments.find((function(t) {
                        return t.startTime <= e && t.endTime > e
                    }
                    )),
                    {
                        video: t,
                        audio: n
                    }
                }
            }, {
                key: "loadSegmentByTime",
                value: (l = Na(Qa().mark((function e(t, n) {
                    var i, r, o, a, s, l = arguments;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (i = !(l.length > 2 && void 0 !== l[2]) || l[2],
                                r = l.length > 3 && void 0 !== l[3] ? l[3] : {},
                                this.isMetaLoaded) {
                                    e.next = 5;
                                    break
                                }
                                return e.next = 5,
                                this.loadMeta(n);
                            case 5:
                                return o = this.getSegmentByTime(t),
                                a = o.video,
                                s = o.audio,
                                e.abrupt("return", this._loadSegment(a, s, n, i, r));
                            case 7:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e, t) {
                    return l.apply(this, arguments)
                }
                )
            }, {
                key: "loadNextSegment",
                value: (s = Na(Qa().mark((function e(t) {
                    var n, i, r, o, a = arguments;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (n = !(a.length > 1 && void 0 !== a[1]) || a[1],
                                i = a.length > 2 && void 0 !== a[2] ? a[2] : {},
                                this.isMetaLoaded) {
                                    e.next = 5;
                                    break
                                }
                                return e.next = 5,
                                this.loadMeta();
                            case 5:
                                return r = this.videoSegments[this._currentSegmentIndex + 1],
                                o = this.audioSegments[this._currentSegmentIndex + 1],
                                e.abrupt("return", this._loadSegment(r, o, t, n, i));
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e) {
                    return s.apply(this, arguments)
                }
                )
            }, {
                key: "preload",
                value: (a = Na(Qa().mark((function e(t) {
                    var n, i, r, o, a, s, l, u = this;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (this.isMetaLoaded) {
                                    e.next = 3;
                                    break
                                }
                                return e.next = 3,
                                this.loadMeta(!0);
                            case 3:
                                if (t && !(t < 0)) {
                                    e.next = 5;
                                    break
                                }
                                return e.abrupt("return");
                            case 5:
                                if (n = this.getSegmentByTime(t),
                                i = n.video,
                                r = n.audio,
                                o = Math.max((null == i ? void 0 : i.index) || 0, (null == r ? void 0 : r.index) || 0)) {
                                    e.next = 9;
                                    break
                                }
                                return e.abrupt("return");
                            case 9:
                                return a = this.videoSegments.slice(0, o),
                                s = this.audioSegments.slice(0, o),
                                l = function() {
                                    var e = Na(Qa().mark((function e(t) {
                                        return Qa().wrap((function(e) {
                                            for (; ; )
                                                switch (e.prev = e.next) {
                                                case 0:
                                                    if (!(t > o)) {
                                                        e.next = 2;
                                                        break
                                                    }
                                                    return e.abrupt("return");
                                                case 2:
                                                    return e.next = 4,
                                                    u._loadSegment(a[t], s[t], !0, !1);
                                                case 4:
                                                    return e.next = 6,
                                                    l(t + 1);
                                                case 6:
                                                case "end":
                                                    return e.stop()
                                                }
                                        }
                                        ), e)
                                    }
                                    )));
                                    return function(t) {
                                        return e.apply(this, arguments)
                                    }
                                }(),
                                e.next = 14,
                                l(0);
                            case 14:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e) {
                    return a.apply(this, arguments)
                }
                )
            }, {
                key: "cancel",
                value: function() {
                    return this._loader.cancel()
                }
            }, {
                key: "reset",
                value: (o = Na(Qa().mark((function e() {
                    var t, n = arguments;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (n.length > 0 && void 0 !== n[0] && n[0]) {
                                    e.next = 5;
                                    break
                                }
                                return this.logger.debug("[MP4loader reset func call loader.cancel]"),
                                e.next = 5,
                                this._loader.cancel();
                            case 5:
                                this.vid = this.url = "",
                                this.meta = {},
                                this.downloadInfo = [],
                                this.videoSegments = [],
                                this.audioSegments = [],
                                this._currentSegmentIndex = -1,
                                this._currentLoadingSegmentIndex = -1,
                                null !== (t = this._config) && void 0 !== t && t.memoryOpt && (delete this.buffer,
                                this.bufferDataLen = 0);
                            case 13:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function() {
                    return o.apply(this, arguments)
                }
                )
            }, {
                key: "destroy",
                value: (r = Na(Qa().mark((function e() {
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2,
                                this.reset();
                            case 2:
                                this.cache.clear();
                            case 3:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function() {
                    return r.apply(this, arguments)
                }
                )
            }, {
                key: "_loadSegment",
                value: (i = Na(Qa().mark((function e(t, n, i, r, o) {
                    var a, s;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (t || n) {
                                    e.next = 2;
                                    break
                                }
                                return e.abrupt("return");
                            case 2:
                                return a = (null == t ? void 0 : t.index) || (null == n ? void 0 : n.index) || 0,
                                this._currentLoadingSegmentIndex = a,
                                e.prev = 4,
                                e.next = 7,
                                this.loadData([Math.min((null == t ? void 0 : t.range[0]) || 1 / 0, (null == n ? void 0 : n.range[0]) || 1 / 0), Math.max((null == t ? void 0 : t.range[1]) || 0, (null == n ? void 0 : n.range[1]) || 0)], i, o);
                            case 7:
                                s = e.sent;
                            case 8:
                                return e.prev = 8,
                                this._currentLoadingSegmentIndex = -1,
                                e.finish(8);
                            case 11:
                                if (s) {
                                    e.next = 13;
                                    break
                                }
                                return e.abrupt("return");
                            case 13:
                                return r && (this._currentSegmentIndex = a),
                                s.video = t,
                                s.audio = n,
                                e.abrupt("return", s);
                            case 17:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this, [[4, , 8, 11]])
                }
                ))),
                function(e, t, n, r, o) {
                    return i.apply(this, arguments)
                }
                )
            }, {
                key: "loadData",
                value: (n = Na(Qa().mark((function e(t, n) {
                    var i, r, o, a, s, l = arguments;
                    return Qa().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return i = l.length > 2 && void 0 !== l[2] ? l[2] : {},
                                r = this._getCacheKey(t),
                                e.next = 4,
                                this.cache.get(r);
                            case 4:
                                if (o = e.sent) {
                                    e.next = 12;
                                    break
                                }
                                return s = null != i && i.url ? i.url : this.url,
                                e.next = 9,
                                this._loader.load(s, Xa({
                                    range: t,
                                    vid: this.vid
                                }, i));
                            case 9:
                                a = e.sent,
                                e.next = 13;
                                break;
                            case 12:
                                a = {
                                    data: o,
                                    state: !0,
                                    options: {
                                        fromCache: !0,
                                        range: t,
                                        vid: this.vid
                                    }
                                };
                            case 13:
                                if (a) {
                                    e.next = 15;
                                    break
                                }
                                return e.abrupt("return");
                            case 15:
                                return o || (a.data && this.downloadInfo.push({
                                    startTime: a.startTime,
                                    endTime: a.endTime,
                                    size: a.data.byteLength,
                                    range: t
                                }),
                                this.downloadInfo && this.downloadInfo.length > this._config.maxDownloadInfoSize && (this.downloadInfo = this.downloadInfo.slice(-this._config.maxDownloadInfoSize))),
                                e.abrupt("return", a);
                            case 18:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))),
                function(e, t) {
                    return n.apply(this, arguments)
                }
                )
            }, {
                key: "_getCacheKey",
                value: function(e) {
                    return (this.vid || this.url) + ":" + e
                }
            }]);
            var n, i, r, o, a, s, l, u, c, h, d
        }(G())
          , gl = function() {
            return ks((function e() {
                Ss(this, e),
                Cs(this, "id", 1),
                Cs(this, "type", Xs),
                Cs(this, "codecType", "avc"),
                Cs(this, "pid", -1),
                Cs(this, "hvcC", void 0),
                Cs(this, "codec", ""),
                Cs(this, "timescale", 0),
                Cs(this, "formatTimescale", 0),
                Cs(this, "sequenceNumber", 0),
                Cs(this, "baseMediaDecodeTime", 0),
                Cs(this, "baseDts", 0),
                Cs(this, "duration", 0),
                Cs(this, "warnings", []),
                Cs(this, "samples", []),
                Cs(this, "pps", []),
                Cs(this, "sps", []),
                Cs(this, "vps", []),
                Cs(this, "fpsNum", 0),
                Cs(this, "fpsDen", 0),
                Cs(this, "sarRatio", []),
                Cs(this, "width", 0),
                Cs(this, "height", 0),
                Cs(this, "nalUnitSize", 4),
                Cs(this, "present", !1),
                Cs(this, "isVideoEncryption", !1),
                Cs(this, "isAudioEncryption", !1),
                Cs(this, "isVideo", !0),
                Cs(this, "kid", null),
                Cs(this, "pssh", null),
                Cs(this, "ext", void 0)
            }
            ), [{
                key: "reset",
                value: function() {
                    this.sequenceNumber = this.width = this.height = this.fpsDen = this.fpsNum = this.duration = this.baseMediaDecodeTime = this.timescale = 0,
                    this.codec = "",
                    this.present = !1,
                    this.pid = -1,
                    this.pps = [],
                    this.sps = [],
                    this.vps = [],
                    this.sarRatio = [],
                    this.samples = [],
                    this.warnings = [],
                    this.hvcC = null
                }
            }, {
                key: "firstDts",
                get: function() {
                    return this.samples.length ? this.samples[0].dts : null
                }
            }, {
                key: "firstPts",
                get: function() {
                    return this.samples.length ? this.samples[0].pts : null
                }
            }, {
                key: "samplesDuration",
                get: function() {
                    if (this.samples.length > 0) {
                        var e = this.samples[0]
                          , t = this.samples[this.samples.length - 1];
                        return t.dts - e.dts + t.duration
                    }
                    return 0
                }
            }, {
                key: "exist",
                value: function() {
                    return !!/av01/.test(this.codec) || !!(this.pps.length && this.sps.length && this.codec)
                }
            }, {
                key: "hasSample",
                value: function() {
                    return !!this.samples.length
                }
            }, {
                key: "isEncryption",
                get: function() {
                    return this.isVideoEncryption
                }
            }])
        }()
          , ml = function() {
            return ks((function e() {
                Ss(this, e),
                Cs(this, "id", 2),
                Cs(this, "type", "audio"),
                Cs(this, "codecType", "aac"),
                Cs(this, "pid", -1),
                Cs(this, "codec", ""),
                Cs(this, "sequenceNumber", 0),
                Cs(this, "sampleDuration", 0),
                Cs(this, "timescale", 0),
                Cs(this, "formatTimescale", 0),
                Cs(this, "baseMediaDecodeTime", 0),
                Cs(this, "duration", 0),
                Cs(this, "warnings", []),
                Cs(this, "samples", []),
                Cs(this, "baseDts", 0),
                Cs(this, "sampleSize", 16),
                Cs(this, "sampleRate", 0),
                Cs(this, "channelCount", 0),
                Cs(this, "objectType", 0),
                Cs(this, "sampleRateIndex", 0),
                Cs(this, "config", []),
                Cs(this, "present", !1),
                Cs(this, "isVideoEncryption", !1),
                Cs(this, "isAudioEncryption", !1),
                Cs(this, "kid", null),
                Cs(this, "isHeAACExt", !1),
                Cs(this, "ext", void 0)
            }
            ), [{
                key: "reset",
                value: function() {
                    this.sequenceNumber = 0,
                    this.timescale = 0,
                    this.sampleDuration = 0,
                    this.sampleRate = 0,
                    this.channelCount = 0,
                    this.baseMediaDecodeTime = 0,
                    this.present = !1,
                    this.isHeAACExt = !1,
                    this.pid = -1,
                    this.codec = "",
                    this.samples = [],
                    this.config = [],
                    this.warnings = []
                }
            }, {
                key: "exist",
                value: function() {
                    return !!(this.sampleRate && this.channelCount && this.codec && "aac" === this.codecType)
                }
            }, {
                key: "hasSample",
                value: function() {
                    return !!this.samples.length
                }
            }, {
                key: "isEncryption",
                get: function() {
                    return this.isAudioEncryption
                }
            }, {
                key: "firstDts",
                get: function() {
                    return this.samples.length ? this.samples[0].dts : null
                }
            }, {
                key: "firstPts",
                get: function() {
                    return this.samples.length ? this.samples[0].pts : null
                }
            }, {
                key: "samplesDuration",
                get: function() {
                    if (this.samples.length > 0) {
                        var e = this.samples[0]
                          , t = this.samples[this.samples.length - 1];
                        return t.dts - e.dts + t.duration
                    }
                    return 0
                }
            }])
        }()
          , vl = function() {
            return ks((function e(t, n, i) {
                Ss(this, e),
                Cs(this, "flag", {}),
                Cs(this, "keyframe", !1),
                Cs(this, "gopId", 0),
                Cs(this, "duration", 0),
                Cs(this, "size", 0),
                Cs(this, "units", []),
                Cs(this, "chromaFormat", 420),
                this.originPts = this.pts = t,
                this.originDts = this.dts = n,
                i && (this.units = i)
            }
            ), [{
                key: "cts",
                get: function() {
                    return this.pts - this.dts
                }
            }, {
                key: "setToKeyframe",
                value: function() {
                    this.keyframe = !0,
                    this.flag.dependsOn = 2,
                    this.flag.isNonSyncSample = 0
                }
            }])
        }()
          , yl = ks((function e(t, n, i, r) {
            Ss(this, e),
            Cs(this, "duration", 1024),
            Cs(this, "flag", {
                dependsOn: 2,
                isNonSyncSample: 0
            }),
            Cs(this, "keyframe", !0),
            this.originPts = this.pts = this.dts = t,
            this.data = n,
            this.size = n.byteLength,
            this.sampleOffset = r,
            i && (this.duration = i)
        }
        ))
          , _l = function() {
            return ks((function e() {
                Ss(this, e),
                Cs(this, "id", 3),
                Cs(this, "type", "metadata"),
                Cs(this, "timescale", 0),
                Cs(this, "flvScriptSamples", []),
                Cs(this, "seiSamples", [])
            }
            ), [{
                key: "exist",
                value: function() {
                    return !(!this.flvScriptSamples.length && !this.seiSamples.length || !this.timescale)
                }
            }, {
                key: "reset",
                value: function() {
                    this.timescale = 0,
                    this.flvScriptSamples = [],
                    this.seiSamples = []
                }
            }, {
                key: "hasSample",
                value: function() {
                    return !(!this.flvScriptSamples.length && !this.seiSamples.length)
                }
            }])
        }()
          , Tl = function() {
            function e(t, n) {
                Ss(this, e),
                this.name = t || "",
                this._prefix = "[".concat(this.name, "]"),
                e.disabled = n
            }
            return ks(e, [{
                key: "debug",
                value: function() {
                    var t;
                    if (!e.disabled) {
                        for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                            i[r] = arguments[r];
                        (t = console).debug.apply(t, [this._prefix].concat(i))
                    }
                }
            }, {
                key: "log",
                value: function() {
                    var t;
                    if (!e.disabled) {
                        for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                            i[r] = arguments[r];
                        (t = console).log.apply(t, [this._prefix].concat(i))
                    }
                }
            }, {
                key: "warn",
                value: function() {
                    var t;
                    if (!e.disabled) {
                        for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                            i[r] = arguments[r];
                        (t = console).warn.apply(t, [this._prefix].concat(i))
                    }
                }
            }, {
                key: "error",
                value: function() {
                    var t;
                    if (!e.disabled) {
                        for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                            i[r] = arguments[r];
                        (t = console).error.apply(t, [this._prefix].concat(i))
                    }
                }
            }, {
                key: "table",
                value: function() {
                    var t;
                    e.disabled || (console.group(this._prefix),
                    (t = console).table.apply(t, arguments),
                    console.groupEnd())
                }
            }], [{
                key: "enable",
                value: function() {
                    e.disabled = !1
                }
            }, {
                key: "disable",
                value: function() {
                    e.disabled = !0
                }
            }])
        }();
        Cs(Tl, "disabled", !0);
        var bl, Sl = null, wl = ["stts", "stsc", "stsz", "stco", "co64", "stss", "ctts"], kl = function() {
            function e(t, n, i, r) {
                var o, a, s = this;
                if (Ss(this, e),
                Cs(this, "_videoSamples", []),
                Cs(this, "_audioSamples", []),
                Cs(this, "_lastRemainBuffer", []),
                Cs(this, "_lastRemainBufferStartPos", 0),
                Cs(this, "videoMaxFrameIdx", -1),
                Cs(this, "audioMaxFrameIdx", -1),
                this.videoTrack = new gl,
                this.audioTrack = new ml,
                this.metadataTrack = i || new _l,
                this.videoSegmnents = t,
                this.audioSegmnents = n,
                this.log = new Tl("MP4Demuxer",!r || !r.openLog || !r.openLog),
                this.memoryOpt = null == r ? void 0 : r.memoryOpt,
                this.memoryOpt || (t && t.forEach((function(e) {
                    var t;
                    (t = s._videoSamples).push.apply(t, Ms(e.frames))
                }
                )),
                n && n.forEach((function(e) {
                    var t;
                    (t = s._audioSamples).push.apply(t, Ms(e.frames))
                }
                ))),
                (null === (o = this.videoSegmnents) || void 0 === o ? void 0 : o.length) > 0) {
                    var l = this.videoSegmnents[this.videoSegmnents.length - 1].frames;
                    this.videoMaxFrameIdx = l[l.length - 1].index
                }
                if ((null === (a = this.audioSegmnents) || void 0 === a ? void 0 : a.length) > 0) {
                    var u = this.audioSegmnents[this.audioSegmnents.length - 1].frames;
                    this.audioMaxFrameIdx = u[u.length - 1].index
                }
            }
            return ks(e, [{
                key: "parseSamples",
                value: function(e) {
                    if (!e)
                        throw new Error("moov is required");
                    this.videoTrack.codec || this.audioTrack.codec || (Zs.moovToTrack(e, this.videoTrack, this.audioTrack),
                    this.videoSenc = this.videoTrack.videoSenc,
                    this.audioSenc = this.audioTrack.audioSenc,
                    this.memoryOpt && this.clearBoxEntries(e))
                }
            }, {
                key: "demux",
                value: function(e, t, n, i, r) {
                    this.parseSamples(r);
                    var o, a, s, l = this.videoTrack, u = this.audioTrack;
                    l.samples = [],
                    u.samples = [];
                    var c = {};
                    if (n) {
                        var h, d = 0;
                        if (this.memoryOpt && this.videoSegmnents && !(c = this.getFramePosByIdx("video", n[0])))
                            throw new Error("cannot found video frame #".concat(n[0]));
                        for (var f = c, p = f.frameIdx, g = f.segmentIdx, m = n[0], v = n[1]; m <= v; m++) {
                            if (!this._videoSamples.length && this.videoSegmnents) {
                                var y = this.getFrameInfo("video", g, p);
                                o = y.sample,
                                g = y.segmentIdx,
                                p = y.frameIdx
                            } else
                                o = this._videoSamples[m];
                            if (!o)
                                throw new Error("cannot found video frame #".concat(m));
                            s = o.offset - t,
                            a = e.subarray(s, s + o.size),
                            (h = new vl("number" == typeof o.pts ? o.pts : o.dts,o.dts)).duration = o.duration,
                            h.gopId = o.gopId,
                            o.keyframe && h.setToKeyframe();
                            for (var _ = 0, T = a.length - 1; _ < T; )
                                d = Ls(a, _),
                                _ += 4,
                                h.units.push(a.subarray(_, _ + d)),
                                _ += d;
                            l.samples.push(h)
                        }
                        l.baseMediaDecodeTime = l.samples[0].dts
                    }
                    if (c = {},
                    i) {
                        if (this.memoryOpt && this.audioSegmnents && !(c = this.getFramePosByIdx("audio", i[0])))
                            throw new Error("cannot found video frame #".concat(i[0]));
                        for (var b = c, S = b.frameIdx, w = b.segmentIdx, k = i[0], C = i[1]; k <= C; k++) {
                            if (!this._audioSamples.length && this.audioSegmnents) {
                                var M = this.getFrameInfo("audio", w, S);
                                o = M.sample,
                                w = M.segmentIdx,
                                S = M.frameIdx
                            } else
                                o = this._audioSamples[k];
                            if (!o)
                                throw new Error("cannot found video frame #".concat(k));
                            s = o.offset - t,
                            a = e.subarray(s, s + o.size),
                            u.samples.push(new yl(o.dts,a,o.duration))
                        }
                        u.baseMediaDecodeTime = u.samples[0].dts
                    }
                    return {
                        videoTrack: l,
                        audioTrack: u,
                        metadataTrack: this.metadataTrack
                    }
                }
            }, {
                key: "demuxPart",
                value: function(e, t, n, i, r, o, a, s) {
                    if (this.parseSamples(r),
                    this.videoTrack.useEME = o,
                    this.audioTrack.useEME = o,
                    this._lastRemainBuffer && this._lastRemainBuffer.byteLength > 0 && t > this._lastRemainBufferStartPos && t <= this._lastRemainBufferStartPos + this._lastRemainBuffer.byteLength)
                        for (var l = 0; l < 20; )
                            try {
                                var u = this._lastRemainBuffer.subarray(0, t - this._lastRemainBufferStartPos)
                                  , c = new Uint8Array(e.byteLength + u.byteLength);
                                c.set(u, 0),
                                c.set(new Uint8Array(e), u.byteLength),
                                e = c,
                                t -= u.byteLength,
                                this._lastRemainBuffer = null,
                                this._lastRemainBufferStartPos = 0;
                                break
                            } catch (e) {
                                if (!(l < 20))
                                    throw new Error("new Uint8Array error:," + e.errorMessage);
                                l++
                            }
                    var h, d, f, p = this.videoTrack, g = this.audioTrack;
                    p.samples = [],
                    g.samples = [],
                    p.videoSenc = null,
                    g.audioSenc = null,
                    (null == n ? void 0 : n[1]) > this.videoMaxFrameIdx && this.videoMaxFrameIdx > 0 && (n[1] = this.videoMaxFrameIdx),
                    (null == i ? void 0 : i[1]) > this.audioMaxFrameIdx && this.audioMaxFrameIdx > 0 && (i[1] = this.audioMaxFrameIdx);
                    var m = 0
                      , v = 0
                      , y = {}
                      , _ = e.byteLength + t;
                    if (n.length > 0) {
                        var T;
                        if (this.memoryOpt && this.videoSegmnents && !(y = this.getFramePosByIdx("video", n[0])))
                            throw new Error("cannot found video frame #".concat(n[0]));
                        for (var b = y, S = b.frameIdx, w = b.segmentIdx, k = n[0]; k <= n[1]; k++) {
                            if (!this._videoSamples.length && this.videoSegmnents) {
                                var C = this.getFrameInfo("video", w, S);
                                h = C.sample,
                                w = C.segmentIdx,
                                S = C.frameIdx
                            } else
                                h = this._videoSamples[k];
                            if (!h)
                                throw new Error("cannot found video frame #".concat(k));
                            if (this.memoryOpt && h.offset + h.size > _)
                                break;
                            h.offset >= t && h.offset + h.size <= _ && (m = (f = h.offset - t) + h.size,
                            d = e.subarray(f, m),
                            (T = new vl("number" == typeof h.pts ? h.pts : h.dts,h.dts)).duration = h.duration,
                            T.gopId = h.gopId,
                            T.sampleOffset = h.index,
                            h.keyframe && T.setToKeyframe(),
                            T.data = d,
                            T.size = h.size,
                            p.samples.push(T))
                        }
                        p.samples.length > 0 && (p.gopId = p.samples[0].gopId,
                        p.baseMediaDecodeTime = p.samples[0].dts,
                        p.startPts = p.samples[0].pts / p.timescale,
                        p.endPts = p.samples[p.samples.length - 1].pts / p.timescale,
                        p.startDts = p.samples[0].dts / p.timescale,
                        p.endDts = p.samples[p.samples.length - 1].dts / p.timescale,
                        this.videoSenc && (p.videoSenc = this.videoSenc.slice(p.samples[0].sampleOffset, p.samples[0].sampleOffset + p.samples.length),
                        p.kidValue = a))
                    }
                    if (i.length > 0) {
                        if (this.memoryOpt && this.audioSegmnents && !(y = this.getFramePosByIdx("audio", i[0])))
                            throw new Error("cannot found video frame #".concat(i[0]));
                        for (var M = y, P = M.frameIdx, R = M.segmentIdx, x = i[0]; x <= i[1]; x++) {
                            if (!this._audioSamples.length && this.audioSegmnents) {
                                var E = this.getFrameInfo("audio", R, P);
                                h = E.sample,
                                R = E.segmentIdx,
                                P = E.frameIdx
                            } else
                                h = this._audioSamples[x];
                            if (!h)
                                throw new Error("cannot found video frame #".concat(x));
                            if (this.memoryOpt && h.offset + h.size > _)
                                break;
                            h.offset >= t && h.offset + h.size <= _ && (v = (f = h.offset - t) + h.size,
                            d = e.subarray(f, v),
                            g.samples.push(new yl(h.dts,d,h.duration,h.index)))
                        }
                        g.samples.length > 0 && (g.gopId = g.samples[0].gopId || p.gopId,
                        g.baseMediaDecodeTime = g.samples[0].dts,
                        g.startPts = g.samples[0].pts / g.timescale,
                        g.endPts = g.samples[g.samples.length - 1].pts / g.timescale,
                        this.audioSenc && (g.audioSenc = this.audioSenc.slice(g.samples[0].sampleOffset, g.samples[0].sampleOffset + g.samples.length),
                        g.kidValue = a))
                    }
                    this.decoderData(p, g, s);
                    for (var D = 0, L = 0; L < p.samples.length; L++)
                        for (var I = 0, O = p.samples[L].data, A = O.length - 1; I < A; )
                            D = Ls(O, I),
                            I += 4,
                            p.samples[L].units.push(O.subarray(I, I + D)),
                            I += D;
                    var G = Math.max(m, v);
                    return this._lastRemainBuffer = e.subarray(G),
                    this._lastRemainBuffer.byteLength > 0 ? this._lastRemainBufferStartPos = t + e.byteLength - this._lastRemainBuffer.byteLength : this._lastRemainBufferStartPos = 0,
                    {
                        videoTrack: p,
                        audioTrack: g,
                        metadataTrack: this.metadataTrack,
                        lastRemainBufferInfo: {
                            data: this._lastRemainBuffer,
                            pos: this._lastRemainBufferStartPos
                        }
                    }
                }
            }, {
                key: "setLastRemainBufferInfo",
                value: function(e, t) {
                    this._lastRemainBuffer = e,
                    this._lastRemainBufferStartPos = t
                }
            }, {
                key: "reset",
                value: function() {
                    this._lastRemainBuffer = null,
                    this._lastRemainBufferStartPos = 0,
                    this.videoTrack.reset(),
                    this.audioTrack.reset(),
                    this.metadataTrack.reset()
                }
            }, {
                key: "decoderData",
                value: function(t, n, i) {
                    if (!t.useEME && !n.useEME && (null != t && t.videoSenc || null != n && n.audioSenc)) {
                        if (!e.Crypto)
                            throw new Error("Crypto is not defined");
                        e.Crypto.decoderAESCTRData(t, n, i)
                    }
                }
            }, {
                key: "getFramePosByIdx",
                value: function(e, t) {
                    var n = "video" === e ? this.videoSegmnents : this.audioSegmnents;
                    if (!n || null == n || !n.length)
                        return null;
                    for (var i, r = 0, o = 0; o < n.length; o++) {
                        var a, s;
                        if (i = n[o].frames,
                        t <= (null === (a = n[o].frames) || void 0 === a ? void 0 : a[(null === (s = i) || void 0 === s ? void 0 : s.length) - 1].index)) {
                            r = o;
                            break
                        }
                    }
                    return {
                        frameIdx: i.findIndex((function(e) {
                            return e.index === t
                        }
                        )),
                        segmentIdx: r
                    }
                }
            }, {
                key: "getFrameInfo",
                value: function(e, t, n) {
                    var i, r, o, a, s = "video" === e ? this.videoSegmnents : this.audioSegmnents;
                    return s ? n < (null === (i = s[t]) || void 0 === i || null === (r = i.frames) || void 0 === r ? void 0 : r.length) ? {
                        sample: null === (o = s[t]) || void 0 === o ? void 0 : o.frames[n],
                        segmentIdx: t,
                        frameIdx: n + 1
                    } : {
                        sample: null === (a = s[t + 1]) || void 0 === a ? void 0 : a.frames[0],
                        segmentIdx: t + 1,
                        frameIdx: 1
                    } : {}
                }
            }, {
                key: "clearBoxEntries",
                value: function(e) {
                    this.memoryOpt && e.trak.forEach((function(e) {
                        wl.forEach((function(t) {
                            var n = e.mdia.minf.stbl[t];
                            n && (n.entries && (n.entries = null),
                            n.entrySizes && (n.entrySizes = null))
                        }
                        ))
                    }
                    ))
                }
            }], [{
                key: "Crypto",
                get: function() {
                    return Sl
                },
                set: function(e) {
                    Sl = e
                }
            }, {
                key: "probe",
                value: function(e) {
                    return Zs.probe(e)
                }
            }])
        }(), Cl = function() {
            return ks((function e() {
                Ss(this, e),
                this.buffer = new Uint8Array(0)
            }
            ), [{
                key: "write",
                value: function() {
                    for (var e = this, t = arguments.length, n = new Array(t), i = 0; i < t; i++)
                        n[i] = arguments[i];
                    n.forEach((function(t) {
                        t ? e.buffer = function(e) {
                            for (var t = 0, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                                i[r - 1] = arguments[r];
                            i.forEach((function(e) {
                                t += e.length
                            }
                            ));
                            var o = new e(t)
                              , a = 0;
                            return i.forEach((function(e) {
                                o.set(e, a),
                                a += e.length
                            }
                            )),
                            o
                        }(Uint8Array, e.buffer, t) : window.console.warn(t)
                    }
                    ))
                }
            }], [{
                key: "writeUint16",
                value: function(e) {
                    return new Uint8Array([e >> 8 & 255, 255 & e])
                }
            }, {
                key: "writeUint32",
                value: function(e) {
                    return new Uint8Array([e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e])
                }
            }])
        }(), Ml = Math.pow(2, 32) - 1, Pl = function() {
            function e() {
                Ss(this, e)
            }
            return ks(e, null, [{
                key: "box",
                value: function(e) {
                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
                        n[i - 1] = arguments[i];
                    var r = 8 + (n = n.filter(Boolean)).reduce((function(e, t) {
                        return e + t.byteLength
                    }
                    ), 0)
                      , o = new Uint8Array(r);
                    o[0] = r >> 24 & 255,
                    o[1] = r >> 16 & 255,
                    o[2] = r >> 8 & 255,
                    o[3] = 255 & r,
                    o.set(e, 4);
                    var a = 8;
                    return n.forEach((function(e) {
                        o.set(e, a),
                        a += e.byteLength
                    }
                    )),
                    o
                }
            }, {
                key: "FullBox",
                value: function(t, n, i) {
                    for (var r = arguments.length, o = new Array(r > 3 ? r - 3 : 0), a = 3; a < r; a++)
                        o[a - 3] = arguments[a];
                    return e.box.apply(e, [t, new Uint8Array([n, i >> 16 & 255, i >> 8 & 255, 255 & i])].concat(o))
                }
            }, {
                key: "ftyp",
                value: function(t) {
                    return t.find((function(e) {
                        return e.type === Xs && e.codecType === Ks
                    }
                    )) ? e.FTYPHEV1 : e.FTYPAVC1
                }
            }, {
                key: "initSegment",
                value: function(t) {
                    return xs(e.ftyp(t), e.moov(t))
                }
            }, {
                key: "pssh",
                value: function(t) {
                    var n = new Uint8Array([1, 0, 0, 0].concat([16, 119, 239, 236, 192, 178, 77, 2, 172, 227, 60, 30, 82, 226, 251, 75], [0, 0, 0, 1], Gs(t.kid), [0, 0, 0, 0]));
                    return e.box(e.types.pssh, n)
                }
            }, {
                key: "moov",
                value: function(t) {
                    if (t[0].useEME && (t[0].encv || t[0].enca)) {
                        t[0].pssh || (t[0].pssh = {
                            kid: t[0].kid
                        });
                        var n = this.pssh(t[0].pssh);
                        return e.box.apply(e, [e.types.moov, e.mvhd(t[0].mvhdDurtion || t[0].duration, t[0].mvhdTimecale || t[0].timescale), e.mvex(t)].concat(Ms(t.map((function(t) {
                            return e.trak(t)
                        }
                        ))), [n]))
                    }
                    return e.box.apply(e, [e.types.moov, e.mvhd(t[0].mvhdDurtion || t[0].duration, t[0].mvhdTimecale || t[0].timescale)].concat(Ms(t.map((function(t) {
                        return e.trak(t)
                    }
                    ))), [e.mvex(t)]))
                }
            }, {
                key: "mvhd",
                value: function(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 9e4;
                    return e.box(e.types.mvhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]))
                }
            }, {
                key: "trak",
                value: function(t) {
                    return e.box(e.types.trak, e.tkhd(t.id, t.tkhdDuration || 0, t.width, t.height), e.mdia(t))
                }
            }, {
                key: "tkhd",
                value: function(t, n) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
                      , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
                    return e.box(e.types.tkhd, new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 0, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, i >> 8 & 255, 255 & i, 0, 0, r >> 8 & 255, 255 & r, 0, 0]))
                }
            }, {
                key: "edts",
                value: function(t) {
                    return e.box(e.types.edts, e.elst(t))
                }
            }, {
                key: "elst",
                value: function(t) {
                    t.entries;
                    var n = t.entriesData
                      , i = t.version;
                    return e.FullBox(e.types.elst, i, 0, n)
                }
            }, {
                key: "mdia",
                value: function(t) {
                    return e.box(e.types.mdia, e.mdhd(t.duration, t.timescale), e.hdlr(t.type), e.minf(t))
                }
            }, {
                key: "mdhd",
                value: function(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 9e4;
                    return e.box(e.types.mdhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, 85, 196, 0, 0]))
                }
            }, {
                key: "hdlr",
                value: function(t) {
                    return e.box(e.types.hdlr, e.HDLR_TYPES[t])
                }
            }, {
                key: "minf",
                value: function(t) {
                    return e.box(e.types.minf, t.type === Xs ? e.VMHD : e.SMHD, e.DINF, e.stbl(t))
                }
            }, {
                key: "stbl",
                value: function(t) {
                    return t && t.ext,
                    e.box(e.types.stbl, e.stsd(t), e.STTS, [][0], e.STSC, e.STSZ, e.STCO)
                }
            }, {
                key: "stsd",
                value: function(t) {
                    var n;
                    return n = "audio" === t.type ? t.useEME && t.enca ? e.enca(t) : e.mp4a(t) : t.useEME && t.encv ? e.encv(t) : t.av1C ? e.av01(t) : e.avc1hev1vvc1(t),
                    e.box(e.types.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), n)
                }
            }, {
                key: "enca",
                value: function(t) {
                    var n = t.enca.channelCount
                      , i = t.enca.sampleRate
                      , r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, n, 0, 16, 0, 0, 0, 0, i >> 8 & 255, 255 & i, 0, 0])
                      , o = e.esds(t.config)
                      , a = e.sinf(t.enca);
                    return e.box(e.types.enca, r, o, a)
                }
            }, {
                key: "encv",
                value: function(t) {
                    var n, i, r = t.sps.length > 0 ? t.sps[0] : [], o = t.pps.length > 0 ? t.pps[0] : [], a = t.width, s = t.height, l = t.sarRatio[0], u = t.sarRatio[1], c = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a >> 8 & 255, 255 & a, s >> 8 & 255, 255 & s, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), h = new Uint8Array((n = (i = [1, r[1], r[2], r[3], 255, 225, r.length >>> 8 & 255, 255 & r.length]).concat.apply(i, Ms(r)).concat([1, o.length >>> 8 & 255, 255 & o.length])).concat.apply(n, Ms(o))), d = new Uint8Array([0, 0, 88, 57, 0, 15, 200, 192, 0, 4, 86, 72]), f = e.sinf(t.encv), p = new Uint8Array([l >> 24, l >> 16 & 255, l >> 8 & 255, 255 & l, u >> 24, u >> 16 & 255, u >> 8 & 255, 255 & u]);
                    return e.box(e.types.encv, c, e.box(e.types.avcC, h), e.box(e.types.btrt, d), f, e.box(e.types.pasp, p))
                }
            }, {
                key: "schi",
                value: function(t) {
                    var n = new Uint8Array([])
                      , i = e.tenc(t);
                    return e.box(e.types.schi, n, i)
                }
            }, {
                key: "tenc",
                value: function(t) {
                    var n = new Uint8Array([0, 0, 0, 0, 0, 0, 255 & t.default_IsEncrypted, 255 & t.default_IV_size].concat(Gs(t.default_KID)));
                    return e.box(e.types.tenc, n)
                }
            }, {
                key: "sinf",
                value: function(t) {
                    var n = new Uint8Array([])
                      , i = new Uint8Array([t.data_format.charCodeAt(0), t.data_format.charCodeAt(1), t.data_format.charCodeAt(2), t.data_format.charCodeAt(3)])
                      , r = new Uint8Array([0, 0, 0, 0, 99, 101, 110, 99, 0, 1, 0, 0])
                      , o = e.schi(t);
                    return e.box(e.types.sinf, n, e.box(e.types.frma, i), e.box(e.types.schm, r), o)
                }
            }, {
                key: "av01",
                value: function(t) {
                    return e.box(e.types.av01, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.width >> 8 & 255, 255 & t.width, t.height >> 8 & 255, 255 & t.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), t.av1C, t.colr)
                }
            }, {
                key: "avc1hev1vvc1",
                value: function(t) {
                    var n, i;
                    t.codecType === Ks ? (n = e.hvcC(t),
                    i = e.types.hvc1) : t.codecType === Qs ? (n = e.vvcC(t),
                    i = e.types.bvc2) : (n = e.avcC(t),
                    i = e.types.avc1);
                    var r = [new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.width >> 8 & 255, 255 & t.width, t.height >> 8 & 255, 255 & t.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), n];
                    return t.codecType === Ks ? r.push(e.box(e.types.fiel, new Uint8Array([1, 0]))) : t.sarRatio && t.sarRatio.length > 1 && r.push(e.pasp(t.sarRatio)),
                    e.box.apply(e, [i].concat(r))
                }
            }, {
                key: "avcC",
                value: function(t) {
                    var n, i, r, o = [], a = [];
                    return t.sps.forEach((function(e) {
                        r = e.byteLength,
                        o.push(r >>> 8 & 255),
                        o.push(255 & r),
                        o.push.apply(o, Ms(e))
                    }
                    )),
                    t.pps.forEach((function(e) {
                        r = e.byteLength,
                        a.push(r >>> 8 & 255),
                        a.push(255 & r),
                        a.push.apply(a, Ms(e))
                    }
                    )),
                    e.box(e.types.avcC, new Uint8Array((n = (i = [1, o[3], o[4], o[5], 255, 224 | t.sps.length]).concat.apply(i, o).concat([t.pps.length])).concat.apply(n, a)))
                }
            }, {
                key: "vvcC",
                value: function(t) {
                    var n = t.vvcC;
                    return e.box(e.types.bv2C, new Uint8Array(n))
                }
            }, {
                key: "hvcC",
                value: function(t) {
                    var n = t.hvcC;
                    if (n instanceof ArrayBuffer || n instanceof Uint8Array)
                        return n;
                    var i, r = t.vps, o = t.sps, a = t.pps;
                    if (n) {
                        var s = n.generalProfileCompatibilityFlags
                          , l = n.generalConstraintIndicatorFlags
                          , u = (r.length && 1) + (o.length && 1) + (a.length && 1);
                        i = [1, n.generalProfileSpace << 6 | n.generalTierFlag << 5 | n.generalProfileIdc, s >>> 24, s >>> 16, s >>> 8, s, l[0], l[1], l[2], l[3], l[4], l[5], n.generalLevelIdc, 240, 0, 252, 252 | n.chromaFormatIdc, 248 | n.bitDepthLumaMinus8, 248 | n.bitDepthChromaMinus8, 0, 0, n.numTemporalLayers << 3 | n.temporalIdNested << 2 | 3, u];
                        var c = function(e) {
                            var t;
                            i.push(e.length >> 8, e.length),
                            (t = i).push.apply(t, Ms(e))
                        };
                        r.length && (i.push(160, 0, r.length),
                        r.forEach(c)),
                        o.length && (i.push(161, 0, o.length),
                        o.forEach(c)),
                        a.length && (i.push(162, 0, a.length),
                        a.forEach(c))
                    } else
                        i = [1, 1, 96, 0, 0, 0, 144, 0, 0, 0, 0, 0, 93, 240, 0, 252, 253, 248, 248, 0, 0, 15, 3, 160, 0, 1, 0, 24, 64, 1, 12, 1, 255, 255, 1, 96, 0, 0, 3, 0, 144, 0, 0, 3, 0, 0, 3, 0, 93, 153, 152, 9, 161, 0, 1, 0, 45, 66, 1, 1, 1, 96, 0, 0, 3, 0, 144, 0, 0, 3, 0, 0, 3, 0, 93, 160, 2, 128, 128, 45, 22, 89, 153, 164, 147, 43, 154, 128, 128, 128, 130, 0, 0, 3, 0, 2, 0, 0, 3, 0, 50, 16, 162, 0, 1, 0, 7, 68, 1, 193, 114, 180, 98, 64];
                    return e.box(e.types.hvcC, new Uint8Array(i))
                }
            }, {
                key: "pasp",
                value: function(t) {
                    var n, i, r = (i = 2,
                    function(e) {
                        if (Array.isArray(e))
                            return e
                    }(n = t) || function(e, t) {
                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (null != n) {
                            var i, r, o, a, s = [], l = !0, u = !1;
                            try {
                                if (o = (n = n.call(e)).next,
                                0 === t) {
                                    if (Object(n) !== n)
                                        return;
                                    l = !1
                                } else
                                    for (; !(l = (i = o.call(n)).done) && (s.push(i.value),
                                    s.length !== t); l = !0)
                                        ;
                            } catch (e) {
                                u = !0,
                                r = e
                            } finally {
                                try {
                                    if (!l && null != n.return && (a = n.return(),
                                    Object(a) !== a))
                                        return
                                } finally {
                                    if (u)
                                        throw r
                                }
                            }
                            return s
                        }
                    }(n, i) || Rs(n, i) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()), o = r[0], a = r[1];
                    return e.box(e.types.pasp, new Uint8Array([o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a]))
                }
            }, {
                key: "mp4a",
                value: function(t) {
                    return e.box(e.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, t.sampleRate >> 8 & 255, 255 & t.sampleRate, 0, 0]), t.config.length ? e.esds(t.config) : void 0)
                }
            }, {
                key: "esds",
                value: function(t) {
                    var n = t.length;
                    return e.box(e.types.esds, new Uint8Array([0, 0, 0, 0, 3, 23 + n, 0, 0, 0, 4, 15 + n, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5].concat([n]).concat(t).concat([6, 1, 2])))
                }
            }, {
                key: "mvex",
                value: function(t) {
                    return e.box.apply(e, [e.types.mvex].concat(Ms(t.map((function(t) {
                        return e.trex(t.id)
                    }
                    )))))
                }
            }, {
                key: "trex",
                value: function(t) {
                    return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                }
            }, {
                key: "trex1",
                value: function(t) {
                    return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]))
                }
            }, {
                key: "trex2",
                value: function(t) {
                    return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0, 2, 0, 0, 0]))
                }
            }, {
                key: "moof",
                value: function(t) {
                    return e.box.apply(e, [e.types.moof, e.mfhd(t[0].samples ? t[0].samples[0].gopId : 0)].concat(Ms(t.map((function(t) {
                        return e.traf(t)
                    }
                    )))))
                }
            }, {
                key: "mfhd",
                value: function(t) {
                    return e.box(e.types.mfhd, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t]))
                }
            }, {
                key: "traf",
                value: function(t) {
                    var n = e.tfhd(t.id)
                      , i = e.tfdt(t.baseMediaDecodeTime)
                      , r = 0;
                    if (t.isVideo && t.videoSenc && t.videoSenc.forEach((function(e) {
                        r += 8,
                        e.subsamples && e.subsamples.length && (r += 2,
                        r += 6 * e.subsamples.length)
                    }
                    )),
                    t.videoSencLength = r,
                    t.useEME && (t.isVideoEncryption || t.isAudioEncryption)) {
                        if (t.isVideoEncryption) {
                            if (t.isVideo) {
                                var o = e.saiz(t)
                                  , a = e.saio(t)
                                  , s = e.trun1(t)
                                  , l = e.senc(t);
                                return e.box(e.types.traf, n, i, o, a, s, l)
                            }
                            if (t.isAudioEncryption) {
                                var u = e.sbgp()
                                  , c = e.saiz(t)
                                  , h = e.saio(t)
                                  , d = e.senc(t)
                                  , f = e.trun1(t);
                                return e.box(e.types.traf, n, i, u, c, h, d, f)
                            }
                            var p = e.sbgp()
                              , g = e.trun1(t);
                            return e.box(e.types.traf, n, i, p, g)
                        }
                        if (t.isVideo) {
                            var m = e.trun1(t);
                            return e.box(e.types.traf, n, i, m)
                        }
                        var v = e.sbgp()
                          , y = e.saiz(t)
                          , _ = e.saio(t)
                          , T = e.senc(t)
                          , b = e.trun1(t);
                        return e.box(e.types.traf, n, i, v, y, _, T, b)
                    }
                    var S = e.sdtp(t);
                    return e.box(e.types.traf, n, i, S, e.trun(t.samples, S.byteLength + 76))
                }
            }, {
                key: "sdtp",
                value: function(t) {
                    var n = new Cl;
                    return t.samples.forEach((function(e) {
                        n.write(new Uint8Array(t.isVideo ? [e.keyframe ? 32 : 16] : [16]))
                    }
                    )),
                    e.box(e.types.sdtp, this.extension(0, 0), n.buffer)
                }
            }, {
                key: "trun1",
                value: function(t) {
                    var n = new Cl
                      , i = Cl.writeUint32(t.samples.length)
                      , r = null;
                    if (t.isVideo) {
                        var o = t.videoSencLength;
                        r = Cl.writeUint32(76 + 16 * t.samples.length + o + 77),
                        !t.isVideoEncryption && t.isAudioEncryption && (r = Cl.writeUint32(76 + 16 * t.samples.length + 20))
                    } else {
                        var a = 76 + 12 * t.samples.length + 52;
                        t.isAudioEncryption && (a = 76 + 12 * t.samples.length + 8 * t.audioSenc.length + 105),
                        r = Cl.writeUint32(a)
                    }
                    return t.samples.forEach((function(e) {
                        n.write(Cl.writeUint32(e.duration)),
                        n.write(Cl.writeUint32(e.size)),
                        n.write(Cl.writeUint32(e.keyframe ? 33554432 : 65536)),
                        t.isVideo && n.write(Cl.writeUint32(e.cts ? e.cts : 0))
                    }
                    )),
                    e.box(e.types.trun, this.extension(0, t.flags), i, r, n.buffer)
                }
            }, {
                key: "senc",
                value: function(t) {
                    var n = new Cl
                      , i = t.samples.length
                      , r = t.isVideo ? 16 : 8
                      , o = t.isVideo ? 2 : 0
                      , a = []
                      , s = 0;
                    return t.isVideo ? (a = t.videoSenc,
                    s = t.videoSencLength) : a = t.audioSenc,
                    s = s || r * i,
                    n.write(Cl.writeUint32(16 + s), e.types.senc, this.extension(0, o)),
                    n.write(Cl.writeUint32(i)),
                    a.forEach((function(e) {
                        for (var t = 0; t < e.InitializationVector.length; t++)
                            n.write(new Uint8Array([e.InitializationVector[t]]));
                        e.subsamples && e.subsamples.length && (n.write(Cl.writeUint16(e.subsamples.length)),
                        e.subsamples.forEach((function(e) {
                            n.write(Cl.writeUint16(e.BytesOfClearData)),
                            n.write(Cl.writeUint32(e.BytesOfProtectedData))
                        }
                        )))
                    }
                    )),
                    n.buffer
                }
            }, {
                key: "saio",
                value: function(t) {
                    var n = 12 * t.samples.length + 141;
                    !t.isVideo && t.isAudioEncryption && (n = 149);
                    var i = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n]);
                    return e.box(e.types.saio, i)
                }
            }, {
                key: "saiz",
                value: function(t) {
                    var n = t.samples.length
                      , i = new Uint8Array([0, 0, 0, 0, 16, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n]);
                    return e.box(e.types.saiz, i)
                }
            }, {
                key: "sbgp",
                value: function() {
                    var t = new Uint8Array([114, 111, 108, 108, 0, 0, 0, 1, 0, 0, 1, 25, 0, 0, 0, 1]);
                    return e.box(e.types.sbgp, this.extension(0, 0), t)
                }
            }, {
                key: "extension",
                value: function(e, t) {
                    return new Uint8Array([e, t >> 16 & 255, t >> 8 & 255, 255 & t])
                }
            }, {
                key: "tfhd",
                value: function(t) {
                    return e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t]))
                }
            }, {
                key: "tfdt",
                value: function(t) {
                    var n = Math.floor(t / (Ml + 1))
                      , i = Math.floor(t % (Ml + 1));
                    return e.box(e.types.tfdt, new Uint8Array([1, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i]))
                }
            }, {
                key: "trun",
                value: function(t, n) {
                    var i = t.length
                      , r = 12 + 16 * i;
                    n += 8 + r;
                    var o = new Uint8Array(r);
                    o.set([0, 0, 15, 1, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n], 0);
                    for (var a = 0; a < i; a++) {
                        var s = t[a]
                          , l = s.duration
                          , u = s.size
                          , c = s.flag
                          , h = void 0 === c ? {} : c
                          , d = s.cts
                          , f = void 0 === d ? 0 : d;
                        o.set([l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, 255 & u, h.isLeading << 2 | (null === h.dependsOn || void 0 === h.dependsOn ? 1 : h.dependsOn), h.isDependedOn << 6 | h.hasRedundancy << 4 | h.paddingValue << 1 | (null === h.isNonSyncSample || void 0 === h.isNonSyncSample ? 1 : h.isNonSyncSample), 61440 & h.degradationPriority, 15 & h.degradationPriority, f >>> 24 & 255, f >>> 16 & 255, f >>> 8 & 255, 255 & f], 12 + 16 * a)
                    }
                    return e.box(e.types.trun, o)
                }
            }, {
                key: "moovMP4",
                value: function(t) {
                    return e.box.apply(e, [e.types.moov, e.mvhd(t[0].duration, t[0].timescale)].concat(Ms(t.map((function(t) {
                        return e.trackMP4(t)
                    }
                    )))))
                }
            }, {
                key: "trackMP4",
                value: function(t) {
                    return e.box(e.types.trak, e.tkhd(t.id, t.duration, t.width, t.height), e.mdiaMP4(t))
                }
            }, {
                key: "mdiaMP4",
                value: function(t) {
                    return e.box(e.types.mdia, e.mdhd(t.duration, t.timescale), e.hdlr(t.type), e.minfMP4(t))
                }
            }, {
                key: "minfMP4",
                value: function(t) {
                    return e.box(e.types.minf, t.type === Xs ? e.VMHD : e.SMHD, e.DINF, e.stblMP4(t))
                }
            }, {
                key: "stblMP4",
                value: function(t) {
                    var n = t.ext
                      , i = [e.stsd(t), e.stts(n.stts), e.stsc(n.stsc), e.stsz(n.stsz), e.stco(n.stco)];
                    return n.stss.length && i.push(e.stss(n.stss)),
                    n.ctts.length && i.push(e.ctts(n.ctts)),
                    e.box.apply(e, [e.types.stbl].concat(i))
                }
            }, {
                key: "stts",
                value: function(t) {
                    var n = t.length
                      , i = new Uint8Array(8 * n)
                      , r = 0;
                    return t.forEach((function(e) {
                        var t = e.value
                          , n = e.count;
                        i.set([n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t], r),
                        r += 8
                    }
                    )),
                    e.box(e.types.stts, xs(new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n]), i))
                }
            }, {
                key: "stsc",
                value: function(t) {
                    var n = t.length
                      , i = new Uint8Array(12 * n)
                      , r = 0;
                    return t.forEach((function(e) {
                        var t = e.firstChunk
                          , n = e.samplesPerChunk
                          , o = e.sampleDescIndex;
                        i.set([t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o], r),
                        r += 12
                    }
                    )),
                    e.box(e.types.stsc, xs(new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n]), i))
                }
            }, {
                key: "stsz",
                value: function(t) {
                    var n = t.length
                      , i = new Uint8Array(4 * n)
                      , r = 0;
                    return t.forEach((function(e) {
                        i.set([e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e], r),
                        r += 4
                    }
                    )),
                    e.box(e.types.stsz, xs(new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n]), i))
                }
            }, {
                key: "stco",
                value: function(t) {
                    var n = t.length
                      , i = new Uint8Array(4 * n)
                      , r = 0;
                    return t.forEach((function(e) {
                        i.set([e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e], r),
                        r += 4
                    }
                    )),
                    e.box(e.types.stco, xs(new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n]), i))
                }
            }, {
                key: "stss",
                value: function(t) {
                    var n = t.length
                      , i = new Uint8Array(4 * n)
                      , r = 0;
                    return t.forEach((function(e) {
                        i.set([e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e], r),
                        r += 4
                    }
                    )),
                    e.box(e.types.stss, xs(new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n]), i))
                }
            }, {
                key: "ctts",
                value: function(t) {
                    var n = t.length
                      , i = new Uint8Array(8 * n)
                      , r = 0;
                    return t.forEach((function(e) {
                        var t = e.value
                          , n = e.count;
                        i.set([n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t], r),
                        r += 8
                    }
                    )),
                    e.box(e.types.ctts, xs(new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n]), i))
                }
            }, {
                key: "styp",
                value: function() {
                    return e.box(e.types.styp, new Uint8Array([109, 115, 100, 104, 0, 0, 0, 0, 109, 115, 100, 104, 109, 115, 105, 120]))
                }
            }, {
                key: "sidx",
                value: function(t) {
                    var n = t.timescale
                      , i = t.samples[0].duration
                      , r = i * t.samples.length
                      , o = t.samples[0].sampleOffset * i
                      , a = 8;
                    t.samples.forEach((function(e) {
                        a += e.size
                    }
                    ));
                    var s = 0;
                    if (t.isVideo) {
                        var l, u = 0;
                        t.videoSenc && (l = t.videoSenc),
                        t.isVideo && l.forEach((function(e) {
                            u += 8,
                            e.subsamples && e.subsamples.length && (u += 2,
                            u += 6 * e.subsamples.length)
                        }
                        )),
                        t.videoSencLength = u,
                        s = a + 141 + 16 * t.samples.length + u,
                        t.useEME && t.isAudioEncryption && !t.isVideoEncryption && (s = a + 16 * t.samples.length + 84)
                    } else
                        s = a + 116 + 12 * t.samples.length,
                        t.useEME && t.isAudioEncryption && (s = a + 169 + 12 * t.samples.length + 8 * t.audioSenc.length);
                    var c = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 255 & t.id, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o, 0, 0, 0, 0, 0, 0, 0, 1, 0, s >> 16 & 255, s >> 8 & 255, 255 & s, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, 144, 0, 0, 0]);
                    return e.box(e.types.sidx, c)
                }
            }, {
                key: "mdat",
                value: function(t) {
                    return e.box(e.types.mdat, t)
                }
            }])
        }();
        bl = Pl,
        Cs(Pl, "types", ["av01", "av1C", "avc1", "avcC", "hvc1", "hvcC", "dinf", "dref", "edts", "elst", "esds", "ftyp", "hdlr", "mdat", "mdhd", "mdia", "mfhd", "minf", "moof", "moov", "mp4a", "mvex", "mvhd", "pasp", "stbl", "stco", "stsc", "stsd", "stsz", "stts", "tfdt", "tfhd", "traf", "trak", "trex", "tkhd", "vmhd", "smhd", "ctts", "stss", "styp", "pssh", "sidx", "sbgp", "saiz", "saio", "senc", "trun", "encv", "enca", "sinf", "btrt", "frma", "tenc", "schm", "schi", "mehd", "fiel", "sdtp", "bvc2", "bv2C"].reduce((function(e, t) {
            return e[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)],
            e
        }
        ), Object.create(null))),
        Cs(Pl, "HDLR_TYPES", {
            video: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
            audio: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0])
        }),
        Cs(Pl, "FTYPAVC1", bl.box(bl.types.ftyp, new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49]))),
        Cs(Pl, "FTYPHEV1", bl.box(bl.types.ftyp, new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 104, 101, 118, 49]))),
        Cs(Pl, "DINF", bl.box(bl.types.dinf, bl.box(bl.types.dref, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])))),
        Cs(Pl, "VMHD", bl.box(bl.types.vmhd, new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]))),
        Cs(Pl, "SMHD", bl.box(bl.types.smhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]))),
        Cs(Pl, "StblTable", new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
        Cs(Pl, "STTS", bl.box(bl.types.stts, bl.StblTable)),
        Cs(Pl, "STSC", bl.box(bl.types.stsc, bl.StblTable)),
        Cs(Pl, "STSZ", bl.box(bl.types.stsz, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))),
        Cs(Pl, "STCO", bl.box(bl.types.stco, bl.StblTable));
        var Rl = function() {
            return ks((function e(t, n, i) {
                Ss(this, e),
                this.videoTrack = t,
                this.audioTrack = n;
                var r = /Chrome\/([^.]+)/.exec(navigator.userAgent);
                this.forceFirstIDR = r && Number(r[1]) < 50,
                this.log = new Tl("FMP4Remuxer",!i || !i.openLog || !i.openLog)
            }
            ), [{
                key: "remux",
                value: function() {
                    var e, t, n, i, r, o = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, s = this.videoTrack, l = this.audioTrack, u = s.exist(), c = l.exist(), h = [];
                    return o && (a && a.initMerge ? (u && h.push(this.videoTrack),
                    c && h.push(this.audioTrack),
                    n = Pl.initSegment(h)) : (u && (e = Pl.initSegment([this.videoTrack])),
                    c && (t = Pl.initSegment([this.audioTrack])))),
                    u && s.hasSample() && (i = this._remuxVideo()),
                    c && l.hasSample() && (r = this._remuxAudio()),
                    s.samples = [],
                    l.samples = [],
                    {
                        initSegment: n,
                        videoInitSegment: e,
                        audioInitSegment: t,
                        videoSegment: i,
                        audioSegment: r
                    }
                }
            }, {
                key: "_remuxVideo",
                value: function() {
                    var e = this.videoTrack;
                    this.forceFirstIDR && (e.samples[0].flag = {
                        dependsOn: 2,
                        isNonSyncSample: 0
                    });
                    var t = e.samples
                      , n = /av01/.test(e.codec)
                      , i = 0;
                    n ? t.forEach((function(e) {
                        i += e.data.byteLength
                    }
                    )) : t.forEach((function(e) {
                        i += e.units.reduce((function(e, t) {
                            return e + t.byteLength
                        }
                        ), 0),
                        i += 4 * e.units.length
                    }
                    ));
                    var r = new Uint8Array(i);
                    if (n)
                        for (var o, a = 0, s = t.length, l = 0; a < s; a++)
                            o = t[a],
                            r.set(o.data, l),
                            o.size = o.data.byteLength,
                            l += o.size;
                    else
                        for (var u, c = new DataView(r.buffer), h = function(e, n) {
                            n = t[d];
                            var i = 0;
                            n.units.forEach((function(t) {
                                c.setUint32(e, t.byteLength),
                                e += 4,
                                r.set(t, e),
                                e += t.byteLength,
                                i += 4 + t.byteLength
                            }
                            )),
                            n.size = i,
                            p = e,
                            u = n
                        }, d = 0, f = t.length, p = 0; d < f; d++)
                            h(p, u);
                    var g = Pl.mdat(r);
                    return xs(Pl.moof([e]), g)
                }
            }, {
                key: "_remuxAudio",
                value: function() {
                    var e = this.audioTrack
                      , t = new Uint8Array(e.samples.reduce((function(e, t) {
                        return e + t.size
                    }
                    ), 0));
                    e.samples.reduce((function(e, n) {
                        return t.set(n.data, e),
                        e + n.size
                    }
                    ), 0);
                    var n = Pl.mdat(t);
                    return xs(Pl.moof([e]), n)
                }
            }, {
                key: "reset",
                value: function() {
                    this.videoTrack.reset(),
                    this.audioTrack.reset()
                }
            }])
        }()
          , xl = Object.defineProperty
          , El = (e, t, n) => ( (e, t, n) => t in e ? xl(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        const Dl = {
            MEDIA_EXPIRED: "MEDIA_EXPIRED",
            INIT_FAIL: "INIT_FAIL",
            PARSE_ERROR: "PARSE_ERROR",
            PLAYER_LOG: "PLAYER_LOG",
            BUFFERED_RESET: "BUFFERED_RESET"
        }
          , Ll = "real_time_speed"
          , Il = "is unsupported"
          , Ol = "buffer_control"
          , Al = "cdn"
          , Gl = "pcdn"
          , Nl = new Map
          , Bl = new Map
          , $l = new Map
          , Fl = "gop"
          , Hl = "size"
          , Ul = {
            BUFFER_CONTROLS: "buffer_control"
        }
          , Vl = "timer_update"
          , jl = "h264"
          , zl = "h265"
          , Xl = "h266"
          , Kl = "0.2.1"
          , Ql = {
            416: Ao[Oo.NETWROK_RANGE_NOT_SATISFIABLE],
            403: Ao[Oo.NETWORK_FORBIDDEN],
            404: Ao[Oo.NETWORK_NOTFOUND],
            timeout: Ao[Oo.NETWORK_TIMEOUT],
            "4xx": `${Ao[Oo.NETWORK]}4XX`,
            "5xx": `${Ao[Oo.NETWORK]}5XX`,
            networkError: Ao[Oo.NETWORK],
            contentError: `${Ao[Oo.NETWORK]}contentError`,
            mse: Ao[Oo.MEDIA][Oo.SUB_TYPES.MSE_OTHER],
            mseOpen: Ao[Oo.MEDIA][Oo.SUB_TYPES.MSE_ADD_SB],
            mseAppend: Ao[Oo.MEDIA][Oo.SUB_TYPES.MSE_APPEND_BUFFER],
            mse_hijack: Ao[Oo.MEDIA][Oo.SUB_TYPES.MSE_HIJACK],
            eme_hijack: Ao[Oo.MEDIA][Oo.SUB_TYPES.EME_HIJACK],
            metaError: Ao[Oo.DEMUX][Oo.SUB_TYPES.MP4],
            muxError: Ao[Oo.REMUX][Oo.SUB_TYPES.FMP4],
            other: Ao[Oo.OTHER],
            waitTimeout: Ao[Oo.RUNTIME][Oo.SUB_TYPES.BUFFERBREAK_ERROR],
            waitTimeoutWithHidden: Ao[Oo.RUNTIME][Oo.SUB_TYPES.WAITING_TIMEOUT_ERROR],
            drm: Ao[Oo.DRM][Oo.SUB_TYPES.LICENSE]
        }
          , Wl = Oo;
        class ql {
            constructor(e, t, n) {
                let i = 0
                  , r = 0;
                n && n.range && n.range.length > 1 && (i = n.range[0],
                r = n.range[1]);
                const o = function(e) {
                    return Ql[e] || e
                }(t);
                return {
                    errorCode: o,
                    errorType: e,
                    errorMessage: (null == n ? void 0 : n.httpText) || (null == n ? void 0 : n.message),
                    url: null == n ? void 0 : n.url,
                    httpCode: t,
                    version: Kl,
                    rangeStart: i,
                    rangeEnd: r,
                    ext: n,
                    mediaError: {
                        code: o,
                        message: (null == n ? void 0 : n.httpText) || (null == n ? void 0 : n.message)
                    }
                }
            }
        }
        class Zl {
            constructor(e, t, n) {
                return {
                    errorCode: t,
                    errorType: e,
                    version: Kl,
                    errorMessage: n.msg,
                    ext: n,
                    mediaError: {
                        code: t,
                        message: n.msg
                    }
                }
            }
        }
        const Yl = [{
            range: [0, 90],
            size: 614400
        }, {
            range: [90, 120],
            size: 819200
        }, {
            range: [120, Number.MAX_VALUE],
            size: 1024e3
        }];
        function Jl(e, t, n) {
            let i = n > 51200 ? Math.min(n, t) : t;
            if (!e)
                return i;
            for (let r = 0; r < Yl.length; r++)
                if (e >= Yl[r].range[0] && e < Yl[r].range[1]) {
                    i = Math.min(Math.max(i, Yl[r].size), n > 0 ? n : t);
                    break
                }
            return i
        }
        const eu = function() {
            try {
                return typeof localStorage < "u" && "setItem"in window.localStorage && !!window.localStorage.setItem
            } catch {
                return !1
            }
        }() && !function() {
            const e = "_localstorage_support_test";
            try {
                return window.localStorage.setItem(e, !0),
                window.localStorage.removeItem(e),
                !1
            } catch {
                return !0
            }
        }()
          , tu = ru()
          , nu = function() {
            if (eu)
                try {
                    return !!window.localStorage.getItem("playertestlog")
                } catch {
                    return !1
                }
            return !1
        }()
          , iu = {
            1: "debug",
            2: "log",
            3: "warn",
            4: "error"
        };
        function ru() {
            if (eu)
                try {
                    return !!window.localStorage.getItem("playerlog")
                } catch {
                    return !1
                }
            return !1
        }
        function ou(e, t, n, ...i) {
            const r = iu[t];
            r && e && e[r] && e[r](n, ...i)
        }
        function au(e="div", t="", n={}, i="") {
            const r = document.createElement(e);
            return r.className = i,
            r.innerHTML = t,
            Object.keys(n).forEach((t => {
                const i = t
                  , o = n[t];
                "video" === e || "audio" === e || "live-video" === e ? o && r.setAttribute(i, o) : r.setAttribute(i, o)
            }
            )),
            r
        }
        function su(e) {
            return Object.prototype.toString.call(e).match(/([^\s.*]+)(?=]$)/g)[0]
        }
        function lu() {
            try {
                return parseInt(performance.now(), 10)
            } catch {
                return (new Date).getTime()
            }
        }
        function uu(e, t) {
            try {
                const n = e.indexOf("?");
                return n < 0 ? Object.keys(t).forEach(( (n, i) => {
                    e += 0 === i ? `?${n}=${t[n]}` : `&${n}=${t[n]}`
                }
                )) : Object.keys(t).forEach((i => {
                    n === e.length - 1 ? e += `${i}=${t[i]}` : e += `&${i}=${t[i]}`
                }
                )),
                e
            } catch {
                return e
            }
        }
        function cu(e, t) {
            return Object.keys(t).forEach((n => {
                const i = su(t[n])
                  , r = su(e[n]);
                "Array" === i ? ("Array" !== r && (e[n] = []),
                e[n].push(...t[n])) : "Object" === i ? ("Object" !== r && (e[n] = {}),
                cu(e[n], t[n])) : e[n] = t[n]
            }
            )),
            e
        }
        function hu(e, t) {
            try {
                return e && t ? parseInt(t * e / 8, 10) : 0
            } catch {
                return 0
            }
        }
        function du(e, t) {
            const n = [];
            let i = 0;
            e && n.push(e),
            t && n.push(t),
            n.every((e => (e && (i += e.byteLength),
            !0)));
            const r = new Uint8Array(i);
            let o = 0;
            return n.every((e => (e && (r.set(e, o),
            o += e.byteLength),
            !0))),
            r
        }
        function fu(e, t, n) {
            let i = null
              , r = null;
            return i = e < t.length - 1 ? t[e] : t[t.length - 1],
            r = e < n.length - 1 ? n[e] : n[n.length - 1],
            [Math.min((null == i ? void 0 : i.range[0]) || 1 / 0, (null == r ? void 0 : r.range[0]) || 1 / 0), Math.max(null == i ? void 0 : i.range[1], null == r ? void 0 : r.range[1])]
        }
        function pu(e) {
            if ("String" !== su(e) || !e)
                return "";
            const t = e.split("/");
            let n = "";
            return t.length > 3 && t[2] && (n = t[2]),
            n
        }
        function gu(e) {
            let t, n = 0;
            for (; n < 10; )
                try {
                    if (t = new Uint8Array(e),
                    t && t.byteLength > 0)
                        break;
                    n++
                } catch {
                    n < 10 ? n++ : console.error("repeat data cache  new array failed final", 10)
                }
            return t
        }
        const mu = {
            playBtnClick: (e, t, n, i) => {
                e.paused || e.waitingMoreBuffer && (e.waitingMoreBuffer = !1),
                i.call(e, t, n)
            }
        }
          , vu = {
            waiting: (e, t) => {
                const {player: n, eventName: i} = e;
                n.waitingMoreBuffer = !0,
                t(i, e)
            }
            ,
            play: (e, t) => {
                const {player: n, eventName: i} = e;
                n.waitingMoreBuffer || t(i, e)
            }
            ,
            pause: (e, t) => {
                const {player: n, eventName: i} = e;
                n.waitingMoreBuffer || t(i, e)
            }
            ,
            seeking: (e, t) => {
                const {player: n, eventName: i} = e;
                n.isSeekingStart = !0,
                t(i, e)
            }
            ,
            progress: (e, t) => {
                ou(">>>>progress");
                const {player: n, eventName: i} = e;
                if (n.waitingMoreBuffer) {
                    const e = n.getBufferedRange(n.buffered2);
                    0 === e[0] && 0 === e[1] || (void 0 === n.inWaitingStart || n.isSeekingStart ? (ou("progress startplay or seek ended"),
                    e[1] - n.currentTime >= (n.config.canplayWaterLevel || 1) || e[1] > n.duration - 1 ? (ou("progress out bufferWaterLevel"),
                    n.play()) : (ou("progress not out bufferWaterLevel"),
                    n.emit("waiting"))) : (ou("progress video waiting end"),
                    e[1] - n.currentTime >= (n.config.bufferWaterLevel || 5) || e[1] > n.duration - 1 ? (ou("progress out bufferWaterLevel"),
                    n.play()) : (ou("progress not out bufferWaterLevel"),
                    n.emit("waiting"))))
                }
                t(i, e)
            }
            ,
            playing: (e, t) => {
                const {player: n, eventName: i} = e;
                ou("playing");
                const r = n.getBufferedRange(n.buffered2);
                if (0 === r[0] && 0 === r[1])
                    return ou("playing currentTime no buffer, not out bufferWaterLevel"),
                    n.waitingMoreBuffer = !0,
                    n.pause(),
                    void t.call("waiting", e);
                void 0 === n.inWaitingStart || n.isSeekingStart ? (ou("playing startplay or seek ended"),
                r[1] - n.currentTime >= (n.config.canplayWaterLevel || 1) || r[1] > n.duration - 1 ? (ou("playing out bufferWaterLevel"),
                n.waitingMoreBuffer = !1,
                n.isSeekingStart = !1,
                t(i, e)) : (ou("playing not out bufferWaterLevel"),
                n.waitingMoreBuffer = !0,
                n.pause(),
                t.call("waiting", e))) : (ou("playing video waiting ended"),
                r[1] - n.currentTime >= (n.config.bufferWaterLevel || 5) || r[1] > n.duration - 1 ? (ou("playing out bufferWaterLevel"),
                n.waitingMoreBuffer = !1,
                t(i, e)) : (ou("playing not out bufferWaterLevel"),
                n.waitingMoreBuffer = !0,
                n.pause(),
                t.call("waiting", e)))
            }
        };
        function yu(e, t) {
            return Math.round(8 * e * 1e3 / t / 1024)
        }
        function _u(e) {
            var t, n;
            return !((null == (t = null == e ? void 0 : e.message) ? void 0 : t.indexOf("Failed to fetch")) >= 0 || null != e && e.response && (null == (n = e.response) ? void 0 : n.status) >= 400 && e.response.status <= 599)
        }
        function Tu(e, t, n) {
            e.video && e.video.addEventListener(t, n)
        }
        function bu(e, t, n) {
            e.video && e.video.removeEventListener(t, n)
        }
        function Su(e) {
            return e && e.video && "function" == typeof e.video.getStats ? e.video.getStats() : null
        }
        function wu(e) {
            const {kid: t, drmKeyToken: n, secretKey: i, keyValue: r, drm: o} = e;
            return t || n || i || r || o
        }
        function ku(e) {
            const {cachedBufferDur: t, loadTarDuration: n, loadDuration: i, forceSetMin: r} = e
              , {PCDNInBuffer: o, PCDNOutBuffer: a, loadSize: s} = e;
            return {
                buffer_dur: t || -1,
                load_tar_dur: n || -1,
                load_dur: i || -1,
                force_set_min: r,
                in_buf: o || -1,
                out_buf: a || -1,
                load_size: s || -1
            }
        }
        const Cu = {
            "x-cache": "x_cache",
            "x-response-sinfo": "server_ip",
            "x-response-cinfo": "x-response-cinfo",
            "content-range": "content-range",
            "content-length": "content-length",
            "content-type": "content-type"
        };
        function Mu(e) {
            const t = {};
            return !e || !e.get || Object.keys(Cu).forEach((n => {
                const i = Cu[n];
                e.get(n) && (t[i] = e.get(n))
            }
            )),
            t
        }
        function Pu(e) {
            const t = Cu["content-range"];
            if (e && e.get && e.get(t)) {
                const n = e.get(t).split("/");
                if (2 === (null == n ? void 0 : n.length))
                    return n[1]
            }
            return null
        }
        const Ru = "error"
          , xu = "metaReady"
          , Eu = "moov_request_Progress"
          , Du = "progress_event"
          , Lu = "updateEME"
          , Iu = "init_MSE"
          , Ou = "chaneg_url"
          , Au = "update_load_fragmentIdx"
          , Gu = "remove_pcdn_node"
          , Nu = "load_error"
          , Bu = "cancel_loaded_len"
          , $u = "load_len_not_match_error"
          , Fu = "close"
          , Hu = "forbidden"
          , Uu = {}
          , Vu = class e extends A {
            constructor(t, n, i, r=[], o) {
                var a;
                super(),
                El(this, "markErrHost", (e => {
                    e && (Uu[e] = !0,
                    this.log(Co.WARN, "[mp4loader markErrHost]", e))
                }
                )),
                El(this, "onprogressDataArrive", (async (e, t, n, i) => {
                    var r;
                    const o = (null == (r = null == n ? void 0 : n.priOptions) ? void 0 : r.type) || Al
                      , a = this.adaptTimeRange[n.index].range;
                    if (e && e.byteLength > 0 ? (!this._optionDataLenInfo[o] && (this._optionDataLenInfo[o] = 0),
                    this._optionDataLenInfo[o] += e.byteLength,
                    this._receiveDataPos = null == n ? void 0 : n.range[1],
                    a && n.range[1] > a[1] && !t && (t = !0,
                    this.log(Co.LOG, "[onprogressDataArrive] receive data, check state set true >>> index,", n.index, ",range,", JSON.stringify(n.range))),
                    this.cacheRepeatData(this.adaptTimeRange[n.index].repeatRange, n.range, e),
                    this.log(Co.LOG, "[onprogressDataArrive] receive data, >>> index,", n.index, ",range,", JSON.stringify(n.range), ", dataLen,", e.byteLength, ",loadType,", o, t),
                    this._mux(e, n.range[0], n.index, t)) : this.log(Co.LOG, "[onprogressDataArrive] receive data null, >>> index,", n.index, ",range,", JSON.stringify(n.range), ", dataLen,", null == e ? void 0 : e.byteLength, ",loadType,", o, t),
                    t) {
                        this._optionDataLenInfo[o] = 0;
                        const e = Mu(i.headers);
                        this.totalSize || (this.totalSize = function(e) {
                            try {
                                const t = Object.keys(e).filter((e => "content-range" === e));
                                if (t.length > 0) {
                                    const n = e[t[0]].split("/");
                                    if (2 === (null == n ? void 0 : n.length))
                                        return parseInt(n[1], 10)
                                }
                                return 0
                            } catch (e) {
                                return console.error(e),
                                0
                            }
                        }(e));
                        const t = a && a.length >= 0 ? Number(a[1]) : 0;
                        if ((null == a ? void 0 : a.length) > 0 && (!t || t && ((null == n ? void 0 : n.range[1]) === t + 1 || this.totalSize === t)))
                            this.adaptTimeRange[n.index].downloaded = !0,
                            this.log(Co.LOG, "[FragLoadDowned],fragmentIdx,", n.index, ",rangeEnd,", n.range[1]);
                        else {
                            await this.cancelLoading();
                            const {startTime: t, endTime: r} = this.adaptTimeRange[n.index];
                            this.emit($u, [t, r]);
                            const s = o === Al ? this.url : this._pcdnNodeList[0].url
                              , l = pu(s);
                            this.emit(Nu, {
                                src: s,
                                host: l,
                                errorCode: Ql.contentError,
                                message: "progress dataLen not match",
                                range: JSON.stringify(a),
                                headers: e
                            }),
                            this.log(Co.LOG, "[FragLoadDowned check false, len is not match],fragmentIdx,", n.index, ",rangeEnd,", n.range[1], JSON.stringify(a), JSON.stringify(e), s, null == i ? void 0 : i.url),
                            await this.loadAllFragmentData(this._curLoadSegIdx, this._loadSuccessCallBack)
                        }
                    }
                }
                )),
                this.timeRecord = {
                    startMuxTime: -1,
                    startLoadTime: -1,
                    newMP4Time: lu(),
                    startLoadMetaTime: -1
                },
                this.updateUrl(t, r || []),
                this._bitRate = n || 0,
                this.options = e.getDefaultConfig(),
                Object.keys(i).map((e => {
                    void 0 !== i[e] && null !== i[e] && (this.options[e] = i[e])
                }
                )),
                this.logger = i.logger,
                this.timeRange = [],
                this.adaptTimeRange = [],
                this.firstFrameTime = o || {},
                this.fileSize = null == i ? void 0 : i.fileSize,
                this.totalSize = 0,
                this.CHUNK_SIZE = (null == (a = this.options) ? void 0 : a.firstLoadSize) || Jl(i.duration, this.options.chunkSize, this.fileSize),
                this._firstLoadSize = this.CHUNK_SIZE,
                this.log(Co.LOG, "[getFirstLoadSize], firstLoadSize ", this._firstLoadSize, ",dur,", i.duration, ",chunkSize,", this.CHUNK_SIZE, ",fileSize,", this.fileSize),
                this._repeatInfo = {
                    startPos: -1,
                    curDataPos: 0,
                    usedPos: 0,
                    data: gu(1048576)
                },
                this.meta = null,
                this.preloadCache = null,
                this.videoTrak = null,
                this.audioTrak = null,
                this._loadSuccessCallBack = null,
                this._isPending = !1,
                this.metaLoading = !1,
                this.MP4Loader = new pl({
                    url: t,
                    vid: `${i.vid}-${n}`,
                    retry: i.retryCount || 2,
                    retryDelay: i.retryDelay || 1e3,
                    timeout: i.timeout || 3e3,
                    segmentDuration: i.segmentDuration,
                    fixEditListOffset: i.fixEditListOffset,
                    ...i.reqOptions,
                    loaderType: i.loaderType,
                    retryCheckFunc: _u,
                    openLog: tu
                }),
                this.MP4Demuxer = null,
                this.FMP4Remuxer = null,
                this._needInitSegment = !0,
                this._bitRateInfoMap = new Map,
                this._switchBitRate = !1,
                this._segmentToBitRateMap = new Map,
                this.useEME = !1,
                this.secretKey = null,
                this.decryptKey = null,
                this.keyValue = null,
                this.initTransMuxWorker(),
                this.seekTime = -1,
                this.changeBitRateTime = -1,
                this._PCDNState = Fu,
                this._pcdnNodeList = [],
                this.loadInfo = {},
                this.pcdnTraceInfo = null,
                this._loadedDataState = !1,
                this._PCDNSwitchCnt = 0,
                this._isUseCDN = !0,
                this._curLoadSegIdx = 0,
                this._receiveDataPos = -1,
                this._optionDataLenInfo = {},
                this._lastPCDNUrl = "",
                this._lastTargetDur = 0,
                this.pcdnVVStat = this.resetPCDNVVStat(),
                this.pSCCancelCnt = 0,
                this._lastDemuxSampleIdxRange = {
                    video: 0,
                    audio: 0
                },
                this._mediaEndTime = -1
            }
            static get pcdnDownLoadReqCnt() {
                const {pcdn_download_request_cnt: t, pcdn_download_failed_cnt: n} = e;
                return e.pcdn_download_request_cnt = 0,
                e.pcdn_download_failed_cnt = 0,
                {
                    pcdn_download_request_cnt: t,
                    pcdn_download_failed_cnt: n
                }
            }
            static getDefaultConfig() {
                return {
                    onProcessMinLen: 1024,
                    xhrSetup: null,
                    chunkSize: 8e5,
                    isCache: !1,
                    playerId: "",
                    vid: "",
                    afterLoadeddataCallBackLen: 0,
                    ext: {}
                }
            }
            get size() {
                return this.fileSize
            }
            initTransMuxWorker() {}
            updateSecretKey(e, t, n, i) {
                var r;
                this.useEME = e,
                !e && t ? (this.log(Co.LOG, "[updateSecretKey] ,force enableWorker"),
                this.options.enableWorker = !0,
                this.transmuxerWorkerControl || this.initTransMuxWorker()) : !e && i && (this.keyValue = i),
                this.log(Co.LOG, "[updateSecretKey] ,useEME, ", e, ",secretKey,", t, ",decryptKey", n),
                null == (r = this.transmuxerWorkerControl) || r.updateValue({
                    secretKey: t,
                    decryptKey: n
                })
            }
            updateLoadedDataDone() {
                this._loadedDataState = !0
            }
            get PCDNSwitchCnt() {
                return this._PCDNSwitchCnt
            }
            updateLoadInfo(e, t) {
                this.loadInfo || (this.loadInfo = {}),
                this.loadInfo[e] || (this.loadInfo[e] = {},
                this.loadInfo[e].loadLen = 0),
                this.loadInfo[e].loadLen += t
            }
            async updatePCDNState(e) {
                if (this._PCDNState !== Hu && this._PCDNState !== e && this.log(Co.LOG, "[pcdn state update]", this._PCDNState, " - ", e),
                e === Hu)
                    this._PCDNState = e;
                else if (this._PCDNState !== Hu && this._PCDNState !== e) {
                    if (this._isUseCDN || e !== Fu)
                        this._PCDNState = e;
                    else {
                        if (this._PCDNState = e,
                        this.adaptTimeRange[this._curLoadSegIdx].downloaded || this._switchBitRate)
                            return void this.log(Co.LOG, "[pcdn] switch cdn ", this._curLoadSegIdx, "downloaded", ",switchBitRate, ", this._switchBitRate);
                        await this.cancelLoading(),
                        this.pSCCancelCnt++;
                        const t = this._curLoadSegIdx;
                        this.log(Co.LOG, "[pcdn] cancelLoading ", t, "switch cdn load");
                        const n = this.getFragRange(t);
                        if (this._receiveDataPos && this._receiveDataPos >= n[0] && this._receiveDataPos <= n[1]) {
                            const e = n[0];
                            n[0] = this._receiveDataPos,
                            this.log(Co.LOG, "[pcdn] switch cdn, adject range", t, JSON.stringify(n), ",oldRange,", `${e} - ${n[1]}`)
                        }
                        this._receiveDataPos = -1,
                        await this.startLoad(n, t)
                    }
                    this.log(Co.LOG, "[pcdn] openPCDN ", e)
                }
            }
            updateNode(e) {
                if (e && e.length > 0) {
                    const t = e.filter((e => {
                        if (!Object.prototype.hasOwnProperty.call(Uu, pu(null == e ? void 0 : e.url)))
                            return e
                    }
                    ));
                    this._pcdnNodeList = t
                }
            }
            clearPCDNNodeList() {
                this.log(Co.LOG, "[pcdn] clearPCDNNodeList"),
                this._pcdnNodeList = []
            }
            get isUpdateNode() {
                return !this._pcdnNodeList || !this._pcdnNodeList.length
            }
            isUsePCDN() {
                var e;
                return "open" === this._PCDNState && (null == (e = this._pcdnNodeList) ? void 0 : e.length) > 0
            }
            async changeBitRate(e) {
                e.bitrate !== this._bitRate && (this.updateUrl(e._mainURL, e._backupURL),
                this._bitRate = e.bitrate,
                this._receiveDataPos = -1,
                await this.MP4Loader.changeUrl(this.url, `${this.options.vid}-${this._bitRate}`, this.CHUNK_SIZE),
                this._pcdnNodeList = null,
                this.emit(Ou, this.url),
                this._switchBitRate = !0,
                this._mediaEndTime = -1,
                this.log(Co.LOG, "[switchBitrate] changeUrl, bitRate,", this._bitRate, "url", this.url))
            }
            _getByPreload(e, t, n, i) {
                try {
                    if (e && e.byteLength >= t) {
                        const r = {
                            endTime: (new Date).getTime(),
                            startTime: (new Date).getTime(),
                            index: i,
                            range: [],
                            vid: this.options.vid,
                            from: "local"
                        };
                        if (n <= e.byteLength) {
                            const i = e.slice(t, n);
                            return r.range = [t, n],
                            r.state = !0,
                            {
                                buffer: i,
                                context: r,
                                state: !0
                            }
                        }
                        {
                            const n = e.byteLength - 1
                              , i = e.slice(t, n);
                            return r.range = [t, n],
                            {
                                context: r,
                                buffer: i,
                                state: !1
                            }
                        }
                    }
                    return null
                } catch (e) {
                    return console.error("[MP4] _getByPreload", t, n, e),
                    null
                }
            }
            log(e, t, ...n) {
                const {options: i} = this
                  , r = i && i.vid ? `[MP4]${this._logTag} ${i.vid} ${t}` : `[MP4]${this._logTag} ${t}`;
                ou(this.logger, e, r, ...n)
            }
            async errorHandler(e, t, n={}) {
                const {response: i, message: r} = e
                  , o = this.options ? this.options.vid : "";
                let a = null;
                if (this._isPending = !0,
                i) {
                    const s = Mu(i.headers);
                    if (a = new ql("network",i.status,{
                        httpText: i.httpText,
                        message: r,
                        url: i.url,
                        range: n.range,
                        headers: s
                    }),
                    this.log(Co.LOG, `[MP4] [${o}] errorHandler error state:[${t}],\n          _isPending:[${this._isPending}] `, null == i ? void 0 : i.status, r),
                    this.backUrl && this.backUrl.length > 0) {
                        const i = this.backUrl.shift();
                        if (this.updateUrl(i, this.backUrl),
                        this.log(Co.LOG, `[${o}] errorHandler start backUpUrl retry`, this.backUrl.length, i),
                        this._isPending = !1,
                        this.MP4Loader && (await this.MP4Loader.changeUrl(this.url, `${this.url}-${this._bitRate}`, this.CHUNK_SIZE),
                        this.emit(Ou, this.url)),
                        this.emit(Du, {
                            type: "error",
                            error: e
                        }),
                        "getMetaInfo" === t)
                            return void this.getMetaInfo();
                        if ("loadFragment" === t) {
                            const {fragIndex: e, range: t} = n;
                            if (null !== e && e >= 0 && t)
                                return this.resetFragmentLoadState(e),
                                void this.loadFragment(e, t)
                        }
                    }
                    a.context = n,
                    a.response = i,
                    this.log(Co.LOG, `errorHandler end, ${JSON.stringify(n)}`),
                    this.emit(Ru, a, t)
                } else
                    this.log(Co.LOG, `errorHandler other end, ${t},${null == i ? void 0 : i.status}, ${r}`),
                    a = e,
                    a.context = n,
                    this.emit(Ru, a, t)
            }
            async init(e) {
                var t, n, i;
                this.url && await this.MP4Loader.changeUrl(this.url, `${this.options.vid}-${this._bitRate}`, this.CHUNK_SIZE),
                this.emit(Ou, this.url),
                this.meta = null;
                const {meta: r, mediaSegList: o, buffer: a, fileSize: s, initSeg: l, bitrate: u, adaptTimeRange: c, repeatData: h} = e;
                if (r && r.ext) {
                    s && (this.fileSize = s),
                    this.meta = r,
                    this.videoTrak = r.ext.videoTrak,
                    this.audioTrak = r.ext.audioTrak,
                    this.meta.videoSamplesLen = this.videoTrak.reduce(( (e, t) => e + t.frames.length), 0),
                    this.meta.audioSamplesLen = this.audioTrak.reduce(( (e, t) => e + t.frames.length), 0),
                    this._bitRate = u,
                    this.timeRange = this.getTimeRange(),
                    this.adaptTimeRange = function(e) {
                        const t = [];
                        if (!e || !e.length || 0 === e.length)
                            return t;
                        for (let n = 0; n < e.length; n++) {
                            const i = e[n]
                              , r = {};
                            for (const e in i)
                                Object.prototype.hasOwnProperty.call(i, e) && (r[e] = i[e]);
                            t.push(r)
                        }
                        return t
                    }(c),
                    o ? (this.preloadCache = {
                        segList: o || [],
                        initSeg: l
                    },
                    (null == (t = this.adaptTimeRange) ? void 0 : t.length) > 0 && (null == h ? void 0 : h.byteLength) > 0 && this.cacheRepeatData(this.adaptTimeRange[0].repeatRange, this.adaptTimeRange[0].repeatRange, h)) : a && (null == (n = this.adaptTimeRange) ? void 0 : n.length) > 0 && (null == a ? void 0 : a.byteLength) > 0 && this.cacheRepeatData(this.adaptTimeRange[0].range, this.adaptTimeRange[0].range, a),
                    this.adaptTimeRange.map((e => {
                        e.downloaded = !1,
                        e.isLoading = !1
                    }
                    ));
                    for (let e = 0; e < this.adaptTimeRange.length; e++)
                        null == (i = this.updateTimeRangeInAdaptTimeRangeIdx) || i.call(this, this.adaptTimeRange[e].timeRangeIdx, e);
                    const e = {
                        meta: r,
                        videoSegments: r.ext.videoTrak,
                        audioSegments: r.ext.audioTrak,
                        bufferLoaded: a || null
                    };
                    this._bitRateInfoMap.set(this._bitRate, e),
                    this.emit(xu, this.meta)
                } else
                    await this.getMetaInfo()
            }
            getTimeRange() {
                const e = [];
                let t = null;
                for (let n = 0; this.videoTrak && n < this.videoTrak.length; n++) {
                    const {startTime: i} = this.videoTrak[n]
                      , {endTime: r} = this.videoTrak[n];
                    t = {
                        startTime: i,
                        endTime: r,
                        duration: r - i,
                        downloaded: !1,
                        isLoading: !1
                    },
                    e.push(t)
                }
                if (this.audioTrak && this.audioTrak.length > e.length)
                    for (let n = e.length; n < this.audioTrak.length; n++) {
                        const i = Math.max(this.audioTrak[n].startTime, t ? t.endTime : 0)
                          , r = Math.max(this.audioTrak[n].endTime, t ? t.endTime : 0);
                        t = {
                            startTime: i,
                            endTime: r,
                            duration: r - i,
                            downloaded: !1,
                            isLoading: !1
                        },
                        e.push(t)
                    }
                return e
            }
            async getMetaInfo(e=!0) {
                var t;
                try {
                    const t = lu();
                    this.metaLoading = !0,
                    this.log(Co.LOG, "getMetaInfo start, bitRate,", this._bitRate, ",url,", this.MP4Loader.url),
                    this.resetRepeatInfo();
                    const n = async (n, i, r, o, a) => {
                        var s;
                        if (o) {
                            await this.cancelLoading();
                            const e = new Zl(Wl.DEMUX,Ql.metaError,{
                                msg: JSON.stringify(o)
                            });
                            return void this.errorHandler(e, "getMetaInfo", {
                                range: [0, this._firstLoadSize]
                            })
                        }
                        !this.fileSize && a && (this.fileSize = Number(Pu(a.headers)));
                        const l = (null == (s = null == r ? void 0 : r.priOptions) ? void 0 : s.type) || Al;
                        if (n && (this.cacheRepeatData([0, this._firstLoadSize], r.range, n),
                        !this._optionDataLenInfo[l] && (this._optionDataLenInfo[l] = 0),
                        this._optionDataLenInfo[l] += n.byteLength),
                        i && this._optionDataLenInfo[l] && (this._optionDataLenInfo[l] = 0),
                        r.meta && !this.meta) {
                            this.firstFrameTime.metaload = lu() - t;
                            const n = r.meta;
                            this.videoTrak = n.videoSegments,
                            this.audioTrak = n.audioSegments,
                            this.timeRange = this.getTimeRange();
                            const i = this.videoTrak.reduce(( (e, t) => e + t.frames.length), 0)
                              , o = this.audioTrak.reduce(( (e, t) => e + t.frames.length), 0);
                            this.meta = {
                                ...n.meta,
                                ext: {
                                    videoTrak: this.videoTrak,
                                    audioTrak: this.audioTrak
                                },
                                videoSamplesLen: i,
                                audioSamplesLen: o,
                                fileSize: this.fileSize
                            },
                            this._bitRateInfoMap.set(this._bitRate, n),
                            this.log(Co.LOG, "meta reach, bitRate,", this._bitRate, this._repeatInfo.curDataPos),
                            e && this.emit(xu, this.meta)
                        }
                        if (this.meta && i && (this.log(Co.LOG, "[getMetaInfo req end]", this._repeatInfo.curDataPos),
                        this.metaLoading = !1),
                        this._loadedDataState) {
                            let e = !1;
                            this._repeatInfo.curDataPos - this._repeatInfo.usedPos >= this.options.afterLoadeddataCallBackLen && (e = !0),
                            this.meta && (e || i) && (this.log(Co.LOG, "emit moov_req_progress loadeddata after", JSON.stringify(r.range)),
                            this.emit(Eu))
                        } else
                            this.meta && (n || i) && (this.log(Co.LOG, "emit moov_req_progress loadeddata before", JSON.stringify(r.range)),
                            this.emit(Eu))
                    }
                      , i = this._firstLoadSize - 1;
                    await this.MP4Loader.loadMetaProcess(this.MP4Loader.cache, [0, i], n)
                } catch (e) {
                    this.log(Co.ERROR, "[MP4] trigger errorHandler getMetaInfo", null == (t = null == e ? void 0 : e.response) ? void 0 : t.status, null == e ? void 0 : e.message),
                    this.loadError(e, "getMetaInfo", !1, {
                        url: e.url || this.url,
                        range: [0, this._firstLoadSize]
                    })
                }
            }
            getFragmentIdx(e) {
                let t, n;
                if (this.videoTrak.length) {
                    if (t = this.videoTrak.find((t => t.startTime <= e && t.endTime > e)),
                    n = this.audioTrak.find((t => t.startTime <= e && t.endTime > e)),
                    t && n)
                        return Math.min(t.index, n.index);
                    if (t || n)
                        return t ? t.index : n.index;
                    {
                        let e = Number.MAX_VALUE;
                        return this.videoTrak && this.videoTrak.length > 0 && (e = this.videoTrak.length - 1),
                        this.audioTrak && this.audioTrak.length > 0 && (e = Math.min(this.audioTrak.length - 1, e)),
                        e
                    }
                }
                return n = this.audioTrak.find((t => t.startTime <= e && t.endTime > e)),
                n ? n.index : 0
            }
            async _checkHasMeta() {
                var e, t, n, i;
                let r = this._bitRateInfoMap.get(this._bitRate);
                if (r)
                    this.log(Co.LOG, "[switchBitrate], not need load InitSegment, bitRate, ", this._bitRate),
                    this.meta = r.meta;
                else {
                    this.log(Co.LOG, "[switchBitrate], need load InitSegment, bitRate, ", this._bitRate),
                    this.metaLoading = !0;
                    const i = await this.MP4Loader.loadMeta(this.MP4Loader.cache, Math.round(this.CHUNK_SIZE / 2));
                    this.log(Co.LOG, "[switchBitrate], loadMeta end, ", this._bitRate),
                    this.metaLoading = !1;
                    const {videoTrak: o, audioTrak: a} = this
                      , s = o.reduce(( (e, t) => e + t.frames.length), 0)
                      , l = a.reduce(( (e, t) => e + t.frames.length), 0)
                      , u = Number(Pu(null == (n = null == (t = null == (e = null == i ? void 0 : i.responses) ? void 0 : e[0]) ? void 0 : t.response) ? void 0 : n.headers));
                    this.fileSize = u,
                    this.log(Co.LOG, "[switchBitrate], fileSize set , ", u),
                    this.meta = {
                        ...i.meta,
                        ext: {
                            videoTrak: i.videoSegments,
                            audioTrak: i.videoSegments
                        },
                        videoSamplesLen: s,
                        audioSamplesLen: l,
                        fileSize: u
                    },
                    r = i,
                    r.fileSize = u,
                    this._bitRateInfoMap.set(this._bitRate, i)
                }
                this.videoTrak = r.videoSegments,
                this.audioTrak = r.audioSegments,
                this.fileSize = r.fileSize,
                this.emit(Lu, this.meta),
                this.emit(Iu, this.meta),
                this.timeRange = this.getTimeRange();
                for (let e = 0; e < this.adaptTimeRange.length; e++)
                    null == (i = this.updateTimeRangeInAdaptTimeRangeIdx) || i.call(this, this.adaptTimeRange[e].timeRangeIdx, e);
                return this._firstLoadSize = 0,
                !0
            }
            async load(e, t) {
                var n;
                if (this._loadSuccessCallBack = t,
                this._switchBitRate && !this.metaLoading) {
                    this.log(Co.LOG, "[switchBitrate], switch bitRate start load, bitRate,", this._bitRate, ", fragIndex,", e);
                    const t = await this._checkHasMeta();
                    if (this.changeBitRateTime > 0) {
                        this.resetFragmentLoadState(e, !0),
                        this.resetRepeatInfo();
                        const t = this.getFragmentIdx(this.changeBitRateTime)
                          , n = e;
                        if ((e = this.getAdaptIdxBySrcIdx(t)) < 0)
                            return void this.log(Co.ERROR, "[switchBitrate] start new bitrate fragIndex error");
                        n !== e && this.resetFragmentLoadState(e),
                        this._curLoadSegIdx = e;
                        const i = this.adaptTimeRange[e];
                        this.log(Co.LOG, "[switchBitrate], need update load fragIndex", e, ",oldFragIndex", n, ",stTime,", this.changeBitRateTime, ",newBitrateadaptTimeRange,", i.startTime, "-", i.endTime),
                        this.emit(Au, e),
                        this.seekTime = this.changeBitRateTime,
                        this.changeBitRateTime = -1
                    }
                    this.log(Co.LOG, "[switchBitrate], reset adaptTimeRange state,", e),
                    this._needInitSegment = !0,
                    this.resetTansmuxer(),
                    t && (this._switchBitRate = !1)
                }
                if (this._switchBitRate && this.metaLoading)
                    return;
                const i = this.getFragRange(e);
                let r = this.getFragmentFromCache(e, i);
                if (r && this._needInitSegment && !r.initSeg && (r = null,
                this.log(Co.LOG, "[mp4.load], segment ,", e, "Data In Cache but not has init, so not use cacheData")),
                r) {
                    const {video: t, audio: n} = r.muxSampleIdxRange;
                    this._lastDemuxSampleIdxRange.video = t,
                    this._lastDemuxSampleIdxRange.audio = n,
                    this.log(Co.LOG, "[mp4.load], segment ,", e, "Data In Cache", JSON.stringify(i), ", needInit,", this._needInitSegment, ",muxSampleIdxRange,", JSON.stringify(r.muxSampleIdxRange));
                    const o = this.adaptTimeRange[e];
                    o.downloaded = !0,
                    o.isLoading = !0,
                    this._needInitSegment = !1,
                    this._loadSuccessCallBack && this._loadSuccessCallBack(r)
                } else if (this.log(Co.LOG, "loadFragment,", e, ",bitRate,", this._bitRate, ",range,", JSON.stringify(i)),
                this.seekTime > 0) {
                    const t = this.getSubRange(e, this.seekTime, i);
                    null == (n = this.resetDemuxSampleIdx) || n.call(this, this.seekTime, t),
                    this.loadFragment(e, t),
                    this.seekTime = -1
                } else
                    this.loadFragment(e, i)
            }
            getFragmentFromCache(e, t) {
                const {preloadCache: n} = this;
                if (!n || !n.segList)
                    return null;
                let i = -1;
                const {segList: r, initSeg: o} = n;
                for (let t = 0; t < r.length; t++)
                    if (r[t].index === e) {
                        i = t;
                        break
                    }
                if (i < 0)
                    return null;
                {
                    const n = r[i];
                    if (n.range[1] >= t[1]) {
                        const {startTime: i=0, endTime: r=0} = this.adaptTimeRange[e]
                          , a = [i, r];
                        return {
                            buffer: n.buffer,
                            range: t,
                            muxSampleIdxRange: n.muxSampleIdxRange,
                            context: {
                                range: t,
                                fragIndex: e,
                                state: !0,
                                adaptTimeRange: [a[0], a[1]]
                            },
                            state: !0,
                            initSeg: this._needInitSegment ? o : void 0
                        }
                    }
                    return null
                }
            }
            cacheRepeatData(e, t, n) {
                var i;
                if (e && null != e && e.length && null != (i = this._repeatInfo.data) && i.byteLength && (this._repeatInfo.startPos < 0 && t[0] + n.byteLength >= e[0] && t[0] + n.byteLength <= e[1] + 1 && (this._repeatInfo.startPos = e[0]),
                this._repeatInfo.startPos >= 0 && t[0] + n.byteLength >= e[0] && t[0] + n.byteLength <= e[1] + 1)) {
                    const i = this._repeatInfo.startPos + this._repeatInfo.curDataPos - t[0];
                    if (i < 0)
                        return;
                    const r = n.slice(i);
                    if (this._repeatInfo.curDataPos + r.byteLength < this._repeatInfo.data.byteLength)
                        this._repeatInfo.data.set(r, this._repeatInfo.curDataPos),
                        this._repeatInfo.curDataPos += r.byteLength,
                        this.log(Co.LOG, ", repeatInfo,startPos,", this._repeatInfo.startPos, ", curDataPos,", this._repeatInfo.startPos + this._repeatInfo.curDataPos, ",curAppendLen,", r.byteLength);
                    else
                        try {
                            const t = gu(Math.max(2 * this._repeatInfo.data.byteLength, 2 * (e[1] - e[0])));
                            if (!t)
                                return;
                            t.set(this._repeatInfo.data.slice(0, this._repeatInfo.curDataPos), 0),
                            t.set(r, this._repeatInfo.curDataPos),
                            this._repeatInfo.curDataPos += r.byteLength,
                            delete this._repeatInfo.data,
                            this._repeatInfo.data = t,
                            this.log(Co.LOG, "_repeatInfo,startPos,", this._repeatInfo.startPos, ", curDataPos,", this._repeatInfo.curDataPos)
                        } catch {
                            console.error("repeat data cache  new array failed")
                        }
                }
            }
            _mux(e, t, n, i) {
                const {firstFrameTime: r, timeRecord: o} = this;
                r.firstmux < 0 && o.startMuxTime < 0 && (this.timeRecord.startMuxTime = lu(),
                r.startMuxTime = lu() - o.startLoadTime);
                const a = this.getSamplesRange(n, "video")
                  , s = this.getSamplesRange(n, "audio");
                this.log(Co.LOG, "mux videoSampleRange,", a, s);
                const l = [t, t + e.byteLength];
                if (this.transmuxerWorkerControl) {
                    const r = {
                        range: l,
                        state: i,
                        fragIndex: n
                    };
                    this.log(Co.LOG, "[transmuxerworker start] ,range, ", JSON.stringify(l), ",dataLen,", e.byteLength, r),
                    this.transmuxerWorkerControl.transmux(this.workerSequence, e, t, a, s, this.meta.moov, this.useEME, this.secretKey, r)
                } else
                    try {
                        this.MP4Demuxer || (this.MP4Demuxer = new kl(this.videoTrak,this.audioTrak,null,{
                            openLog: tu
                        }));
                        const u = this.MP4Demuxer.demuxPart(e, t, a, s, this.meta.moov, this.useEME, this.keyValue);
                        !this.FMP4Remuxer && (!this.checkCodecH265() || this.options.supportHevc) && (this.FMP4Remuxer = new Rl(this.MP4Demuxer.videoTrack,this.MP4Demuxer.audioTrack,{
                            openLog: tu
                        }));
                        const {videoTrack: c, audioTrack: h} = u
                          , d = null == c ? void 0 : c.samples
                          , f = (null == d ? void 0 : d.length) > 0 ? d[0].sampleOffset : -1
                          , p = (null == d ? void 0 : d.length) > 0 ? d[d.length - 1].sampleOffset : -1
                          , g = null == h ? void 0 : h.samples
                          , m = (null == g ? void 0 : g.length) > 0 ? g[0].sampleOffset : -1
                          , v = (null == g ? void 0 : g.length) > 0 ? g[g.length - 1].sampleOffset : -1;
                        let y;
                        this.updateDemuxSampleIdxRange([f, p], [m, v]),
                        this.log(Co.LOG, "[mux],videoTimeRange,", null == c ? void 0 : c.startPts, "-", null == c ? void 0 : c.endPts, ",videoSampleIdx", f, "-", p, ",audioTimeRange,", null == h ? void 0 : h.startPts, "-", null == h ? void 0 : h.endPts, ",audioSampleIdx", m, "-", v, n, JSON.stringify(l), i);
                        const _ = i || (null == d ? void 0 : d.length) > 0 ? null == c ? void 0 : c.startPts : -1
                          , T = i || (null == d ? void 0 : d.length) > 0 ? null == c ? void 0 : c.endPts : -1
                          , b = i || (null == g ? void 0 : g.length) > 0 ? null == h ? void 0 : h.startPts : -1
                          , S = i || (null == g ? void 0 : g.length) > 0 ? null == h ? void 0 : h.endPts : -1
                          , w = [Math.min(_, b), Math.max(T, S)];
                        if (this.FMP4Remuxer) {
                            const e = this.FMP4Remuxer.remux(this._needInitSegment, {
                                initMerge: !0,
                                range: l
                            });
                            e.initSegment && (this._needInitSegment = !1),
                            y = {
                                buffer: du(e.audioSegment, e.videoSegment),
                                range: l,
                                state: i,
                                context: {
                                    range: l,
                                    fragIndex: n,
                                    timeRange: w
                                },
                                initSeg: e.initSegment
                            }
                        } else
                            y = {
                                videoTrack: c,
                                audioTrack: h,
                                buffer: null,
                                range: l,
                                state: i,
                                context: {
                                    range: l,
                                    fragIndex: n,
                                    timeRange: w
                                }
                            };
                        r.firstmux < 0 && o.startMuxTime > 0 && (r.firstmux = lu() - o.startMuxTime),
                        this._loadSuccessCallBack && this._loadSuccessCallBack(y)
                    } catch (i) {
                        const r = null == i ? void 0 : i.message;
                        this.log(Co.ERROR, "mux err:", r);
                        const o = new Zl(Wl.REMUX,Ql.muxError,{
                            msg: r
                        });
                        this.errorHandler(o, "mux", {
                            fragIndex: n,
                            range: [t, t + e.byteLength]
                        })
                    }
            }
            updateDemuxSampleIdxRange(e, t) {
                (null == e ? void 0 : e[1]) >= 0 && (this._lastDemuxSampleIdxRange.video = e[1]),
                (null == t ? void 0 : t[1]) >= 0 && (this._lastDemuxSampleIdxRange.audio = t[1]),
                this.log(Co.LOG, "updateDemuxSampleIdxRange", JSON.stringify(this._lastDemuxSampleIdxRange))
            }
            async loadFragment(e, t) {
                this._curLoadSegIdx = e;
                const n = this.adaptTimeRange[e];
                if (this._isPending || 0 === (null == t ? void 0 : t[1]) || !n || n.isLoading || 0 === (null == t ? void 0 : t.length))
                    return;
                this._segmentToBitRateMap.set(e, this._bitRate),
                this.timeRecord.startLoadTime < 0 && (this.timeRecord.startLoadTime = lu());
                const {startPos: i, curDataPos: r} = this._repeatInfo
                  , {usedPos: o} = this._repeatInfo;
                if (t.length >= 2 && t[1] && t[1] > 0 && t[0] >= i && t[1] < i + r) {
                    n.isLoading = !0;
                    const a = Math.max(t[0], i + o)
                      , s = new Uint8Array(this._repeatInfo.data.slice(a - i, t[1] - i + 1));
                    if (this.log(Co.LOG, "[mp4.loadFragment] has all data: ", a, t[1]),
                    this.log(Co.LOG, "[mp4.loadFragment] ", ",repeatInfo, startPos,", i, ", usedPos,", i + o, ",curDataPos, ", i + r),
                    n.downloaded = !0,
                    this.metaLoading || 0 === i)
                        this._repeatInfo.usedPos = 0,
                        this.log(Co.LOG, "[mp4.loadFragment] has all data set repeatInfo.usedPos = 0");
                    else {
                        const e = n.range[0] - i
                          , t = n.range[1] + 1 - i
                          , r = new Uint8Array(this._repeatInfo.data.slice(e, t));
                        this.resetRepeatInfo(),
                        this.cacheRepeatData(n.repeatRange, n.range, r)
                    }
                    this._mux(s, a, e, !0)
                } else if (t.length >= 2 && t[0] && t[0] >= i && t[0] <= i + r) {
                    if (!n.isLoading) {
                        const a = Math.max(t[0], i + o)
                          , s = Math.min(t[1] + 1, i + r)
                          , l = new Uint8Array(this._repeatInfo.data.slice(a - i, s - i));
                        if (l.byteLength > 0) {
                            this._repeatInfo.usedPos = s - this._repeatInfo.startPos;
                            const n = this._repeatInfo.usedPos;
                            return this.log(Co.LOG, "[mp4.loadFragment] has part data: ", a, a + l.byteLength),
                            this.log(Co.LOG, "[mp4.loadFragment] ", ",repeatInfo, startPos,", i, ", usedPos,", i + n, ",curDataPos, ", i + r),
                            void this._mux(l, a, e, t[1] <= i + n)
                        }
                        if (!this.metaLoading && !n.isLoading) {
                            this.log(Co.LOG, "[mp4.loadFragment] load part data >>> ", i + r, t[1]),
                            n.isLoading = !0;
                            const a = [i + o, t[1]]
                              , s = null == n ? void 0 : n.repeatRange;
                            if (s && s[0] < a[0]) {
                                const e = [n.repeatRange[0], a[0]]
                                  , {startPos: t, curDataPos: i, data: r} = this._repeatInfo
                                  , o = r.slice(e[0] - t, i);
                                this.resetRepeatInfo(),
                                this.cacheRepeatData(n.repeatRange, e, o)
                            } else
                                this.resetRepeatInfo();
                            await this.startLoad(a, e)
                        }
                    }
                } else
                    (!this.metaLoading || t[0] > i) && !n.isLoading && (n.isLoading = !0,
                    this.log(Co.LOG, "[mp4.loadFragment],ready to load all data ,segmentIdx, ", e, ",range >>> ", t),
                    this.resetRepeatInfo(),
                    await this.startLoad(t, e))
            }
            resetRepeatInfo() {
                this.log(Co.LOG, ", resetRepeatInfo"),
                this._repeatInfo.startPos = -1,
                this._repeatInfo.curDataPos = 0,
                this._repeatInfo.usedPos = 0
            }
            setSwitchPCDNCallBack(e) {
                this._switchPCDNCallBack = e
            }
            updateChangeBitRateTime(e) {
                this.changeBitRateTime = e
            }
            async startLoad(t, n, i=!1) {
                var r, o, a, s;
                const {firstFrameTime: l} = this;
                0 === n && (null == l ? void 0 : l.first_gop_req_cnt) < 0 ? l.first_gop_req_cnt = 1 : n > 0 && (null == l ? void 0 : l.first_gop_req_cnt) < 0 && (l.first_gop_req_cnt = 0);
                const u = this.selectedPCDN(i)
                  , c = u || this.url;
                this.log(Co.LOG, "[startLoad], ", n, JSON.stringify(t), c);
                try {
                    await this.MP4Loader.loadData(t, this.MP4Loader.cache, {
                        index: n,
                        onProgress: this.onprogressDataArrive,
                        onProcessMinLen: this.options.onProcessMinLen,
                        url: c,
                        headers: u ? {
                            "X-Origin-Server-Host": this._domain
                        } : null,
                        priOptions: {
                            type: u ? Gl : Al
                        }
                    })
                } catch (i) {
                    const l = (null == (o = null == (r = null == i ? void 0 : i.options) ? void 0 : r.priOptions) ? void 0 : o.type) === Gl || !!u;
                    let c = null;
                    const h = i.url || (l ? u : this.url);
                    l ? (this.pcdnVVStat.conn_fail_num++,
                    e.pcdn_download_failed_cnt++,
                    c = this._pcdnNodeList.shift(),
                    this.emit(Gu, c),
                    this.log(Co.ERROR, "pcdn load err, retry use cdn,range", t, ",fragIndex", n, (null == i ? void 0 : i.isTimeout) || (null == (a = null == i ? void 0 : i.response) ? void 0 : a.status), null == i ? void 0 : i.message, h),
                    await this.startLoad(t, n, !0)) : this.log(Co.ERROR, "cdn load err,range", JSON.stringify(t), ",fragIndex", n, (null == i ? void 0 : i.isTimeout) || (null == (s = null == i ? void 0 : i.response) ? void 0 : s.status), null == i ? void 0 : i.message, h),
                    this.loadError(i, "loadFragment", l, {
                        range: t,
                        fragIndex: n,
                        url: h
                    })
                }
            }
            loadError(e, t, n, i) {
                var r, o;
                !e.response && (e.response = {}),
                e.isTimeout ? e.response.status = Ql.timeout : null != (r = null == e ? void 0 : e.response) && r.status || (e.response.status = Ql.networkError);
                const a = pu(null == i ? void 0 : i.url);
                this.markErrHost(a),
                this.emit(Nu, {
                    src: null == i ? void 0 : i.url,
                    host: a,
                    errorCode: null == (o = null == e ? void 0 : e.response) ? void 0 : o.status,
                    message: null == e ? void 0 : e.message,
                    range: (null == i ? void 0 : i.range) && JSON.stringify(i.range),
                    headers: null == i ? void 0 : i.headers
                }),
                n || this.errorHandler(e, t, i)
            }
            async loadAllFragmentData(t, n, i, r=!1) {
                var o, a, s, l, u, c;
                if (this.hasDestroyed)
                    return;
                this.resetRepeatInfo();
                const h = (null == (o = this.adaptTimeRange[t]) ? void 0 : o.range) || this.getFragRange(t);
                this._curLoadSegIdx = t;
                const d = this.selectedPCDN(r)
                  , f = uu(d || this.url, {
                    __rand: (new Date).getTime()
                });
                try {
                    this.log(Co.LOG, ",[loadAllFragmentData], index,", t, ",rang,", JSON.stringify(h), ", use-pcdn,", !!d);
                    const e = await this.MP4Loader.loadData(h, this.MP4Loader.cache, {
                        index: t,
                        url: f,
                        headers: d ? {
                            "X-Origin-Server-Host": this._domain
                        } : null,
                        priOptions: {
                            type: d ? Gl : Al
                        }
                    });
                    if (this.log(Co.LOG, "loadAllFragmentData after", t, JSON.stringify(h)),
                    !e || !e.data) {
                        const e = new Error("response null");
                        return void (i ? i(e) : this.loadError(e, "loadFragment", !!d, {
                            range: h,
                            fragIndex: t,
                            url: d || this.url
                        }))
                    }
                    const {data: r} = e;
                    if ((null == r ? void 0 : r.byteLength) > 0 && h && h.length >= 2)
                        this._receiveDataPos = h[0] + (null == r ? void 0 : r.byteLength),
                        this._loadSuccessCallBack = n,
                        this.adaptTimeRange[t].downloaded = !0,
                        this.cacheRepeatData(this.adaptTimeRange[t].repeatRange, h, r),
                        this._mux(r, h[0], t, !0);
                    else {
                        const n = Mu(null == (a = null == e ? void 0 : e.response) ? void 0 : a.headers);
                        this.log(Co.LOG, "[FragLoadDowned check false, retry load],fragmentIdx,", t, ",dataLen,", null == r ? void 0 : r.byteLength, JSON.stringify(h), JSON.stringify(n), f);
                        const i = new Error("dataLen not match");
                        this.resetRepeatInfo();
                        const o = this.adaptTimeRange[t];
                        this.emit($u, [o.startTime, o.endTime]),
                        this.loadError(i, "loadFragment", !!d, {
                            range: h,
                            fragIndex: t,
                            url: f,
                            headers: n
                        })
                    }
                } catch (r) {
                    const o = (null == (l = null == (s = null == r ? void 0 : r.options) ? void 0 : s.priOptions) ? void 0 : l.type) === Gl || !!d;
                    o ? (e.pcdn_download_failed_cnt++,
                    this._pcdnNodeList.shift(),
                    this.log(Co.ERROR, "[loadAllFragmentData] ,pcdn load err, retry use cdn,fragIndex", t, r.isTimeout || (null == (u = null == r ? void 0 : r.response) ? void 0 : u.status), null == r ? void 0 : r.message),
                    await this.loadAllFragmentData(t, n, i, !0)) : this.log(Co.ERROR, "[MP4] loadAllFragmentData error", {
                        fragIndex: t,
                        range: JSON.stringify(h)
                    }, r.isTimeout || (null == (c = null == r ? void 0 : r.response) ? void 0 : c.status), null == r ? void 0 : r.message),
                    this.loadError(r, "loadFragment", o, {
                        range: h,
                        fragIndex: t,
                        url: r.url || (o ? d : this.url)
                    })
                }
            }
            currentLoadUseUrl() {
                var e;
                return this._isUseCDN ? this.url : (null == (e = this._pcdnNodeList) ? void 0 : e.length) > 0 ? this._pcdnNodeList[0].url : ""
            }
            getCurSwitchPCDNCnt() {
                return this._PCDNSwitchCnt
            }
            selectedPCDN(t) {
                if (this._PCDNState === Hu || t)
                    return void (this._isUseCDN = !0);
                let n;
                if (this.isUsePCDN()) {
                    if (this._isUseCDN) {
                        if (this._switchPCDNCallBack) {
                            const e = this._switchPCDNCallBack();
                            e > 0 && (this.options.switchPCDNMaxCnt = e)
                        }
                        if (this._PCDNSwitchCnt >= this.options.switchPCDNMaxCnt)
                            return this._isUseCDN = !0,
                            this.log(Co.LOG, "cdn switch pcdn outlimit, curSwitchCnt ,", this._PCDNSwitchCnt, ",maxCnt,", this.options.switchPCDNMaxCnt),
                            null;
                        this._PCDNSwitchCnt++,
                        this.log(Co.LOG, "cdn switch pcdn, curSwitchCnt,", this._PCDNSwitchCnt, ",maxCnt,", this.options.switchPCDNMaxCnt)
                    }
                    this._isUseCDN = !1,
                    n = uu(this._pcdnNodeList[0].url, {
                        __vid: this.options.vid
                    }),
                    this._lastPCDNUrl !== n && (this.emit(Ou, n),
                    this._lastPCDNUrl = n,
                    this.pcdnVVStat.conn_req_num += 1),
                    e.pcdn_download_request_cnt++
                } else
                    this._isUseCDN || (this.log(Co.LOG, "pcdn switch cdn PCDNSwitchCnt,", this._PCDNSwitchCnt, ",maxCnt,", this.options.switchPCDNMaxCnt),
                    this.pcdnVVStat.conn_jump_num += 1),
                    this._isUseCDN = !0;
                return n
            }
            async cancelLoading() {
                this.MP4Loader && await this.MP4Loader.cancel(),
                this._optionDataLenInfo[Gl] && this._optionDataLenInfo[Gl] > 0 && (this.emit(Bu, {
                    load_type: Gl,
                    len: this._optionDataLenInfo[Gl]
                }),
                this._optionDataLenInfo[Gl] = 0),
                this._optionDataLenInfo[Al] && this._optionDataLenInfo[Al] > 0 && (this.emit(Bu, {
                    load_type: Al,
                    len: this._optionDataLenInfo[Al]
                }),
                this._optionDataLenInfo[Al] = 0)
            }
            updateUrl(e, t) {
                const n = pu(e);
                this._defaultDomain || (this._defaultDomain = n),
                n.indexOf("www.") < 0 ? this._domain = n : this._domain = this._defaultDomain,
                this.url = e,
                this.backUrl = t || []
            }
            getDataBitRate(e) {
                return this._segmentToBitRateMap.get(e)
            }
            checkCodecH265() {
                return this.meta && (this.meta.videoCodec.indexOf("hvc1") > -1 || this.meta.videoCodec.indexOf("hev1") > -1)
            }
            checkCodecH266() {
                return this.meta && this.meta.videoCodec.indexOf("bvc2") > -1
            }
            destroy() {
                this.hasDestroyed || (this.resetTansmuxer(),
                this.transmuxerWorkerControl && this.transmuxerWorkerControl.destroy(),
                this.fileSize = 0,
                this.totalSize = 0,
                this._isPending = !1,
                this.metaLoading = !1,
                this.resetRepeatInfo(),
                delete this._repeatInfo.data,
                this._bitRateInfoMap.clear(),
                this._segmentToBitRateMap.clear(),
                this.MP4Loader && (this.MP4Loader.cancel(),
                this.MP4Loader.destroy()),
                this.removeAllListeners(),
                this.hasDestroyed = !0,
                this.pcdnVVStat = this.resetPCDNVVStat())
            }
            resetPCDNVVStat() {
                return {
                    try_req_node: 0,
                    req_node_succ: 0,
                    has_ret_node: 0,
                    conn_req_num: 0,
                    conn_fail_num: 0,
                    conn_jump_num: 0
                }
            }
            resetTansmuxer() {
                var e;
                null == (e = this.resetDemuxSampleIdx) || e.call(this),
                this.MP4Demuxer && this.MP4Demuxer.reset(),
                this.MP4Demuxer = null,
                this.FMP4Remuxer && this.FMP4Remuxer.reset(),
                this.FMP4Remuxer = null,
                this.transmuxerWorkerControl && this.transmuxerWorkerControl.reset()
            }
            getMediaEndTime() {
                if (this._mediaEndTime > 0)
                    return this._mediaEndTime;
                const {videoTrak: e, audioTrak: t} = this;
                if ((null == e ? void 0 : e.length) > 0) {
                    const {endTime: t} = e[e.length - 1];
                    this._mediaEndTime = this._mediaEndTime < 0 ? t : Math.min(t, this._mediaEndTime)
                }
                if ((null == t ? void 0 : t.length) > 0) {
                    const {endTime: e} = t[t.length - 1];
                    this._mediaEndTime = this._mediaEndTime < 0 ? e : Math.min(e, this._mediaEndTime)
                }
                return this._mediaEndTime
            }
        }
        ;
        El(Vu, "pcdn_download_request_cnt", 0),
        El(Vu, "pcdn_download_failed_cnt", 0);
        let ju = Vu;
        class zu extends ju {
            constructor(e, t, n, i=[], r, o) {
                super(e, t, n, i, r, o),
                this._logTag = `${o}_${Fl}`
            }
            updateAdaptTimeRange(e, t) {
                this._lastTargetDur = t;
                const n = this.adaptTimeRange;
                for (let i = 0; i < n.length; i++) {
                    const {timeRangeIdx: r} = n[i];
                    if (e >= r[0] && e < r[1])
                        return this.log(Co.LOG, "has adaptTimeRange,startSrcIdx, ", e, ",adaptTimeRangeIdx", i, ", dur,", t, JSON.stringify(n[i])),
                        i
                }
                let i = n.length > 0 ? n[n.length - 1].timeRangeIdx[1] : 0;
                if (i >= this.timeRange.length)
                    return n.length - 1;
                for (; i < e; ) {
                    const {startTime: e} = this.timeRange[i]
                      , {endTime: t} = this.timeRange[i]
                      , n = {
                        startTime: e,
                        endTime: t,
                        timeRangeIdx: [i, i + 1],
                        duration: t - e,
                        downloaded: !1,
                        isLoading: !1
                    };
                    this.adaptTimeRange.push(n),
                    this.updateTimeRangeInAdaptTimeRangeIdx(n.timeRangeIdx, this.adaptTimeRange.length - 1),
                    this.log(Co.LOG, "gap adaptTimeRange,adaptTimeRangeIdx, ", this.adaptTimeRange.length - 1, JSON.stringify(n)),
                    i++
                }
                let r = 0
                  , o = i
                  , a = i;
                for (; a < this.timeRange.length; a++) {
                    if (!(r < t)) {
                        o = a;
                        break
                    }
                    r += this.timeRange[a].endTime - this.timeRange[a].startTime
                }
                a === this.timeRange.length && (o = this.timeRange.length);
                const s = [i, o]
                  , {startTime: l} = this.timeRange[s[0]]
                  , u = s[1] === this.timeRange.length ? this.timeRange[s[1] - 1].endTime : this.timeRange[s[1]].startTime
                  , c = {
                    startTime: l,
                    endTime: u,
                    timeRangeIdx: s,
                    duration: u - l,
                    downloaded: !1,
                    isLoading: !1
                };
                return this.log(Co.LOG, "update adaptTimeRange,startIdx,", s[0], ", dur,", t, JSON.stringify(c)),
                this.adaptTimeRange.push(c),
                this.updateTimeRangeInAdaptTimeRangeIdx(s, this.adaptTimeRange.length - 1),
                this.adaptTimeRange.length - 1
            }
            updateTimeRangeInAdaptTimeRangeIdx(e, t) {
                for (let n = e[0]; n < e[1]; n++)
                    n < this.timeRange.length && (this.timeRange[n].adaptTimeRangeIdx = t)
            }
            getAdaptIdxBySrcIdx(e, t) {
                var n;
                const i = this.adaptTimeRange.length;
                if (!t && e >= (null == (n = this.adaptTimeRange[i - 1]) ? void 0 : n.timeRangeIdx[1])) {
                    const t = this._lastTargetDur || 5;
                    this.updateAdaptTimeRange(e, t)
                }
                for (let t = 0; t < this.adaptTimeRange.length; t++) {
                    const {timeRangeIdx: n} = this.adaptTimeRange[t];
                    if (n && e >= n[0] && e < n[1])
                        return t
                }
                return -1
            }
            getFragmentIdx(e) {
                let t, n;
                if (this.videoTrak.length) {
                    if (t = this.videoTrak.find((t => t.startTime <= e && t.endTime > e)),
                    n = this.audioTrak.find((t => t.startTime <= e && t.endTime > e)),
                    t && n)
                        return Math.min(t.index, n.index);
                    if (t || n)
                        return t ? t.index : n.index;
                    {
                        let e = Number.MAX_VALUE;
                        return this.videoTrak && this.videoTrak.length > 0 && (e = this.videoTrak.length - 1),
                        this.audioTrak && this.audioTrak.length > 0 && (e = Math.min(this.audioTrak.length - 1, e)),
                        e
                    }
                }
                return n = this.audioTrak.find((t => t.startTime <= e && t.endTime > e)),
                n ? n.index : 0
            }
            resetFragmentLoadState(e, t=!1) {
                this.log(Co.LOG, ", resetFragmentLoadState, fragIndex, ", e, ",changeBitrate,", t);
                for (let n = 0; n < this.adaptTimeRange.length; n++)
                    if (n < e ? (this.adaptTimeRange[n].downloaded = !0,
                    this.adaptTimeRange[n].isLoading = !0) : (this.adaptTimeRange[n].downloaded = !1,
                    this.adaptTimeRange[n].isLoading = !1),
                    t) {
                        this.adaptTimeRange[n].range = null;
                        const {timeRangeIdx: t} = this.adaptTimeRange[n];
                        if (t[0] >= this.timeRange.length) {
                            this.log(Co.WARN, "fix adaptTimeRange fragIndex", e, " ,timeRangeIdx[0] >= this.timeRange.length, so end", t[0], this.timeRange.length, ",endFragment,", n),
                            this.adaptTimeRange = this.adaptTimeRange.slice(0, n);
                            break
                        }
                        t[1] >= this.timeRange.length && (this.log(Co.WARN, "fix adaptTimeRange fragIndex", e, " ,timeRangeIdx[1],", t[1], ">>>>", this.timeRange.length, ",endFragment,", n),
                        t[1] = this.timeRange.length,
                        this.adaptTimeRange = this.adaptTimeRange.slice(0, n + 1)),
                        this.adaptTimeRange[n].startTime = this.timeRange[t[0]].startTime,
                        this.adaptTimeRange[n].endTime = t[1] >= this.timeRange.length ? this.timeRange[this.timeRange.length - 1].endTime : this.timeRange[t[1]].endTime,
                        this.adaptTimeRange[n].range = this.getFragRange(n)
                    }
            }
            calculateRange(e) {
                let t = null
                  , n = null
                  , i = null
                  , r = null;
                const o = e < this.adaptTimeRange.length ? this.adaptTimeRange[e].timeRangeIdx : null;
                if (!o)
                    return this.log(Co.warn, "calculateRange err", e, JSON.stringify(this.adaptTimeRange)),
                    [];
                const a = o[0]
                  , s = o[1];
                this.log(Co.LOG, "getFragRange, timeRangeIdx,", JSON.stringify(o));
                const l = this.videoTrak;
                l && (t = a < l.length ? l[a] : l[l.length - 1],
                n = s < l.length ? l[s - 1] : l[l.length - 1]);
                const u = this.audioTrak;
                u && (i = a < u.length ? u[a] : u[u.length - 1],
                r = s < u.length ? u[s - 1] : u[u.length - 1]);
                const c = Math.min((null == t ? void 0 : t.range[0]) || 1 / 0, (null == i ? void 0 : i.range[0]) || 1 / 0)
                  , h = [c, Math.max(c, (null == n ? void 0 : n.range[1]) || 0, (null == r ? void 0 : r.range[1]) || 0)];
                return this.log(Co.LOG, "calculateRange", e, h[0], "-", h[1]),
                h
            }
            getTimeRangeByIdx(e) {
                let t = null;
                const n = this.videoTrak;
                n && (t = e < n.length ? n[e] : n[n.length - 1]);
                let i = null;
                const r = this.audioTrak;
                return r && (i = e < r.length ? r[e] : r[r.length - 1]),
                [Math.min((null == t ? void 0 : t.range[0]) || 1 / 0, (null == i ? void 0 : i.range[0]) || 1 / 0), Math.max((null == t ? void 0 : t.range[1]) - 1 || 0, (null == i ? void 0 : i.range[1]) - 1 || 0)]
            }
            getFragRange(e) {
                var t;
                if (e < this.adaptTimeRange.length && null != (t = this.adaptTimeRange[e]) && t.range)
                    return this.log(Co.LOG, "getFragRange exist", e, JSON.stringify(this.adaptTimeRange[e].range)),
                    this.adaptTimeRange[e].range;
                const n = this.calculateRange(e);
                if (e < this.adaptTimeRange.length) {
                    this.adaptTimeRange[e].range = n;
                    const t = this.adaptTimeRange[e].timeRangeIdx[1];
                    if (t < this.timeRange.length) {
                        const i = this.getTimeRangeByIdx(t);
                        (null == i ? void 0 : i.length) > 1 && i[0] < i[1] && n[1] > i[0] && (this.adaptTimeRange[e].repeatRange = [i[0], n[1]])
                    }
                }
                return n
            }
            getSubRange(e, t, n) {
                const i = this.adaptTimeRange[e].timeRangeIdx;
                let r = i[0];
                for (let e = i[0]; e < i[1]; e++)
                    if (t >= this.timeRange[e].startTime && t < this.timeRange[e].endTime) {
                        r = e;
                        break
                    }
                const o = [this.getSrcFragRange(r)[0], n[1]];
                return this.log(Co.LOG, ">>>>>getSubRange finalRange ", JSON.stringify(o), ",oldRange,", JSON.stringify(n)),
                o
            }
            getSrcFragRange(e) {
                let t = null
                  , n = null;
                this.log(Co.LOG, "getFragRange, timeRangeIdx, srcFragment,", JSON.stringify(e));
                const i = this.videoTrak;
                i && (t = e < i.length ? i[e] : i[i.length - 1]);
                const r = this.audioTrak;
                r && (n = e < r.length ? r[e] : r[r.length - 1]);
                const o = [Math.min((null == t ? void 0 : t.range[0]) || 1 / 0, (null == n ? void 0 : n.range[0]) || 1 / 0), Math.max((null == t ? void 0 : t.range[1]) - 1 || 0, (null == n ? void 0 : n.range[1]) - 1 || 0)];
                return this.log(Co.LOG, ",getSrcFragRange", e, o),
                o
            }
            getSamplesRange(e, t) {
                const n = []
                  , i = this.adaptTimeRange[e].timeRangeIdx;
                switch (t) {
                case "video":
                    if (this.videoTrak && i[0] < this.videoTrak.length) {
                        const {frames: e} = this.videoTrak[i[0]];
                        n.push(e[0].index);
                        const t = this.videoTrak.length
                          , r = i[1] - 1
                          , o = r < t ? this.videoTrak[r].frames : this.videoTrak[t - 1].frames;
                        n.push(o[o.length - 1].index)
                    }
                    break;
                case "audio":
                    if (this.audioTrak && i[0] < this.audioTrak.length) {
                        const {frames: e} = this.audioTrak[i[0]];
                        n.push(e[0].index);
                        const t = this.audioTrak.length
                          , r = i[1] - 1
                          , o = r < t ? this.audioTrak[r].frames : this.audioTrak[t - 1].frames;
                        n.push(o[o.length - 1].index)
                    }
                    break;
                default:
                    console.warn("[getSamplesRange] type ", t, " is invalid")
                }
                return n
            }
        }
        function Xu() {
            const e = window.navigator.userAgent
              , t = e.indexOf("MSIE ")
              , n = e.indexOf("Trident/");
            return t > 0 || n > 0
        }
        function Ku() {
            return !!navigator.requestMediaKeySystemAccess && !function() {
                const e = /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent)
                  , t = Xu()
                  , n = function() {
                    const {mimeTypes: e} = navigator
                      , t = navigator.userAgent;
                    let n = !1;
                    return e && t.indexOf("Chrome") > 1 && (n = Object.keys(e).some((t => !!(e[t].type && e[t].type.indexOf("360") > -1 || e[t].type && e[t].type.indexOf("application/vnd.chromium.remoting-viewer") > -1 || e[t].description && e[t].description.indexOf("360") > -1)))),
                    n
                }()
                  , i = navigator.userAgent.indexOf("Firefox") > 0
                  , r = navigator.userAgent.indexOf("Edge") > 0;
                return e || t || n || i || r
            }()
        }
        function Qu() {
            try {
                if ("object" == typeof WebAssembly && "function" == typeof WebAssembly.instantiate) {
                    const e = new WebAssembly.Module(Uint8Array.of(0, 97, 115, 109, 1, 0, 0, 0));
                    if (e instanceof WebAssembly.Module)
                        return new WebAssembly.Instance(e)instanceof WebAssembly.Instance
                }
            } catch (e) {
                console.log(e)
            }
            return !1
        }
        function Wu() {
            const e = window.MediaSource = window.MediaSource || window.WebKitMediaSource;
            return e && "function" == typeof e.isTypeSupported
        }
        class qu {
            constructor() {
                let e, t;
                const n = new Promise(( (n, i) => {
                    e = n,
                    t = i
                }
                ));
                return n.id = `${(new Date).getTime()}_${parseInt(100 * Math.random())}`,
                n.resolve = function(t) {
                    e(t),
                    n.state = "fulfilled"
                }
                ,
                n.reject = function(e) {
                    t(e),
                    n.state = "rejected",
                    n.isBreak = "DESTROYED" === e
                }
                ,
                n.state = "pending",
                n
            }
            resolve(e) {}
            reject(e) {}
        }
        class Zu extends La {
            init() {
                return Promise.resolve()
            }
            preloadPredict(e) {
                return e
            }
        }
        const Yu = "h264";
        function Ju(e) {
            let {mediaType: t, definition: n, codecType: i, vtype: r} = e;
            const {vid: o} = e;
            return t = t || "video",
            n = n || "-1",
            i = i || Yu,
            r = r || Ia.MP4,
            o ? `${o}#${t}#${i}#${r}#${n}` : null
        }
        function ec(e, t) {
            return function(e, t) {
                let n = -1;
                for (let i = 0; i < e.length; i++)
                    if (t === e[i].data.vid) {
                        n = i;
                        break
                    }
                return n
            }(e, t) >= 0
        }
        function tc(e, t) {
            for (let n = 0; n < e.length; n++)
                if (e[n] === t)
                    return n;
            return -1
        }
        function nc(e, t) {
            return tc(e, t) >= 0
        }
        const {PRELOAD_TYPES: ic} = ca
          , rc = "preload_ended";
        let oc = 0
          , ac = !0
          , sc = null;
        class lc extends Da {
            constructor(e, t) {
                var n;
                const i = lc.getDefaultConfig(e);
                Object.keys(e).forEach((t => {
                    i[t] = e[t]
                }
                )),
                super(i),
                El(this, "_updateRealTimeSpeed", (e => {
                    oc = e.speed,
                    this.emit(Ll, e)
                }
                )),
                this.video = null,
                this._mp4 = null,
                this._pendingPromise = null,
                this.playerId = t.playerId || "default",
                this._nextPreloadCount = 0,
                this.isActive = !0,
                this.MP4Loader = null,
                this.playingVids = [],
                this.playingVids1 = [],
                this.loadingCount = 0;
                const {logCacheLevel: r, logMaxSize: o} = this.options.logCacheConfig;
                this.logger = new Po("[Mp4Preloader]",{
                    logCacheLevel: r,
                    logMaxSize: o
                }),
                void 0 === e.supportHevc && !(typeof MediaSource > "u" || !MediaSource.isTypeSupported) && (MediaSource.isTypeSupported('video/mp4;codecs="hev1.1.6.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.2.4.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.3.E.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.4.10.L120.90"')) && (this.options.supportHevc = !0),
                this.loadRangeType = (null == (n = this.options) ? void 0 : n.loadRangeType) || Fl,
                ou(Co.DEBUG, "[Preloader] new preloader, playerId", this.playerId),
                this.update({
                    preloadMaxCacheCount: this.options.preloadMaxCacheCount
                })
            }
            static get PRELOAD_TYPES() {
                return ic
            }
            static get BitRateAdapter() {
                return sc
            }
            static set BitRateAdapter(e) {
                sc = e
            }
            static getDefaultConfig() {
                return {
                    supportHevc: !1,
                    preloadTime: 5,
                    preloadSize: 0,
                    preloadType: 0,
                    segmentMinDuration: 5,
                    vtype: "MP4",
                    codecType: "h264",
                    preloadCacheType: 1,
                    preloadMaxCacheCount: 5,
                    globalKey: null,
                    autoPreload: !1,
                    reqOptions: null,
                    getRequestOptionsCallback: null,
                    minBufferLength: 5,
                    timeout: 3e3,
                    autoCheck: {
                        enable: !0,
                        interval: 1e3
                    },
                    logCacheConfig: {
                        logCacheLevel: 2,
                        logMaxSize: 204800
                    },
                    pcdnConfig: {
                        openPreloadPCDN: !1,
                        enterMinBuffer: 10,
                        outMaxBuffer: 5,
                        pcdn_duration: 2,
                        pcdn_open: !0,
                        openPCDN: !0,
                        minDuration: 25,
                        trackerUrl: ""
                    },
                    switchPCDNMaxCnt: 2,
                    retryCount: 1,
                    retryDelay: 1e3,
                    loaderType: "fetch"
                }
            }
            static registerPreloader(e, t) {
                return e.vtype = Ia.MP4,
                lc.BitRateAdapter = t,
                new lc(e,this)
            }
            static getInfoByUniqueKey(e) {
                return function(e) {
                    const t = e.split("#")
                      , n = ["vid", "mediaType", "codecType", "vtype", "definition"]
                      , i = {};
                    return t.forEach(( (e, t) => {
                        i[n[t]] = e
                    }
                    )),
                    i
                }(e)
            }
            static generateUniqueKey(e) {
                return Ju(e)
            }
            static disable() {
                ac = !1
            }
            static enable() {
                ac = !0
            }
            set codecType(e) {
                this.options.codecType = e
            }
            get codecType() {
                return this.options.codecType
            }
            get vtype() {
                return this.options.vtype
            }
            log(e, t, ...n) {
                ou(this.logger, e, t, ...n)
            }
            update(e) {
                Object.keys(e).forEach((t => {
                    this.options[t] = e[t]
                }
                )),
                this.preloadManager.setMaxCache ? this.preloadManager.setMaxCache(this.options.preloadMaxCacheCount) : this.preloadManager._cacheInst._maxCache = this.options.preloadMaxCacheCount
            }
            get currentPreloadInst() {
                return this.preloadManager._currentPreloadInst
            }
            startCheckTask() {
                this.preloadManager.startCheckTask()
            }
            stopCheckTask() {
                this.preloadManager.stopCheckTask()
            }
            getPreloadMetaByVid(e) {
                const {allCachedKeys: t, allCachedTimeKeys: n} = this;
                return function(e, t, n) {
                    const i = [];
                    let r = "";
                    Object.keys(t).forEach((t => {
                        const n = function(e) {
                            if (!e)
                                throw new Error(`key ${e} is empty`);
                            const t = e.split("#");
                            if (t.length < 5)
                                throw new Error(`key ${e} is not right format`);
                            return {
                                vid: t[0],
                                mediaType: t[1],
                                codecType: t[2],
                                vtype: t[3],
                                definition: t[4],
                                order: -1,
                                timeStamp: 0,
                                total: 0
                            }
                        }(t);
                        n.vid === e && (i.push(n),
                        r = t)
                    }
                    ));
                    let o = null;
                    if (r) {
                        const e = function(e) {
                            const t = [];
                            return Object.keys(e).forEach((n => {
                                t.push(Number(e[n]))
                            }
                            )),
                            t.sort(( (e, t) => e - t))
                        }(n)
                          , t = Number(n[r])
                          , a = function(e, t) {
                            for (let n = 0; n < e.length; n++)
                                if (e[n] === t)
                                    return n;
                            return -1
                        }(e, t);
                        o = i[0],
                        o.timeStamp = t,
                        o.order = a,
                        o.total = e.length
                    }
                    return o
                }(e, t, n)
            }
            async getPreloadMemoryInfo() {
                const {allCachedKeys: e} = this;
                let t = 0
                  , n = 0;
                for (const i in e)
                    if (e.hasOwnProperty(i)) {
                        n++;
                        try {
                            const e = await this.getPreLoadData(i);
                            t += (null == e ? void 0 : e.memory) || 0
                        } catch {}
                    }
                return {
                    memory: t,
                    cnt: n
                }
            }
            getPreloadUnuseInfo() {
                const e = [];
                for (const [t,n] of Bl)
                    if ($l.get(t))
                        Bl.delete(t);
                    else {
                        const i = t.split("#")
                          , r = (null == i ? void 0 : i.length) > 0 ? i[0] : t;
                        e.push({
                            vid: r,
                            bw: (null == n ? void 0 : n.bw) || 0,
                            pbw: (null == n ? void 0 : n.pbw) || 0
                        })
                    }
                return e
            }
            generateUniqueKey(e) {
                return Ju(e)
            }
            addPlayingItem(e, t) {
                const n = this.checkPlaying("_playerId", e);
                n > -1 ? this.playingVids[n].vid = t : this.playingVids.push({
                    vid: t,
                    _playerId: e
                }),
                this.log(Co.LOG, "addPlayingItem", n, e, t, this.playingVids)
            }
            delPlayingItem(e) {
                const t = this.checkPlaying("_playerId", e);
                this.log(Co.LOG, "delPlayingItem", t, e, this.playingVids),
                t > -1 && this.playingVids.splice(t, 1)
            }
            checkPlaying(e, t) {
                const n = this.playingVids;
                for (let i = 0; i < n.length; i++)
                    if (t === n[i][e])
                        return i;
                return -1
            }
            before() {
                this.handlers = {
                    checkIfCanPreload: () => this.checkIfCanPreload(),
                    start: e => {
                        const t = e.payload || [];
                        if (0 === t.length)
                            return Promise.reject(new Error("preload_is_null"));
                        const {vid: n} = e;
                        let i = e.vtype || Ia.MP4
                          , r = e.codecType || Yu;
                        const o = this.getUserSelectDefinition()
                          , a = this.checkCacheKey(n, t, o, i, r);
                        if (this.log(Co.LOG, `${this.playerId} ${n}`, `codecType:${r} vtype:${i} hasCache:${a}`),
                        a || "MP3" === i)
                            return Promise.reject(new Error(`vtype_${i}`));
                        const s = this.getInitDefinition(t, this.options.definition, o);
                        if (this.log(Co.LOG, ` ${this.playerId} ${n} getInitDefinition`, null == s ? void 0 : s.definition),
                        !s)
                            return Promise.reject(new Error("definition_error"));
                        const {definition: l, orgDefinition: u} = s
                          , c = s.vtype || i
                          , h = s.codecType || r
                          , d = e.preloadTime || this.options.preloadTime
                          , f = e.preloadSize || this.options.preloadSize || Math.pow(25, 4) - 1
                          , p = this.generateUniqueKey({
                            vid: n,
                            definition: l,
                            vtype: c,
                            codecType: h
                        });
                        this._nextPreloadCount > 0 && this._nextPreloadCount--,
                        ou(Co.LOG, `${n} start duration:${s.duration} preloadTime:${d} cacheKey:${p},playerId:${this.playerId}`);
                        const g = {
                            vid: n,
                            definition: l,
                            orgDefinition: u,
                            preloadTime: d,
                            preloadSize: f,
                            cacheKey: p,
                            codecType: h,
                            vtype: c,
                            ...s
                        };
                        return e.reqOptions && (g.reqOptions = e.reqOptions),
                        this.loadingCount++,
                        this.log(Co.LOG, `start preload,${n} loadingCount:${this.loadingCount},playerId:${this.playerId}`),
                        this.start(g)
                    }
                    ,
                    onRequest: ({url: e, range: t, extData: n}, i) => this.getData(e, t, n, i)
                },
                this.loggerConfig = {
                    logger: () => {}
                    ,
                    openLog: !1
                },
                this.predictInst = new Zu(this.loggerConfig)
            }
            start(e) {
                const t = {
                    mediaInfos: {
                        dynamic_video_list: [],
                        dynamic_audio_list: []
                    },
                    onObtain: () => {
                        const e = new qu;
                        return e.resolve(t.mediaInfos),
                        e
                    }
                    ,
                    onTransform: () => {
                        const t = new qu;
                        this._pendingPromise = t;
                        const {preloadType: n} = this.options;
                        return this.emit("preload_start", {
                            ...e,
                            type: n
                        }),
                        n === ic.DURATION ? this.loadByPreloadTime(e, t) : this.loadByChunkSize(e, t),
                        t
                    }
                };
                return Promise.resolve(t)
            }
            getInitDefinition(e, t, n=null) {
                let i = null;
                return lc.BitRateAdapter ? (i = lc.BitRateAdapter.select(e, this.codecType, this.vtype),
                this.log(Co.DEBUG, "Mp4Preloader.BitRateAdapter", null == i ? void 0 : i.type, null == i ? void 0 : i.definition, null == i ? void 0 : i.bitrate)) : i = function(e, t) {
                    let n = null;
                    if (!e || e.length < 1)
                        return n;
                    for (let i = 0; i < e.length; i++) {
                        const r = e[i];
                        if (r.definition === t) {
                            n = r;
                            break
                        }
                    }
                    return n || (n = e[0]),
                    n
                }(e, t),
                i || (i = e[0]),
                i
            }
            getPreLoadData(e) {
                const t = new qu;
                return this.getItemSameVid(e).then((e => {
                    if (this.log(Co.DEBUG, "[Preloader] getPreLoadData", !!e.value),
                    e.value) {
                        const {mediaSegList: n, meta: i, type: r, buffer: o, preloadTime: a, vid: s, cacheKey: l, definition: u, orgDefinition: c, byteLength: h, duration: d, fileSize: f, from: p, vtype: g, codecType: m, initSeg: v, bitrate: y, adaptTimeRange: _, repeatData: T, memory: b} = e.value
                          , S = {
                            vid: s,
                            type: r,
                            vtype: g,
                            codecType: m,
                            definition: u,
                            orgDefinition: c,
                            bitrate: y,
                            cacheKey: l,
                            duration: d || 0,
                            byteLength: h,
                            from: p,
                            adaptTimeRange: _,
                            repeatData: T,
                            memory: b,
                            meta: i,
                            preloadTime: a
                        };
                        r === ic.SIZE ? (S.buffer = o,
                        S.fileSize = f || 0) : (S.mediaSegList = n,
                        S.fileSize = f || 0,
                        S.initSeg = v),
                        t.resolve(S)
                    } else
                        t.resolve(null)
                }
                )).catch((e => {
                    t.reject(e)
                }
                )),
                t
            }
            async setPreLoadData(e, t) {
                var n, i;
                const r = new qu
                  , {mediaSegList: o, meta: a, vid: s, definition: l, orgDefinition: u, type: c, buffer: h, duration: d, byteLength: f, preloadTime: p, fileSize: g, from: m, vtype: v, codecType: y, initSeg: _, bitrate: T, adaptTimeRange: b, repeatData: S} = t
                  , w = {
                    codecType: y,
                    vtype: v,
                    vid: s,
                    definition: l,
                    orgDefinition: u,
                    cacheKey: e,
                    type: c,
                    from: m,
                    meta: a,
                    fileSize: g,
                    adaptTimeRange: b,
                    repeatData: S,
                    bitrate: T,
                    memory: 0
                };
                if (w.memory += (null == S ? void 0 : S.byteLength) || 0,
                c === ic.SIZE)
                    w.buffer = h,
                    w.byteLength = f || 0,
                    w.preloadSize = f || 0,
                    w.preloadTime = p || 0,
                    w.fileSize = g,
                    w.buffer && w.buffer.byteLength > 0 && (w.memory += (null == h ? void 0 : h.byteLength) || 0,
                    this.setItem(e, w),
                    r.resolve(!0));
                else if (w.mediaSegList = [],
                w.duration = d,
                w.byteLength = f || 0,
                w.preloadTime = p || 0,
                w.initSeg = _,
                w.memory += (null == _ ? void 0 : _.byteLength) || 0,
                w.fileSize = g,
                o.forEach((e => {
                    var t;
                    w.memory += (null == (t = null == e ? void 0 : e.buffer) ? void 0 : t.byteLength) || 0,
                    w.mediaSegList.push(e)
                }
                )),
                a && 0 === o.length)
                    this.log(Co.LOG, "[Preloader] meta setPreLoadData1 success", e, null == (n = null == w ? void 0 : w.mediaSegList) ? void 0 : n.length),
                    this.setItem(e, w),
                    r.resolve(!0);
                else {
                    const t = o.every((e => !!e.buffer && e.state));
                    this.log(Co.LOG, "[Preloader] mediaSegList setPreLoadData1 success", e, null == (i = null == w ? void 0 : w.mediaSegList) ? void 0 : i.length, t),
                    t || r.resolve(!1),
                    this.setItem(e, w).then(( () => {
                        this.log(Co.LOG, "[Preloader] setPreLoadData1 success", e)
                    }
                    )),
                    r.resolve(!0)
                }
                return r
            }
            getInitCacheData(e, t) {
                const n = {
                    type: e,
                    meta: null,
                    byteLength: 0,
                    fileSize: 0,
                    bitrate: 0,
                    preloadTime: 0
                };
                return e === ic.DURATION ? (n.mediaSegList = [],
                n.initSeg = null,
                n.duration = 0) : n.buffer = null,
                Object.keys(t).map((e => {
                    n[e] = t[e]
                }
                )),
                n
            }
            updatePreCacheData(e, t, n, i, r, o, a, s, l) {
                const {mediaSegList: u, type: c} = e;
                if (c === ic.SIZE || -1 === r)
                    return e.buffer = Oa(Uint8Array, e.buffer.buffer || [], new Uint8Array(t)),
                    e;
                let h = -1;
                for (let e = 0; e < u.length; e++)
                    if (u[e].index === r) {
                        h = e;
                        break
                    }
                const d = o || [0, 0];
                if (h > -1)
                    t && (u[h].buffer = Oa(Uint8Array, u[h].buffer || [], new Uint8Array(t))),
                    n.length > 1 && (u[h].range.length > 1 ? u[h].range[1] = n[1] : u[h].range = n),
                    -1 !== a[1] && (i = u[h].range[1] >= a[1]),
                    u[h].state = i;
                else {
                    const {video: l, audio: c} = s;
                    e.duration = d[1],
                    u.push({
                        buffer: t,
                        range: n || [],
                        index: r,
                        totalRange: a || [],
                        timeRange: [d[0], d[1]],
                        muxSampleIdxRange: {
                            video: l,
                            audio: c
                        },
                        state: i
                    });
                    const h = `${null == t ? void 0 : t.byteLength},${JSON.stringify(n)},${r},${JSON.stringify(a)},${JSON.stringify(o)}`;
                    this.log(Co.DEBUG, `[Preloader] ${e.cacheKey} mediaSegList set, dataLen`, h)
                }
                return i && (e.byteLength += n[1] - n[0],
                e.preloadTime += l),
                i
            }
            checkCacheKey(e, t, n, i=Ia.MP4, r=Yu) {
                const o = this.getPreloadMetaByVid(e);
                if (o)
                    return this.generateUniqueKey(o);
                if (n) {
                    const t = this.generateUniqueKey({
                        vid: e,
                        definition: n,
                        vtype: i,
                        codecType: r
                    });
                    return this.hasItemSameVid(t) ? t : null
                }
                for (let n = 0; n < t.length; n++) {
                    const o = this.generateUniqueKey({
                        vid: e,
                        definition: t[n].definition,
                        vtype: i,
                        codecType: r
                    });
                    if (this.hasItemSameVid(o))
                        return o
                }
                return null
            }
            attachPlayer(e) {
                this.video = e.video ? e.video : e
            }
            detachPlayer() {
                this.video = null
            }
            checkIfCanPreload() {
                let e;
                if (!ac || this.loadingCount >= 1 || !this.isActive)
                    return e = !1,
                    e;
                if (this.video) {
                    const {minBufferLength: t, startPreloadControl: n, startPreloadMinBuffer: i, startPreloadMinPosTime: r} = this.options;
                    e = function(e, t) {
                        if (!e)
                            return !1;
                        const n = function(e, t) {
                            const n = [0, 0];
                            if (e)
                                for (let i = 0, r = e.length; i < r && (n[0] = e.start(i),
                                n[1] = e.end(i),
                                !(n[0] <= t && t <= n[1])); i++)
                                    ;
                            return n[0] - t <= 0 && t - n[1] <= 0 ? n : [0, 0]
                        }(e.buffered, e.currentTime)
                          , {startPreloadControl: i, startPreloadMinBuffer: r, startPreloadMinPosTime: o, minBufferLength: a} = t;
                        if (i) {
                            const t = Math.max(n[1] - e.currentTime, 0);
                            if (t > r) {
                                if (e.currentTime > o)
                                    return !0;
                                if (e.currentTime > e.duration / 2)
                                    return !0
                            } else if (e.currentTime + r + 1 > e.duration && e.currentTime + t > e.duration - 1)
                                return !0
                        } else {
                            const t = e.duration > a + 5 ? a : e.duration / 2
                              , i = Math.min(e.currentTime + a, e.duration)
                              , r = n[1] - i;
                            if (e.currentTime > t && (r > 0 || Math.abs(r) < 1))
                                return !0
                        }
                        return !1
                    }(this.video, {
                        startPreloadControl: n,
                        startPreloadMinBuffer: i,
                        startPreloadMinPosTime: r,
                        minBufferLength: t
                    })
                } else
                    e = this._nextPreloadCount > 0;
                return ou(Co.DEBUG, "[Preloader] checkIfCanPreload", !!this.video, `nextPreloadCount:${this._nextPreloadCount} ret:${e}`),
                e
            }
            startPreloadNext(e=1) {
                let t = !0;
                return this._nextPreloadCount = e,
                (this.loadingCount >= 1 || !this.isActive) && (t = !1),
                t && this.preloadNext(),
                t
            }
            get realTimeSpeed() {
                return oc
            }
            getRequestOption(e) {
                const {getRequestOptionsCallback: t, reqOptions: n} = this.options;
                let i = null;
                return i = e.reqOptions ? e.reqOptions : "Function" === su(t) ? t(e) : n,
                i || {}
            }
            loadByPreloadTime(e, t) {
                var n;
                const {vid: i, cacheKey: r, preloadTime: o, definition: a, orgDefinition: s, duration: l, bitrate: u} = e
                  , {codecType: c, vtype: h, size: d} = e;
                let f = "Array" === su(e.url) ? e.url[0].src : e.url;
                if (!f)
                    return void this._endLoadFragments();
                f = uu(f, {
                    __vid: i
                });
                const {segmentMinDuration: p} = this.options
                  , g = o >= p ? p : o
                  , m = this.getRequestOption({
                    ...e,
                    url: f
                });
                this.log(Co.DEBUG, "[Preloader] loadByPreloadTime", `${e.cacheKey}, definition:${e.definition},segmentMinDuration:${g}`);
                const v = d || hu(u, l)
                  , y = null == (n = null == e ? void 0 : e.pktOffsetMap) ? void 0 : n.find((e => {
                    var t;
                    return (null == e ? void 0 : e.time) === ((null == (t = this.options) ? void 0 : t.firstLoadTimePos) || 5)
                }
                ))
                  , _ = null == y ? void 0 : y.offset;
                this._mp4 = new zu(f,u,{
                    segmentDuration: g,
                    codecType: this.codecType,
                    chunkSize: this.options.preloadSize,
                    firstLoadSize: _,
                    duration: l,
                    fileSize: v,
                    playerId: this.playerId,
                    vid: i,
                    useUrlRange: !1,
                    retryCount: 1,
                    retryDelay: 1e3,
                    supportHevc: this.options.supportHevc,
                    retryCheckFunc: _u,
                    switchPCDNMaxCnt: Number.MAX_VALUE,
                    logger: this.logger,
                    reqOptions: m,
                    fixEditListOffset: this.options.fixEditListOffset
                },[],this.firstFrameTime,"[Preloader]");
                const T = this.getInitCacheData(ic.DURATION, {
                    vid: i,
                    definition: a,
                    orgDefinition: s,
                    cacheKey: r,
                    codecType: c,
                    vtype: h,
                    bitrate: u || 0
                });
                this._mp4.once("metaReady", (async n => {
                    var o;
                    const a = this._mp4;
                    a && (this.log(Co.DEBUG, `[Preloader] ${i} metaReady ${null == (o = null == T ? void 0 : T.mediaSegList) ? void 0 : o.length}`),
                    T.meta = n,
                    T.from = 2,
                    T.fileSize = a.size,
                    await a.cancelLoading(),
                    !a.hasDestroyed && (a.metaLoading = !1,
                    this.emit("prf_meta_ready", {
                        ...T
                    }),
                    await this.setPreLoadData(r, T),
                    !a.hasDestroyed && this.startLoadByFragments(T, e, t)))
                }
                )),
                this._mp4.on(Ru, (e => {
                    this.log(Co.ERROR, `[Preloader] ${i} loadByPreloadTime error`),
                    this._endLoadFragments(),
                    this.emit("error", e)
                }
                )),
                this._mp4.on(Bu, (e => {
                    this.bwEventEmit(i, e.load_type, e.len, null, r)
                }
                )),
                this._mp4.MP4Loader.on(Ll, (e => {
                    var t;
                    if ((null == e ? void 0 : e.len) > 0) {
                        const n = (null == (t = null == e ? void 0 : e.priOptions) ? void 0 : t.type) || Al
                          , o = yu(e.len, e.time);
                        this.bwEventEmit(i, n, e.len, o, r)
                    }
                }
                )),
                this._mp4.init({})
            }
            bwEventEmit(e, t, n, i, r) {
                const o = Bl.get(r) || {
                    bw: 0,
                    pbw: 0
                };
                (!t || t === Al) && (o.bw = o.bw + n,
                this.emit("prf_data_size", {
                    vid: e,
                    task_type: 2,
                    cdn_size: n,
                    cdn_speed: i
                })),
                Bl.set(r, o),
                this._updateRealTimeSpeed({
                    speed: i,
                    type: t || Al
                })
            }
            async loadByChunkSize(e) {
                var t;
                const {vid: n, cacheKey: i, definition: r, orgDefinition: o, duration: a, bitrate: s, codecType: l, vtype: u, size: c} = e
                  , {options: h} = this;
                let d = "Array" === su(e.url) ? e.url[0].src : e.url;
                if (!d)
                    return void this._endLoadChunk();
                d = uu(d, {
                    __vid: n
                });
                const f = c || hu(s, a)
                  , p = null == (t = null == e ? void 0 : e.pktOffsetMap) ? void 0 : t.find((e => (null == e ? void 0 : e.time) === ((null == h ? void 0 : h.firstLoadTimePos) || 5)))
                  , g = null == p ? void 0 : p.offset
                  , m = Jl(a, 8e5, f);
                this.log(Co.LOG, `${n} loadByChunkSize`, e.cacheKey, e.definition, g || m);
                const v = this.getInitCacheData(ic.SIZE, {
                    vid: n,
                    definition: r,
                    orgDefinition: o,
                    cacheKey: i,
                    codecType: l,
                    vtype: u,
                    fileSize: c,
                    bitrate: s || 0
                })
                  , y = this.getRequestOption({
                    ...e,
                    url: d
                });
                this.MP4Loader = new pl({
                    url: d,
                    vid: `${n}-${s}`,
                    retry: h.retryCount || 2,
                    retryDelay: h.retryDelay || 1e3,
                    timeout: h.timeout || 3e3,
                    ...y,
                    loaderType: h.loaderType,
                    retryCheckFunc: _u,
                    openLog: ru(),
                    fixEditListOffset: h.fixEditListOffset
                }),
                this.MP4Loader.on(Ll, (e => {
                    var t;
                    if ((null == e ? void 0 : e.len) > 0) {
                        const r = (null == (t = null == e ? void 0 : e.priOptions) ? void 0 : t.type) || Al
                          , o = yu(e.len, e.time);
                        this.bwEventEmit(n, r, e.len, o, i)
                    }
                }
                ));
                try {
                    let e = new Uint8Array(0)
                      , t = 0
                      , r = null
                      , o = null;
                    const a = async (a, s, l, u, c) => {
                        var h;
                        if (v.fileSize || (v.fileSize = Number(Pu(c.headers))),
                        a && l.range && l.range[0] === t && (e = Oa(Uint8Array, e, new Uint8Array(a)),
                        t += a.byteLength),
                        l.meta) {
                            await this.MP4Loader.cancel();
                            const u = (null == (h = null == a ? void 0 : a.priOptions) ? void 0 : h.type) || Al;
                            this.bwEventEmit(n, u, e.byteLength, null, i);
                            const c = l.meta
                              , f = c.videoSegments
                              , p = c.audioSegments;
                            o = {
                                ...c.meta,
                                ext: {
                                    videoTrak: f,
                                    audioTrak: p
                                }
                            },
                            v.meta = o,
                            r = fu(0, f, p),
                            v.buffer = e.slice(r[0]),
                            v.byteLength = v.buffer.byteLength;
                            const g = fu(1, f, p);
                            let m = [];
                            g[0] < g[1] && r[1] > g[0] && (m = [g[0], r[1]]);
                            const y = (null == f ? void 0 : f.length) > 0 ? f : p
                              , {startTime: _} = y[0]
                              , {endTime: T} = y[0]
                              , b = {
                                startTime: _,
                                endTime: T,
                                range: [...r],
                                repeatRange: m,
                                duration: T - _,
                                downloaded: !1,
                                isLoading: !1,
                                timeRangeIdx: [0, 1]
                            };
                            v.adaptTimeRange = [b],
                            this.log(Co.LOG, `${n} loadMetaProcess ret`, i, e.byteLength, JSON.stringify(r), v.buffer.byteLength, JSON.stringify(m)),
                            this.setPreLoadData(i, v);
                            const S = [t, r[1]];
                            this.log(Co.LOG, `${i} loadMetaProcess end, loadOneChunk start`, s, JSON.stringify(S), t, e.byteLength),
                            this._loadOneChunk(v, S, d, b.duration)
                        }
                    }
                    ;
                    await this.MP4Loader.loadMetaProcess(this.MP4Loader.cache, [0, g || m], a)
                } catch (e) {
                    console.error(`[Preloader] ${i} loadByChunkSize error`, e),
                    this._endLoadChunk()
                }
            }
            async _loadOneChunk(e, t, n, i) {
                if ((null == t ? void 0 : t.length) > 0 && t[0] >= t[1])
                    return this._endLoadChunk(),
                    void this.emit(rc, e);
                const r = n
                  , {vid: o, cacheKey: a, buffer: s} = e;
                try {
                    const n = await this.MP4Loader.loadData(t, this.MP4Loader.cache, {
                        index: 0,
                        url: r,
                        priOptions: {}
                    });
                    this.log(Co.LOG, `${o} _loadOneChunk`, JSON.stringify(t), a);
                    const {response: l, data: u} = n;
                    if (u) {
                        if (this._endLoadChunk(),
                        l && l.headers) {
                            const t = hu(l.headers);
                            t && (e.fileSize = t)
                        }
                        e.buffer = du(s, u),
                        e.byteLength = e.buffer.byteLength,
                        e.preloadTime += i,
                        this.log(Co.LOG, `${o} _loadOneChunk ret`, a, e.buffer.byteLength, null == u ? void 0 : u.byteLength),
                        e.from = 4,
                        this.setPreLoadData(a, e)
                    } else
                        this._endLoadChunk()
                } catch (e) {
                    this.log(Co.ERROR, `[Preloader] ${o} loadByChunkSize error`, null == e ? void 0 : e.message),
                    this._endLoadChunk()
                }
            }
            _endLoadChunk() {
                this.log(Co.LOG, `_endLoadChunk loadingCount:${this.loadingCount}`, this._pendingPromise ? this._pendingPromise.state : null),
                this._pendingPromise && (this._pendingPromise.resolve(),
                this._pendingPromise = null),
                this.loadingCount > 0 && this.loadingCount--,
                this.MP4Loader && (this.MP4Loader.cancel(),
                this.MP4Loader.destroy(),
                this.MP4Loader = null)
            }
            getAdaptRanges(e, t) {
                const {timeRange: n} = e;
                for (let i = 0; i < n.length && n[i].startTime <= t; i++)
                    e.updateAdaptTimeRange(i, 1),
                    e.getFragRange(i);
                return this._mp4.adaptTimeRange
            }
            async startLoadByFragments(e, t) {
                const {preloadTime: n, vid: i} = t;
                this.log(Co.LOG, `[Preloader] ${i} startLoadByFragments`, t);
                const r = this.getAdaptRanges(this._mp4, n)
                  , o = e => {
                    this.log(Co.ERROR, `[Preloader] ${i} _failedCallback error`, null == e ? void 0 : e.message),
                    this.emit("error", e),
                    this._endLoadFragments()
                }
                  , a = async t => {
                    var n;
                    if (!this._mp4)
                        return;
                    const {buffer: i, context: s, state: l, initSeg: u} = t
                      , {fragIndex: c, range: h, timeRange: d} = s
                      , {_repeatInfo: f, adaptTimeRange: p} = this._mp4
                      , g = p[c]
                      , m = null == g ? void 0 : g.range
                      , v = null == g ? void 0 : g.duration;
                    !e.initSeg && u && (e.initSeg = u,
                    e.adaptTimeRange = p);
                    const y = this._mp4._lastDemuxSampleIdxRange;
                    e.repeatData = (null == (n = f.data) ? void 0 : n.slice(0, f.curDataPos)) || [];
                    const _ = this.updatePreCacheData(e, i, h, l, c, d, m, y, v);
                    this.log(Co.LOG, `[Preloader] ${e.cacheKey} _successCallback`, c, l, _, e),
                    e.from = 3,
                    _ && (await this.setPreLoadData(e.cacheKey, e),
                    c >= r.length - 1 ? (this.log(Co.LOG, `[Preloader] ${e.cacheKey} mp4.load end`, c),
                    this.emit(rc, e),
                    this._endLoadFragments()) : (this.log(Co.LOG, `[Preloader] ${e.cacheKey} mp4.load start`, c + 1),
                    await this._mp4.loadAllFragmentData(c + 1, a, o)))
                }
                ;
                await this._mp4.loadAllFragmentData(0, a, o)
            }
            _endLoadFragments() {
                this.log(Co.LOG, `[Preloader] _endLoadFragments loadingCount:${this.loadingCount},${this.playerId}`, this._pendingPromise ? this._pendingPromise.state : null),
                this._pendingPromise && (this._pendingPromise.resolve(),
                this._pendingPromise = null),
                this.loadingCount > 0 && this.loadingCount--,
                this._mp4 && (this._mp4.cancelLoading(),
                this._mp4.destroy(),
                this._mp4 = null)
            }
            getFragment(e, t, n, i, r, o={}) {
                const a = new qu;
                return this.getData(e, t, o, !1).then((e => {
                    i.createFragment(new Uint8Array(e.res), t[0] - i.mdatStart, n, {
                        range: t,
                        context: e.context
                    }).then((e => {
                        a.resolve(e)
                    }
                    ))
                }
                )),
                a
            }
            getPreloadUrl({url: e, range: t, definition: n, vid: i}) {
                return [{
                    url: e,
                    range: t,
                    extData: {
                        cacheKey: lc.generateUniqueKey({
                            vid: i,
                            start: t[0],
                            end: t[1],
                            definition: n
                        }),
                        vid: i,
                        format: "mp4"
                    }
                }]
            }
            getRangeList(e) {
                const {allCachedKeys: t} = this
                  , n = {
                    timeRange: [],
                    contentRange: []
                };
                for (const i in t)
                    if (t.hasOwnProperty(i) && i.indexOf(e) > -1) {
                        const e = i.split("#");
                        0 === e[2].indexOf("pretime") ? n.timeRange.push([0, parseFloat(e[2].slice(7))]) : n.contentRange.push([parseInt(e[2]), parseInt(e[3])])
                    }
                return n
            }
            hasItemSameVid(e) {
                if (!e)
                    return null;
                const t = e.split("#")
                  , n = Object.keys(this.allCachedKeys);
                for (let i = 0; i < n.length; i++) {
                    const r = n[i];
                    if (r === e)
                        return r;
                    const o = r.split("#");
                    if (o.length >= 4 && t.length >= 4 && o[0] === t[0]) {
                        if (0 === o[2].indexOf("pretime") && 0 === t[2].indexOf("pretime"))
                            return r;
                        {
                            const e = [parseInt(o[2]), parseInt(o[3])]
                              , n = [parseInt(t[2]), parseInt(t[3])];
                            if (n[0] >= e[0] && n[1] > n[0] && n[1] <= e[1])
                                return r
                        }
                    }
                }
                return null
            }
            removeOthers(e=[]) {
                const {allCachedKeys: t} = this;
                for (const n in t)
                    if (t.hasOwnProperty(n) && n.split("#").length >= 1) {
                        const t = n.split("#")[0];
                        e.every((e => e.split("#").length >= 1 && e.split("#")[0] !== t)) && (this.log(Co.LOG, `remove cache:${n}`),
                        this.cacheInst.removeItem(n))
                    }
            }
            removeAll() {
                const {allCachedKeys: e} = this;
                for (const t in e)
                    e.hasOwnProperty(t) && (this.log(Co.DEBUG, `remove cache:${t}`),
                    this.cacheInst.removeItem(t))
            }
            removeAllPreloadTask() {
                this.preloadManager._preloadDataList = [],
                this.playingVids = []
            }
            getItemSameVid(e, t) {
                const n = this.hasItemSameVid(e);
                return this.log(Co.DEBUG, `getItemSameVid: key:${e} checkResult:${n}`),
                n ? this.cacheInst.getItem(n, t).then((e => ({
                    value: e,
                    key: n
                }))) : Promise.resolve({})
            }
            setItem(e, t) {
                return this.cacheInst.setItem(e, t)
            }
            removeItem(e, t) {
                return this.cacheInst.removeItem(e, t)
            }
            get allCachedKeys() {
                return this.cacheInst._allCachedKeys || {}
            }
            get allCachedTimeKeys() {
                return this.cacheInst._allCachedTimeKeys || {}
            }
            get cacheInst() {
                return this.preloadManager._cacheInst
            }
            get preloadQueueList() {
                return this.preloadManager._preloadDataList || []
            }
            cancelPreloadByVid(e, t) {
                if (!e)
                    return;
                const {_preloadDataList: n} = this.preloadManager
                  , i = [];
                for (let t = 0; t < n.length; t++) {
                    const {data: r} = n[t];
                    r.vid !== e ? i.push(n[t]) : this.log(Co.LOG, "cancelPreloadByVid", e)
                }
                this.preloadManager._preloadDataList = i;
                const r = this.currentPreloadInst
                  , o = r && r.options ? r.options : {};
                this.log(Co.LOG, "cancelPreloadByVid", e, t, e === o.vid, o),
                o.vid === e && this.cancelLoading(),
                this.addPlayingItem(t, e)
            }
            addPlayingVid(e) {
                if (!e)
                    return;
                const {_preloadDataList: t} = this.preloadManager
                  , n = function(e, t) {
                    return e.filter((e => e.data.vid !== t))
                }(t, e);
                this.preloadManager._preloadDataList = n;
                const i = this.currentPreloadInst
                  , r = i && i.options ? i.options : {};
                this.log(Co.LOG, "cancelPreloadByVid", e, e === r.vid, r),
                r.vid === e && this.cancelLoading(),
                nc(this.playingVids1, e) || this.playingVids1.push(e)
            }
            removePlayingVid(e) {
                const t = tc(this.playingVids1, e);
                t >= 0 && this.playingVids1.splice(t, 1)
            }
            cancelLoading() {
                this.log(Co.LOG, "cancelLoading"),
                this._endLoadFragments(),
                this._endLoadChunk()
            }
            clearTaskItem(e) {
                const {preloadManager: t} = this;
                if (t._currentPreloadInst) {
                    const {_toLoadList: n} = t._currentPreloadInst
                      , i = [];
                    n.map((t => (t._playerId !== e && i.push(t),
                    t))),
                    t._currentPreloadInst._toLoadList = i
                }
                const n = []
                  , i = [];
                this.log(Co.LOG, "clearTaskItem before", e, t._preloadDataList.length),
                t._preloadDataList.map((t => (t._playerId !== e ? n.push(t) : i.push(t.data.vid),
                t))),
                this.log(Co.LOG, "clearTaskItem", e, i.join(","), t._preloadDataList.length),
                t._preloadDataList = n
            }
            clearTask() {
                const {preloadManager: e} = this;
                e._preloadDataList = []
            }
            addPreloader(e) {
                if (!e.data)
                    return;
                const {_preloadDataList: t} = this.preloadManager
                  , {vid: n} = e.data
                  , i = ec(t || [], n)
                  , r = nc(this.playingVids1, n);
                if (this.log(Co.LOG, "[Preloader] addPreloader checkIfVidInList", n, i),
                i || r)
                    return;
                const o = cu({}, e);
                o.vtype || (o.vtype = Ia.MP4),
                this.addDashPreloader(o)
            }
            addPreloaderList(e=[]) {
                const t = []
                  , {_preloadDataList: n} = this.preloadManager;
                for (let i = 0; i < e.length; i++) {
                    const {vid: r, vtype: o} = e[i].data
                      , a = ec(n || [], r)
                      , s = nc(this.playingVids1, r);
                    if (this.log(Co.LOG, "[Preloader] addPreloaderList checkIfVidInList", r, a, s),
                    a || s)
                        continue;
                    const l = cu({}, e[i]);
                    o || (l.data.vtype = Ia.MP4),
                    t.push(l)
                }
                this.log(Co.LOG, `[Preloader] addPreloaderList length is ${t.length}`),
                this.addDashPreloaderList(t)
            }
            setUserSelectDefinition(e) {
                this.preloadManager && (this.preloadManager.userDefinition = e)
            }
            getUserSelectDefinition() {
                return this.preloadManager.userDefinition || null
            }
            cancel(e) {
                this.clearTaskItem(e),
                this.delPlayingItem(e, null)
            }
            destroy(e) {
                this.cancelLoading(),
                this.clearTaskItem(e),
                this.delPlayingItem(e, null)
            }
            on(e, t, ...n) {
                super.on(e, t, ...n)
            }
            off(e, t, ...n) {
                super.off(e, t, ...n)
            }
        }
        var uc = Object.defineProperty
          , cc = (e, t, n) => ( (e, t, n) => t in e ? uc(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        function hc(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function dc(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function fc(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(e, _c(i.key), i)
            }
        }
        function pc(e, t, n) {
            return t && fc(e.prototype, t),
            n && fc(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function gc(e, t, n) {
            return (t = _c(t))in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function mc(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, i)
            }
            return n
        }
        function vc(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? mc(Object(n), !0).forEach((function(t) {
                    gc(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : mc(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function yc(e) {
            return function(e) {
                if (Array.isArray(e))
                    return hc(e)
            }(e) || function(e) {
                if (typeof Symbol < "u" && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || function(e, t) {
                if (e) {
                    if ("string" == typeof e)
                        return hc(e, t);
                    var n = {}.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name),
                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? hc(e, t) : void 0
                }
            }(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function _c(e) {
            var t = function(e) {
                if ("object" != typeof e || !e)
                    return e;
                var t = e[Symbol.toPrimitive];
                if (void 0 !== t) {
                    var n = t.call(e, "string");
                    if ("object" != typeof n)
                        return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return String(e)
            }(e);
            return "symbol" == typeof t ? t : t + ""
        }
        function Tc(e) {
            return Tc = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            Tc(e)
        }
        var bc = typeof window < "u" && window.location && window.location.href.indexOf("xgplayerdebugger=1") > -1
          , Sc = {
            info: "color: #525252; background-color: #90ee90;",
            error: "color: #525252; background-color: red;",
            warn: "color: #525252; background-color: yellow; "
        }
          , wc = "%c[xgplayer]"
          , kc = {
            config: {
                debug: bc ? 3 : 0
            },
            logInfo: function(e) {
                for (var t, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                    i[r - 1] = arguments[r];
                this.config.debug >= 3 && (t = console).log.apply(t, [wc, Sc.info, e].concat(i))
            },
            logWarn: function(e) {
                for (var t, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                    i[r - 1] = arguments[r];
                this.config.debug >= 1 && (t = console).warn.apply(t, [wc, Sc.warn, e].concat(i))
            },
            logError: function(e) {
                var t;
                if (!(this.config.debug < 1)) {
                    for (var n = this.config.debug >= 2 ? "trace" : "error", i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)
                        r[o - 1] = arguments[o];
                    (t = console)[n].apply(t, [wc, Sc.error, e].concat(r))
                }
            }
        }
          , Cc = function() {
            return pc((function e(t) {
                dc(this, e),
                this.bufferedList = t
            }
            ), [{
                key: "start",
                value: function(e) {
                    return this.bufferedList[e].start
                }
            }, {
                key: "end",
                value: function(e) {
                    return this.bufferedList[e].end
                }
            }, {
                key: "length",
                get: function() {
                    return this.bufferedList.length
                }
            }])
        }()
          , Mc = {
            createDom: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "div"
                  , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
                  , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
                  , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ""
                  , r = document.createElement(e);
                return r.className = i,
                r.innerHTML = t,
                Object.keys(n).forEach((function(t) {
                    var i = t
                      , o = n[t];
                    "video" === e || "audio" === e || "live-video" === e ? o && r.setAttribute(i, o) : r.setAttribute(i, o)
                }
                )),
                r
            },
            createDomFromHtml: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                try {
                    var i = document.createElement("div");
                    i.innerHTML = e;
                    var r = i.children;
                    return i = null,
                    r.length > 0 ? (r = r[0],
                    n && Mc.addClass(r, n),
                    t && Object.keys(t).forEach((function(e) {
                        r.setAttribute(e, t[e])
                    }
                    )),
                    r) : null
                } catch (e) {
                    return kc.logError("util.createDomFromHtml", e),
                    null
                }
            },
            hasClass: function(e, t) {
                if (!e || !t)
                    return !1;
                try {
                    return Array.prototype.some.call(e.classList, (function(e) {
                        return e === t
                    }
                    ))
                } catch {
                    var n = e.className && "object" === Tc(e.className) ? e.getAttribute("class") : e.className;
                    return n && !!n.match(new RegExp("(\\s|^)" + t + "(\\s|$)"))
                }
            },
            addClass: function(e, t) {
                if (e && t)
                    try {
                        t.replace(/(^\s+|\s+$)/g, "").split(/\s+/g).forEach((function(t) {
                            t && e.classList.add(t)
                        }
                        ))
                    } catch {
                        Mc.hasClass(e, t) || (e.className && "object" === Tc(e.className) ? e.setAttribute("class", e.getAttribute("class") + " " + t) : e.className += " " + t)
                    }
            },
            removeClass: function(e, t) {
                if (e && t)
                    try {
                        t.replace(/(^\s+|\s+$)/g, "").split(/\s+/g).forEach((function(t) {
                            t && e.classList.remove(t)
                        }
                        ))
                    } catch {
                        Mc.hasClass(e, t) && t.split(/\s+/g).forEach((function(t) {
                            var n = new RegExp("(\\s|^)" + t + "(\\s|$)");
                            e.className && "object" === Tc(e.className) ? e.setAttribute("class", e.getAttribute("class").replace(n, " ")) : e.className = e.className.replace(n, " ")
                        }
                        ))
                    }
            },
            toggleClass: function(e, t) {
                e && t.split(/\s+/g).forEach((function(t) {
                    Mc.hasClass(e, t) ? Mc.removeClass(e, t) : Mc.addClass(e, t)
                }
                ))
            },
            classNames: function() {
                for (var e = arguments, t = [], n = function(n) {
                    "String" === Mc.typeOf(e[n]) ? t.push(e[n]) : "Object" === Mc.typeOf(e[n]) && Object.keys(e[n]).map((function(i) {
                        e[n][i] && t.push(i)
                    }
                    ))
                }, i = 0; i < arguments.length; i++)
                    n(i);
                return t.join(" ")
            },
            findDom: function() {
                var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document, n = arguments.length > 1 ? arguments[1] : void 0;
                try {
                    e = t.querySelector(n)
                } catch (i) {
                    kc.logError("util.findDom", i),
                    0 === n.indexOf("#") && (e = t.getElementById(n.slice(1)))
                }
                return e
            },
            getCss: function(e, t) {
                return e.currentStyle ? e.currentStyle[t] : document.defaultView.getComputedStyle(e, !1)[t]
            },
            padStart: function(e, t, n) {
                for (var i = String(n), r = 0 | t, o = Math.ceil(r / i.length), a = [], s = String(e); o--; )
                    a.push(i);
                return a.join("").substring(0, r - s.length) + s
            },
            format: function(e) {
                if (window.isNaN(e))
                    return "";
                e = Math.round(e);
                var t = Mc.padStart(Math.floor(e / 3600), 2, 0)
                  , n = Mc.padStart(Math.floor((e - 3600 * t) / 60), 2, 0)
                  , i = Mc.padStart(Math.floor(e - 3600 * t - 60 * n), 2, 0);
                return ("00" === t ? [n, i] : [t, n, i]).join(":")
            },
            event: function(e) {
                if (e.touches) {
                    var t = e.touches[0] || e.changedTouches[0];
                    e.clientX = t.clientX || 0,
                    e.clientY = t.clientY || 0,
                    e.offsetX = t.pageX - t.target.offsetLeft,
                    e.offsetY = t.pageY - t.target.offsetTop
                }
                e._target = e.target || e.srcElement
            },
            typeOf: function(e) {
                return Object.prototype.toString.call(e).match(/([^\s.*]+)(?=]$)/g)[0]
            },
            deepCopy: function(e, t) {
                if ("Object" === Mc.typeOf(t) && "Object" === Mc.typeOf(e))
                    return Object.keys(t).forEach((function(n) {
                        "Object" !== Mc.typeOf(t[n]) || t[n]instanceof Node ? "Array" === Mc.typeOf(t[n]) ? e[n] = "Array" === Mc.typeOf(e[n]) ? e[n].concat(t[n]) : t[n] : e[n] = t[n] : void 0 === e[n] || void 0 === e[n] ? e[n] = t[n] : Mc.deepCopy(e[n], t[n])
                    }
                    )),
                    e
            },
            deepMerge: function(e, t) {
                return Object.keys(t).map((function(n) {
                    var i;
                    "Array" === Mc.typeOf(t[n]) && "Array" === Mc.typeOf(e[n]) ? "Array" === Mc.typeOf(e[n]) && (i = e[n]).push.apply(i, yc(t[n])) : Mc.typeOf(e[n]) !== Mc.typeOf(t[n]) || null === e[n] || "Object" !== Mc.typeOf(e[n]) || t[n]instanceof window.Node ? null !== t[n] && (e[n] = t[n]) : Mc.deepMerge(e[n], t[n])
                }
                )),
                e
            },
            getBgImage: function(e) {
                var t = (e.currentStyle || window.getComputedStyle(e, null)).backgroundImage;
                if (!t || "none" === t)
                    return "";
                var n = document.createElement("a");
                return n.href = t.replace(/url\("|"\)/g, ""),
                n.href
            },
            copyDom: function(e) {
                if (e && 1 === e.nodeType) {
                    var t = document.createElement(e.tagName);
                    return Array.prototype.forEach.call(e.attributes, (function(e) {
                        t.setAttribute(e.name, e.value)
                    }
                    )),
                    e.innerHTML && (t.innerHTML = e.innerHTML),
                    t
                }
                return ""
            },
            setInterval: function(e, t, n, i) {
                e._interval[t] || (e._interval[t] = window.setInterval(n.bind(e), i))
            },
            clearInterval: function(e, t) {
                clearInterval(e._interval[t]),
                e._interval[t] = null
            },
            setTimeout: function(e, t, n) {
                e._timers || (e._timers = []);
                var i = setTimeout((function() {
                    t(),
                    Mc.clearTimeout(e, i)
                }
                ), n);
                return e._timers.push(i),
                i
            },
            clearTimeout: function(e, t) {
                var n = e._timers;
                if ("Array" === Mc.typeOf(n)) {
                    for (var i = 0; i < n.length; i++)
                        if (n[i] === t) {
                            n.splice(i, 1),
                            clearTimeout(t);
                            break
                        }
                } else
                    clearTimeout(t)
            },
            clearAllTimers: function(e) {
                var t = e._timers;
                "Array" === Mc.typeOf(t) && (t.map((function(e) {
                    clearTimeout(e)
                }
                )),
                e._timerIds = [])
            },
            createImgBtn: function(e, t, n, i) {
                var r, o, a, s = Mc.createDom("xg-".concat(e), "", {}, "xgplayer-".concat(e, "-img"));
                return s.style.backgroundImage = 'url("'.concat(t, '")'),
                n && i && (["px", "rem", "em", "pt", "dp", "vw", "vh", "vm", "%"].every((function(e) {
                    return !(n.indexOf(e) > -1 && i.indexOf(e) > -1 && (r = parseFloat(n.slice(0, n.indexOf(e)).trim()),
                    o = parseFloat(i.slice(0, i.indexOf(e)).trim()),
                    a = e,
                    1))
                }
                )),
                s.style.width = "".concat(r).concat(a),
                s.style.height = "".concat(o).concat(a),
                s.style.backgroundSize = "".concat(r).concat(a, " ").concat(o).concat(a),
                s.style.margin = "start" === e ? "-".concat(o / 2).concat(a, " auto auto -").concat(r / 2).concat(a) : "auto 5px auto 5px"),
                s
            },
            Hex2RGBA: function(e, t) {
                var n = [];
                if (/^\#[0-9A-F]{3}$/i.test(e)) {
                    var i = "#";
                    e.replace(/[0-9A-F]/gi, (function(e) {
                        i += e + e
                    }
                    )),
                    e = i
                }
                return /^#[0-9A-F]{6}$/i.test(e) ? (e.replace(/[0-9A-F]{2}/gi, (function(e) {
                    n.push(parseInt(e, 16))
                }
                )),
                "rgba(".concat(n.join(","), ", ").concat(t, ")")) : "rgba(255, 255, 255, 0.1)"
            },
            getFullScreenEl: function() {
                return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement
            },
            checkIsFunction: function(e) {
                return e && "function" == typeof e
            },
            checkIsObject: function(e) {
                return null !== e && "object" === Tc(e)
            },
            hide: function(e) {
                e.style.display = "none"
            },
            show: function(e, t) {
                e.style.display = t || "block"
            },
            isUndefined: function(e) {
                if (typeof e > "u" || null === e)
                    return !0
            },
            isNotNull: function(e) {
                return null != e
            },
            setStyleFromCsstext: function(e, t) {
                t && ("String" === Mc.typeOf(t) ? t.replace(/\s+/g, "").split(";").map((function(t) {
                    if (t) {
                        var n = t.split(":");
                        n.length > 1 && (e.style[n[0]] = n[1])
                    }
                }
                )) : Object.keys(t).map((function(n) {
                    e.style[n] = t[n]
                }
                )))
            },
            filterStyleFromText: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ["width", "height", "top", "left", "bottom", "right", "position", "z-index", "padding", "margin", "transform"]
                  , n = e.style.cssText;
                if (!n)
                    return {};
                var i = n.replace(/\s+/g, "").split(";")
                  , r = {}
                  , o = {};
                return i.map((function(e) {
                    if (e) {
                        var n = e.split(":");
                        n.length > 1 && (function(e, t) {
                            for (var n = 0, i = t.length; n < i; n++)
                                if (e.indexOf(t[n]) > -1)
                                    return !0;
                            return !1
                        }(n[0], t) ? r[n[0]] = n[1] : o[n[0]] = n[1])
                    }
                }
                )),
                e.setAttribute("style", ""),
                Object.keys(o).map((function(t) {
                    e.style[t] = o[t]
                }
                )),
                r
            },
            getStyleFromCsstext: function(e) {
                var t = e.style.cssText;
                if (!t)
                    return {};
                var n = t.replace(/\s+/g, "").split(";")
                  , i = {};
                return n.map((function(e) {
                    if (e) {
                        var t = e.split(":");
                        t.length > 1 && (i[t[0]] = t[1])
                    }
                }
                )),
                i
            },
            preloadImg: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {}
                  , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function() {}
                ;
                if (e) {
                    var i = new window.Image;
                    i.onload = function(e) {
                        i = null,
                        t && t(e)
                    }
                    ,
                    i.onerror = function(e) {
                        i = null,
                        n && n(e)
                    }
                    ,
                    i.src = e
                }
            },
            stopPropagation: function(e) {
                e && e.stopPropagation()
            },
            scrollTop: function() {
                return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0
            },
            scrollLeft: function() {
                return window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0
            },
            checkTouchSupport: function() {
                return "ontouchstart"in window
            },
            getBuffered2: function(e) {
                for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .5, n = [], i = 0; i < e.length; i++)
                    n.push({
                        start: e.start(i) < .5 ? 0 : e.start(i),
                        end: e.end(i)
                    });
                n.sort((function(e, t) {
                    return e.start - t.start || t.end - e.end
                }
                ));
                var r = [];
                if (t)
                    for (var o = 0; o < n.length; o++) {
                        var a = r.length;
                        if (a) {
                            var s = r[a - 1].end;
                            n[o].start - s < t ? n[o].end > s && (r[a - 1].end = n[o].end) : r.push(n[o])
                        } else
                            r.push(n[o])
                    }
                else
                    r = n;
                return new Cc(r)
            },
            getEventPos: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                return e.touches && e.touches.length > 0 && (e = e.touches[0]),
                {
                    x: e.x / t,
                    y: e.y / t,
                    clientX: e.clientX / t,
                    clientY: e.clientY / t,
                    offsetX: e.offsetX / t,
                    offsetY: e.offsetY / t,
                    pageX: e.pageX / t,
                    pageY: e.pageY / t
                }
            },
            requestAnimationFrame: function(e) {
                var t = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
                if (t)
                    return t(e)
            },
            getHostFromUrl: function(e) {
                if ("String" !== Mc.typeOf(e))
                    return "";
                var t = e.split("/")
                  , n = "";
                return t.length > 3 && t[2] && (n = t[2]),
                n
            },
            cancelAnimationFrame: function(e) {
                var t = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.cancelRequestAnimationFrame;
                t && t(e)
            },
            isMSE: function(e) {
                return e.media && (e = e.media),
                !!(e && e instanceof HTMLMediaElement) && (/^blob/.test(e.currentSrc) || /^blob/.test(e.src))
            },
            isBlob: function(e) {
                return "string" == typeof e && /^blob/.test(e)
            },
            generateSessionId: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                  , t = (new Date).getTime();
                try {
                    e = parseInt(e)
                } catch {
                    e = 0
                }
                return t += e,
                window.performance && "function" == typeof window.performance.now && (t += parseInt(window.performance.now())),
                "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                    var n = (t + 16 * Math.random()) % 16 | 0;
                    return t = Math.floor(t / 16),
                    ("x" === e ? n : 3 & n | 8).toString(16)
                }
                ))
            },
            createEvent: function(e) {
                var t;
                return "function" == typeof window.Event ? t = new Event(e) : (t = document.createEvent("Event")).initEvent(e, !0, !0),
                t
            },
            adjustTimeByDuration: function(e, t, n) {
                return t && e && (e > t || n && e < t) ? t : e
            },
            createPositionBar: function(e, t) {
                var n = Mc.createDom("xg-bar", "", {
                    "data-index": -1
                }, e);
                return t.appendChild(n),
                n
            },
            getTransformStyle: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                    x: 0,
                    y: 0,
                    scale: 1,
                    rotate: 0
                }
                  , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
                  , n = {
                    scale: "".concat(e.scale || 1),
                    translate: "".concat(e.x || 0, "%, ").concat(e.y || 0, "%"),
                    rotate: "".concat(e.rotate || 0, "deg")
                };
                return Object.keys(n).forEach((function(e) {
                    var i = new RegExp("".concat(e, "\\([^\\(]+\\)"),"g")
                      , r = "".concat(e, "(").concat(n[e], ")");
                    i.test(t) ? (i.lastIndex = -1,
                    t = t.replace(i, r)) : t += "".concat(r, " ")
                }
                )),
                t
            },
            convertDeg: function(e) {
                return Math.abs(e) <= 1 ? 360 * e : e % 360
            },
            getIndexByTime: function(e, t) {
                var n = t.length
                  , i = -1;
                if (n < 1)
                    return i;
                if (e <= t[0].end || n < 2)
                    i = 0;
                else if (e > t[n - 1].end)
                    i = n - 1;
                else
                    for (var r = 1; r < n; r++)
                        if (e > t[r - 1].end && e <= t[r].end) {
                            i = r;
                            break
                        }
                return i
            },
            getOffsetCurrentTime: function(e, t) {
                var n, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -1;
                if ((n = i >= 0 && i < t.length ? i : Mc.getIndexByTime(e, t)) < 0)
                    return -1;
                var r = t.length
                  , o = t[n]
                  , a = o.start
                  , s = o.end
                  , l = o.cTime
                  , u = o.offset;
                return e < a ? l : e >= a && e <= s ? e - u : e > s && n >= r - 1 ? s : -1
            },
            getCurrentTimeByOffset: function(e, t) {
                var n = -1;
                if (!t || t.length < 0)
                    return e;
                for (var i = 0; i < t.length; i++)
                    if (e <= t[i].duration) {
                        n = i;
                        break
                    }
                if (-1 !== n) {
                    var r = t[n].start;
                    return n - 1 < 0 ? r + e : r + (e - t[n - 1].duration)
                }
                return e
            }
        }
          , Pc = /(Android)\s([\d.]+)/
          , Rc = /(Version)\/([\d.]+)/
          , xc = ["avc1.42E01E, mp4a.40.2", "avc1.58A01E, mp4a.40.2", "avc1.4D401E, mp4a.40.2", "avc1.64001E, mp4a.40.2", "avc1.42E01E", "mp4v.20.8", "mp4v.20.8, mp4a.40.2", "mp4v.20.240, mp4a.40.2"]
          , Ec = {
            get device() {
                return Ec.os.isPc ? "pc" : "mobile"
            },
            get browser() {
                if (typeof navigator > "u")
                    return "";
                var e = navigator.userAgent.toLowerCase()
                  , t = {
                    ie: /rv:([\d.]+)\) like gecko/,
                    firefox: /firefox\/([\d.]+)/,
                    chrome: /chrome\/([\d.]+)/,
                    opera: /opera.([\d.]+)/,
                    safari: /version\/([\d.]+).*safari/
                };
                return [].concat(Object.keys(t).filter((function(n) {
                    return t[n].test(e)
                }
                )))[0]
            },
            get os() {
                if (typeof navigator > "u")
                    return {};
                var e = navigator.userAgent
                  , t = /(?:Windows Phone)/.test(e)
                  , n = /(?:SymbianOS)/.test(e) || t
                  , i = /(?:Android)/.test(e)
                  , r = /(?:Firefox)/.test(e)
                  , o = /(?:iPad|PlayBook)/.test(e) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1
                  , a = o || i && !/(?:Mobile)/.test(e) || r && /(?:Tablet)/.test(e)
                  , s = /(?:iPhone)/.test(e) && !a;
                return {
                    isTablet: a,
                    isPhone: s,
                    isIpad: o,
                    isIos: s || o,
                    isAndroid: i,
                    isPc: !(s || i || n || a),
                    isSymbian: n,
                    isWindowsPhone: t,
                    isFireFox: r
                }
            },
            get osVersion() {
                if (typeof navigator > "u")
                    return 0;
                var e = navigator.userAgent
                  , t = ""
                  , n = (t = /(?:iPhone)|(?:iPad|PlayBook)/.test(e) ? Rc : Pc) ? t.exec(e) : [];
                if (n && n.length >= 3) {
                    var i = n[2].split(".");
                    return i.length > 0 ? parseInt(i[0]) : 0
                }
                return 0
            },
            get isWeixin() {
                return !(typeof navigator > "u") && !!/(micromessenger)\/([\d.]+)/.exec(navigator.userAgent.toLocaleLowerCase())
            },
            isSupportMP4: function() {
                var e = {
                    isSupport: !1,
                    mime: ""
                };
                if (typeof document > "u")
                    return e;
                if (this.supportResult)
                    return this.supportResult;
                var t = document.createElement("video");
                return "function" == typeof t.canPlayType && xc.map((function(n) {
                    "probably" === t.canPlayType('video/mp4; codecs="'.concat(n, '"')) && (e.isSupport = !0,
                    e.mime += "||".concat(n))
                }
                )),
                this.supportResult = e,
                t = null,
                e
            },
            isMSESupport: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'video/mp4; codecs="avc1.42E01E,mp4a.40.2"';
                if (typeof MediaSource > "u" || !MediaSource)
                    return !1;
                try {
                    return MediaSource.isTypeSupported(e)
                } catch (t) {
                    return this._logger.error(e, t),
                    !1
                }
            },
            isHevcSupported: function() {
                return !(typeof MediaSource > "u" || !MediaSource.isTypeSupported) && (MediaSource.isTypeSupported('video/mp4;codecs="hev1.1.6.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.2.4.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.3.E.L120.90"') || MediaSource.isTypeSupported('video/mp4;codecs="hev1.4.10.L120.90"'))
            },
            probeConfigSupported: function(e) {
                var t = {
                    supported: !1,
                    smooth: !1,
                    powerEfficient: !1
                };
                if (!e || typeof navigator > "u")
                    return Promise.resolve(t);
                if (navigator.mediaCapabilities && navigator.mediaCapabilities.decodingInfo)
                    return navigator.mediaCapabilities.decodingInfo(e);
                var n = e.video || {}
                  , i = e.audio || {};
                try {
                    var r = MediaSource.isTypeSupported(n.contentType)
                      , o = MediaSource.isTypeSupported(i.contentType);
                    return Promise.resolve({
                        supported: r && o,
                        smooth: !1,
                        powerEfficient: !1
                    })
                } catch {
                    return Promise.resolve(t)
                }
            }
        }
          , Dc = "3.0.21"
          , Lc = {
            1: 5101,
            2: 5102,
            3: 5103,
            4: 5104,
            5: 5105,
            6: 5106
        }
          , Ic = pc((function e(t) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                errorType: "",
                errorCode: 0,
                errorMessage: "",
                originError: "",
                ext: {},
                mediaError: null
            };
            dc(this, e);
            var i = t && t.i18n ? t.i18n.ERROR_TYPES : null;
            if (t.media) {
                var r = n.mediaError ? n.mediaError : t.media.error || {}
                  , o = t.duration
                  , a = t.currentTime
                  , s = t.ended
                  , l = t.src
                  , u = t.currentSrc
                  , c = t.media
                  , h = c.readyState
                  , d = c.networkState
                  , f = n.errorCode || r.code;
                Lc[f] && (f = Lc[f]);
                var p = {
                    playerVersion: Dc,
                    currentTime: a,
                    duration: o,
                    ended: s,
                    readyState: h,
                    networkState: d,
                    src: l || u,
                    errorType: n.errorType,
                    errorCode: f,
                    message: n.errorMessage || r.message,
                    mediaError: r,
                    originError: n.originError ? n.originError.stack : "",
                    host: Mc.getHostFromUrl(l || u)
                };
                return n.ext && Object.keys(n.ext).map((function(e) {
                    p[e] = n.ext[e]
                }
                )),
                p
            }
            if (arguments.length > 1) {
                for (var g = {
                    playerVersion: Dc,
                    domain: document.domain
                }, m = ["errorType", "currentTime", "duration", "networkState", "readyState", "src", "currentSrc", "ended", "errd", "errorCode", "mediaError"], v = 0; v < arguments.length; v++)
                    g[m[v]] = arguments[v];
                return g.ex = i ? (i[arguments[0]] || {}).msg : "",
                g
            }
        }
        ))
          , Oc = "loadeddata"
          , Ac = "loadstart"
          , Gc = "definition_change"
          , Nc = "after_definition_change";
        function Bc(e, t, n) {
            for (var i = arguments.length, r = new Array(i > 3 ? i - 3 : 0), o = 3; o < i; o++)
                r[o - 3] = arguments[o];
            var a = t.call.apply(t, [e].concat(r));
            !n || "function" != typeof n || (a && a.then ? a.then((function() {
                for (var t = arguments.length, i = new Array(t), r = 0; r < t; r++)
                    i[r] = arguments[r];
                n.call.apply(n, [e].concat(i))
            }
            )) : n.call.apply(n, [e].concat(r)))
        }
        function $c(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                pre: null,
                next: null
            };
            return this.__hooks || (this.__hooks = {}),
            !this.__hooks[e] && (this.__hooks[e] = null),
            function() {
                var i = arguments
                  , r = this;
                if (n.pre)
                    try {
                        var o;
                        (o = n.pre).call.apply(o, [this].concat(Array.prototype.slice.call(arguments)))
                    } catch (t) {
                        throw t.message = "[pluginName: ".concat(this.pluginName, ":").concat(e, ":pre error] >> ").concat(t.message),
                        t
                    }
                if (this.__hooks && this.__hooks[e])
                    try {
                        var a, s = (a = this.__hooks[e]).call.apply(a, [this, this].concat(Array.prototype.slice.call(arguments)));
                        s ? s.then ? s.then((function(e) {
                            !1 !== e && Bc.apply(void 0, [r, t, n.next].concat(yc(i)))
                        }
                        )).catch((function(e) {
                            throw e
                        }
                        )) : Bc.apply(void 0, [this, t, n.next].concat(Array.prototype.slice.call(arguments))) : void 0 === s && Bc.apply(void 0, [this, t, n.next].concat(Array.prototype.slice.call(arguments)))
                    } catch (t) {
                        throw t.message = "[pluginName: ".concat(this.pluginName, ":").concat(e, "] >> ").concat(t.message),
                        t
                    }
                else
                    Bc.apply(void 0, [this, t, n.next].concat(Array.prototype.slice.call(arguments)))
            }
            .bind(this)
        }
        function Fc(e, t) {
            var n = this.__hooks;
            if (n)
                return n.hasOwnProperty(e) ? (n && (n[e] = t),
                !0) : (console.warn("has no supported hook which name [".concat(e, "]")),
                !1)
        }
        function Hc(e, t) {
            var n = this.__hooks;
            n && delete n[e]
        }
        function Uc(e, t) {
            kc.logError("[".concat(e, "] event or callback cant be undefined or null when call ").concat(t))
        }
        var Vc = function() {
            return pc((function e(t) {
                dc(this, e),
                Mc.checkIsFunction(this.beforeCreate) && this.beforeCreate(t),
                function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    e.__hooks = {},
                    t && t.map((function(t) {
                        e.__hooks[t] = null
                    }
                    )),
                    Object.defineProperty(e, "hooks", {
                        get: function() {
                            return e.__hooks && Object.keys(e.__hooks).map((function(t) {
                                if (e.__hooks[t])
                                    return t
                            }
                            ))
                        }
                    })
                }(this),
                this.__args = t,
                this.__events = {},
                this.__onceEvents = {},
                this.config = t.config || {},
                this.player = null,
                this.playerConfig = {},
                this.pluginName = "",
                this.__init(t)
            }
            ), [{
                key: "beforeCreate",
                value: function(e) {}
            }, {
                key: "afterCreate",
                value: function() {}
            }, {
                key: "beforePlayerInit",
                value: function() {}
            }, {
                key: "onPluginsReady",
                value: function() {}
            }, {
                key: "afterPlayerInit",
                value: function() {}
            }, {
                key: "destroy",
                value: function() {}
            }, {
                key: "__init",
                value: function(e) {
                    this.player = e.player,
                    this.playerConfig = e.player && e.player.config,
                    this.pluginName = e.pluginName ? e.pluginName.toLowerCase() : this.constructor.pluginName.toLowerCase(),
                    this.logger = e.player && e.player.logger
                }
            }, {
                key: "updateLang",
                value: function(e) {
                    e || (e = this.lang)
                }
            }, {
                key: "lang",
                get: function() {
                    return this.player.lang
                }
            }, {
                key: "i18n",
                get: function() {
                    return this.player.i18n
                }
            }, {
                key: "i18nKeys",
                get: function() {
                    return this.player.i18nKeys
                }
            }, {
                key: "domEventType",
                get: function() {
                    var e = Mc.checkTouchSupport() ? "touch" : "mouse";
                    return this.playerConfig && ("touch" === this.playerConfig.domEventType || "mouse" === this.playerConfig.domEventType) && (e = this.playerConfig.domEventType),
                    e
                }
            }, {
                key: "on",
                value: function(e, t) {
                    var n = this;
                    e && t && this.player ? "string" == typeof e ? (this.__events[e] = t,
                    this.player.on(e, t)) : Array.isArray(e) && e.forEach((function(e) {
                        n.__events[e] = t,
                        n.player.on(e, t)
                    }
                    )) : Uc(this.pluginName, "plugin.on(event, callback)")
                }
            }, {
                key: "once",
                value: function(e, t) {
                    var n = this;
                    e && t && this.player ? "string" == typeof e ? (this.__onceEvents[e] = t,
                    this.player.once(e, t)) : Array.isArray(e) && e.forEach((function(i) {
                        n.__onceEvents[i] = t,
                        n.player.once(e, t)
                    }
                    )) : Uc(this.pluginName, "plugin.once(event, callback)")
                }
            }, {
                key: "off",
                value: function(e, t) {
                    var n = this;
                    e && t && this.player ? "string" == typeof e ? (delete this.__events[e],
                    this.player.off(e, t)) : Array.isArray(e) && e.forEach((function(i) {
                        delete n.__events[e],
                        n.player.off(i, t)
                    }
                    )) : Uc(this.pluginName, "plugin.off(event, callback)")
                }
            }, {
                key: "offAll",
                value: function() {
                    var e = this;
                    ["__events", "__onceEvents"].forEach((function(t) {
                        Object.keys(e[t]).forEach((function(n) {
                            e[t][n] && e.off(n, e[t][n]),
                            n && delete e[t][n]
                        }
                        ))
                    }
                    )),
                    this.__events = {},
                    this.__onceEvents = {}
                }
            }, {
                key: "emit",
                value: function(e) {
                    var t;
                    if (this.player) {
                        for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
                            i[r - 1] = arguments[r];
                        (t = this.player).emit.apply(t, [e].concat(i))
                    }
                }
            }, {
                key: "emitUserAction",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    if (this.player) {
                        var i = vc(vc({}, n), {}, {
                            pluginName: this.pluginName
                        });
                        this.player.emitUserAction(e, t, i)
                    }
                }
            }, {
                key: "hook",
                value: function(e, t) {
                    return $c.call.apply($c, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "useHooks",
                value: function(e, t) {
                    for (var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++)
                        i[r - 2] = arguments[r];
                    return Fc.call.apply(Fc, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "removeHooks",
                value: function(e, t) {
                    for (var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++)
                        i[r - 2] = arguments[r];
                    return Hc.call.apply(Hc, [this].concat(Array.prototype.slice.call(arguments)))
                }
            }, {
                key: "registerPlugin",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                    if (this.player)
                        return n && (t.pluginName = n),
                        this.player.registerPlugin({
                            plugin: e,
                            options: t
                        })
                }
            }, {
                key: "getPlugin",
                value: function(e) {
                    return this.player ? this.player.getPlugin(e) : null
                }
            }, {
                key: "__destroy",
                value: function() {
                    var e = this
                      , t = this.player
                      , n = this.pluginName;
                    this.offAll(),
                    Mc.clearAllTimers(this),
                    Mc.checkIsFunction(this.destroy) && this.destroy(),
                    ["player", "playerConfig", "pluginName", "logger", "__args", "__hooks"].map((function(t) {
                        e[t] = null
                    }
                    )),
                    t.unRegisterPlugin(n),
                    this.__hooks = null
                }
            }], [{
                key: "defineGetterOrSetter",
                value: function(e, t) {
                    for (var n in t)
                        Object.prototype.hasOwnProperty.call(t, n) && Object.defineProperty(e, n, t[n])
                }
            }, {
                key: "defaultConfig",
                get: function() {
                    return {}
                }
            }, {
                key: "pluginName",
                get: function() {
                    return "pluginName"
                }
            }])
        }();
        class jc {
            constructor(e) {
                cc(this, "onTick", (e => {
                    this.cancelPending && this.cancelPending(),
                    this.alive && (this.onTick_ && this.onTick_(),
                    e && e())
                }
                )),
                this.onTick_ = e,
                this.timeoutId = null,
                this.alive = !0
            }
            tickAfter(e, t=null) {
                return this.cancelPending ? this.cancelPending() : this.cancelPending = () => {
                    clearTimeout(this.timeoutId),
                    this.timeoutId = null
                }
                ,
                this.alive = !0,
                this.timeoutId = setTimeout(this.onTick, 1e3 * e, t),
                this
            }
            tickEvery(e) {
                this.tickAfter(e, ( () => {
                    this.tickEvery(e)
                }
                ))
            }
            stop() {
                this.alive = !1,
                this.cancelPending && (this.cancelPending(),
                this.cancelPending = null)
            }
        }
        class zc extends A.EventEmitter {
            constructor(e) {
                super(),
                this.masterTimer = void 0,
                this.onVisibleChange = () => {
                    const e = this.masterTimer || this.workerTimer;
                    this.stop(),
                    e && this.start()
                }
                ,
                this.options = e,
                document.addEventListener("visibilitychange", this.onVisibleChange)
            }
            start() {
                const {frequency: e} = this.options;
                this.stop(),
                this.masterTimer = new jc(( () => {
                    try {
                        (this.masterTimer || this.workerTimer) && this.emit(Vl)
                    } catch {}
                }
                )),
                this.masterTimer.tickEvery(e)
            }
            stop() {
                this.workerTimer && (this.workerTimer = void 0),
                this.masterTimer && (this.masterTimer.stop(),
                this.masterTimer = void 0)
            }
            destroy() {
                this.removeAllListeners(),
                document.removeEventListener("visibilitychange", this.onVisibleChange),
                this.stop()
            }
        }
        const Xc = "DESTROYED"
          , Kc = "xglog_cache"
          , Qc = "degrade"
          , Wc = "fps_stuck";
        let qc = null
          , Zc = null
          , Yc = null
          , Jc = null
          , eh = null
          , th = 0
          , nh = null;
        class ih extends Vc {
            constructor(e) {
                var t, n;
                super(e),
                cc(this, "_onChangeConfig", (e => {
                    if (e) {
                        const t = e.nextBufferLength === this.config.minBufferLength;
                        if (this.setConfig(e),
                        e.nextBufferLength && !t)
                            try {
                                this._onTimeUpdate()
                            } catch {}
                    }
                }
                )),
                cc(this, "fpsStuckHandle", (e => {
                    const {player: t, mse: n} = this;
                    if (this.fpsStuckTime || (this.fpsStuckTime = e.currentTime,
                    this.log(Co.LOG, "fpsStuckHandle, currentTime,", e.currentTime)),
                    this.fpsStuckTime > 0) {
                        const e = t.bufferedPoint;
                        n.clearOpQueues(Uo.VIDEO),
                        this.log(Co.LOG, "fpsStuckHandle, remove,", e.start, "-", e.end, ",seekTime,", this.fpsStuckTime),
                        null == n || n.remove(Uo.VIDEO, e.start, e.end).then(( () => {
                            t.currentTime = this.fpsStuckTime,
                            this.fpsStuckTime = null
                        }
                        ))
                    }
                }
                )),
                cc(this, "_retryHook", ( () => {
                    const {player: e, playerConfig: t} = this
                      , {paused: n} = e;
                    this.softDecode ? e.vtype = "MP4_MSE_SOFT" : e.vtype = "MP4_MSE",
                    this._defInited = !1;
                    const i = e.currentTime || 0;
                    return this.log(Co.LOG, "retryHook ", t.vid, this.codecType, i),
                    this._addMetaDataEvent(( () => {
                        i && (e.currentTime = i,
                        this.log(Co.LOG, "retryHook update currentTime", t.vid, this.codecType, i)),
                        n ? e.pause() : e.play(),
                        this._removeMetaDataEvent()
                    }
                    )),
                    this.destroyMSE(),
                    this._reset(),
                    this.playerStartInit(t.url),
                    !1
                }
                )),
                cc(this, "_playHook", ( (e, ...t) => {
                    this._usePaused = !1,
                    this._canceLoading = !1,
                    this.log(Co.LOG, "playHook"),
                    this._startProgress()
                }
                )),
                cc(this, "_pauseHook", ( (e, ...t) => {
                    var n, i;
                    this._usePaused = !0,
                    this.log(Co.LOG, "pauseHook", t[0], null == (n = this.player) ? void 0 : n.currentTime),
                    t.indexOf(null == (i = Ul) ? void 0 : i.BUFFER_CONTROLS) < 0 && (clearTimeout(this.checkResumePlayTimer),
                    this.checkResumePlayTimer = null,
                    this.log(Co.LOG, "pause hook clear buffer_control state")),
                    this._loadStuckCheck()
                }
                )),
                cc(this, "abrSwitchURL", (async e => {
                    const {playerConfig: t} = this
                      , n = t.definition.list;
                    let i = 0;
                    for (let t = 0; t < n.length; t++)
                        if (e.definition === n[t].definition) {
                            i = t;
                            break
                        }
                    const r = this.player.curDefinition;
                    this.changeDefinition(n[i], r, !0)
                }
                )),
                cc(this, "timerHandle", ( () => {
                    this._requestTimer && this._onTimeUpdate()
                }
                )),
                cc(this, "changeDefineCanPlay", ( (e, t, n, i) => {
                    const {player: r} = this;
                    if (r.ended)
                        return void (r.currentTime = 0);
                    const {_changeDefState: o} = this;
                    r.currentTime = o ? o.currentTime : e,
                    (o ? o.paused : t) ? r.pause() : r.play(),
                    this._changeDefState = null,
                    r.emit(Nc, {
                        from: n,
                        to: i
                    })
                }
                )),
                cc(this, "changeDefinition", ( (e, t, n) => {
                    var i, r;
                    const {player: o, playerConfig: a, mp4: s, config: l} = this;
                    if (t || (t = o.curDefinition),
                    this._MSEError = !1,
                    this._isReceiveEndedEvent = !1,
                    this.useVideoLoad)
                        return "__auto__" === e.url && (e.url = a.definition.list[0].url),
                        void Yc.call(this.player, e, t);
                    const {definitionList: u} = o
                      , c = u.filter((t => t.definition === e.definition));
                    c.length > 0 && (e = c[0]);
                    const h = this._handlerUrl(e.url);
                    if (!h)
                        return;
                    if (l._mainURL = h.main,
                    l._backupURL = h.backup,
                    e._mainURL = l._mainURL,
                    e._backupURL = l._backupURL,
                    l.switchBitRateWay && !n)
                        return void this.oldChangeDefinition(e, t);
                    const d = "自动" === e.definition || "auto" === e.definition;
                    if (n)
                        this.log(Co.LOG, "[switchBitrate:ABR], ready to switch bitRate, ", e.bitrate, e.definition);
                    else {
                        let n = !1;
                        if (d)
                            this._abrService && this._abrService.enable(),
                            n = !0;
                        else {
                            this._abrService && this._abrService.disable();
                            const n = null == (i = a.definition) ? void 0 : i.list;
                            if (n && (!e.bitrate || !e.uri || !e.size || !e.duration))
                                for (let i = 0; i < n.length; i++)
                                    if (e.definition === n[i].definition) {
                                        e.bitrate = n[i].bitrate,
                                        e.uri = n[i].uri || t.uri,
                                        e.size = n[i].size || hu(e.bitrate, a.duration),
                                        e.duration = n[i].duration || this.playerConfig.duration;
                                        break
                                    }
                        }
                        null == (r = this.adaptRange) || r.updateBitrate(e.bitrate),
                        o.emit(Gc, {
                            from: t,
                            to: e
                        }),
                        setTimeout(( () => {
                            this._abrService && this._abrService.updateAutoDefiDesc(o.curDefinition.definition, !d)
                        }
                        )),
                        n && (e = o.curDefinition),
                        this.log(Co.LOG, "[switchBitrate:CBS],switch bitRate, ", e.bitrate, e.definition)
                    }
                    if (o.curDefinition = e,
                    this.mp4.clearPCDNNodeList(),
                    this.checkPCDN(),
                    !s)
                        return;
                    ["keyValue", "kid", "secretKey", "drm", "getLicenseUrl", "drmKeyToken", "sessionId"].forEach((t => {
                        l[t] = e[t]
                    }
                    ));
                    let f = null;
                    wu(this.config) ? (this._initSecret(),
                    f = this._secretkey.getLicenseSecret()) : (f = new qu,
                    f.resolve()),
                    f.then((async i => {
                        var r;
                        null != i && i.secretKey && (!l.keyValue && (l.secretKey = i.secretKey),
                        l.decryptKey = i.decryptKey),
                        a.url = e.url;
                        let u = 0
                          , c = !1;
                        if (this._abrService && this._abrService.isCurrentInAbr()) {
                            const e = o.getBufferedRange(o.buffered2);
                            u = e[1],
                            u < o.currentTime && (u = o.currentTime,
                            this.log(Co.LOG, "abr,bufferRange is invalid, adjust", e, ",timeStart,", u))
                        } else
                            u = o.currentTime,
                            c = !0;
                        const h = s.getFragmentIdx(u);
                        let d = this.getAdaptTimeRangeIdx(h);
                        d < 0 && (d = this._curLoadSegmentIdx),
                        this.log(Co.LOG, `switchBitrate point: ${d}`, `startTime: ${s.adaptTimeRange[d].startTime}`, `currentTime: ${o.currentTime}, timeStart: ${u}`),
                        c && o.emit("definitionSwitchTime", s.adaptTimeRange[d].startTime + 1);
                        const f = Math.max(s.adaptTimeRange[d].startTime, o.currentTime);
                        this._definitionChangePointInfo = {
                            changeStartTime: f,
                            changeInfo: {
                                from: t,
                                to: e
                            }
                        },
                        this.changeState("changeDefinition", {
                            abr: n,
                            fragIndex: d,
                            startTime: s.adaptTimeRange[d].startTime,
                            currentTime: o.currentTime
                        }),
                        s && (s.updateChangeBitRateTime(u),
                        this.canDownload = !1,
                        await s.cancelLoading(),
                        s.metaLoading && (s.metaLoading = !1)),
                        this._removeBuffeEndTime = s.adaptTimeRange[d].startTime,
                        this._isChangeDefinition = !0;
                        const p = o.getBufferedRange(o.buffered)
                          , g = null == (r = this._abrService) ? void 0 : r.isCurrentInAbr();
                        p[1] > 0 && p[1] - o.currentTime > 5 && (!this._abrService || !g) && (this.mse.clearOpQueues(Uo.VIDEO),
                        this.removeBuffer(Uo.VIDEO, o.currentTime + 5, p[1])),
                        this.log(Co.LOG, "switchBitrate: resetFragmentLoadState,", d),
                        s.resetFragmentLoadState(d),
                        this._curLoadSegmentIdx = d,
                        await this.mp4.changeBitRate(e),
                        this._setCurrentDefinition(e.bitrate),
                        this._emitDefinitionChangeDetailEvent(u),
                        this.canDownload = !0,
                        this._onTimeUpdate();
                        const m = {
                            width: e.width || e.vwidth,
                            height: e.height || e.vheight
                        };
                        o.emit("RESOLUTION_UPDATE", m)
                    }
                    )).catch((t => {
                        this.log(Co.ERROR, "switchBitrate: GET_LICENSE_ERROR,", null == t ? void 0 : t.message);
                        const n = new Ic(this.player,{
                            errorType: Wl.DRM,
                            errorCode: Ql.drm,
                            errorMessage: (null == t ? void 0 : t.message) || "GET_LICENSE_ERROR",
                            vid: a.vid
                        });
                        t.errorType = "GET_LICENSE_ERROR",
                        this.emit("GET_LICENSE_ERROR", n),
                        this.changeState("LICENSE_ERROR", {
                            d: e.definition
                        })
                    }
                    ))
                }
                )),
                cc(this, "_onVideoError", (e => {
                    var t, n, i, r;
                    const {player: o} = this;
                    this.changeState("video_error", {
                        code: e.code || (null == (n = null == (t = null == o ? void 0 : o.video) ? void 0 : t.error) ? void 0 : n.code),
                        message: e.message || (null == (r = null == (i = null == o ? void 0 : o.video) ? void 0 : i.error) ? void 0 : r.message),
                        videoType: this.useVideoLoad
                    })
                }
                )),
                cc(this, "removeBuffer", ( (e, t, n, i) => {
                    var r;
                    const o = this.getBufferDur();
                    null == (r = this.mse) || r.remove(e, t, n).then(( () => {
                        const e = this.getBufferDur()
                          , t = o - e;
                        t > 0 && (this.emit("removeBuffer", {
                            removeDur: t
                        }),
                        this.log(Co.LOG, "removeBuffer dur,", t)),
                        i && i()
                    }
                    ))
                }
                )),
                cc(this, "_onPause", ( () => {
                    this._loadStuckCheck()
                }
                )),
                cc(this, "_onPlaying", ( () => {
                    var e, t, n;
                    this.changeState("playing", {
                        curtime: this.player.currentTime,
                        buffer: JSON.stringify(null == (t = null == (e = this.player) ? void 0 : e.buffered2) ? void 0 : t.bufferedList)
                    }),
                    this._waitAdjustTimeCnt > 0 && this._waitInBufferTimer && (this._waitAdjustTimeCnt -= 1,
                    this.changeState("waitInBuffer_resume"),
                    this.log(Co.WARN, "[waitInBuffer resume play], waitAdjustTimeCnt,", this._waitAdjustTimeCnt)),
                    clearTimeout(this._waitInBufferTimer),
                    this._waitInBufferTimer = null;
                    const {mp4: i, player: r} = this
                      , {resumePlayWaterLevel: o} = this.config;
                    if (i) {
                        if (!(i && i.meta && i.meta.duration - r.currentTime <= o) && (this.waitLevelStartTime < 0 && (this.waitLevelStartTime = r.currentTime),
                        this.playFlag || (this.playFlag = !0),
                        o > 0 && r.currentTime - this.waitLevelStartTime >= 2)) {
                            const e = r.getBufferedRange(r.buffered2);
                            e[1] > 0 && e[1] - r.currentTime < o ? (r.paused || (this.emit(Ol, {
                                type: "waiting"
                            }),
                            r.pause(null == (n = Ul) ? void 0 : n.BUFFER_CONTROLS),
                            this.log(Co.LOG, "[!!!!!buffer not rich, pause],currentTime, ", r.currentTime, ", bufferEnd,", e[1])),
                            clearTimeout(this.checkResumePlayTimer),
                            this.checkResumePlayTimer = setTimeout(this._onPlaying, o / 2 * 1e3)) : r.isBufferControlPaused && r.paused && (this.log(Co.LOG, "[!!!!!buffer rich, play],, currentTime, ", r.currentTime, ", bufferEnd,", e[1]),
                            clearTimeout(this.checkResumePlayTimer),
                            this.checkResumePlayTimer = null,
                            r.isBufferControlPaused = !1,
                            this.emit(Ol, {
                                type: "playing"
                            }),
                            r.play())
                        }
                    } else
                        this.checkResumePlayTimer > 0 && (clearTimeout(this.checkResumePlayTimer),
                        this.checkResumePlayTimer = null,
                        r.isBufferControlPaused && (r.isBufferControlPaused = !1),
                        r.paused && r.play())
                }
                )),
                cc(this, "_lowDecoder", ( () => {
                    const e = Su(this.player);
                    this.log(Co.WARN, `H265 lowdecode: ${this.playerConfig.vid} `, e, ", h265Degrade, ", this.config.h265Degrade),
                    this.config.h265Degrade && this._onDegrade()
                }
                )),
                cc(this, "_onError", (e => {
                    this._onDegrade(e)
                }
                )),
                cc(this, "_onDegrade", (e => {
                    var t;
                    const {player: n, playerConfig: i, config: r} = this;
                    bu(n, "lowdecode", this._onDegrade),
                    bu(n, "error", this._onError),
                    null == (t = this.mp4) || t.destroy();
                    const {currentTime: o} = n;
                    if (this.log(Co.WARN, "[h265 degrade], vid,", i.vid, ",currtime,", o),
                    this.emit(Qc, {
                        errc: null == e ? void 0 : e.errorCode,
                        err_msg: (null == e ? void 0 : e.errorMessage) || (null == e ? void 0 : e.message),
                        codec_type: this.codecType,
                        media_type: i.mediaType
                    }),
                    null != r && r.H264Config) {
                        const {H264Config: e} = r;
                        ["drm", "getLicenseUrl", "kid", "keyValue", "secretKey", "isEncrypt", "useEME"].forEach((t => {
                            r[t] = e[t] || null
                        }
                        ))
                    }
                    const a = {
                        mp4encryptplayer: r,
                        mediaType: "video",
                        codecType: jl
                    }
                      , s = (null == i ? void 0 : i.H264DefinitionList) || [];
                    if (s.length > 0) {
                        i.definition.list = s,
                        i.url = s[0].url,
                        i.defaultBitrate = s[0].bitrate,
                        i.defaultDefinition = s[0].definition,
                        this.isH265DegradeH264 = !0,
                        n.playNext(a);
                        const e = () => {
                            n.currentTime = o,
                            this.isH265DegradeH264 = !1,
                            this.log(Co.LOG, "H265DegradeH264 update currentTime", o),
                            this._removeMetaDataEvent()
                        }
                        ;
                        this._addMetaDataEvent(e)
                    } else
                        n.pause(),
                        this._reset(),
                        this.checkReUseMSE(!1),
                        this.log(Co.ERROR, "H265 error,degrade h264 but no h264 url"),
                        this.emit("error", e)
                }
                )),
                cc(this, "_onMp4MetaReady", (e => {
                    var t, n;
                    if (!this.mp4)
                        return;
                    tu && console.log(">>>>_onMp4MetaReady", lu());
                    const i = this.firstFrameTime;
                    i.metaload = this.mp4.firstFrameTime.metaload,
                    i.bitrate = this.player.curDefinition.bitrate;
                    const r = this._checkMetaInfo(e);
                    if (this.emit(xu, {
                        ...e,
                        error: r,
                        timeRange: (null == (t = this.mp4) ? void 0 : t.timeRange) || []
                    }),
                    r)
                        this._errorHandler(r);
                    else {
                        try {
                            this._initEME(this.mp4, e),
                            this.softDecode ? (this.log(Co.LOG, "initH265MseProxy"),
                            this._initH265MseProxy()) : this.player.video instanceof HTMLVideoElement && (this.log(Co.LOG, "initMse"),
                            this._initMse(e)),
                            null == (n = this._initPromise) || n.resolve()
                        } catch (e) {
                            return void this._errorHandler(new Ic(this.player,{
                                errorType: Wl.MEDIA,
                                errorCode: Ql.eme_hijack,
                                errorMessage: (null == e ? void 0 : e.message) || "eme or mse catch err",
                                vid: this.playerConfig.vid
                            }))
                        }
                        if (this.mp4 && this.mp4.timeRange) {
                            const e = [];
                            this.mp4.timeRange.every((t => (e.push({
                                startTime: t.startTime,
                                endTime: t.endTime
                            }),
                            !0))),
                            this.emit("KEYFRAMETIME", e)
                        }
                        this._loadData()
                    }
                }
                )),
                cc(this, "_onMp4Error", (async (e, t) => {
                    const {vid: n} = this.playerConfig;
                    console.error("[Index] _onMp4Error", n, e),
                    this.changeState("MP4_ERROR", {
                        state: t,
                        errmsg: (null == e ? void 0 : e.errorMessage) || (null == e ? void 0 : e.message),
                        errorType: null == e ? void 0 : e.errorType,
                        code: null == e ? void 0 : e.errorCode,
                        httpCode: null == e ? void 0 : e.httpCode
                    }),
                    this._errorHandler(e)
                }
                )),
                cc(this, "_onMp4Progress", (e => {
                    this.emit("progress_event", e)
                }
                )),
                cc(this, "_onMp4DataCallBack", ( () => {
                    this._isMseInit && this._onTimeUpdate()
                }
                )),
                cc(this, "_updateDrmConfig", (e => {
                    const {config: t, mp4: n} = this;
                    n.updateSecretKey(t.useEME, t.secretKey, t.decryptKey, t.keyValue),
                    this._secretkey && e.kid && this._secretkey.updateKid(e.kid)
                }
                )),
                cc(this, "_updateMSE", (e => {
                    const {player: t} = this;
                    t.video instanceof HTMLVideoElement && (this.log(Co.LOG, "updateMse", e.videoCodec),
                    this._initMse(e))
                }
                )),
                cc(this, "_onVideoTimeUpdate", ( () => {
                    var e, t;
                    const {mse: n, player: i} = this;
                    this.waitLevelStartTime < 0 && (this.waitLevelStartTime = i.currentTime),
                    this.checkReStartTimer(),
                    this._isEnded(),
                    i.isSeeking && (i.isSeeking = !1),
                    !this.useVideoLoad && n && this._removeBuffeEndTime > 0 && i.currentTime > this._removeBuffeEndTime + 1 && (this.log(Co.LOG, "remove old bitrate buffer", this._removeBuffeEndTime),
                    this.removeBuffer(Uo.VIDEO, 0, this._removeBuffeEndTime - 1),
                    this._removeBuffeEndTime = 0);
                    const r = this._definitionChangePointInfo;
                    if (r && i.currentTime > r.changeStartTime) {
                        i.emit(Nc, r.changeInfo);
                        const n = r.changeInfo || {};
                        this.log(Co.LOG, Nc, ", currentTime,", i.currentTime, ",from ", null == (e = null == n ? void 0 : n.from) ? void 0 : e.definition, " to ", null == (t = null == n ? void 0 : n.to) ? void 0 : t.definition),
                        this._definitionChangePointInfo = null
                    }
                    !this.useVideoLoad && null === this._requestTimer && !this._offineLine && !this._canceLoading && this._startProgress()
                }
                )),
                cc(this, "_onBufferedReset", ( () => {
                    this.mp4 && this.mp4.videoTrak && this.mp4.resetFragmentLoadState(0)
                }
                )),
                cc(this, "_onOnlineHandler", ( () => {
                    this._offineLine = !1;
                    const {playerConfig: e, player: t} = this
                      , {currentTime: n, paused: i} = t;
                    if (this.log(Co.LOG, "online useVideoLoad:", this.useVideoLoad, this._hasStartProgressBack),
                    this.useVideoLoad) {
                        const r = () => {
                            n && (t.currentTime = n),
                            this.log(Co.LOG, "onOnlineHandler update currentTime", e.vid, this.codecType, this._currentTime),
                            i ? t.pause() : t.play(),
                            this._removeMetaDataEvent()
                        }
                        ;
                        this._addMetaDataEvent(r),
                        this._setPlayerSrc(e.url)
                    } else
                        this._hasStartProgressBack && this._startProgress(),
                        this._hasStartProgressBack = !1
                }
                )),
                cc(this, "_onOfflineHandler", ( () => {
                    this._offineLine = !0,
                    this.log(Co.LOG, "offline, ", this._hasStartProgress),
                    this._hasStartProgress && (this._stopProgress(),
                    this._hasStartProgressBack = !0)
                }
                )),
                cc(this, "_loadDataSuccess", (e => {
                    var t, n, i;
                    if (this.isDestroy || !this.mse && !this.mseProxy)
                        return;
                    const r = this.firstFrameTime;
                    if (r.startload_stmux < 0) {
                        const {startMuxTime: e, firstmux: t} = this.mp4.firstFrameTime;
                        r.startload_stmux = e,
                        r.firstmux = t
                    }
                    r.loadst_loadeddata < 0 && (r.loaddata = lu() - this.loadstart);
                    try {
                        e.initSeg && (this._appendInitSeg(e.initSeg),
                        (!e.buffer || e.buffer.byteLength < 1) && this._onTimeUpdate());
                        const {buffer: r, state: o, context: a, videoTrack: s, audioTrack: l} = e;
                        this.debugInfo.loadIndx = a ? a.fragIndex : -1;
                        const u = null == (i = null == (n = null == (t = this.mp4) ? void 0 : t.adaptTimeRange[a.fragIndex]) ? void 0 : n.timeRangeIdx) ? void 0 : i[1];
                        if (this.mse && o && (!r || r.byteLength <= 0) && u >= this.mp4.timeRange.length) {
                            const {buffered: e} = this.player;
                            e && (null == e ? void 0 : e.length) > 0 && (this.bufferEndTime = e.end(e.length - 1)),
                            this._isEnded(),
                            this.log(Co.LOG, "loaded ended !!!==>>>", JSON.stringify(a.range), ", fragIndex,", a.fragIndex, ", bufferEndTime,", this.bufferEndTime, ",meta_duration,", this.mp4.meta.duration)
                        }
                        if (r && this.mse) {
                            if (r && r.byteLength > 0) {
                                this._appendBuffer(Uo.VIDEO, r, a, o);
                                const e = this.getDataBitRate(a.fragIndex);
                                this.player.emit("addVideoBufferEnd", {
                                    start: Math.floor(a.startPts),
                                    end: a.endPts,
                                    bandwidth: e.bitrate
                                })
                            }
                        } else
                            this.mseProxy && (s && s.samples.length > 0 || l && l.samples.length > 0) && (this.log(Co.LOG, "[livevideo] append,index,", a.fragIndex, ",range,", JSON.stringify(e.context.range), ", timeRange,", a.timeRange),
                            this.mseProxy.appendBuffer(s, l))
                    } catch (e) {
                        this.changeState("APPEND_DATA_ERROR", {
                            errMsg: null == e ? void 0 : e.message
                        });
                        const t = new Ic(this.player,{
                            errorType: Wl.MEDIA,
                            errorCode: Ql.mseAppend,
                            vid: this.playerConfig.vid,
                            errorMessage: e.message,
                            mediaError: {
                                code: Ql.mseAppend,
                                message: e.message
                            }
                        });
                        this._errorHandler(t)
                    }
                    null != e && e.state && this._onTimeUpdate()
                }
                )),
                cc(this, "_onResumePlaying", ( () => {
                    this._resumePlay = !0
                }
                )),
                cc(this, "_seekOnce", (e => {
                    const {player: t} = this;
                    t && (t.currentTime = e + .1 * Math.pow(2, this._currentSeekTimes || 0),
                    this._currentSeekTimes++,
                    this.log(Co.LOG, `当前第${this._currentSeekTimes}次Seek，currentTime=${null == t ? void 0 : t.currentTime}`))
                }
                )),
                cc(this, "_onWaiting", ( () => {
                    var e, t, n;
                    this.checkReStartTimer(),
                    this._isEnded();
                    const i = null == (t = null == (e = this.player) ? void 0 : e.buffered2) ? void 0 : t.bufferedList;
                    this.changeState("waiting", {
                        curtime: this.player.currentTime,
                        buffer: JSON.stringify(i)
                    });
                    const {player: r, config: o, playerConfig: a, mp4: s} = this;
                    clearTimeout(this._waitInBufferTimer),
                    this._waitInBufferTimer = null;
                    const l = r.currentTime;
                    this.log(Co.LOG, ",[onWaiting],curTime, ", l, ",buffer,", JSON.stringify(i), ",dur,", null == (n = null == s ? void 0 : s.meta) ? void 0 : n.duration);
                    const u = r.bufferedPoint;
                    u.end > 0 && u.end - l >= 2 ? this._waitAdjustTimeCnt < o.waitJampBufferMaxCnt ? this._waitInBufferTimer = setTimeout(( () => {
                        this._waitAdjustTimeCnt++,
                        this.changeState("waitInBuffer_seek", {
                            waitAdjustTimeCnt: this._waitAdjustTimeCnt,
                            curTime: l
                        }),
                        r.currentTime = r.currentTime + .5
                    }
                    ), o.waitingInBufferTimeOut) : this._errorHandler(new Ic(this.player,{
                        errorType: Wl.RUNTIME,
                        errorCode: Ql.waitTimeout,
                        errorMessage: "onWaitTimeout_in_buffer",
                        vid: a.vid
                    })) : this._loadStuckCheck()
                }
                )),
                cc(this, "_onEnded", ( () => {
                    this.log(Co.LOG, "[player.onEnded], stopProgress"),
                    this._stopProgress()
                }
                )),
                cc(this, "_errorHandler", (e => {
                    const {player: t, playerConfig: n, preLoadData: i} = this;
                    if (!t || this.useVideoLoad)
                        return;
                    if (e.errorCode === Ql[403] && this._emitExpireEvent(e) && this.config.urlExpireDisableErrorEvent)
                        return this.log(Co.LOG, "_errorHandler urlExpireDisableErrorEvent", this.config.urlExpireDisableErrorEvent, ",errorCode,", e.errorCode),
                        this._stopProgress(),
                        void this.emit(Kc);
                    if ("object" != typeof e) {
                        const t = {};
                        t.err = e,
                        e = t
                    }
                    e.ext || (e.ext = {});
                    const r = t.paused;
                    if (e.ext.vid = n.vid,
                    e.ext.preloadHit = this.hitpreload ? 1 : 0,
                    e.ext.preloadCached = i ? i.duration : 0,
                    e.ext.timerStep = Math.max(...this.timerStepList),
                    e.ext.codectype = this.codecType,
                    e.errorMessage = e.message,
                    e = new Ic(t,e),
                    this.log(Co.ERROR, "_errorHandle", `preState is ${r}`, null == e ? void 0 : e.errorCode, (null == e ? void 0 : e.message) || (null == e ? void 0 : e.errorMessage)),
                    !e.url && (e.url = t.src),
                    e.errd && "object" == typeof e.errd && this.mp4 && (e.errd.url = this.mp4.url,
                    e.url = this.mp4.url),
                    this.player.emit("playCatch", this.player.vtype, e),
                    this.emit("DATA_REPORT", e),
                    this.mp4 && this.mp4.cancelLoading(),
                    this._abrService && this._abrService.disable(),
                    this.canDownload = !1,
                    this.mp4 && this.mp4.bufferCache && this.mp4.bufferCache.clear(),
                    this.checkIsDegraded(e))
                        this.player.vtype = "MP4_2",
                        this._initPromise && this.removeAndRejectInitPromise(e),
                        this._startDegradedPlayback(e, r);
                    else {
                        this.log(Co.ERROR, "final error !!!!, ", n.vid, null == e ? void 0 : e.errorCode, (null == e ? void 0 : e.errorMessage) || (null == e ? void 0 : e.message)),
                        this.player.pause(),
                        this._reset();
                        const {currentTime: i} = t;
                        this.destroyMSE(),
                        t.currentTime = i,
                        this.emit("error", e)
                    }
                    this.emit(Kc)
                }
                )),
                cc(this, "_onSeeking", (async () => {
                    var e, t, n;
                    if (this._isReceiveEndedEvent = !1,
                    this.useVideoLoad)
                        return;
                    const {player: i, mp4: r} = this;
                    this.waitLevelStartTime = i.currentTime;
                    const o = i.currentTime;
                    if (this.changeState("seeking", {
                        curTime: o
                    }),
                    this.log(Co.LOG, "[seeking], curTime,", o, ",buffer,", JSON.stringify(i.buffered2.bufferedList)),
                    !r || !r.meta)
                        return;
                    this._startProgress(),
                    this.endofstream = !1,
                    r.bufferUsedPos = 0,
                    r.metaLoading = !1,
                    this._definitionChangePointInfo && (this._definitionChangePointInfo.changeStartTime = o,
                    this.log("[seeking update definitionChangePointInfo.changeStartTime]", o)),
                    r.changeBitRateTime > 0 && (r.updateChangeBitRateTime(o),
                    this.log("[seeking update changeBitRateTime]", o));
                    const a = i.bufferedPoint;
                    let s = !1
                      , l = 0;
                    if (a.end > 0) {
                        if (s = !0,
                        r.meta.duration - a.end < .5)
                            return void this.log("[seeking in buffered range], buffer end,", a.end, ", duration,", null == (e = null == r ? void 0 : r.meta) ? void 0 : e.duration);
                        const t = r.getFragmentIdx(a.end);
                        l = this.getAdaptTimeRangeIdx(t),
                        r.seekTime = a.end,
                        l < 0 && (l = this._curLoadSegmentIdx),
                        this.log(Co.LOG, "[seeking in buffered range], seekTime ", o, ",bufferRange,", a.start, "-", a.end, ", fragIndex,", l)
                    }
                    if (!s) {
                        r.seekTime = o;
                        const e = r.getFragmentIdx(o);
                        l = this.getAdaptTimeRangeIdx(e),
                        this.log(Co.LOG, "[seekTime out buffer range], srcFragIndex,", e, ", fragIndex,", l),
                        l < 0 && (l = this._curLoadSegmentIdx),
                        this.log(Co.LOG, "[seekTime out buffer range], curTime,", o, ", srcFragIndex,", e, ", adaptIdx,", l);
                        const {mse: t} = this;
                        if (t && null != t && t.isFull()) {
                            const e = i.buffered2.bufferedList
                              , t = e[e.length - 1];
                            this._checkRemoveSourceBuffer([t.start, t.end], i.currentTime, !0, !0)
                        }
                    }
                    this._curLoadSegmentIdx === l && null != (t = r.adaptTimeRange[l]) && t.isLoading ? this.log(Co.LOG, "[seeking in buffered range], seek fragIndex is current load segmentIdx", l) : (r.canDownload = !1,
                    await r.cancelLoading(),
                    r.resetFragmentLoadState(l),
                    this.log(Co.LOG, "[seekTime resetFragmentLoadState],adaptIdx,", l, "mp4.seekTime", r.seekTime, JSON.stringify(r.adaptTimeRange)),
                    null == (n = this.mse) || n.clearOpQueues(Uo.VIDEO),
                    this._curLoadSegmentIdx = l,
                    this.canDownload = !0,
                    this._onTimeUpdate(),
                    this._isEnded())
                }
                )),
                this.initLog(null == (n = null == (t = this.player.playerId) ? void 0 : t.toString()) ? void 0 : n.slice(-4)),
                this._pendingPromises = [],
                this._allInitPromise = new qu,
                this._isInit = !1,
                this._isEventInit = !1,
                this.playerId = this.player.playerId,
                this.preloader = null,
                this.log(Co.LOG, "playerId", this.playerId, this.playerConfig.vid),
                this._useVideoLoad = !1,
                this.mse = null,
                this.mp4 = null,
                this.eme = null,
                this._isMseInit = !1,
                this._corePromise = null,
                this._initPromise = null,
                this._hasStartProgress = !1,
                this._hasStartProgressBack = !1,
                this._curLoadSegmentIdx = 0,
                this._abrService = null,
                this._checkRemoveBufferLastTime = lu(),
                this.playFlag = !1,
                this.config.resumePlayWaterLevel = Math.min(this.config.minBufferLength, this.config.resumePlayWaterLevel),
                this.checkResumePlayTimer = null,
                this._MSEError = !1,
                this.loadstart = -1,
                this._loadStartEventTime = -1,
                this._waitAdjustTimeCnt = 0,
                this._waitInBufferTimer = null,
                this.codecType = this.playerConfig.codecType ? this.playerConfig.codecType.toLowerCase() : jl,
                this.playerConfig.vtype && (this._vtype = this.playerConfig.vtype.toUpperCase()),
                this.isActive = !0,
                this.firstFrameTime = {
                    newplayer: lu(),
                    initmse_sbopen: -1,
                    mseopen: -1,
                    metaload: -1,
                    metaready_initsegend: -1,
                    startload_stmux: -1,
                    firstmux: -1,
                    apcnt: 0,
                    aplen: 0,
                    data_ap: -1,
                    loaded_data: -1,
                    loadst_loadeddata: -1,
                    new_loadeddata: -1,
                    bitrate: -1,
                    hitpreload: -1,
                    first_gop_req_cnt: -1
                },
                this.debugInfo = {},
                this.states = [],
                this.removeVideoList = [],
                this._lastCheckTime = lu(),
                this._lastCheckLagTime = lu(),
                this._changeDefState = null,
                this._defInited = !1,
                this._removeBuffeEndTime = 0,
                this._isChangeDefinition = !1,
                this._lastTimeupdateTime2 = 0,
                this.waitLevelStartTime = -1,
                this.preLoadData = null,
                this.forPreloadTimeCache = null,
                this._usePaused = !1,
                this.endofstream = !1,
                this.bufferEndTime = -1,
                this.hitpreload = !1,
                this.isH265DegradeH264 = !1,
                this.loadstartTimer = null,
                this.loadeddataTimer = null,
                this.canplayTimer = null,
                this.adaptRangeRes = [],
                this._isReceiveEndedEvent = !1,
                this._checkEndedTimer = null,
                this._definitionChangePointInfo = null,
                eh && (this.player.preloader = eh),
                this._lastTimeupdateTime2 = 0,
                this.waitLevelStartTime = -1,
                this.timerStepList = [],
                window && window.location.href.indexOf("playerInstance=true") > -1 && (void 0 === window.mp4PlayerInstanceList && (window.mp4PlayerInstanceList = []),
                window.mp4PlayerInstanceList.push(void 0)),
                this._isH265SoftDecoder = !1,
                this._beforeLoadStartCostTime = 0,
                this._requestTimer = null
            }
            static get pluginName() {
                return "Mp4EncryptPlayer"
            }
            static get defaultConfig() {
                return {
                    onlyInit: !1,
                    useWaterLevel: !1,
                    maxBufferLength: 10,
                    minBufferLength: 5,
                    tickInSeconds: .2,
                    getLicenseUrl: "",
                    xhrSetup: {},
                    chunkSize: 209715,
                    retryCount: 1,
                    retryDelay: 1e3,
                    timeout: 3e3,
                    preloadCacheType: 1,
                    needPreloadRangeList: !1,
                    isOpenPreload: !0,
                    needPreloadCheck: !1,
                    preloadTime: 0,
                    preloadMaxCacheCount: 0,
                    needAutoBitrate: !0,
                    keyValue: null,
                    drm: null,
                    switchBitRateWay: !1,
                    enableWorker: !1,
                    bufferThreshold: 10,
                    removeBufferLen: 60,
                    focusUserDefinition: !1,
                    resumePlayWaterLevel: 2,
                    waitJampBufferMaxCnt: 3,
                    waitingInBufferTimeOut: 5e3,
                    waitingTimeOut: 1e4,
                    notDegradeErrorList: [],
                    h265Degrade: !1,
                    forceVideoPlay: !1,
                    segmentMinDuration: 3,
                    supportHevc: void 0,
                    H264Config: null,
                    reqOptions: {},
                    rangeMaxDuration: 15,
                    getRequestOptionsCallback: null,
                    closeDowngrade: !1,
                    loaderType: "fetch",
                    reUseMSE: !1,
                    urlExpireDisableErrorEvent: !1,
                    logCacheConfig: {
                        logCacheLevel: Co.LOG,
                        logMaxSize: 204800
                    },
                    noPreloadAddBufferLen: 0,
                    enableFPSStuckHandle: !1,
                    loadRangeType: Fl,
                    timerInWorker: !1
                }
            }
            static registerPreloader(e) {
                eh = e
            }
            static set ENCRYPT_SECRET(e) {
                nh = e
            }
            static get speed() {
                return th
            }
            static get realTimeSpeed() {
                return th
            }
            static get version() {
                return Kl
            }
            setConfig(e) {
                this.config = Object.assign(this.config, e)
            }
            initLog(e) {
                const {logCacheLevel: t, logMaxSize: n} = this.config.logCacheConfig;
                this.logger = new Po(ih.pluginName + e,{
                    logCacheLevel: t,
                    logMaxSize: n
                }),
                tu && Po.enable()
            }
            playerlogger(e) {
                e ? Po.enable() : Po.disable()
            }
            afterCreate() {
                const {playerConfig: e, config: t, player: n} = this;
                t.width = e.width || 0,
                t.height = e.height || 0,
                e.vid = e.vid || t.vid,
                Uo.isSupported('video/mp4; codecs="avc1.64001f, mp4a.40.5"') && !Xu() && (void 0 === t.supportHevc && null != Ec && Ec.isHevcSupported && Ec.isHevcSupported() && this.player.video instanceof HTMLVideoElement && (t.supportHevc = !0),
                t.supportVvcc = !(typeof MediaSource > "u" || !MediaSource.isTypeSupported) && MediaSource.isTypeSupported("video/mp4;codecs=bvc2.1.6.L93.B0"),
                this.softDecode ? n.vtype = "MP4_MSE_SOFT" : n.vtype = "MP4_MSE",
                (!Ku() || this.softDecode) && (t.useEME = !1),
                t.useEME = !1 !== t.useEME,
                this.checkConfig(),
                t.onlyInit && (e.autoplay = !1,
                e.videoInit = !1,
                this._hasStartProgress = !1,
                this._hasStartProgressBack = !1),
                e.useWaterLevel && (!e.userGestureEventMiddleware && (e.userGestureEventMiddleware = mu),
                !e.videoEventMiddleware && n.setEventsMiddleware(vu)),
                this._proxyPlayer(),
                n.useHooks("play", this._playHook),
                n.useHooks("pause", this._pauseHook),
                n.useHooks("retry", this._retryHook),
                Tu(n, Dl.BUFFERED_RESET, this._onBufferedReset),
                this._bindNetworkStateChange(),
                this.on("timeupdate", this._onVideoTimeUpdate),
                this.on(Oc, ( () => {
                    var e;
                    this.changeState("LOADED_DATA"),
                    this.deleteVideo(),
                    this.mp4 && this.mp4.updateLoadedDataDone(),
                    this._firstFrameTime(),
                    this._onTimeUpdate(),
                    this.firstFrameTime.loaded_data = this._loadStartEventTime > 0 ? lu() - this._loadStartEventTime : -1,
                    null != (e = this.config) && e.enableFPSStuckHandle && this.on(Wc, this.fpsStuckHandle)
                }
                )),
                this.on(Ac, ( () => {
                    this.changeState("LOAD_START"),
                    this._loadStartEventTime = lu(),
                    this._beforeLoadStartCostTime = (new Date).getTime() - this._tm,
                    this.codecType === zl && !this.config.supportHevc && (this._isMseInit = !0,
                    this._onTimeUpdate())
                }
                )),
                this.on("ended", ( () => {
                    this.log(Co.LOG, "mp4plugin receive player video ended event"),
                    this._onEnded()
                }
                )),
                this.on("pause", ( () => {
                    this._usePaused = !0
                }
                )),
                this.on("play", ( () => {
                    this._usePaused = !1
                }
                )),
                this.on("xglog", (e => {
                    if ("firstFrame" === e.eventType) {
                        const t = this.preLoadData && this.preLoadData.definition ? this.preLoadData.definition : -1
                          , {player: n, firstFrameTime: i} = this;
                        tu && console.log(`[xgplayer-encrypt-mp4]>>>>firstFrame ${this.playerConfig.vid}, ${e.fvt}, codecType: ${this.codecType}`, `hitPreload: ${this.hitpreload}, video: ${this._useVideoLoad}, preloadBitrate: ${t}`, ` metaLoad: ${i.metaload}, mseOpen: ${i.mseopen}`, `curDefinition: ${n.curDefinition.definition},appendInit: ${i.metaready_initsegend}`)
                    }
                }
                )),
                n.mp4MseFlag = !0)
            }
            _startBufferCheck() {
                const {player: e} = this;
                if (!e.video)
                    return;
                const t = [];
                if (e.video.buffered) {
                    for (let n = 0, i = e.video.buffered.length; n < i; n++)
                        t.push([e.video.buffered.start(n), e.video.buffered.end(n)]);
                    t.toString() !== this.lastBuffer && (this.lastBuffer = t.toString(),
                    this._onBufferReachThreshold())
                }
            }
            _onBufferReachThreshold() {
                const {player: e, config: t} = this;
                if (e.video) {
                    const n = e.video.buffered
                      , {currentTime: i} = e.video;
                    let r = 0
                      , o = 0;
                    for (let e = 0; e < n.length && (r = n.start(e),
                    o = n.end(e),
                    !(r <= i && i <= o)); e++)
                        ;
                    o - i >= t.bufferThreshold && !this._hasTriggerBufferThreshold && (this._hasTriggerBufferThreshold = !0,
                    e.emit("BUFFER_THRESHOLD", o - i))
                }
            }
            _startUrlExpiredCheck() {
                const {definition: e} = this.playerConfig;
                e && e.list && e.list.length > 0 && (this.urlExpireTimestamp = e.list[0].url_expire || 0,
                this._handleUrlExpire())
            }
            async cancelLoading() {
                this.mp4 && (this._canceLoading = !0,
                this.log(Co.LOG, "player cancelLoading", this.playerConfig.vid),
                this._stopProgress(),
                this.cancelPreloadTask(),
                await this.mp4.cancelLoading())
            }
            checkConfig() {
                const {playerConfig: e, config: t} = this;
                let n = e.defaultDefinition
                  , i = e.defaultBitrate;
                if (!n) {
                    const {definition: e} = this.playerConfig;
                    n = e && e.defaultDefinition ? e.defaultDefinition : t.definition
                }
                !i && t.bitrate && (i = t.bitrate),
                e.defaultDefinition = n,
                e.defaultBitrate = i
            }
            _addMetaDataEvent(e) {
                const {player: t} = this;
                this.__mHandler = e,
                Tu(t, "loadedmetadata", this.__mHandler)
            }
            _removeMetaDataEvent() {
                if (!this.__mHandler)
                    return;
                const {player: e} = this;
                bu(e, "loadedmetadata", this.__mHandler),
                this.__mHandler = null
            }
            beforePlayerInit() {
                const {player: e} = this
                  , t = this;
                this._isInit || (Vc.defineGetterOrSetter(e, {
                    __url: {
                        get: () => t.mse ? t.mse.url : e.config.url,
                        configurable: !0
                    },
                    downloadSpeed: {
                        get: () => th / 8,
                        configurable: !0
                    },
                    playerVersion: {
                        get: () => Kl,
                        configurable: !0
                    },
                    menuCodeType: {
                        get: () => t.mp4 && t.mp4.meta ? t.mp4.meta.videoCodec : t.codecType === jl ? "avc" : "hevc",
                        configurable: !0
                    },
                    playerType: {
                        get: () => "MP4",
                        configurable: !0
                    },
                    supportMenus: {
                        get: () => ({
                            speed: null == e ? void 0 : e.mp4MseFlag,
                            cdn: null == e ? void 0 : e.mp4MseFlag,
                            resolution: null == e ? void 0 : e.mp4MseFlag
                        }),
                        configurable: !0
                    },
                    preloadActive: {
                        get: () => this.isActive,
                        set: e => {
                            this.isActive = e,
                            this.isActive && this._startProgress()
                        }
                        ,
                        configurable: !0
                    },
                    performance: {
                        get: () => this.firstFrameTime,
                        configurable: !0
                    },
                    domain: {
                        get: () => t.domain,
                        configurable: !0
                    },
                    loadURL: {
                        get: () => t.loadURL,
                        configurable: !0
                    },
                    abrInstance: {
                        get: () => t.abrInstance,
                        configurable: !0
                    },
                    pcdnReq: {
                        get: () => {}
                        ,
                        configurable: !0
                    },
                    retryInfo: {
                        get: () => Uu,
                        configurable: !0
                    },
                    softDecoder: {
                        get: () => this._isH265SoftDecoder,
                        configurable: !0
                    },
                    logCache: {
                        get: () => {
                            if (t.logger)
                                return t.log(Co.LOG, `,version:${Kl},timerStepList,`, JSON.stringify(this.timerStepList)),
                                t.logger.getLogCache()
                        }
                        ,
                        configurable: !0
                    },
                    pcdnVVStat: {
                        get: () => {
                            var e;
                            const {mp4: n, pcdn: i} = t;
                            return n ? {
                                ...n.pcdnVVStat,
                                trace_id: null == (e = n.pcdnTraceInfo) ? void 0 : e.trace_id,
                                cancelCnt: (null == n ? void 0 : n.pSCCancelCnt) || 0,
                                is_try_open: i ? 1 : 0
                            } : null
                        }
                        ,
                        configurable: !0
                    },
                    beforeLoadStartCostTime: {
                        get: () => this.useVideoLoad ? 0 : this._beforeLoadStartCostTime,
                        configurable: !0
                    },
                    bandwidth: {
                        get: () => {
                            const {mp4: e, playerConfig: n} = t;
                            return function(e, t) {
                                const n = e ? e.loadInfo : null
                                  , i = n ? n[Al] : null
                                  , r = n ? n[Gl] : null;
                                return {
                                    vid: t,
                                    cdn: {
                                        speed: null == i ? void 0 : i.loadSpeed,
                                        size: i ? i.loadLen : 0
                                    },
                                    pcdn: {
                                        size: r ? r.loadLen : 0,
                                        ...null == e ? void 0 : e.pcdnTraceInfo
                                    }
                                }
                            }(e, null == n ? void 0 : n.vid)
                        }
                        ,
                        configurable: !0
                    },
                    ext: {
                        get: () => t ? function(e) {
                            var t, n;
                            const i = []
                              , {video: r, currentTime: o, duration: a} = e.player
                              , {playerConfig: s, mp4: l, mse: u, debugInfo: c, _curLoadSegmentIdx: h, states: d, _requestTimer: f, timerStepList: p} = e
                              , g = r ? r.buffered : [];
                            if (g.length > 0)
                                for (let e = 0, t = (null == g ? void 0 : g.length) || 0; e < t; e++)
                                    i.push([g.start(e), g.end(e)]);
                            return {
                                type: "MP4",
                                usevideo: e.useVideoLoad ? 1 : 0,
                                curTime: o,
                                duration: (null == (t = null == l ? void 0 : l.meta) ? void 0 : t.duration) || a,
                                loadIdx: h,
                                curload: null != l && l.adaptTimeRange ? l.adaptTimeRange[h] : {},
                                buffer: i,
                                speed: null == c ? void 0 : c.speed,
                                states: d,
                                msequeLen: (null == u ? void 0 : u.opQueues) && (null == (n = u.opQueues.video) ? void 0 : n.length),
                                timer: !!f,
                                timerlist: JSON.stringify(p),
                                maxtimerstep: Math.max(...p),
                                url: null == s ? void 0 : s.url
                            }
                        }(this) : {},
                        configurable: !0
                    },
                    currentDefitionFromPlayer: {
                        get: () => t.abrInstance && t.abrInstance.isCurrentInAbr ? e._currentDefitionFromPlayer : e.curDefinition,
                        configurable: !0
                    }
                }),
                this._isInit = !0)
            }
            destroy() {
                var e, t;
                const {player: n} = this;
                n.preloader && n.preloader.cancel(this.playerId),
                n.removeHooks("play", this._playHook),
                n.removeHooks("pause", this._pauseHook),
                n.removeHooks("retry", this._retryHook),
                null == (e = this._requestTimer) || e.destroy(),
                this._requestTimer = null,
                this._reset(),
                this.checkReUseMSE(!1),
                this._secretkey && nh.destroySecretKey(this._secretkey, this._errorHandler),
                this.player.playNext = qc,
                this.player._startInit = Zc,
                this.player.changeDefinition = Yc,
                this.player.switchURL = Jc,
                this._unbindNetworkStateChange(),
                this._unbindEvents(),
                bu(n, Dl.BUFFERED_RESET, this._onBufferedReset),
                this._bufferCheckTimer && clearInterval(this._bufferCheckTimer),
                this._removeBufferTimer && (clearTimeout(this._removeBufferTimer),
                this._removeBufferTimer = null),
                null != (t = this.logger) && t.reset && this.logger.reset(),
                this._removeMetaDataEvent(),
                this.timerStepList = []
            }
            _proxyPlayer() {
                "function" == typeof this.player.playNext && (qc = this.player.playNext),
                this.player.playNext = (...e) => {
                    this.playNext(...e)
                }
                ,
                Zc = this.player._startInit,
                Jc = this.player.switchURL,
                Yc = this.player.changeDefinition,
                this.player._startInit = this.playerStartInit.bind(this),
                this.player.switchURL = this.switchURL.bind(this),
                this.player.changeDefinition = this.changeDefinition.bind(this)
            }
            getInitBitrate() {
                const {player: e, config: t, playerConfig: n} = this;
                let i = null;
                const {definitionList: r} = e;
                if (r && r.length > 0) {
                    const {preloader: o} = e;
                    o && r.forEach((e => {
                        const t = o.generateUniqueKey({
                            vid: n.vid,
                            definition: e.definition || -1,
                            vtype: n.vtype,
                            codecType: n.codecType
                        });
                        e.cacheKey = t,
                        t && !i && o && o.hasItemSameVid(t) && (i = e,
                        i.type = "preload")
                    }
                    ));
                    const {userSelectDefinition: a} = n;
                    i && a && t.focusUserDefinition && n.userSelectDefinition !== i.definition && (i = null),
                    !i && this.bitRateAdapter && (this.bitRateAdapter.speed = ju.speed,
                    i = this.getDefinitonFromAdapter(r, a),
                    i && (i.type = "bitRateAdapter"))
                }
                if (!i || !i.url) {
                    const {url: e, definition: t, defaultDefinition: o} = n
                      , a = (null == t ? void 0 : t.defaultDefinition) || o;
                    if ("Array" === su(e) && e.length > 0 || "String" === su(e) && e) {
                        const t = this._getDefinitionItem(a)
                          , r = n.defaultBitrate || n.bitrate || (null == t ? void 0 : t.bitrate);
                        i = {
                            url: e,
                            definition: (null == t ? void 0 : t.definition) || a || -1,
                            duration: (null == t ? void 0 : t.duration) || n.duration || this.config.duration || 0,
                            bitrate: r,
                            uri: n.uri || (null == t ? void 0 : t.uri),
                            file_id: null == t ? void 0 : t.file_id,
                            size: (null == t ? void 0 : t.size) || n.size,
                            type: "default"
                        }
                    } else
                        i = r[r.length - 1]
                }
                return i && (n.url = i.url,
                i.networkSpeed = ju.speed),
                e.curDefinition = i,
                i
            }
            _setPlayerSrc(e) {
                const {player: t} = this;
                this._removeVideoSource(),
                "Array" === su(e) ? (t.video.removeAttribute("src"),
                !t._detachSourceEvents && e.forEach((e => {
                    t.video.appendChild(au("source", "", {
                        src: `${e.src}`,
                        type: `${e.type || ""}`
                    }))
                }
                )),
                t._attachSourceEvents(t.video, e),
                t.play()) : (t.video.src = e,
                t.play()),
                t.mp4MseFlag = !1,
                t.emit("playertypechange")
            }
            _removeVideoSource(e) {
                const {player: t} = this;
                e = e || t.video;
                const {children: n} = e;
                if (n.length > 0)
                    for (t._detachSourceEvents(e); n.length > 0; )
                        e.removeChild(n[0])
            }
            _getDefinitionItem(e) {
                const {definition: t} = this.playerConfig;
                if (!t || !t.list)
                    return null;
                for (let n = 0; n < t.list.length; n++) {
                    const i = t.list[n];
                    if (i.definition === e)
                        return i
                }
                return null
            }
            async _initAbrService() {}
            _initSecret() {
                nh && (this._secretkey ? this._secretkey.updateConfig(this.config) : this._secretkey = nh.createSecretKey(this.config, this._errorHandler))
            }
            _initMp4Kernel() {
                const {playerConfig: e, config: t} = this
                  , n = new qu;
                try {
                    const i = this.player.curDefinition;
                    this.log(Co.LOG, `[_initMp4Kernel] ${e.vid} curDefinition`, null == i ? void 0 : i.definition);
                    const r = this._handlerUrl(e.url);
                    if (!r)
                        return this.log(Co.LOG, "emptyUrl"),
                        n.reject(new Error("emptyUrl")),
                        n;
                    if (t._mainURL = r.main,
                    t._backupURL = r.backup,
                    t.forceVideoPlay && (this.codecType === jl || t.supportHevc))
                        return this.useVideoLoad = !0,
                        this.log(Co.LOG, "forceVideoPlay"),
                        n.reject(new Error("forceVideoPlay")),
                        n;
                    const o = [];
                    this._secretkey && o.push(this._secretkey.getLicenseSecret()),
                    o.push(this._checkPreloader()),
                    Promise.all(o).then((e => {
                        if (this.isDestroy)
                            return void n.reject(new Error("destroy"));
                        let r = null;
                        if (e && e.length > 0 && (e.length > 1 && (!t.keyValue && (t.secretKey = e[0].secretKey),
                        t.decryptKey = e[0].decryptKey),
                        r = e[e.length - 1].data,
                        this.firstFrameTime && (this.firstFrameTime.hitpreload = r ? 1 : 0)),
                        r || !t.needPreloadCheck || this.codecType === zl && !t.supportHevc)
                            if (this._vtype && "MP3" === this._vtype)
                                this.useVideoLoad = !0,
                                this.log(Co.LOG, "vtype_not_MP4"),
                                n.reject(new Error("vtype_not_MP4"));
                            else {
                                const e = t._mainURL;
                                this.player.rawSrc = e,
                                this._initMp4(e, r, {
                                    fileSize: i ? i.size : 0
                                }),
                                this.updateLoadInfo(null == r ? void 0 : r.cacheKey),
                                this.checkPCDN(),
                                this.initAdaptRange(),
                                this._initAbrService()
                            }
                        else
                            this.useVideoLoad = !0,
                            this.log(Co.LOG, "no_preload"),
                            n.reject(new Error("no_preload"))
                    }
                    )).catch((t => {
                        this.log(Co.ERROR, "getLicense or checkPreloader reject", null == t ? void 0 : t.message);
                        const r = new Ic(this.player,{
                            errorType: Wl.DRM,
                            errorCode: Ql.drm,
                            errorMessage: (null == t ? void 0 : t.message) || "getLicense or checkPreloader reject",
                            vid: e.vid
                        });
                        this.emit("GET_LICENSE_ERROR", r),
                        this.changeState("LICENSE_ERROR", {
                            d: i ? i.definition : 0
                        }),
                        n.reject(r)
                    }
                    ))
                } catch (e) {
                    n.reject(e)
                }
                return n
            }
            updateLoadInfo(e) {
                !e || !this.mp4 || (this.mp4.loadInfo = Nl.get(e),
                Nl.delete(e))
            }
            initAdaptRange() {
                const {config: e, player: t, playerConfig: n} = this
                  , {bitrate: i, duration: r} = t.curDefinition;
                if (null != e && e.adaptRange) {
                    let o = null;
                    o = (null == e ? void 0 : e.loadRangeType) === Hl ? zi : ji,
                    this.adaptRange = new o(t,i,r || n.duration,e.adaptRange)
                }
            }
            checkPCDN() {
                const {config: e, player: t, playerConfig: n} = this;
                t.curDefinition,
                this.pcdn = null
            }
            isOpenPCDN(e) {}
            _pcdnReqSuccess(e, t) {
                const {playerConfig: n, player: i, mp4: r} = this;
                if (!r || !e)
                    return;
                const o = null.getPCDNReqId(i.curDefinition, n.vid);
                if (e.req_id && o !== e.req_id)
                    return void this.log(Co.LOG, `,${t} is not match curDefinition reqId', reqId, ', pcdnRet.req_id`, e.req_id);
                const a = e.nodes || [];
                this.log(Co.LOG, `${n.vid} get peer end,pcdn node update,`, a.length),
                r.updateNode(a),
                r.pcdnTraceInfo = {
                    uri: e.vid,
                    fid: e.fid,
                    trace_id: e.trace_id
                },
                r.pcdnVVStat && (r.pcdnVVStat.try_req_node += 1,
                r.pcdnVVStat.req_node_succ += 1,
                r.pcdnVVStat.has_ret_node += a.length > 0 ? 1 : 0)
            }
            _pcdnReqFail(e, t) {
                const {mp4: n} = this;
                null != n && n.pcdnVVStat && (n.pcdnVVStat.try_req_node += 1),
                this.checkURLExpired(e, t)
            }
            initTimer() {
                if (!this._requestTimer) {
                    const {timerInWorker: e, tickInSeconds: t} = this.config;
                    this._requestTimer = new zc({
                        frequency: t,
                        timerInWorker: e
                    }),
                    this._requestTimer.on(Vl, this.timerHandle)
                }
            }
            playerStartInit(e) {
                var t;
                if (this.log(Co.LOG, "playerStartInit", this.player.hasStart, this.playerId, e),
                this.isDestroy)
                    return;
                const {playerConfig: n, player: i} = this;
                if (this._usePaused = !1,
                this.isActive && 0 !== (null == i ? void 0 : i.currentTime) && !this.config.frameFreeze && (this.log(Co.LOG, "[playerStartInit] reset current  = 0 ,buffer,", JSON.stringify(null == (t = null == i ? void 0 : i.buffered2) ? void 0 : t.bufferedList)),
                this.player.currentTime = 0),
                this._isH265SoftDecoder = this.softDecode,
                this.config.reUseMSE && this.mse && "String" === su(e) && /^blob/.test(e) && e !== this.mse.url && (e = n.url,
                this.destroyMSE()),
                !e || "__auto__" === e || "anytext" === e) {
                    const {definition: e} = n
                      , t = function(e) {
                        let t = ""
                          , n = null;
                        const i = e ? e.list : [];
                        if (i && i.length > 0 && e.defaultDefinition && (i.forEach((i => {
                            i.definition === e.defaultDefinition && (t = i.url,
                            n = i)
                        }
                        )),
                        !t)) {
                            const r = i[0];
                            t = r.url,
                            e.defaultDefinition = r.definition,
                            n = r
                        }
                        return n
                    }(e);
                    t && (n.url = t.url,
                    e.defaultDefinition = t.definition,
                    i.curDefinition = t)
                }
                const r = this._defInited ? null : this.getInitBitrate();
                if (n.nullUrlStart && !r && !n.url)
                    return;
                this.initTimer(),
                wu(this.config) ? this._initSecret() : this._secretkey = null,
                this._defInited = !0,
                this.log(Co.LOG, `[playerStartInit] ${n.vid} curDefinition`, r || this.player.curDefinition);
                const {config: o} = this
                  , {preloader: a} = this.player;
                a && a.addPlayingVid(n.vid);
                const s = !this.softDecode;
                if (o.needPreloadCheck && s && !this._secretkey) {
                    let e, t = !1;
                    const {curDefinition: i} = this.player;
                    if (a && i && (e = i.cacheKey ? i.cacheKey : a.generateUniqueKey({
                        vid: n.vid,
                        definition: i.definition || -1,
                        vtype: n.vtype,
                        codecType: n.codecType
                    }),
                    t = a.hasItemSameVid(e)),
                    !t) {
                        this.useVideoLoad = !0,
                        this.player.vtype = "MP4_0",
                        this.log(Co.LOG, `[playerStartInit] ${n.vid} no_preload`, !!a, e);
                        const t = new Ic(this.player,{
                            errorType: "runtime",
                            errorTypeCode: Wl.runtime,
                            errorCode: Ql.other,
                            vid: this.playerConfig.vid,
                            errorMessage: "no preload"
                        });
                        this.player.emit("playCatch", this.player.vtype, t)
                    }
                }
                if (this.useVideoLoad) {
                    if (e = this.playerConfig.url,
                    o.closeDowngrade)
                        return;
                    return this._sTime = lu(),
                    Zc.call(this.player, e),
                    void this._startProgress()
                }
                if (this.isDestroy)
                    return;
                if (this.player.mp4MseFlag = !0,
                this.bufferEndTime = -1,
                this._tm = (new Date).getTime(),
                this._initPromise && "pending" === this._initPromise.state) {
                    const e = this._handlerUrl(n.url);
                    if (e && e.main === o._mainURL)
                        return
                }
                this._reset();
                const {vid: l} = this.playerConfig;
                this.changeState("PLAYER_START_INIT");
                const u = this._initMp4Kernel();
                this._initPromise = u,
                this._addPendingPromise(this._initPromise),
                u.then(( () => {
                    this.isDestroy || (this.mse && (e = this.mse.url),
                    this.changeState("PLAY_INIT_OK"),
                    this._bindEvents(),
                    this._startProgress())
                }
                )).catch((t => {
                    let n = !1;
                    if (this._initPromise && (n = this._initPromise.id !== u.id || this._initPromise.isBreak),
                    this.isDestroy || n || t === Xc)
                        return;
                    if (this.log(Co.LOG, `_initMp4Kernel.catch: ${l} isDestroy:${this.isDestroy},\n          errorCode:${(null == t ? void 0 : t.errorCode) || Ql.other},errMsg:${(null == t ? void 0 : t.errorMessage) || (null == t ? void 0 : t.message)}`),
                    (null == t ? void 0 : t.errorCode) === Ql[403] && this._emitExpireEvent(t) && o.urlExpireDisableErrorEvent)
                        return this._initPromise = null,
                        this.log(Co.LOG, "initMp4Kernel urlExpireDisableErrorEvent", o.urlExpireDisableErrorEvent, ",errorCode,", t.errorCode),
                        this._stopProgress(),
                        void this.emit(Kc);
                    let i = t;
                    i.errorCode || (i = new Ic(this.player,{
                        errorType: Wl.RUNTIME,
                        errorCode: (null == t ? void 0 : t.errorCode) || Ql.other,
                        vid: this.playerConfig.vid,
                        errorMessage: (null == t ? void 0 : t.errorMessage) || (null == t ? void 0 : t.message),
                        mediaError: {
                            code: (null == t ? void 0 : t.httpCode) || Ql.other,
                            message: (null == t ? void 0 : t.errorMessage) || (null == t ? void 0 : t.message),
                            errorType: null == t ? void 0 : t.errorType
                        }
                    }),
                    i.url = e),
                    this.changeState("PLAY_INIT_CATCH", {
                        c: i.errorCode,
                        m: (null == t ? void 0 : t.errorMessage) || (null == t ? void 0 : t.message),
                        t: null == t ? void 0 : t.errorType
                    }),
                    this.useVideoLoad = !0,
                    this.player.vtype = "MP4_1",
                    this.player.emit("playCatch", this.player.vtype, i);
                    const r = this.checkIsDegraded(i);
                    return this.log(Co.WARN, "PLAY_INIT_CATCH final error !!!!, ", l, null == i ? void 0 : i.errorCode, null == i ? void 0 : i.errorMessage, ",degrade:", r),
                    this.emit(Kc),
                    r ? void 0 : (this.player.pause(),
                    this._reset(),
                    this.emit("error", i),
                    void (this._initPromise = null))
                }
                )).finally(( () => {
                    var t;
                    if (!this._initPromise)
                        return;
                    const {isBreak: n, id: i} = this._initPromise;
                    if (i !== u.id)
                        return;
                    this._removePendingPromise(this._initPromise),
                    this._initPromise = null,
                    this._usePaused && (this.playerConfig.autoplay = !1),
                    this.softDecode && "Array" === su(e) && (e = e[0].src),
                    "String" === su(e) && !/^blob/.test(e) && !this.config.frameFreeze && this.destroyMSE();
                    const r = (null == (t = this.player) ? void 0 : t.currentSrc) === e;
                    this.changeState("PLAY_INIT_FINALLY", {
                        isDestroy: this.isDestroy,
                        isBreak: n,
                        reUseSrc: r
                    }),
                    !this.isDestroy && !n && Zc.call(this.player, e),
                    this.reUseMSEEmitEvents(r),
                    this._abrService && this._abrService.isCurrentInAbr() && (this._abrService.enable(),
                    this._abrService.execute())
                }
                ))
            }
            async destroyMSE() {
                var e;
                await (null == (e = this.mse) ? void 0 : e.unbindMedia()),
                this.mse && this.log(Co.LOG, "destroyMSE ", this.playerConfig.vid),
                this.mse = null
            }
            reUseMSEEmitEvents(e) {
                var t;
                e && /^blob/.test(null == (t = this.player) ? void 0 : t.currentSrc) && (clearTimeout(this.loadstartTimer),
                clearTimeout(this.loadeddataTimer),
                clearTimeout(this.canplayTimer),
                this.loadstartTimer = setTimeout(( () => {
                    clearTimeout(this.loadstartTimer),
                    this.loadstartTimer = null,
                    this.emit(Ac),
                    this.log(Co.LOG, "reUseMSE add emit loadstart event")
                }
                ), 10),
                this.loadeddataTimer = setTimeout(( () => {
                    clearTimeout(this.loadeddataTimer),
                    this.loadeddataTimer = null,
                    this.emit(Oc),
                    this.log(Co.LOG, "reUseMSE add emit loadeddataevent")
                }
                ), 50),
                this.canplayTimer = setTimeout(( () => {
                    clearTimeout(this.canplayTimer),
                    this.canplayTimer = null,
                    this.emit("canplay"),
                    this.log(Co.LOG, "reUseMSE add emit canplayevent")
                }
                ), 90))
            }
            playNext(e) {
                const {player: t} = this;
                this._defInited = !1,
                this._hasTriggerBufferThreshold = !1,
                t.resetState(),
                t._currentTime = 0,
                t._duration = 0,
                t.isPlaying = !1,
                this.preloader && this.preloader.clearTask(),
                this._useVideoLoad = !1,
                this._MSEError = !1;
                const n = this.softDecode;
                t.pause(),
                this._reset(),
                e.vtype && (this._vtype = e.vtype.toUpperCase()),
                t.setConfig(e),
                this.config.frameFreeze || this.checkReUseMSE(this.config.reUseMSE, !0),
                this.softDecode ? t.vtype = "MP4_MSE_SOFT" : t.vtype = "MP4_MSE";
                const {codecType: i, mediaType: r} = this.playerConfig;
                if (this.codecType = i ? i.toLowerCase() : jl,
                n !== this.softDecode && this.h265_h264_switch(r || "video"),
                this.checkConfig(),
                this.log(Co.LOG, "[Index] playNext", e.vtype, e.vid),
                t.start(),
                this.config.reUseMSE && !this.isH265DegradeH264) {
                    const e = () => {
                        this.log(Co.LOG, "[Index] playNext metadata update currentTime = 0"),
                        0 !== t.currentTime && (t.currentTime = 0),
                        this._removeMetaDataEvent()
                    }
                    ;
                    this._addMetaDataEvent(e)
                }
                this.emit("playnext")
            }
            h265_h264_switch(e) {
                this.log(Co.LOG, "[Index],h265_switch_h264", e);
                const {player: t} = this
                  , {mediaConfig: n} = t
                  , i = au(e, "", n, `xgplayer-${e}-img`);
                this.removeVideoList.push(t.video);
                const {muted: r, volume: o} = t.video;
                i.muted = r,
                i.volume = o,
                t.video = i,
                t.attachVideoEvents(t.video)
            }
            next(e) {
                this.playNext(e)
            }
            oldChangeDefinition(e, t) {
                const {config: n, player: i, playerConfig: r} = this;
                i.emit(Gc, {
                    from: t,
                    to: e
                }),
                i.emit("waiting");
                const o = i.definitionList
                  , a = o.filter((t => t.definition === e.definition || t.definition === Number(e.definition)))
                  , s = o.filter((e => e.definition === t.definition || e.definition === Number(t.definition)));
                if (s.length > 0 && (s[0].selected = !1),
                !(a.length > 0))
                    return;
                (e = a[0]).selected = !0,
                i.curDefinition = e,
                this.log(Co.LOG, "[oldChangeDefinition],currentTime,", i.currentTime, ",from,", t, ",to,", e);
                const {currentTime: l, paused: u} = i;
                this._changeDefState || (this._changeDefState = {
                    currentTime: l,
                    paused: u
                }),
                n.definition = e.definition,
                ["keyValue", "kid", "secretKey", "drm", "getLicenseUrl", "drmKeyToken", "sessionId"].forEach((t => {
                    n[t] = e[t]
                }
                )),
                r.url = e.url,
                r.userSelectDefinition = e.definition,
                r.defaultDefinition = e.definition,
                n.focusUserDefinition = !0,
                i.currentTime = 0,
                i.pause(),
                this._reset(),
                this.checkReUseMSE(),
                this._isMseInit = !1,
                this.eme = null;
                const c = this._handlerUrl(e.url);
                n._mainURL = c.main,
                n._backupURL = c.backup,
                this._changeDefineCanPlay && i.off("canplay", this._changeDefineCanPlay),
                this._changeDefineCanPlay = () => {
                    this.changeDefineCanPlay(l, u, t, e),
                    this._changeDefineCanPlay = null
                }
                ,
                i.once("canplay", this._changeDefineCanPlay),
                this.player.video.load(),
                this.playerStartInit(r.url)
            }
            _emitDefinitionChangeDetailEvent(e) {
                const {bitrate: t, definition: n, file_id: i, width: r, vwidth: o, height: a, vheight: s} = this._currDefinition;
                this.player.emit("definitionChangeDetail", {
                    start: e,
                    bitrate: t,
                    definition: n,
                    mediaType: "video",
                    url: this.config._mainURL,
                    fileid: i
                });
                const l = {
                    width: r || o,
                    height: a || s
                };
                this.player.emit("RESOLUTION_UPDATE", l)
            }
            _setCurrentDefinition(e) {
                const {config: t} = this.player;
                if (t.definition && t.definition.list) {
                    const n = t.definition.list.filter((t => t.bitrate === e));
                    this._currDefinition = n && n[0]
                }
                this._currDefinition || (this._currDefinition = {
                    bitrate: e
                }),
                e && (this._currDefinition.bitrate = e)
            }
            switchURL(e) {
                if (this.useVideoLoad)
                    return void Jc.call(this.player, e);
                const {player: t, playerConfig: n, config: i} = this;
                n.definition.list = [e],
                n.url = e.url,
                n.defaultBitrate = e.bitrate,
                n.defaultDefinition = e.definition,
                ["keyValue", "kid", "secretKey", "drm", "getLicenseUrl", "drmKeyToken", "sessionId"].forEach((t => {
                    i[t] = e[t]
                }
                )),
                this._addMetaDataEvent(( () => {
                    t.currentTime = 0,
                    this._removeMetaDataEvent()
                }
                )),
                this.playNext(i)
            }
            _handlerUrl(e) {
                const {playerConfig: t} = this;
                if (!e)
                    return null;
                let n;
                const i = [];
                if ("String" === su(e))
                    n = e,
                    t.backupURL && i.push(t.backupURL);
                else if ("Array" === su(e) && e.length > 0 && (n = e[0].src,
                e.length > 1))
                    for (let n = 1; n < e.length; n++)
                        i.push(uu(e[n].src, {
                            __vid: t.vid
                        }));
                return !(!n && 0 === i.length) && {
                    main: uu(n, {
                        __vid: t.vid
                    }),
                    backup: i
                }
            }
            _firstFrameTime() {
                const {firstFrameTime: e, player: t, config: n, loadstart: i} = this
                  , r = {
                    supportHevc: n.supportHevc,
                    firstmux: this.mp4 ? this.mp4.firstFrameTime.firstmux : -1,
                    stats: Su(t),
                    loadstart: i
                };
                this.firstFrameTime = function(e, t, n={
                    supportHevc: !1,
                    loadstart: 0,
                    firstmux: -1,
                    stats: {}
                }) {
                    var i;
                    if (t === jl || n.supportHevc)
                        return e.new_loadeddata < 0 && (e.loadst_loadeddata = lu() - n.loadstart,
                        e.new_loadeddata = lu() - e.newplayer),
                        e;
                    if (t === zl) {
                        const {stats: t, firstmux: r} = n
                          , {metaload: o, startMuxTime: a} = e
                          , s = {};
                        for (let e = 0; e < (null == (i = null == t ? void 0 : t.bootStats) ? void 0 : i.length); e++)
                            s[t.bootStats[e].action] = t.bootStats[e].dot;
                        const l = {
                            ...t,
                            metaload: o,
                            startload_stmux: a,
                            firstmux: r,
                            ...s
                        };
                        return delete l.bootStats,
                        l
                    }
                }(e, this.codecType, r)
            }
            _bindEvents() {
                this.log(Co.LOG, "bindEvents,", this._isEventInit);
                const {config: e, player: t} = this;
                this._isEventInit || (this.on("seeking", this._onSeeking),
                this.on("waiting", this._onWaiting),
                this.on("error", this._onVideoError),
                this.on("playing", this._onPlaying),
                this.on("pause", this._onPause),
                this.on("detectGap", ( () => {
                    e.gapDegrade && e.useEME && (e.useEME = !1,
                    this._replay())
                }
                )),
                this.on(Xi.CHANGE_FLYING_PLUGIN_CONFIG, this._onChangeConfig),
                t.setEventsMiddleware({
                    error: (e, n) => {
                        var i;
                        const r = null == e ? void 0 : e.error
                          , o = {
                            errorCode: null == r ? void 0 : r.code,
                            errorMessage: null == r ? void 0 : r.message,
                            videoType: this.useVideoLoad
                        };
                        if (this.changeState("video_error.Middleware", o),
                        this.codecType === zl && (null == r ? void 0 : r.message.indexOf("video decoder initialization failed")) >= 0 && this.emit("DECODER_FAILED", {
                            codecType: this.config.codecType,
                            vid: this.playerConfig.vid
                        }),
                        this.log(Co.ERROR, "error middleware", JSON.stringify(o), ", isDegrade,", !this._MSEError && !this.useVideoLoad, t.currentTime),
                        !this._MSEError && !this.useVideoLoad)
                            return t.vtype = "MP4_2",
                            this._MSEError = !0,
                            null == (i = this.mp4) || i.cancelLoading(),
                            this._startDegradedPlayback(o, t.paused),
                            void this.emit(Kc);
                        this.emit(Kc),
                        this.useVideoLoad && n(e.eventName, null == e ? void 0 : e.error)
                    }
                })),
                this._isEventInit = !0
            }
            getBufferDur() {
                var e;
                if (null == (e = this.player) || !e.buffered)
                    return 0;
                const {buffered: t} = this.player;
                let n = 0;
                for (let e = 0, i = t.length; e < i; e++)
                    n += t.end(e) - t.start(e);
                return n
            }
            deleteVideo() {
                var e;
                if ((null == (e = this.removeVideoList) ? void 0 : e.length) > 0) {
                    for (let e = 0; e < this.removeVideoList.length; e++) {
                        const t = this.removeVideoList[e]
                          , n = t.parentNode;
                        n && n.removeChild(t),
                        this.log(Co.WARN, "[_removeVideoSource]")
                    }
                    this.removeVideoList = []
                }
            }
            _unbindEvents() {
                var e;
                this.log(Co.LOG, "unbindEvents,", this._isEventInit),
                this.off("seeking", this._onSeeking),
                this.off("waiting", this._onWaiting),
                this.off("ended", this._onEnded),
                this.off("error", this._onError),
                this.off("playing", this._onPlaying),
                this.off("pause", this._onPause),
                this.off(Xi.CHANGE_FLYING_PLUGIN_CONFIG, this._onChangeConfig),
                this._isEventInit = !1,
                null != (e = this.config) && e.enableFPSStuckHandle && this.off(Wc, this.fpsStuckHandle)
            }
            changeState(e, t={}) {
                this._pTime || (this._pTime = lu());
                const n = lu() - this._pTime
                  , i = lu() - this._sTime;
                this.log(Co.LOG, `>>>changeState[${e}]`, n, i, JSON.stringify(t)),
                this.states.push({
                    state: e,
                    t1: n,
                    t2: i,
                    data: t
                }),
                this._pTime = lu()
            }
            get softDecode() {
                var e, t;
                return "xg-video" === (null == (t = null == (e = this.player) ? void 0 : e.config) ? void 0 : t.mediaType)
            }
            _initH265MseProxy() {
                const {player: e} = this;
                e.video instanceof HTMLVideoElement && this.h265_h264_switch(this.playerConfig.mediaType);
                const t = e.video;
                this.softDecode && t.setPlayMode && t.setPlayMode("VOD"),
                this.mseProxy = t,
                this.softDecode && (e.forceDegradeToVideo = () => {}
                ,
                Tu(e, "lowdecode", this._lowDecoder),
                Tu(e, "error", this._onError))
            }
            notSupportError(e) {
                return this.log(Co.LOG, e, Il),
                new Ic(this.player,{
                    errorType: Wl.MEDIA,
                    errorCode: Ql.mse,
                    errorMessage: `${e} ${Il}`,
                    vid: this.playerConfig.vid
                })
            }
            removeAndRejectInitPromise(e) {
                this._initPromise && (this._removePendingPromise(this._initPromise),
                this._initPromise.reject(e))
            }
            _initMp4(e, t={}, n={}) {
                var i, r, o, a, s, l, u;
                const {config: c, player: h, playerConfig: d} = this;
                this.mp4 && (this.mp4.destroy(),
                this.mp4 = null),
                this.changeState("MP4_NEW", {});
                let f = 0;
                null != (i = null == c ? void 0 : c.pcdnConfig) && i.openPCDN && (f = (null == (r = null == c ? void 0 : c.pcdnConfig) ? void 0 : r.switchPCDNMaxCnt) || 2),
                null != (o = null == c ? void 0 : c.pcdnConfig) && o.adaptPCDNConfig && (f = 0),
                this._setCurrentDefinition(h.curDefinition.bitrate);
                let p = zu;
                null == c || c.loadRangeType;
                const g = null == (s = null == (a = h.curDefinition) ? void 0 : a.pktOffsetMap) ? void 0 : s.find((e => (null == e ? void 0 : e.time) === ((null == c ? void 0 : c.firstLoadTimePos) || 5)))
                  , m = null == g ? void 0 : g.offset
                  , v = function(e, t) {
                    const {getRequestOptionsCallback: n, reqOptions: i} = e;
                    let r = null;
                    return r = t.reqOptions ? t.reqOptions : "Function" === su(n) ? n(t) : i,
                    {
                        ...i,
                        ...r
                    }
                }(this.config, {
                    url: e
                });
                this.mp4 = new p(e,h.curDefinition.bitrate,{
                    segmentDuration: c.segmentMinDuration,
                    enableWorker: c.enableWorker,
                    codecType: this.codecType,
                    chunkSize: c.chunkSize,
                    firstLoadSize: m,
                    duration: d.duration || 0,
                    fileSize: n.fileSize || 0,
                    playerId: this.playerId,
                    vid: d.vid,
                    useUrlRange: c.useUrlRange,
                    retryCount: c.retryCount,
                    retryDelay: c.retryDelay,
                    timeout: c.timeout,
                    onProcessMinLen: c.onProcessMinLen,
                    supportHevc: c.supportHevc,
                    afterLoadeddataCallBackLen: c.afterLoadeddataCallBackLen,
                    firstLoadBuffer: c.firstLoadBuffer,
                    logger: this.logger,
                    switchPCDNMaxCnt: f,
                    reqOptions: v,
                    fixEditListOffset: c.fixEditListOffset
                },this.config._backupURL,this.firstFrameTime,""),
                this.mp4.once(xu, this._onMp4MetaReady),
                this.mp4.on(Ru, this._onMp4Error),
                this.mp4.on(Lu, this._updateDrmConfig),
                this.mp4.on(Iu, this._updateMSE),
                this.mp4.on(Du, this._onMp4Progress),
                this.mp4.on(Eu, this._onMp4DataCallBack),
                this.mp4.on(Nu, (e => {
                    this.player && this.player.emit("source_error", e)
                }
                )),
                this.mp4.on($u, (e => {
                    var t, n;
                    const {player: i, config: r} = this;
                    this.emit(Kc),
                    this.log(Co.LOG, "not match remove buffer start,buffer,", JSON.stringify(null == (t = null == i ? void 0 : i.buffered2) ? void 0 : t.bufferedList), ", removeRange,", JSON.stringify(e)),
                    null == (n = this.mse) || n.remove(Uo.VIDEO, e[0] + .1, e[1] - .1).then(( () => {
                        var e;
                        this.log(Co.LOG, "not match remove buffer end,", JSON.stringify(null == (e = null == i ? void 0 : i.buffered2) ? void 0 : e.bufferedList));
                        const {currentTime: t} = i;
                        (null == r ? void 0 : r.loadRangeType) === Hl && (i.currentTime = t,
                        this.log(Co.LOG, "not match remove buffer end, fix currentTime", i.currentTime))
                    }
                    )).catch(( () => {}
                    ))
                }
                )),
                this.mp4.on(Gu, (e => {
                    this.pcdn && e && this.pcdn.removePCDNNode(e.vid, e.bitrate, e.url)
                }
                )),
                this.mp4.on(Ou, (e => {
                    this.player && (this.player.rawSrc = e,
                    this.player.emit("initialUrl", {
                        url: e
                    }),
                    this.player.emit("changeHost", pu(e)))
                }
                )),
                this.mp4.on(Au, (async e => {
                    var t;
                    await (null == (t = this.mp4) ? void 0 : t.cancelLoading()),
                    this._curLoadSegmentIdx = e,
                    this.log(Co.LOG, "[update curLoadSegmentIdx]", e)
                }
                )),
                this.mp4.on(Bu, (e => {
                    var t, n, i;
                    if (!this.player)
                        return;
                    const {vid: r} = d
                      , o = {
                        vid: r,
                        taskType: 1,
                        changeCnt: null == (t = this.mp4) ? void 0 : t.getCurSwitchPCDNCnt(),
                        traceId: null == (i = null == (n = this.mp4) ? void 0 : n.pcdnTraceInfo) ? void 0 : i.trace_id
                    }
                      , a = function(e, t, n={}) {
                        const {vid: i, taskType: r, changeCnt: o, traceId: a} = n
                          , {bitrate: s, definition: l, file_id: u} = t
                          , c = {
                            vid: i,
                            task_type: r,
                            change_cnt: o,
                            definition: l,
                            bitrate: s,
                            fileid: u
                        };
                        return ((null == e ? void 0 : e.load_type) || Al) === Al ? c.cdn_size = e.len : (c.pcdn_size = e.len,
                        c.trace_id = a),
                        c
                    }(e, this._currDefinition, o);
                    this.player.emit("prf_data_size", a);
                    const s = (null == e ? void 0 : e.load_type) || Al;
                    this.mp4 && this.mp4.updateLoadInfo(s, e.len),
                    nu && console.log("prf_data_size emit, vid,", r, ",loadType,", s, ", task_type, 1", ",len,", e.len)
                }
                )),
                this.mp4.MP4Loader.on(Ll, (e => {
                    var t, n, i, r, o, a, s, l, u, c;
                    th = e.speed,
                    function(e, t) {
                        e.speed || (e.speed = []);
                        const {speed: n} = e;
                        n.push(t),
                        n.length > 10 && n.shift()
                    }(this.debugInfo, e.speed);
                    const h = (null == (t = null == e ? void 0 : e.priOptions) ? void 0 : t.type) || Al;
                    this.emit(Ll, {
                        speed: e.speed,
                        type: h
                    });
                    const d = (null == (n = this.playerConfig) ? void 0 : n.vid) || (null == e ? void 0 : e.vid);
                    if ((null == e ? void 0 : e.len) > 0) {
                        if (!this.player)
                            return;
                        const t = (null == (i = null == e ? void 0 : e.priOptions) ? void 0 : i.type) || Al
                          , n = (null == (r = this.adaptRangeRes) ? void 0 : r.length) > 0 ? this.adaptRangeRes.shift() : {}
                          , h = null == (o = this.mp4) ? void 0 : o.getCurSwitchPCDNCnt()
                          , {bitrate: f, definition: p, file_id: g} = this._currDefinition
                          , m = {
                            vid: d,
                            task_type: 1,
                            change_cnt: h,
                            bitrate: f,
                            definition: p,
                            fileid: g
                        }
                          , v = ku(n)
                          , y = function(e, t) {
                            const n = yu(t.len, t.time)
                              , i = {
                                cdn_size: 0,
                                cdn_speed: 0,
                                pcdn_size: 0,
                                pcdn_speed: 0
                            };
                            return e === Al ? (i.cdn_size = t.len,
                            i.cdn_speed = n) : (i.pcdn_size = t.len,
                            i.pcdn_speed = n),
                            i
                        }(t, e)
                          , _ = {
                            ...m,
                            ...v,
                            ...y
                        }
                          , {idx: T} = n;
                        this.player.emit("prf_data_size", _),
                        nu && console.log("prf_data_size emit,", T, JSON.stringify(_));
                        const b = e.index ? null == (l = null == (s = null == (a = this.mp4) ? void 0 : a.adaptTimeRange[e.index]) ? void 0 : s.timeRangeIdx) ? void 0 : l[1] : null;
                        if (b && b >= this.mp4.timeRange.length - 1)
                            for (; (null == (u = this.adaptRangeRes) ? void 0 : u.length) > 0; ) {
                                const e = this.adaptRangeRes.shift()
                                  , t = null == (c = this.mp4) ? void 0 : c.getCurSwitchPCDNCnt()
                                  , n = {
                                    ...m,
                                    ...y,
                                    ...ku(e)
                                };
                                n.change_cnt = t,
                                this.player.emit("prf_data_size", n),
                                nu && console.log("prf_data_size emit,", T, JSON.stringify(n))
                            }
                        this.mp4 && this.mp4.updateLoadInfo(t, e.len)
                    }
                }
                )),
                null != (l = null == c ? void 0 : c.pcdnConfig) && l.adaptPCDNConfig && (null == (u = this.mp4) || u.setSwitchPCDNCallBack(( () => {
                    const {pcdn: e} = this;
                    if (!e)
                        return -1;
                    const t = e.getPCDNChangeCnt() || -1;
                    return this.log(Co.LOG, "[updateSwitchPCDNMaxCnt]", t),
                    t
                }
                ))),
                this.changeState("MP4_INIT", {}),
                this.emit("loadstart_mse"),
                t || (t = {}),
                this.mp4.init(t),
                this._emitDefinitionChangeDetailEvent(0)
            }
            _checkPreloader() {
                const {playerConfig: e} = this
                  , t = new qu
                  , n = {
                    method: "checkPreloader",
                    success: 0,
                    type: "error",
                    cacheKey: ""
                };
                this.changeState("CHECK_PRELOAD");
                const {curDefinition: i, preloader: r} = this.player;
                if (!r)
                    return this.changeState("PRELOAD_ERROR", {
                        t: 2
                    }),
                    n.success = 0,
                    n.error = new Error("no_preloader"),
                    t.resolve(n),
                    t;
                const o = i.cacheKey ? i.cacheKey : r.generateUniqueKey({
                    vid: e.vid,
                    definition: i.definition || -1,
                    vtype: e.vtype,
                    codecType: e.codecType
                });
                return n.cacheKey = o,
                o ? r.getPreLoadData(o).then((e => {
                    if (e) {
                        const {bitrate: r, orgDefinition: a} = e;
                        if (r && i.bitrate && r !== i.bitrate)
                            return this.preLoadData = null,
                            n.success = 0,
                            n.error = new Error(`bitrate_not_match_cut_${i.bitrate}_cache_${r}`),
                            this.changeState("PRELOAD_ERROR", {
                                bitrate: r,
                                ck: o
                            }),
                            t.resolve(n),
                            void this.log(Co.LOG, `>>>check Preloader bitrate_not_match cacheKey${o}\n                curDefinition:${i.bitrate}  cache:${r}`);
                        i.orgDefinition = a,
                        tu && console.log(">>>>check Preloader result", o, e),
                        this.preLoadData = e,
                        this.emit("PRELOAD_INFO", this.preLoadData),
                        this.emit("hitCache", e),
                        n.success = 1,
                        n.data = e,
                        $l.set(o, !0),
                        this.changeState("PRELOAD_OK", {
                            l: this.preLoadData.byteLength,
                            ck: o
                        }),
                        e.mediaSegList && e.mediaSegList.length > 0 || e.buffer && e.buffer.byteLength > 0 ? this.hitpreload = !0 : this.hitpreload = !1,
                        t.resolve(n)
                    } else
                        this.preLoadData = null,
                        this.changeState("PRELOAD_ERROR", {
                            t: 0
                        }),
                        n.success = 0,
                        n.error = new Error("none_preload"),
                        t.resolve(n)
                }
                )) : (this.changeState("PRELOAD_ERROR", {
                    t: 2
                }),
                n.success = 0,
                n.error = new Error("none_preload"),
                t.resolve(n)),
                t
            }
            _initEME(e, t) {
                var n, i;
                const r = wu(this.config)
                  , {useEME: o} = this.config;
                if (r && o && !nh.checkEMEValid())
                    return this.log(Co.ERROR, "checkEMEInValid"),
                    void this._errorHandler(new Ic(this.player,{
                        errorType: Wl.MEDIA,
                        errorCode: Ql.eme_hijack,
                        errorMessage: "checkEMEInValid",
                        vid: this.playerConfig.vid
                    }));
                const {player: a, config: s} = this;
                this._updateDrmConfig(t),
                this.log(Co.LOG, "useEME: ", s.useEME),
                null == (n = this._secretkey) || n.setOptions('video/mp4; codecs="avc1.64001E"', 'audio/mp4; codecs="mp4a.40.2"'),
                null == (i = this._secretkey) || i.setupEME(a.video)
            }
            async _initMse(e, t=!1) {
                var n;
                const {useEME: i} = this.config;
                if (wu(this.config) && i && !nh.checkMSEValid())
                    return this.log(Co.ERROR, "checkMSEInValid "),
                    void this._errorHandler(new Ic(this.player,{
                        errorType: Wl.MEDIA,
                        errorCode: Ql.mse_hijack,
                        errorMessage: "checkMSEInValid",
                        vid: this.playerConfig.vid
                    }));
                if (null == (n = this.player) || n.emit("codecsupdate", e.videoCodec),
                this.config.frameFreeze) {
                    if (this.log(Co.LOG, "release freezed frame"),
                    this.mse) {
                        const e = this.mse;
                        this.mse = null,
                        await e.unbindMedia()
                    }
                    this.player && this.player.src && (this.player.removeAttribute("src"),
                    this.player.load())
                } else
                    this.updateMSEDuration();
                const r = function(e, t) {
                    const n = e && e.checkCodecH265()
                      , i = e && e.checkCodecH266()
                      , r = !!t.videoCodec
                      , o = !!t.audioCodec;
                    let a;
                    return a = r && o ? n ? 'video/mp4; codecs="hev1.1.6.L93.B0, mp4a.40.5"' : i ? 'video/mp4; codecs="bvc2.1.6.L93.B0, mp4a.40.5"' : 'video/mp4; codecs="avc1.64001E, mp4a.40.5"' : r ? n ? 'video/mp4; codecs="hev1.1.6.L93.B0"' : i ? 'video/mp4; codecs="bvc2.1.6.L93.B0"' : 'video/mp4; codecs="avc1.64001E"' : 'video/mp4; codecs="mp4a.40.5"',
                    a
                }(this.mp4, e)
                  , o = {
                    [Uo.VIDEO]: {
                        mimeType: "video/mp4",
                        codec: r
                    }
                };
                let a;
                this.mse ? (this.log(Co.LOG, "MSE exit"),
                a = new qu,
                a.resolve()) : (this.log(Co.LOG, "new MSE"),
                this.mse = new Uo,
                a = this.mse.bindMedia(this.player.video)),
                a.then((e => {
                    var n;
                    this.changeState("MSE_OPEN");
                    const {firstFrameTime: i} = this;
                    i.initmse_sbopen = null == e ? void 0 : e.costtime,
                    this._loadStartEventTime > 0 && (i.mseopen = lu() - this._loadStartEventTime);
                    const r = Object.keys(o);
                    try {
                        for (let e = 0; e < r.length; e++) {
                            const i = r[e];
                            null == (n = this.mse) || n.createOrChangeSource(i, o[i].codec).then(( () => {
                                this.changeState("MSE_OPEN_DONE"),
                                this._isMseInit = !0,
                                this._onTimeUpdate()
                            }
                            )).catch((async e => {
                                var n;
                                this.config.reUseMSE = !1,
                                this.log(Co.WARN, "MSE createOrChangeSource catch err: ", null == e ? void 0 : e.message),
                                await (null == (n = this.mse) ? void 0 : n.unbindMedia()),
                                this.mse = null,
                                this._isMseInit = !1,
                                t ? this.MSEErrorHandle(e) : this._initMse(this.mp4.meta, !0)
                            }
                            ))
                        }
                    } catch (e) {
                        this.MSEErrorHandle(e)
                    }
                }
                )).catch((e => this.MSEErrorHandle(e))),
                this.changeState("MSE_INIT")
            }
            MSEErrorHandle(e) {
                const t = new Ic(this.player,{
                    errorType: Wl.mse,
                    errorCode: Ql.mse,
                    vid: this.playerConfig.vid,
                    errorMessage: e.message,
                    mediaError: {
                        code: Ql.mse,
                        message: e.message
                    }
                });
                this.log(Co.ERROR, "initMse error: ", null == e ? void 0 : e.message),
                this._errorHandler(t)
            }
            _appendInitSeg(e) {
                !this.mse || this._MSEError || (this.changeState("MSE_INITSEG"),
                this.mse.append(Uo.VIDEO, e, {
                    vid: this.playerConfig.vid,
                    range: null,
                    dataLen: e.byteLength,
                    isinit: !0
                }).then((e => {
                    this.firstFrameTime.metaready_initsegend = null == e ? void 0 : e.costtime,
                    this.changeState("MSE_INITSEG_OK", {
                        costtime: null == e ? void 0 : e.costtime
                    })
                }
                )),
                this.config.useEME && this._secretkey && this._secretkey.encryptHandle())
            }
            _checkMetaInfo(e) {
                if (!e)
                    return new Ic(this.player,{
                        errorType: Wl.DEMUX,
                        errorCode: Ql.metaError,
                        errorMessage: "meta is null",
                        vid: this.playerConfig.vid
                    });
                const t = this.mp4.checkCodecH265()
                  , n = this.mp4.checkCodecH266();
                return this.changeState("MP4_META_READY", {
                    isH265: t,
                    isH266: n
                }),
                !t || (this.codecType !== zl && (this.codecType = zl,
                this.log(Co.LOG, "codecType fix ", this.codecType)),
                this.softDecode || this.config.supportHevc) ? n && (this.codecType !== Xl && (this.codecType = Xl,
                this.log(Co.LOG, "codecType fix ", this.codecType)),
                !this.config.supportVvcc) ? this.notSupportError(this.codecType) : null : this.notSupportError(this.codecType)
            }
            _stopProgress() {
                this.log(Co.LOG, "stopProgress", this._hasStartProgress),
                this._hasStartProgress = !1,
                this._requestTimer && this._requestTimer.stop(),
                this._bufferBreakTimer && (clearTimeout(this._bufferBreakTimer),
                this._bufferBreakTimer = null,
                this._bufferBreakFlag = void 0),
                this._seekResumTimer && (clearTimeout(this._seekResumTimer),
                this._seekResumTimer = null)
            }
            checkReStartTimer() {
                const e = lu() - this._lastTimeupdateTime2;
                e > 2 * this.config.tickInSeconds * 1e3 && !this._offineLine && (this.log(Co.LOG, "checkReStartTimer reStart timer", e, lu()),
                this._stopProgress(),
                this._startProgress(),
                this._lastTimeupdateTime2 = lu())
            }
            _bindNetworkStateChange() {
                window.addEventListener("online", this._onOnlineHandler),
                window.addEventListener("offline", this._onOfflineHandler)
            }
            _unbindNetworkStateChange() {
                window.removeEventListener("online", this._onOnlineHandler),
                window.removeEventListener("offline", this._onOfflineHandler)
            }
            _onSuperStart(e) {
                const {player: t} = this;
                ou(`_onSuperStart:${e}`, this.mse),
                t.video.src = e,
                this.once("canplay", ( () => {
                    t.play(),
                    this.on("waiting", this._onWaiting)
                }
                ))
            }
            _appendBuffer(e, t, n={}, i) {
                const {mse: r, playerConfig: o, player: a} = this
                  , {vid: s} = o;
                this.log(Co.LOG, "appendStart", s, n.fragIndex, JSON.stringify(n.range)),
                this._MSEError ? this.log(Co.ERROR, "_MSEError, not append return") : r.append(e, t, {
                    vid: s,
                    fragIndex: n.fragIndex,
                    range: n.range,
                    dataLen: t.byteLength,
                    state: i
                }).then((e => {
                    var t, r, o, s, l, u, c;
                    const h = a.getBufferedRange();
                    this.log(Co.LOG, "appendEnd ", null == (t = null == e ? void 0 : e.context) ? void 0 : t.fragIndex, JSON.stringify(null == (r = null == e ? void 0 : e.context) ? void 0 : r.range), null == (o = null == e ? void 0 : e.context) ? void 0 : o.dataLen, ", costTime,", null == e ? void 0 : e.costtime, ", opt,", null == e ? void 0 : e.name, ",buffer,", JSON.stringify(h), a.currentTime),
                    this.checkBufferArriveEndTime();
                    const d = this.firstFrameTime;
                    if (d.loadst_loadeddata < 0) {
                        d.apcnt++;
                        const t = (null == (s = null == e ? void 0 : e.context) ? void 0 : s.dataLen) || 0
                          , n = (null == e ? void 0 : e.costtime) || 0;
                        d.aplen += t,
                        d.data_ap += n;
                        let i = !1;
                        for (let e = this.states.length - 1; e >= 0; e--)
                            if ("APPEND_DATA_OK" === this.states[e].state) {
                                this.states[e].data.cnt += 1,
                                this.states[e].data.costime += n,
                                this.states[e].data.dataLen += t,
                                i = !0;
                                break
                            }
                        i || this.changeState("APPEND_DATA_OK", {
                            costime: n,
                            dataLen: t,
                            cnt: 1
                        })
                    }
                    const f = null == (c = null == (u = null == (l = this.mp4) ? void 0 : l.adaptTimeRange[n.fragIndex]) ? void 0 : u.timeRangeIdx) ? void 0 : c[1];
                    if (this.mse && i && f >= this.mp4.timeRange.length) {
                        const {buffered: e} = this.player;
                        e && (null == e ? void 0 : e.length) > 0 && (this.bufferEndTime = e.end(e.length - 1)),
                        this._isEnded(),
                        this.log(Co.LOG, "loaded ended !!!==>>>", JSON.stringify(n.range), ", fragIndex,", n.fragIndex, ", bufferEndTime,", this.bufferEndTime, ",meta_duration,", this.mp4.meta.duration)
                    }
                }
                )).catch((e => {
                    const {player: t, mse: i} = this;
                    if (this._MSEError || !t)
                        return;
                    const r = t.media || t.video;
                    if (e && null != i && i.isFull()) {
                        this.log(Co.WARN, "[MSE is full]");
                        const e = t.getBufferedRange(t.buffered2);
                        this._checkRemoveSourceBuffer(e, t.currentTime, !0)
                    } else {
                        const i = `${null != r && r.error ? [r.error.code, r.error.message].join("-") : "MEDIA_EMPTY"}`
                          , o = `${(null == e ? void 0 : e.errorCode) || ""}-${(null == e ? void 0 : e.errorMessage) || (null == e ? void 0 : e.message) || "MSE_EMPTY"}|${i}`;
                        this._MSEError = !0,
                        this.changeState("_MSEError", {
                            fragIndex: null == n ? void 0 : n.fragIndex,
                            range: null == n ? void 0 : n.range
                        }),
                        this.log(Co.LOG, "MSE append error", null == n ? void 0 : n.fragIndex, null == n ? void 0 : n.range);
                        const a = new Ic(t,{
                            errorType: Wl.MEDIA,
                            errorCode: Ql.mseAppend,
                            vid: s,
                            errorMessage: o,
                            mediaError: {
                                code: Ql.mseAppend,
                                message: o
                            }
                        });
                        this._errorHandler(a)
                    }
                }
                ))
            }
            async _loadData() {
                if (this.mp4 && this._isMseInit) {
                    this.loadstart < 0 && (this.loadstart = lu());
                    try {
                        await this.mp4.load(this._curLoadSegmentIdx, this._loadDataSuccess)
                    } catch (e) {
                        this.log(Co.ERROR, "[Index] _loadData error", this.playerConfig.vid, null == e ? void 0 : e.message)
                    }
                }
            }
            getDataBitRate(e) {
                const {mp4: t, playerConfig: n} = this
                  , {definition: i} = n;
                if (!t || !i || i.list)
                    return 0;
                const r = t.getDataBitRate(e)
                  , {list: o} = i;
                let a = 0;
                for (let e = 0; o && e < o.length; e++)
                    if (o[e].bitrate === r) {
                        a = o[e];
                        break
                    }
                return a
            }
            _loadStuckCheck() {
                var e;
                const {config: t, player: n} = this;
                if (!t.disableBufferBreakCheck) {
                    const i = n.isUserActive;
                    if (n.currentTime - (this._lastCurrentTime || 0) > .1 || !i && n.paused || i && this.playFlag && n.paused)
                        (1 === this._bufferBreakFlag || 2 === this._bufferBreakFlag) && (this.log(Co.LOG, "视频没有卡死,重置卡死标记,curtime,", n.currentTime),
                        this._bufferBreakFlag = 0,
                        clearTimeout(this._bufferBreakTimer),
                        this._bufferBreakFlag = null);
                    else if (!this._bufferBreakFlag) {
                        this._bufferBreakFlag = 1;
                        const r = JSON.stringify(null == (e = null == n ? void 0 : n.buffered2) ? void 0 : e.bufferedList);
                        this.log(Co.LOG, `卡死计时开始! ${t.waitingTimeOut}ms后确认卡死,`, n.currentTime, r),
                        this._bufferBreakTimer = setTimeout(( () => {
                            if (!(this.isDestroy || t.disableInactiveWaitingCheck && (!i || null != n && n.paused))) {
                                if (1 === this._bufferBreakFlag) {
                                    const e = n.currentTime
                                      , t = n.bufferedPoint;
                                    if (t.end > 0 && t.end - e >= 2)
                                        return void this.retrySeekResum(e)
                                }
                                this._bufferBreakFlag = 2,
                                this.waitTimeoutDegrade()
                            }
                        }
                        ), t.waitingTimeOut)
                    }
                    this._lastCurrentTime = n.currentTime
                }
            }
            waitTimeoutDegrade() {
                var e, t, n;
                const {player: i} = this;
                this.changeState("wait_timeout"),
                this.log(Co.LOG, "确认卡死!!!,curtime,", i.currentTime, JSON.stringify(null == (e = null == i ? void 0 : i.buffered2) ? void 0 : e.bufferedList), ",duration,", null == (n = null == (t = this.mp4) ? void 0 : t.meta) ? void 0 : n.duration),
                this.emit("waittimeout");
                const r = document.hidden || "hidden" === document.visibilityState
                  , o = new Ic(this.player,{
                    errorType: Wl.RUNTIME,
                    errorCode: r ? Ql.waitTimeoutWithHidden : Ql.waitTimeout,
                    errorMessage: "wait_timeout",
                    vid: this.playerConfig.vid
                });
                this._errorHandler(o)
            }
            async retrySeekResum(e) {
                const {player: t, config: n} = this;
                if (this.changeState("retrySeek"),
                this.log(Co.LOG, "卡死但有超过2s的buffer,seek下!!!"),
                clearTimeout(this._seekResumTimer),
                this._resumePlay = !1,
                n.waitingRetrySeekTimes > 0 && n.waitingRetryDuration) {
                    const i = Math.min(n.waitingRetrySeekTimes, 3);
                    this._currentSeekTimes = 0,
                    this.off("playing", this._onResumePlaying),
                    this.once("playing", this._onResumePlaying);
                    const r = () => {
                        if (t && !this._resumePlay && !t.paused)
                            return this._currentSeekTimes < i ? (this._seekOnce(e),
                            void (this._seekResumTimer = setTimeout(r, n.waitingRetryDuration))) : (this.waitTimeoutDegrade(),
                            void (this._seekResumTimer = null));
                        this.log(Co.LOG, `当前播放实例已恢复或处于暂停状态，退出重试 player=${!!t},_resumePlay=${this._resumePlay},paused=${null == t ? void 0 : t.paused}`)
                    }
                    ;
                    return this._seekOnce(e),
                    void (this._seekResumTimer = setTimeout(r, n.waitingRetryDuration))
                }
                t.currentTime = e + 1,
                this.once("playing", ( () => {
                    this._resumePlay = !0
                }
                )),
                this._seekResumTimer = setTimeout(( () => {
                    this._resumePlay || this.waitTimeoutDegrade(),
                    this._seekResumTimer = null
                }
                ), Math.ceil(n.waitingTimeOut / 2))
            }
            _isInBuffer(e, t=0) {
                let n = !1;
                const {buffered: i} = this.player.video;
                for (let r = 0; r < i.length; r++) {
                    const o = i.start(r) - t
                      , a = i.end(r) + t;
                    if (o <= e.startTime && e.endTime <= a) {
                        n = !0;
                        break
                    }
                }
                return n
            }
            _doubleCheckBuffer(e) {
                const {player: t} = this;
                if (!(e.startTime > t.currentTime && t.video && t.video.buffered))
                    return !0;
                const {buffered: n} = t.video;
                return 1 === n.length || this._isInBuffer(e, .2)
            }
            checkURLExpired(e, t) {
                var n, i, r, o;
                const a = function(e) {
                    if (!e || "String" !== su(e))
                        return 0;
                    let t = 0;
                    try {
                        const n = new RegExp("(\\?|&)x-tos-expires=([^&]*)(&|$)")
                          , i = e.match(n);
                        if (null !== i)
                            t = parseInt(i[2], 10);
                        else {
                            const n = e.split("/");
                            n.length > 5 && 8 === n[4].length && (t = parseInt(n[4], 16))
                        }
                        return t > 0 ? t < parseInt((new Date).getTime() / 1e3, 10) ? 1 : 2 : 0
                    } catch {
                        return 0
                    }
                }(this.config._mainURL);
                1 === a && this.pcdn && (this.pcdn = null);
                const s = (null == (n = null == e ? void 0 : e.response) ? void 0 : n.url) || (null == (i = this.config.pcdnConfig) ? void 0 : i.trackerUrl);
                null == (o = this.player) || o.emit("source_error", {
                    host: pu(s),
                    src: s,
                    errorCode: null == (r = null == e ? void 0 : e.response) ? void 0 : r.status,
                    message: `${null == e ? void 0 : e.message}-${a}${t}`
                })
            }
            pushTimerStep() {
                var e;
                (null == (e = this.timerStepList) ? void 0 : e.length) > 10 && this.timerStepList.shift(),
                this._lastTimeupdateTime2 > 0 && this.timerStepList.push(lu() - this._lastTimeupdateTime2)
            }
            _onTimeUpdate() {
                this.pushTimerStep(),
                this._lastTimeupdateTime2 = lu();
                const {mse: e, mp4: t, player: n, config: i} = this;
                if (!n || this.useVideoLoad || !t)
                    return;
                this.checkBufferArriveEndTime();
                const r = n.getBufferedRange();
                lu() - this._lastCheckTime > 1e3 && (this._lastCheckTime = lu(),
                this._loadStuckCheck(),
                this._startUrlExpiredCheck(),
                this._checkRemoveSourceBuffer(r, n.currentTime));
                const {timeRange: o} = t;
                if (o && !(o.length < 1) && (e || this.mseProxy) && this.canDownload) {
                    let e = i.maxBufferLength
                      , t = !1;
                    (this.playFlag && n.paused || !this.isActive) && (t = !0);
                    const {nextBufferLength: o, minBufferLength: a, adaptRange: s, noPreloadAddBufferLen: l} = i
                      , u = null == s ? void 0 : s.targetCacheControl;
                    t ? e = n.isInstNext && o >= 0 ? o : a : u && (e = this.adaptRange.getAdaptCacheBuffer()),
                    !this.preLoadData && u && (e += l);
                    const c = n.currentTime + e;
                    r[1] - c < 0 && (this.isOpenPCDN(r[1]),
                    (null == i ? void 0 : i.loadRangeType) === Hl ? this.sizeRangeCheckLoad(t, e, r[1] - n.currentTime) : this.gopRangeCheckLoad(t, c, e)),
                    this.playFlag && !this._hasTriggerBufferThreshold && this._startBufferCheck()
                }
            }
            sizeRangeCheckLoad(e, t, n) {
                var i, r, o;
                const {player: a, mp4: s} = this
                  , {adaptTimeRange: l} = s
                  , u = l.length;
                if (!u || (null == (i = l[u - 1]) ? void 0 : i.range[1]) < (s.size - 1 || a.curDefinition.size - 1) || !l[u - 1].downloaded) {
                    const i = l.findIndex((e => !e.isLoading));
                    if (null == l || !l.length || i >= 0 || l[u - 1].downloaded) {
                        const {adaptRangeRes: u, loadDuration: c} = this.calculateAdaptRange(e, t)
                          , h = null == (r = this.adaptRange) ? void 0 : r.getAdaptRangeSize(c);
                        h > 0 && (u.loadSize = h),
                        u.loadDuration = c,
                        this._curLoadSegmentIdx = i < 0 ? s.updateAdaptTimeRange(null, c, h) : i;
                        let d = this._curLoadSegmentIdx;
                        l[d].downloaded || (d = Math.max(d - 1, 0));
                        const f = l[d];
                        if (n > 0 && (null == f ? void 0 : f.endTime) - a.currentTime >= t)
                            return;
                        const p = l[this._curLoadSegmentIdx];
                        if (this._curLoadSegmentIdx >= 0 && this._isInBuffer(p) && !this._isChangeDefinition && this._curLoadSegmentIdx >= 0 && p.endTime - p.startTime > 1) {
                            const e = l[this._curLoadSegmentIdx];
                            return e.downloaded = !0,
                            e.isLoading = !0,
                            this.log(Co.LOG, `onTimeUpdate, ${this._curLoadSegmentIdx} download segment, has buffer`, p.startTime, p.endTime, a.currentTime),
                            void (s.seekTime = p.endTime)
                        }
                        u.idx = this._curLoadSegmentIdx,
                        (!this.adaptRangeRes.length || (null == (o = this.adaptRangeRes[u.length - 1]) ? void 0 : o.idx) !== this._curLoadSegmentIdx) && (this.adaptRangeRes.push(u),
                        this.log(Co.LOG, "adaptRangeRes>>>>", u)),
                        this.log(Co.LOG, "[onTimeUpdate],load index==>>>, ", this._curLoadSegmentIdx, JSON.stringify(l[this._curLoadSegmentIdx])),
                        this._loadData()
                    }
                }
            }
            gopRangeCheckLoad(e, t, n) {
                const {timeRange: i, adaptTimeRange: r} = this.mp4
                  , {player: o} = this;
                i.every(( (i, a) => {
                    var s, l, u, c;
                    if (void 0 !== i.adaptTimeRangeIdx && i.adaptTimeRangeIdx >= 0 && r && r[i.adaptTimeRangeIdx].downloaded)
                        return !0;
                    const h = this.mp4.getAdaptIdxBySrcIdx(a, !0)
                      , d = h >= 0 ? r[h] : null
                      , f = h >= 0 && this._isInBuffer(d);
                    if (!this._isChangeDefinition && h >= 0 && d.endTime - d.startTime > 1 && f)
                        return r[h].downloaded = !0,
                        r[h].isLoading = !0,
                        this.log(Co.LOG, `onTimeUpdate, ${h} download segment, has buffer`, d.startTime, d.endTime, o.currentTime),
                        !0;
                    if (i.startTime - o.currentTime < t) {
                        if (h < r.length && null != (s = r[h]) && s.isLoading)
                            return !1;
                        const {adaptRangeRes: t, loadDuration: i} = this.calculateAdaptRange(e, n);
                        this._curLoadSegmentIdx = this.mp4.updateAdaptTimeRange(a, i),
                        t.idx = this._curLoadSegmentIdx,
                        null != (u = null == (l = this.config) ? void 0 : l.adaptRange) && u.rangeControl && (t.loadDuration = this.mp4.adaptTimeRange[this._curLoadSegmentIdx].duration),
                        (!this.adaptRangeRes.length || (null == (c = this.adaptRangeRes[this.adaptRangeRes.length - 1]) ? void 0 : c.idx) !== this._curLoadSegmentIdx) && (this.adaptRangeRes.push(t),
                        this.log(Co.LOG, "adaptRangeRes>>>>", t));
                        const d = r[this._curLoadSegmentIdx];
                        if (this._isInBuffer(d))
                            return d.downloaded = !0,
                            d.isLoading = !0,
                            this.log(Co.LOG, `onTimeUpdate_, ${this._curLoadSegmentIdx} download segment, has buffer`, d.startTime, d.endTime, o.currentTime),
                            !0;
                        this.log(Co.LOG, "[onTimeUpdate],load index==>>>, ", this._curLoadSegmentIdx, JSON.stringify(this.mp4.adaptTimeRange[this._curLoadSegmentIdx])),
                        this._loadData()
                    }
                }
                ))
            }
            checkBufferArriveEndTime() {
                const {player: e, mse: t, mp4: n} = this;
                if (!e || !t || !n)
                    return;
                const i = e.getBufferedRange()
                  , r = n.getMediaEndTime();
                r > 0 && i[1] >= r && !t.isEnded && (this.log(Co.LOG, "checkBufferArriveEndTime endOfStream, enfTime", r, ", bufferRange,", JSON.stringify(i), ",currentTime,", e.currentTime),
                t.endOfStream())
            }
            calculateAdaptRange(e, t) {
                var n, i;
                let r;
                const o = {
                    forceSetMin: e
                };
                null != (n = this.pcdn) && n.isOpenAdaptPCDN && (o.PCDNInBuffer = this.pcdn.curPCDNInBuffer,
                o.PCDNOutBuffer = this.pcdn.curPCDNOutBuffer);
                const a = null == (i = this.config) ? void 0 : i.adaptRange;
                return !this.playFlag || e ? r = this.config.minBufferLength : null != a && a.rangeControl ? (r = this.adaptRange.getAdaptLoadDuration(),
                o.loadTarDuration = r) : r = this.config.rangeMaxDuration,
                null != a && a.targetCacheControl && (o.cachedBufferDur = t),
                !this.playFlag && null != a && a.rangeControl && (o.loadTarDuration = r),
                {
                    adaptRangeRes: o,
                    loadDuration: r
                }
            }
            checkReUseMSE(e, t) {
                var n;
                const {mse: i} = this;
                if (i)
                    if (e || this.config.reUseMSE) {
                        i.clearOpQueues(Uo.VIDEO, t),
                        i.abort(Uo.VIDEO);
                        const e = null == (n = this.player) ? void 0 : n.buffered;
                        if ((null == e ? void 0 : e.length) > 0) {
                            const t = e.end(e.length - 1);
                            this.log(Co.LOG, "reUseMSE remove buffer, 0-", t),
                            this._canUpdateDuration = !1,
                            this.removeBuffer(Uo.VIDEO, 0, t, ( () => {
                                var e, t;
                                this._canUpdateDuration = !0,
                                null != (t = null == (e = this.mp4) ? void 0 : e.meta) && t.duration && this.updateMSEDuration()
                            }
                            ))
                        }
                    } else
                        i.unbindMedia(),
                        this.mse = null,
                        this._unloadVideo()
            }
            updateMSEDuration() {
                var e;
                const {mse: t, mp4: n} = this
                  , i = null == (e = null == n ? void 0 : n.meta) ? void 0 : e.duration;
                this._canUpdateDuration && i && i !== t.duration && (this.log(Co.LOG, "updateMSEDuration ", i, ",oldDuration,", t.duration),
                t.updateDuration(i),
                this._canUpdateDuration = null)
            }
            _reset() {
                this._definitionChangePointInfo = null,
                this._isReceiveEndedEvent = !1,
                this.adaptRangeRes = [],
                this.states = [],
                this.hitpreload = !1,
                this._sTime = lu(),
                this._isChangeDefinition = !1,
                this._removeBuffeEndTime = 0,
                this._usePaused = !1,
                this.useVideoLoad = !1,
                this._isMseInit = !1,
                this.endofstream = !1,
                this._curLoadSegmentIdx = 0,
                this.emitExpireTimestamp = null,
                this.preLoadData = null,
                this.forPreloadTimeCache = null,
                this.playFlag = !1,
                this.waitLevelStartTime = -1,
                this._waitAdjustTimeCnt = 0,
                this._initPromise && "pending" === this._initPromise.state && this._initPromise.reject(Xc),
                clearTimeout(this.checkResumePlayTimer),
                this.checkResumePlayTimer = null,
                this._stopProgress(),
                this.mp4 && (this.mp4.destroy(),
                this.mp4 = null),
                this.mseProxy && (bu(this.player, "lowdecode", this._onDegrade),
                bu(this.player, this._onError)),
                this.config.frameFreeze || this._unloadVideo(),
                this._cancelPendingPromises(),
                this._abrService && (this._abrService.destroy(),
                this._abrService = null);
                const e = this.firstFrameTime;
                Object.keys(e).forEach((t => {
                    e[t] = "apcnt" === t || "aplen" === t ? 0 : "newplayer" === t ? lu() : -1
                }
                )),
                clearTimeout(this._waitInBufferTimer),
                this._waitInBufferTimer = null,
                this.canDownload = !0,
                this.loadstart = -1,
                this._loadStartEventTime = -1,
                this.startLoadData = -1
            }
            removeErrorUrls(e, t, n) {
                return e.errorCode === Ql[403] && this._emitExpireEvent(e),
                n
            }
            checkIsDegraded(e) {
                const {notDegradeErrorList: t} = this.config;
                return !((null == t ? void 0 : t.length) > 0 && (e.errorCode === Ql.timeout && t.indexOf("timeout") >= 0 || e.errorCode === Ql[403] && (t.indexOf(403) >= 0 || t.indexOf("403") >= 0) || e.errorCode === Ql[404] && (t.indexOf(404) >= 0 || t.indexOf("404") >= 0)))
            }
            _startDegradedPlayback(e, t) {
                this.canDownload = !1;
                const {player: n, playerConfig: i, config: r} = this;
                this.endofstream = !1,
                this._currentTime = n.currentTime || 0,
                this.player.pause(),
                this._reset(),
                this._replay = null;
                const {H264DefinitionList: o} = i;
                if (this.codecType === zl && this.softDecode)
                    this.log(Co.LOG, "h265 softDecode err,degrade use 264 play", i.vid),
                    this._onDegrade(e);
                else if (this.codecType === jl || r.supportHevc || r.supportVvcc || (null == o ? void 0 : o.length) > 0) {
                    const {drm: a, kid: s, drmKeyToken: l, keyValue: u, secretKey: c} = r;
                    if (a || s || l || u || c)
                        a && Object.keys(a).map((t => {
                            a && (e[t] = a[t])
                        }
                        )),
                        this.log(Co.ERROR, "final error !!!!, ", i.vid, null == e ? void 0 : e.errorCode, null == e ? void 0 : e.errorMessage),
                        this.emit("error", e);
                    else {
                        this.log(Co.LOG, this.codecType, "MSE degrade video,", i.vid, n.currentTime),
                        this.emit(Qc, {
                            errc: null == e ? void 0 : e.errorCode,
                            err_msg: (null == e ? void 0 : e.errorMessage) || (null == e ? void 0 : e.message),
                            codec_type: this.codecType,
                            media_type: i.mediaType
                        }),
                        this.useVideoLoad = !0,
                        this.destroyMSE();
                        const r = () => {
                            this._currentTime && (n.currentTime = this._currentTime),
                            this.log(Co.LOG, "DegradedPlayback update currentTime", i.vid, this.codecType, this._currentTime),
                            t ? this.player.pause() : this.player.play(),
                            this._removeMetaDataEvent()
                        }
                        ;
                        this._addMetaDataEvent(r);
                        let a = i.url;
                        const s = (null == e ? void 0 : e.errorMessage) || (null == e ? void 0 : e.message);
                        if ((null == s ? void 0 : s.indexOf(Il)) >= 0 && (null == o ? void 0 : o.length) > 0) {
                            const e = o.length
                              , t = this.player.curDefinition.definition;
                            let n = t && o.find((e => e.definition === t));
                            n || (i.H264DefinitionList.sort(( (e, t) => e.bitrate - t.bitrate)),
                            n = i.H264DefinitionList[Math.floor(e / 2)]),
                            n && (a = n.url,
                            this.playerConfig.codecType = jl,
                            this.codecType = jl)
                        }
                        this._setPlayerSrc(a)
                    }
                } else
                    this.log(Co.ERROR, "degrade player failed"),
                    this.emit("error", e)
            }
            getAdaptTimeRangeIdx(e) {
                var t, n;
                const {config: i, adaptRange: r} = this;
                let o = i.segmentMinDuration;
                return r && null != (t = null == i ? void 0 : i.adaptRange) && t.rangeControl && (o = r.getAdaptLoadDuration()),
                null == (n = this.mp4) ? void 0 : n.updateAdaptTimeRange(e, o)
            }
            _startProgress() {
                this.initTimer(),
                this._requestTimer.start(),
                this._hasStartProgress = !0
            }
            _unloadVideo() {
                this.log(Co.LOG, "unloadVideo");
                const {player: e} = this;
                try {
                    e.video && e.video.src && !/^blob/.test(e.currentSrc) && !/^blob/.test(e.video.src) && (this.log(Co.LOG, "unloadVideo src"),
                    e.video.removeAttribute("src"),
                    e.video.load())
                } catch (e) {
                    this.log(Co.ERROR, "unloadVideo error", null == e ? void 0 : e.message)
                }
            }
            _addPendingPromise(e) {
                this._pendingPromises.push(e)
            }
            _removePendingPromise(e) {
                this.log(Co.LOG, "removePendingPromise", null == e ? void 0 : e.id);
                const t = this._pendingPromises.indexOf(e);
                t > -1 && this._pendingPromises.splice(t, 1)
            }
            _cancelPendingPromises() {
                this._pendingPromises.length > 0 && this._pendingPromises.forEach((e => {
                    e.reject(Xc)
                }
                )),
                this._pendingPromises = []
            }
            _onMediaExpired() {
                this.log(Co.LOG, "MediaExpired stopProgress"),
                this._stopProgress(),
                this.emit(Dl.MEDIA_EXPIRED)
            }
            _isEnded() {
                var e, t;
                const {player: n, mp4: i} = this
                  , r = n.bufferedPoint
                  , o = r ? r.end : 0
                  , a = n.currentTime;
                a > 1 && o > a && (o - a >= 2 || n.duration - a < 1) && 2 === n.video.readyState ? lu() - this._lastCheckLagTime >= 3e3 && (this.log(Co.LOG, "[has buffer but waiting,seek 0.2 adjust],curTime,", a, ", bufferend,", o, ", duration,", null == (e = null == i ? void 0 : i.meta) ? void 0 : e.duration),
                n.currentTime = a + .2,
                this._lastCheckLagTime = lu()) : this._lastCheckLagTime = lu();
                const {seeking: s} = n.video;
                return !this.endofstream && this.bufferEndTime > 0 && this.mse && !s && this.bufferEndTime - a < .5 && (this.log(Co.LOG, "[isEnded endOfStream],curTime,", n.currentTime, ", bufferend,", o, ", duration,", null == (t = null == i ? void 0 : i.meta) ? void 0 : t.duration),
                this.endofstream = !0,
                this.mse.endOfStream().then(( () => {}
                ))),
                !!(i && i.meta && !s && i.meta.duration - a < .5) && (this._stopProgress(),
                this.log(Co.LOG, "[isEnded],stopProgress and endOfStream,curTime, ", n.currentTime, ", bufferend,", o, ", duration,", i.meta.duration),
                this.mse && this.mse.endOfStream().then(( () => {}
                )),
                !0)
            }
            emitVideoEvent(e) {
                if (this._checkEndedTimer)
                    return;
                const {player: t, mp4: n} = this;
                this._checkEndedTimer = setTimeout(( () => {
                    this._checkEndedTimer = null,
                    !this._isReceiveEndedEvent && n.meta.duration - t.currentTime < .5 && (this.log(Co.LOG, "[ do emit video ended event],curTime,", t.currentTime, ", bufferend,", e, ", duration,", n.meta.duration),
                    this.emit("ended"))
                }
                ), 2e3)
            }
            _clearMediaKeys() {
                const {player: e} = this;
                e.video && "function" == typeof e.video.setMediaKeys && e.video.setMediaKeys(null).catch(( () => {}
                ))
            }
            _checkRemoveSourceBuffer(e, t, n, i) {
                const {mse: r, mp4: o, player: a} = this;
                if (r && o && a && (n && (clearTimeout(this._removeBufferTimer),
                this._removeBufferTimer = null),
                e || (e = a.getBufferedRange(a.buffered2)),
                t || (t = a.currentTime),
                !(!n && lu() - this._checkRemoveBufferLastTime <= this.config.removeBufferLen || this.endofstream) && (this._checkRemoveBufferLastTime = lu(),
                e && e[0] >= 0 && (t - e[0] > this.config.removeBufferLen || r.isFull())))) {
                    const n = i ? e[1] : t - (r.isFull() ? 0 : 15)
                      , a = o.getFragmentIdx(n);
                    if (a > 0 && (i || o.timeRange[a].startTime < t)) {
                        const n = Math.floor(Math.min(o.timeRange[a].startTime, e[1]))
                          , i = Math.max(o.timeRange[0].endTime + 1, e[0]);
                        i < n ? (this.log(Co.LOG, "[checkremoveSourceBuffer], remove range==>>>", i, n, t),
                        this.removeBuffer(Uo.VIDEO, i, n)) : r.isFull() && !this._removeBufferTimer && (this._removeBufferTimer = setTimeout(( () => {
                            this._checkRemoveSourceBuffer(null, null, !0)
                        }
                        ), 1e4))
                    }
                }
            }
            onMediaUpdate(e) {
                const {vid: t, kid: n, url: i} = e
                  , {player: r, config: o, playerConfig: a} = this;
                if (t === a.vid && n === o.kid && i) {
                    this.playerConfig.url = i;
                    const e = this._handlerUrl(i);
                    o._mainURL = e.main,
                    o._backupURL = e.backup;
                    const t = o._mainURL;
                    return r.rawSrc = i,
                    this.useVideoLoad ? r.src = i : this.mp4 && this.mp4.updateUrl(t),
                    !0
                }
                return !1
            }
            enableAutoBuffer(e) {
                if (e) {
                    if (!this._allInitPromise)
                        return void this.log(Co.LOG, "player destroyed!!");
                    this._allInitPromise.then(( () => {
                        this.log(Co.LOG, "enableAutoBuffer true"),
                        this._startProgress()
                    }
                    ))
                } else
                    this._stopProgress(),
                    this.log(Co.LOG, "enableAutoBuffer false")
            }
            get bitRateAdapter() {
                if (!this.player || !this.player.plugins)
                    return null;
                if (this.config.needAutoBitrate) {
                    const {bitrateselector: e} = this.player.plugins;
                    return e
                }
                return null
            }
            getDefinitonFromAdapter(e, t) {
                if (!this.bitRateAdapter)
                    return null;
                const n = this.bitRateAdapter;
                return n.getSuitableBitrate ? n.getSuitableBitrate(e, t) : n.bitRateAdapter ? n.bitRateAdapter.select(e) : null
            }
            addPreloader(e={}) {
                e.playerId = this.playerId;
                const {preloader: t} = this.player;
                t ? t.addPreloader(e, this.playerConfig.vid, this.playerId) : this.log(Co.LOG, "preloader has destroyed")
            }
            addPreloaderList(e=[]) {
                const {preloader: t} = this.player;
                t ? t.addPreloaderList(e, this.playerConfig.vid, this.playerId) : this.log(Co.LOG, "preloader has destroyed")
            }
            log(e, t, ...n) {
                const {vid: i} = this.playerConfig || {}
                  , r = i ? `[Index]${i} ${t}` : `[Index] ${t}`;
                ou(this.logger, e, r, ...n)
            }
            _emitInitFail(e) {
                this.log(Co.ERROR, "initFail, reason:", e),
                this.emit(Dl.INIT_FAIL, e)
            }
            set useVideoLoad(e) {
                this._useVideoLoad = e
            }
            get useVideoLoad() {
                return this._useVideoLoad
            }
            get ready() {
                return this._allInitPromise
            }
            get speed() {
                return parseInt(ju.speed, 10)
            }
            get version() {
                return Kl
            }
            get realTimeSpeed() {
                return th
            }
            get opQueueLen() {
                const e = this.mse && this.mse._queue ? this.mse._queue[Uo.VIDEO] : [];
                return e ? e.length : 0
            }
            get loadSegmentTimeRange() {
                if (!this.mp4)
                    return [0, 0, 0, 0];
                const e = this.mp4.adaptTimeRange;
                if (e && e.length > 0 && this._curLoadSegmentIdx >= 0 && this._curLoadSegmentIdx < e.length) {
                    const t = e[this._curLoadSegmentIdx];
                    if (t.isLoading) {
                        const e = t.range;
                        return [Number(t.startTime), Number(t.endTime), ...e]
                    }
                }
                return [0, 0, 0, 0]
            }
            get preloadState() {
                return this.player.preloader && this.player.preloader.loadingCount
            }
            get moovSize() {
                return 0
            }
            get isDestroy() {
                return !this.player
            }
            cancelPreloadTask() {
                this.preloader && this.preloader.cancelLoading(this.player.playerId)
            }
            removeAllPreloadData() {
                this.preloader && this.preloader.removeAll()
            }
            removeAllPreloadTask() {
                this.preloader && this.preloader.removeAllPreloadTask()
            }
            get domain() {
                return pu(this.loadURL)
            }
            get loadURL() {
                const {player: e} = this;
                let t = e.currentSrc;
                return /^blob/.test(e.currentSrc) && (t = this.mp4.currentLoadUseUrl()),
                t
            }
            get abrInstance() {
                return this._abrService ? this._abrService.abrInstance : null
            }
            _handleUrlExpire() {
                const {config: e, player: t} = this
                  , {paused: n} = t;
                (new Date).getTime() / 1e3 >= this.urlExpireTimestamp && this.urlExpireTimestamp > 0 && !n && e.getServerTime && (t.serverTimeDiffPromise = t.serverTimeDiffPromise || e.getServerTime().catch(( () => 0)),
                t.serverTimeDiffPromise.then((e => {
                    if (e && (t.serverTimeDiff = (new Date).getTime() / 1e3 - e),
                    (new Date).getTime() / 1e3 >= this.urlExpireTimestamp + t.serverTimeDiff) {
                        this.urlExpireTimestamp = (new Date).getTime() / 1e3 + 86400;
                        const e = new ql("network",Ql[403]);
                        this._emitExpireEvent(e)
                    }
                }
                )))
            }
            _emitExpireEvent(e) {
                const {player: t} = this
                  , n = (new Date).getTime() / 1e3;
                return this.emitExpireTimestamp ? n - this.emitExpireTimestamp > 300 && (this.emitExpireTimestamp = n,
                t.emit("MEDIA_EXPIRED", e),
                !0) : (this.emitExpireTimestamp = n,
                t.emit("MEDIA_EXPIRED", e),
                !0)
            }
            reportBugPostPlayerLog() {
                this.emit(Kc)
            }
        }
        ih.isSupported = function() {
            return Wu() && Qu() && !Xu()
        }
        ,
        ih.isEMESupported = Ku,
        ih.isSupportedWithXgmse = function() {
            return Qu() && !Xu()
        }
        ,
        ih.isMediaSourceSupported = Wu,
        ih.isWebAssemblySupported = Qu,
        ih.CUSTOM_EVENTS = Dl;
        var rh = n(33170)
          , oh = n(86848)
          , ah = n(63343)
          , sh = n(50884)
          , lh = n(80967)
          , uh = Object.defineProperty
          , ch = (e, t, n) => ( (e, t, n) => t in e ? uh(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        const hh = [new RegExp("(\\?|&)expire=([^&]*)(&|$)"), new RegExp("(\\?|&)x-tos-expires=([^&]*)(&|$)"), new RegExp("(\\?|&)x-expires=([^&]*)(&|$)")];
        function dh(e) {
            if (!e || "string" != typeof e)
                return 0;
            let t = 0;
            try {
                const n = [];
                if (hh.forEach((t => {
                    const i = e.match(t);
                    i && n.push(i)
                }
                )),
                n.length > 0)
                    t = parseInt(n[0][2], 10);
                else {
                    const n = e.split("/");
                    n.length > 5 && 8 === n[4].length && (t = parseInt(n[4], 16))
                }
                if (t > 0) {
                    const e = new Date;
                    return t <= Date.UTC(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate(), e.getUTCHours(), e.getUTCMinutes(), 0) / 1e3 ? 1 : 2
                }
                return 0
            } catch {
                return 0
            }
        }
        const fh = {
            v360: {
                width: 640,
                height: 360
            },
            v480: {
                width: 800,
                height: 480
            },
            v540: {
                width: 960,
                height: 540
            },
            v720: {
                width: 1280,
                height: 720
            },
            v864: {
                width: 1536,
                height: 864
            },
            v960: {
                width: 1706,
                height: 960
            },
            v1080: {
                width: 1920,
                height: 1080
            },
            v2k: {
                width: 2560,
                height: 1440
            },
            v4k: {
                width: 3840,
                height: 2160
            }
        };
        class ph {
            constructor() {
                this.ladder = null,
                this._mvmaf = "",
                this._vqscore = 0,
                this.width = 0,
                this.height = 0,
                this.playedDuration = 0
            }
            set mvmaf(e) {
                if (!e)
                    return;
                this._mvmaf = e;
                let t = JSON.parse(e);
                t["v2.0"] && (this.ladder = t["v2.0"])
            }
            get mvmaf() {
                return this._mvmaf
            }
            set vqscore(e) {
                e && (this._vqscore = e)
            }
            get vqscore() {
                return this._vqscore
            }
            _findNearestPlaybackScore() {
                let e = 0;
                if (!this.ladder)
                    return 0;
                let t = this.width * this.height
                  , n = "v540"
                  , i = Number.MAX_VALUE;
                for (let e in fh) {
                    const r = fh[e];
                    let o = t - r.width * r.height;
                    Math.abs(o) < i && (i = Math.abs(o),
                    n = e)
                }
                const r = fh[n].width * fh[n].height;
                if (Math.abs(r - t) <= .1 * r && this.ladder && this.ladder.ori && this.ladder.ori[n])
                    return this.ladder.ori[n];
                if (this.ladder && this.ladder.ori) {
                    let t = this.ladder.ori
                      , i = Object.keys(t);
                    if (1 == i.length)
                        return t[i[0]];
                    {
                        i.sort();
                        let r = fh[i[0]].width * fh[i[0]].height
                          , o = t[i[0]]
                          , a = fh[i[i.length - 1]].width * fh[i[i.length - 1]].height
                          , s = t[i[i.length - 1]]
                          , l = fh[n].width * fh[n].height;
                        e = o + ((l - r) * s - (l - r) * o) / (a - r)
                    }
                }
                return e
            }
            exportData() {
                if (this.playedDuration <= 0)
                    return {};
                const e = this._findNearestPlaybackScore();
                let t = 100 - (100 - e) * Math.exp(this._vqscore / 100 - 1);
                return {
                    vqs: this._vqscore,
                    vms: e,
                    vods: t,
                    mvmaf: this._mvmaf,
                    pr: "w:" + this.width + ",h:" + this.height + ",srf:0,wt:" + this.playedDuration,
                    v: 2
                }
            }
            reset() {
                this._mvmaf = "",
                this._vqscore = 0,
                this.ladder = null,
                this.width = 0,
                this.height = 0,
                this.playedDuration = 0
            }
        }
        class gh {
            constructor(e, t) {
                this.name = e,
                t && this.reset()
            }
            startTimer() {
                this.started = !0;
                const e = window.performance;
                this.startTime = e ? e.now() : Date.now()
            }
            stopTimer() {
                if (this.started) {
                    const e = window.performance;
                    this.endTime = e ? e.now() : Date.now(),
                    this.duration = this.endTime - this.startTime,
                    this.started = !1
                }
            }
            reset() {
                this.started = !1,
                this.startTime = -1,
                this.endTime = -1,
                this.duration = 0
            }
            exportData() {
                return {
                    duration: this.duration,
                    gpu: "",
                    score: -2,
                    vendor: ""
                }
            }
        }
        class mh extends gh {
            constructor() {
                super("VideoRequest", !0)
            }
        }
        class vh extends gh {
            constructor() {
                super("VideoRequestResponse", !0)
            }
        }
        class yh extends gh {
            constructor() {
                super("BlockStart", !0),
                this.blockType = 0
            }
            setBlockType(e) {
                if (e && e.element) {
                    const {readyState: t, seeking: n} = e.element;
                    this.blockType = t < 1 ? 1 : n ? 2 : 0
                }
            }
            exportData(e) {
                var t;
                const n = (null == (t = null == e ? void 0 : e.element) ? void 0 : t.currentTime) || 0;
                return {
                    blockType: this.blockType,
                    currentTime: n,
                    ...super.exportData()
                }
            }
        }
        class _h extends gh {
            constructor() {
                super("Block", !0)
            }
            exportData(e, t={
                blockType: 0
            }) {
                var n;
                return {
                    ...t,
                    currentTime: (null == (n = null == e ? void 0 : e.element) ? void 0 : n.currentTime) || 0,
                    ...super.exportData()
                }
            }
        }
        class Th extends gh {
            constructor() {
                super("PlayQuality", !0)
            }
        }
        class bh extends gh {
            constructor(e) {
                super("PlayEnded", !1),
                this.videoQualityHelper = new ph,
                this.currentTime = 0,
                this.status = e,
                this.reset()
            }
            startPauseTimer() {
                const e = window.performance;
                this.pauseStartTime = e ? e.now() : Date.now(),
                this.paused = !0
            }
            stopPauseTimer() {
                if (this.paused) {
                    const e = window.performance;
                    this.pauseStopTime = e ? e.now() : Date.now(),
                    this.pauseDuration += this.pauseStopTime - this.pauseStartTime
                }
            }
            reset() {
                super.reset(),
                this.paused = !1,
                this.pauseStartTime = -1,
                this.pauseStopTime = -1,
                this.pauseDuration = 0,
                this.currentTime = 0,
                this.videoQualityHelper && this.videoQualityHelper.reset()
            }
            exportData() {
                let e = super.exportData();
                this.videoQualityHelper.playedDuration = this.duration - this.pauseDuration;
                let t = this.videoQualityHelper.exportData();
                return Object.assign({}, e, {
                    pauseDuration: this.pauseDuration,
                    currentTime: this.currentTime,
                    vqm: t
                })
            }
            copy(e) {
                this.duration = e.duration,
                this.currentTime = e.currentTime,
                this.pauseDuration = e.pauseDuration,
                e.videoQualityHelper && (this.videoQualityHelper.mvmaf = e.videoQualityHelper.mvmaf,
                this.videoQualityHelper.vqscore = e.videoQualityHelper.vqscore,
                this.videoQualityHelper.width = e.videoQualityHelper.width,
                this.videoQualityHelper.height = e.videoQualityHelper.height,
                this.videoQualityHelper.playedDuration = e.videoQualityHelper.playedDuration)
            }
            set mvmaf(e) {
                e && (this.videoQualityHelper.mvmaf = e)
            }
            set vqscore(e) {
                e && (this.videoQualityHelper.vqscore = e)
            }
            set width(e) {
                this.videoQualityHelper.width = e
            }
            set height(e) {
                this.videoQualityHelper.height = e
            }
        }
        class Sh extends gh {
            constructor() {
                super("PlayFailed", !0),
                this.loadStartRetry = []
            }
            getRetryData() {
                return {
                    retryCount: this.loadStartRetry.length,
                    retryList: this.loadStartRetry
                }
            }
            exportData(e, t, n) {
                let i = super.exportData()
                  , r = -1
                  , o = ""
                  , a = -1
                  , s = "";
                return e && e.element && (r = e.element.currentTime,
                o = e.element.currentSrc,
                e.element.error && (a = e.element.error.code,
                s = e.element.error.message)),
                t && (t.url && (o = t.url),
                a = t.errorCode,
                s = t.message),
                Object.assign({}, i, {
                    status: n,
                    code: a,
                    message: s,
                    url: o,
                    isExpired: dh(o),
                    currentTime: r,
                    retryCount: this.loadStartRetry.length,
                    retryList: this.loadStartRetry
                })
            }
        }
        class wh extends gh {
            constructor() {
                super("FirstFrame", !0)
            }
        }
        class kh extends gh {
            constructor() {
                super("VideoDataSize", !0)
            }
        }
        class Ch extends oh.C {
            constructor(e, t) {
                super(),
                ch(this, "_onPlay", ( () => {
                    this.playEnded.paused && this.playEnded.stopPauseTimer()
                }
                )),
                ch(this, "_onPause", ( () => {
                    this.block.started && this.block.reset(),
                    this.playEnded.startPauseTimer()
                }
                )),
                ch(this, "_onPlaying", ( () => {
                    if (this.status = 1,
                    this.block.started) {
                        this.block.stopTimer();
                        const {blockType: e} = this.blockStart;
                        this.trigger(this.block.name, this.block.exportData(this._player, {
                            blockType: e
                        }))
                    }
                    this._player.element && (this.playEnded.width = this._player.element.videoWidth,
                    this.playEnded.height = this._player.element.videoHeight)
                }
                )),
                ch(this, "_onTimeupdate", ( () => {
                    !this._player || !this._player.element || (this.playEnded.currentTime = this._player.element.currentTime)
                }
                )),
                ch(this, "_onEnded", ( () => {
                    this.status = 2
                }
                )),
                ch(this, "_onWaiting", ( () => {
                    !this._player || !this._player.element || 1 == this._status && (this._player.element.paused || (this.blockStart.setBlockType(this._player),
                    this.trigger(this.blockStart.name, this.blockStart.exportData()),
                    this.block.startTimer()))
                }
                )),
                ch(this, "_onError", (e => {
                    this.trigger(this.playFailed.name, this.playFailed.exportData(this._player, e, this._status))
                }
                )),
                ch(this, "_onSourceError", (e => {
                    const {host: t, errorCode: n, message: i, src: r} = e;
                    this.playFailed.loadStartRetry.push({
                        host: t,
                        code: n,
                        message: i,
                        isExpired: dh(r)
                    })
                }
                )),
                ch(this, "_onLoadstart", ( () => {
                    this.trigger(this.videoRequest.name, this.videoRequest.exportData()),
                    this.playQuality.startTimer(),
                    this.videoRequestResponse.startTimer(),
                    this.firstFrame.startTimer()
                }
                )),
                ch(this, "_onLoadeddata", ( () => {
                    this.videoRequestResponse.stopTimer(),
                    this.trigger(this.videoRequestResponse.name, this.videoRequestResponse.exportData())
                }
                )),
                ch(this, "_onPlayCatch", ( () => {
                    this.xgDowngraded = !0
                }
                )),
                ch(this, "_onDownloaderChunkReady", (e => {
                    this.trigger(this.videoDataSize.name, e)
                }
                )),
                ch(this, "_onProgress", ( () => {
                    if (!this._player || !this.xgDowngraded && "RAW" != this._player.type || !this.config || !this.config.bitrate)
                        return;
                    const e = this._player.element.buffered;
                    let t = 0;
                    for (let n = 0; n < e.length; n++)
                        t += e.end(n) - e.start(n);
                    const n = t * this.config.bitrate / 8;
                    this.trigger(this.videoDataSize.name, {
                        chunkSize: n,
                        speed: this.config.bitrate / 1024
                    })
                }
                )),
                ch(this, "initEvent", (e => {
                    const t = e || this.event;
                    t && (t.on("play", this._onPlay),
                    t.on("pause", this._onPause),
                    t.on("playing", this._onPlaying),
                    t.on("timeupdate", this._onTimeupdate),
                    t.on("ended", this._onEnded),
                    t.on("waiting", this._onWaiting),
                    t.on("error", this._onError),
                    t.on("source_error", this._onSourceError),
                    t.on("loadstart", this._onLoadstart),
                    t.on("loadeddata", this._onLoadeddata),
                    t.on("playCatch", this._onPlayCatch),
                    t.on("downloaderChunkReady", this._onDownloaderChunkReady),
                    t.on("progress", this._onProgress))
                }
                )),
                ch(this, "removeEvent", (e => {
                    const t = e || this.event;
                    t && (t.off("play", this._onPlay),
                    t.off("pause", this._onPause),
                    t.off("playing", this._onPlaying),
                    t.off("timeupdate", this._onTimeupdate),
                    t.off("ended", this._onEnded),
                    t.off("waiting", this._onWaiting),
                    t.off("error", this._onError),
                    t.off("source_error", this._onSourceError),
                    t.off("loadstart", this._onLoadstart),
                    t.off("loadeddata", this._onLoadeddata),
                    t.off("playCatch", this._onPlayCatch),
                    t.off("downloaderChunkReady", this._onDownloaderChunkReady),
                    t.off("progress", this._onProgress))
                }
                )),
                ch(this, "stop", ( () => {
                    0 != this._status && (this.reset(),
                    this.lastPlayEnded && (this.trigger(this.lastPlayEnded.name, this.lastPlayEnded.exportData()),
                    this.lastPlayEnded = null))
                }
                )),
                ch(this, "reset", ( () => {
                    (0,
                    sh.l)("MultimediaMetrics", "reset"),
                    this.playEnded.started && this.playEnded.stopTimer(),
                    this.lastPlayEnded = new bh(this._status),
                    this.lastPlayEnded.copy(this.playEnded),
                    this.status = 0,
                    this.xgDowngraded = !1,
                    this.videoRequest.reset(),
                    this.videoRequestResponse.reset(),
                    this.blockStart.reset(),
                    this.block.reset(),
                    this.playQuality.reset(),
                    this.playEnded.reset(),
                    this.playFailed.reset(),
                    this.firstFrame.reset()
                }
                )),
                this.event = e,
                this.config = t,
                this._status = 0,
                this.initEvent(),
                this._player = null,
                this.xgDowngraded = !1,
                this.videoRequest = new mh,
                this.videoRequestResponse = new vh,
                this.blockStart = new yh,
                this.block = new _h,
                this.playQuality = new Th,
                this.lastPlayEnded = null,
                this.playEnded = new bh(this._status),
                this.playFailed = new Sh,
                this.firstFrame = new wh,
                this.videoDataSize = new kh,
                this.events = [this.videoDataSize.name, this.videoRequest.name, this.videoRequestResponse.name, this.blockStart.name, this.block.name, this.playQuality.name, this.playEnded.name, this.playFailed.name, this.firstFrame.name]
            }
            static get version() {
                return lh.v
            }
            getCommonData(e) {
                const {element: t, config: n, type: i} = e;
                return {
                    currentTime: (null == t ? void 0 : t.currentTime) || 0,
                    videoDuration: (null == t ? void 0 : t.duration) || 0,
                    codecType: (null == n ? void 0 : n.codecType) || "h264",
                    vtype: (null == n ? void 0 : n.vtype) || "MP4",
                    playerType: i || "default"
                }
            }
            setConfig(e) {
                e && e.bitrate && (this.config.bitrate = e.bitrate)
            }
            set player(e) {
                this._player = e,
                e && (this._player.mvmaf && (this.playEnded.mvmaf = this._player.mvmaf),
                this._player.vqscore && (this.playEnded.vqscore = this._player.vqscore))
            }
            set status(e) {
                if (0 == this._status && 1 == e) {
                    this.playQuality.stopTimer(),
                    this.playEnded.startTimer(),
                    this.firstFrame.stopTimer();
                    const e = {
                        ...this.playQuality.exportData(),
                        ...this.playFailed.getRetryData()
                    };
                    this.trigger(this.playQuality.name, e),
                    this.trigger(this.firstFrame.name, e)
                }
                this._status = e
            }
            trigger(e, t) {
                const n = this.getCommonData(this._player);
                super.trigger(e, {
                    ...n,
                    ...t
                })
            }
        }
        var Mh = n(4975)
          , Ph = n(74e3)
          , Rh = Object.defineProperty
          , xh = (e, t, n) => ( (e, t, n) => t in e ? Rh(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n)(e, "symbol" != typeof t ? t + "" : t, n);
        class Eh extends oh.C {
            constructor() {
                super(),
                xh(this, "_proxyEvent", (e => "playCatch" == e ? (t, n) => {
                    this.trigger(e, {
                        vtype: t,
                        error: n
                    })
                }
                : "prf_data_size" == e ? e => {
                    this.trigger("downloaderChunkReady", {
                        chunkSize: e.cdn_size,
                        speed: e.cdn_speed
                    })
                }
                : "PRELOAD_INFO" == e ? e => {
                    this.trigger("preloaderInfoReady", {
                        size: e.byteLength,
                        duration: e.duration,
                        type: e.type,
                        vid: e.vid
                    })
                }
                : t => {
                    this.trigger(e, t)
                }
                )),
                this.currentPlayer = null,
                this.rawEvents = ["loadstart", "loadeddata", "timeupdate", "error", "canplay", "canplaythrough", "volumechange", "pause", "playing", "waiting", "ended", "seeking", "seeked", "stalled", "abort", "play", "progress", "downloaderError", "downloaderChunkReady", "memoryCompleted", "playCatch", "prf_data_size", "PRELOAD_INFO", "preloaderInfoReady", "source_error", "source_success"],
                this.extensionEvents = ["autoplayPrevented"],
                this._callbacks = [],
                this.events = this.rawEvents.concat(this.extensionEvents)
            }
            set player(e) {
                this.remove(),
                this.currentPlayer = e,
                this.bind()
            }
            remove() {
                this.currentPlayer && this._callbacks.forEach(( (e, t) => {
                    e()
                }
                ))
            }
            bind() {
                this.currentPlayer && (this.rawEvents.forEach(( (e, t) => {
                    const n = this._proxyEvent(e);
                    this.currentPlayer.bindEvent && this.currentPlayer.bindEvent(e, n),
                    this.currentPlayer.on && this.currentPlayer.on(e, n),
                    this._callbacks.push(( () => {
                        this.currentPlayer.removeEvent && this.currentPlayer.removeEvent(e, n),
                        this.currentPlayer.off && this.currentPlayer.off(e, n)
                    }
                    ))
                }
                )),
                this.extensionEvents.forEach(( (e, t) => {
                    const n = this._proxyEvent(e);
                    this.currentPlayer.proxyOn && this.currentPlayer.proxyOn(e, n),
                    this._callbacks.push(( () => {
                        this.currentPlayer.proxyOff && this.currentPlayer.proxyOff(e, n)
                    }
                    ))
                }
                )))
            }
        }
        class Dh extends oh.C {
            constructor(e) {
                super(),
                this.autoplay = !0,
                this.muted = !1,
                this.preload = "auto",
                this.id = "",
                this.codec = "",
                this.resolution = "",
                this.bandwidth = 0,
                this.cpu = 0,
                this.memory = 0,
                this.userAgent = "",
                this.bitrate = 0,
                this.networkType = ""
            }
            set extraVideoInfo(e) {
                e && (e.codec && (this.codec = e.codec),
                e.resolution && (this.resolution = e.resolution),
                e.id && (this.id = e.id),
                e.bitrate && (this.bitrate = e.bitrate))
            }
        }
        class Lh {
            constructor() {
                xh(this, "addChunk", (e => {
                    this.chunks.push(e),
                    this.chunks.length >= this.limit && this.chunks.shift()
                }
                )),
                xh(this, "release", ( () => {
                    this.chunks = []
                }
                )),
                this.chunks = [],
                this.limit = 6,
                this.lastAverageSpeed = 0
            }
            get averageSpeed() {
                let e = 0
                  , t = 0;
                for (const n of this.chunks)
                    n.size > 0 && n.duration > 0 && (e += n.size,
                    t += n.duration);
                return t > 0 && (this.lastAverageSpeed = 8 * e / 1024 / 1024 / t),
                this.lastAverageSpeed
            }
        }
        class Ih extends oh.C {
            constructor(e) {
                super(),
                this.device = e,
                this.speedMeasurement = new Lh
            }
            inputChunkInfo(e, t) {
                this.speedMeasurement.addChunk(e, t)
            }
            get averageSpeed() {
                return this.speedMeasurement.averageSpeed
            }
            get baseSpeed() {
                return this.device ? this.device.bandwidth : 0
            }
            get speed() {
                return this.averageSpeed ? this.averageSpeed : this.baseSpeed
            }
        }
        var Oh = (e => (e.DEFAULT = "default",
        e.ACTIVE = "active",
        e.RETAIN = "retain",
        e.RELEASE = "release",
        e.BACKUP = "backup",
        e))(Oh || {});
        let Ah = 0;
        class Gh extends oh.C {
            static get UUIDIndex() {
                return Ah++,
                Ah
            }
            static set UUIDIndex(e) {
                Ah = e
            }
            static generateUUID(e) {
                return e + "_Multimedia_" + Gh.UUIDIndex
            }
            constructor(e="RAW", t) {
                super(),
                this.uuid = Gh.generateUUID(e),
                this.type = e,
                this.element = null,
                this.player = null,
                this.forceAutoplay = !1,
                this.attemptPlayCount = 0,
                this.vqscore = 0,
                this.mvmaf = "",
                this.events = ["autoplayPrevented"],
                this.state = t || Oh.ACTIVE
            }
            style(e, t) {
                this.element && (this.element.style[e] = t)
            }
            set volume(e) {
                this.element && (this.element.volume = e)
            }
            set muted(e) {
                this.element && (this.element.muted = e)
            }
            set playbackRate(e) {
                this.element && (this.element.playbackRate = e)
            }
            get currentTime() {
                return this.element ? this.element.currentTime : 0
            }
            get duration() {
                return this.element ? this.element.duration : 0
            }
            get width() {
                return this.element ? this.element.videoWidth : 0
            }
            get height() {
                return this.element ? this.element.videoHeight : 0
            }
            get error() {
                return this.element ? this.element.error : null
            }
            get attributes() {
                const {element: e} = this;
                return {
                    error: (null == e ? void 0 : e.error) || null,
                    src: (null == e ? void 0 : e.currentSrc) || "",
                    currentTime: (null == e ? void 0 : e.currentTime) || 0,
                    muted: !(null == e || !e.muted),
                    duration: (null == e ? void 0 : e.duration) || 0,
                    readyState: (null == e ? void 0 : e.readyState) || 0,
                    networkState: (null == e ? void 0 : e.networkState) || 0,
                    buffered: null == e ? void 0 : e.buffered,
                    volume: (null == e ? void 0 : e.volume) || 1,
                    ended: !(null == e || !e.ended),
                    paused: !(null == e || !e.paused),
                    seeking: !(null == e || !e.seeking),
                    currentSrc: (null == e ? void 0 : e.currentSrc) || ""
                }
            }
            get isReady() {
                return !!this.element && this.element.readyState >= 2
            }
            get curDefinition() {
                return {
                    url: "",
                    definition: "",
                    bitrate: -1,
                    duration: -1,
                    codecType: "h264"
                }
            }
            get playbackQuality() {
                return this.element ? this.element.getVideoPlaybackQuality() : null
            }
            proxyOn(e, t) {
                return super.on(e, t)
            }
            proxyOff(e, t) {
                return super.off(e, t)
            }
            updateConfig(e) {}
            on(e, t) {
                this.element && this.element.addEventListener(e, t)
            }
            off(e, t) {
                this.element && this.element.removeEventListener(e, t)
            }
            once(e, t) {}
            mute(e) {
                this.element && (this.element.muted = e)
            }
            access() {
                if (this.element)
                    return this.play().then(( () => {
                        this.pause()
                    }
                    ))
            }
            load(e) {
                if (!this.element)
                    return;
                let t = "";
                t = e instanceof Array ? e.length > 0 ? e[0].src : "" : e,
                this.element.src = t
            }
            seek(e) {
                this.element && (this.element.currentTime = e)
            }
            play() {
                return this.element ? this.element.play() : Promise.resolve()
            }
            replay() {
                return this.seek(0),
                this.play()
            }
            pause() {
                this.element && this.element.pause()
            }
            buffered() {
                if (this.element)
                    return this.element.buffered
            }
            reset() {}
            release(e) {
                this.attemptPlayCount = 0
            }
            addSubtitle(e, t) {}
            async enterFullscreen(e) {
                this.element && (this.element.requestFullscreen ? this.element.requestFullscreen() : this.element.mozRequestFullScreen ? this.element.mozRequestFullScreen() : this.element.webkitRequestFullscreen ? this.element.webkitRequestFullscreen() : this.element.msRequestFullscreen ? this.element.msRequestFullscreen() : this.element.webkitEnterFullscreen && this.element.webkitEnterFullscreen())
            }
            async exitFullscreen(e) {
                window.document.exitFullscreen ? window.document.exitFullscreen() : window.document.mozCancelFullScreen ? window.document.mozCancelFullScreen() : window.document.webkitExitFullscreen ? window.document.webkitExitFullscreen() : window.document.msExitFullscreen ? window.document.msExitFullscreen() : this.element && this.element.webkitExitFullScreen && this.element.webkitExitFullScreen()
            }
            tryPlay(e) {
                window.setTimeout(( () => {
                    this.attemptPlayCount >= 3 || (!e.message.match("request was interrupted by a new load request") && !e.message.match("The operation was aborted") && this.trigger("autoplayPrevented", e),
                    (e.message.match("failed because the user didn't interact with the document first.") || e.message.match("The request is not allowed by the user agent or the platform in the current context") || e.message.match("The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.")) && this.mute(!0),
                    this.play(),
                    this.attemptPlayCount += 1)
                }
                ), 0)
            }
            initStyle() {
                this.element && (this.element.style.width = "100%",
                this.element.style.height = "100%",
                this.element.style.position = "absolute",
                this.element.style.top = "0",
                this.element.style.left = "0",
                this.element.style["::-webkit-media-controls-enclosure"] = {
                    display: "none !important"
                })
            }
            initProperty() {
                this.element && (this.element.controls = !1,
                this.element.loop = !1,
                this.element.muted = !1,
                this.element.playsInline = !0,
                this.element.poster = "",
                this.element.preload = "auto")
            }
            getVideoDesc() {
                return {
                    videoType: "mp4"
                }
            }
            preloadResources(e) {}
            updatePreloadCodec(e) {}
            updatePreloadConfig(e) {}
            getPreloadMeta(e) {
                return null
            }
            changeState(e) {
                this.state = e
            }
        }
        class Nh extends Gh {
            constructor(e) {
                super("TT"),
                this._init(e)
            }
            _init(e) {
                this.player = new rh.StreamPlayer({
                    withCredentials: !0
                }),
                this.player.on("DOWNLOADER_ERROR", (e => {}
                )),
                this.player.on("DOWNLOADER_CHUNK_READY", (e => {}
                )),
                this.element = this.player.element,
                this.initStyle(),
                this.initProperty()
            }
            _initLoggerBefore() {}
            play() {
                return new Promise(( (e, t) => {
                    this.player.play().then(( () => {
                        e()
                    }
                    )).catch((e => {
                        this.forceAutoplay && this.tryPlay(e)
                    }
                    ))
                }
                ))
            }
            pause() {
                this.player.pause()
            }
            load(e) {
                this.player.load(e)
            }
            release(e) {
                super.release(e),
                this.player.release()
            }
            reset() {
                this.pause(),
                this.seek(0)
            }
            on(e, t) {
                this.player.on(e, t)
            }
            off(e, t) {
                this.player.off(e, t)
            }
            once(e, t) {
                const n = i => {
                    t(i),
                    this.player.off(e, n)
                }
                ;
                this.player.on(e, n)
            }
            addSubtitle(e, t) {
                this.player.addSubtitle(e, t)
            }
            get isReady() {
                return this.player.isReady
            }
            get playbackQuality() {
                return this.player ? this.player.getQualityInfo() : super.playbackQuality
            }
        }
        const Bh = "h264"
          , $h = "h265";
        class Fh {
            constructor(e) {
                this.selectorName = "base",
                this.config = {}
            }
            select(e, t=0, n, i) {
                return null
            }
        }
        function Hh(e, t, n) {
            const i = n.filter((n => {
                if (e === n.vtype && n.codecType === t)
                    return n
            }
            ));
            return i.sort(( (e, t) => e.bitrate - t.bitrate)),
            i
        }
        class Uh extends Fh {
            constructor(e) {
                super(e),
                this.selectorName = "default",
                this.config = {
                    ...e
                }
            }
            getMP4H264List(e) {
                return Hh("MP4", Bh, e)
            }
            select(e, t=0, n, i) {
                const {quality: r, hevcQuality: o} = n || this.config
                  , {codecType: a, vtype: s} = i || {
                    codecType: Bh,
                    vtype: "MP4"
                }
                  , l = Hh(s, a, e)
                  , u = this.getMP4H264List(e)
                  , c = a === $h ? o : r;
                let h = null;
                return l.length > 0 ? (h = l.find((e => e.qualityType === c)),
                h || (h = l[0])) : (h = u.find((e => e.qualityType === r)),
                h || (h = u.length > 0 ? u[0] : null)),
                h
            }
        }
        const Vh = new class {
            constructor() {
                this.defaultSelector = "default";
                this._selectors = {
                    default: new Uh({
                        quality: 20,
                        hevcQuality: 28,
                        minBitrate: 0,
                        maxBitrate: 0,
                        defaultVtype: "MP4",
                        defaultCodecType: "h264"
                    })
                },
                this.config = {
                    quality: 20,
                    hevcQuality: 28,
                    minBitrate: 0,
                    maxBitrate: 0,
                    defaultVtype: "MP4",
                    defaultCodecType: "h264"
                }
            }
            updateConfig(e) {
                const t = this.getSelector(this.defaultSelector);
                Object.keys(e).forEach((n => {
                    this.config[n] = e[n],
                    t && (t.config[n] = e[n])
                }
                ))
            }
            addSelector(e, t, n) {
                this._selectors[e] = new t(n || {})
            }
            getSelector(e) {
                let t = this._selectors[e];
                return t || (t = this._selectors[this.defaultSelector] || this._selectors.defalut),
                t
            }
            select(e, t, n, i={
                selector: "defalut"
            }) {
                const {selector: r=this.defaultSelector, config: o} = i
                  , {defaultVtype: a, defaultCodecType: s} = this.config;
                return this.getSelector(r).select(e, 0, o, {
                    codecType: t || s,
                    vtype: n || a
                })
            }
        }
          , jh = {
            preloadTime: 10,
            segmentMinDuration: 10,
            preloadCacheType: 1,
            preloadMaxCacheCount: 5,
            minBufferLength: 10
        }
          , zh = "[MultiMediaPreloader]"
          , Xh = new class {
            constructor() {
                this.maxQueueCount = 3,
                typeof window > "u" ? this.preloader = null : (this.preloader = lc.registerPreloader({
                    ...jh
                }),
                lc.BitRateAdapter = Vh)
            }
            update(e) {
                var t;
                (0,
                sh.l)(zh, "update", e),
                null == (t = this.preloader) || t.update(e)
            }
            changeCodec(e) {
                if (this.preloader) {
                    const t = this.preloader.codecType;
                    if ((0,
                    sh.l)(zh, "changeCodec", t, e),
                    t === $h && e === Bh) {
                        const {allCachedKeys: e} = this.preloader;
                        for (const t in e)
                            t.includes($h) && this.preloader.removeItem(t, (e => {
                                (0,
                                sh.l)("[changeCodec] remove success", t, e)
                            }
                            ))
                    }
                    this.preloader.codecType = e
                }
            }
            attachPlayer(e) {
                var t;
                null == (t = this.preloader) || t.attachPlayer(e)
            }
            detachPlayer() {
                var e;
                null == (e = this.preloader) || e.detachPlayer()
            }
            addPreloadList(e) {
                var t;
                null == (t = this.preloader) || t.addPreloaderList(e)
            }
            clearTask() {
                var e;
                null == (e = this.preloader) || e.clearTask()
            }
            getPreloadMeta(e) {
                var t;
                return (null == (t = this.preloader) ? void 0 : t.getPreloadMetaByVid(e)) || null
            }
            addPlayingVid(e) {
                var t;
                null == (t = this.preloader) || t.addPlayingVid(e)
            }
            removePlayingVid(e) {
                var t;
                null == (t = this.preloader) || t.removePlayingVid(e)
            }
        }
        ;
        function Kh(e) {
            const {H264DefinitionList: t, h264DefinitionList: n} = e.config
              , i = n || t;
            if (i && i.length > 0) {
                const t = i[0];
                return e.emit("playCatch", "MP4_3", {
                    errorCode: 8200,
                    message: "width and height is 0"
                }),
                e.setConfig({
                    defaultBitrate: t.bitrate,
                    defaultDefinition: t.definition,
                    url: t.url,
                    codecType: t.codecType
                }),
                e.src = t.url,
                e.play(),
                !0
            }
            return !1
        }
        function Qh() {
            const {regionInfo: e} = Ph.M
              , t = Ph.b.gpuScoreData;
            return {
                playMode: Ph.M.playMode,
                tag: Ph.M.pageName,
                subTag: Ph.M.playMode,
                preTag: Ph.M.prePageName,
                preSubtag: Ph.M.prePlayMode,
                region: (null == e ? void 0 : e.region) || "",
                isLogin: !(null != e && e.isLogin),
                deviceScore: Ph.b.shortData,
                d_score: t.score || 0,
                gpu: t.gpu || "",
                vendor: t.vendor || ""
            }
        }
        const Wh = "[XGplayer]";
        class qh extends Gh {
            constructor(e, t) {
                super("XG"),
                this._onAutoplayPrevent = () => {
                    var e;
                    (0,
                    sh.l)(Wh, this.uuid, "_onAutoplayPrevent", this.attemptPlayCount),
                    !(this.attemptPlayCount >= 3) && this.forceAutoplay && (this.mute(!0),
                    null == (e = this.player) || e.play(),
                    this.attemptPlayCount += 1)
                }
                ,
                this._onAutoplayStart = () => {
                    var e;
                    (0,
                    sh.l)(Wh, this.uuid, "onAutoplayStart"),
                    null == (e = this.player) || e.off(h, this._onAutoplayPrevent)
                }
                ,
                this._onLoadedData = () => {
                    const e = this.player;
                    if (!e || !e.media)
                        return;
                    const {videoWidth: t, videoHeight: n} = e.media;
                    0 === t && 0 === n && (Ph.a.focusDisableHevc({
                        hevcMsg: "width and height is 0",
                        hevcCode: 2
                    }),
                    Kh(e),
                    this.updatePreloadCodec("h264")),
                    e.off(s, this._onLoadedData)
                }
                ,
                this.plugins = [],
                this.metrics = null,
                this.event = null,
                this.config = {},
                this._init(e),
                this.changeState(t || Oh.ACTIVE)
            }
            checkNeedMSE(e) {
                var t;
                return !(0,
                sh.i)() && ih.isMediaSourceSupported() && !(null != (t = null == e ? void 0 : e.extra) && t.closeMSE)
            }
            getVideoMiddleware() {
                return {
                    error: (e, t) => {
                        const {player: n} = e;
                        if (n)
                            try {
                                const i = Kh(n);
                                n.setEventsMiddleware({
                                    error: null
                                }),
                                i || t("error", e)
                            } catch {
                                t("error", e)
                            }
                        t("error", e)
                    }
                }
            }
            _init(e) {
                const t = {};
                e || (e = {}),
                e.enableSubtitle && this._initSubtitle(),
                e.enablePreloader && e.preloader && this._initPreloader(e.preloader),
                e.enableLogger && e.logger && this._initLoggerBefore(e.logger);
                const n = this.checkNeedMSE(e);
                n ? this.plugins.push(ih) : t.preload = "auto";
                const {video: i, logger: r, extra: o} = e
                  , a = (null == i ? void 0 : i.codecType) || "h264";
                let l = (null == i ? void 0 : i.defaultBitrate) || 0
                  , u = (null == i ? void 0 : i.defaultDefinition) || "";
                const d = (null == i ? void 0 : i.duration) || 0
                  , f = (null == o ? void 0 : o.ignores) || []
                  , p = void 0 === (null == i ? void 0 : i.autoplay) || i.autoplay
                  , g = void 0 !== (null == i ? void 0 : i.muted) && (null == i ? void 0 : i.muted);
                g && (t.muted = g);
                const m = (null == i ? void 0 : i.volume) || 1
                  , v = (null == i ? void 0 : i.playbackRate) || 1;
                this.mvmaf = (null == i ? void 0 : i.mvmaf) || "",
                this.vqscore = (null == i ? void 0 : i.vqscore) || 0;
                const y = (null == r ? void 0 : r.line_app_id) || 0
                  , _ = (null == r ? void 0 : r.vid) || ""
                  , {actualUrl: T, url: b} = o || {
                    actualUrl: void 0,
                    url: ""
                };
                let S = T || b || "";
                const w = (null == o ? void 0 : o.vid) || "";
                let k = null != o && o.h264BitrateList ? o.h264BitrateList : [];
                const C = this.getPreloadMeta(w);
                let M = function(e, t) {
                    return "h265" !== e || t && "h265" !== t.codecType ? "h264" : "h265"
                }(a, C);
                const {bitrateList: P=[]} = e;
                if (P.length > 0) {
                    const e = Vh.select(P, M);
                    let t = null;
                    "h265" === (null == e ? void 0 : e.codecType) && (t = Vh.select(P, "h264"),
                    t && (k = [t])),
                    (0,
                    sh.l)(Wh, this.uuid, `[${w}]`, "BitRateAdapter.select", `codecType:${M} initCodec:${a} preloadMeta:${null == C ? void 0 : C.definition} defaultDefinition:${u} defaultBitrate:${l}`, null == e ? void 0 : e.definition, null == e ? void 0 : e.bitrate, null == t ? void 0 : t.definition, P),
                    e && (l = (null == e ? void 0 : e.bitrate) || l,
                    u = (null == e ? void 0 : e.definition) || u,
                    S = e.url,
                    M = e.codecType)
                }
                if ((0,
                sh.l)(Wh, this.uuid, `[${w}]`, "after BitRateAdapter.select", `codecType:${M} defaultDefinition:${u} defaultBitrate:${l}`),
                this.config = {
                    vid: w,
                    isNoRoot: !0,
                    controls: !1,
                    plugins: this.plugins,
                    autoplay: p,
                    codecType: M,
                    width: "100%",
                    height: "100%",
                    videoConfig: t || {},
                    volume: m,
                    playbackRate: v,
                    H264DefinitionList: k,
                    url: S,
                    nullUrlStart: !S,
                    ignores: f,
                    defaultDefinition: u,
                    defaultBitrate: l,
                    duration: d
                },
                e.enableLogger) {
                    const {logger: t} = e
                      , {ext: n={}} = t || {}
                      , i = Ph.a.getHevcDisableInfo() || {}
                      , r = {
                        ...Qh(),
                        codec_type: M,
                        decodeFlag: "h265" === M,
                        defaultBitrate: l,
                        defaultDefinition: u,
                        line_app_id: y,
                        vid: _,
                        vtype: "MP4",
                        ...t,
                        playerCoreVersion: ih.version,
                        pv: st.version,
                        strategyVersion: lh.v,
                        ext: {
                            ...n,
                            ...i
                        }
                    };
                    this.config.vodLogOpts = r
                }
                e.mp4EncryptPlayer && (this.config.mp4EncryptPlayer = e.mp4EncryptPlayer),
                this.player = new st(this.config),
                (0,
                sh.l)(Wh, this.uuid, "PlayerInit", this.config),
                this.player.on(h, this._onAutoplayPrevent),
                this.player.on(c, this._onAutoplayStart),
                this.player.on(s, this._onLoadedData),
                !n && this.player.setEventsMiddleware(this.getVideoMiddleware()),
                this.player.preloader = Xh.preloader,
                this.element = this.player.media,
                this.initStyle(),
                this.initProperty(),
                Xh.addPlayingVid(w)
            }
            _initSubtitle() {
                this.plugins.push(qt)
            }
            _initPreloader(e) {
                Ni.attachPreloader(Xh.preloader),
                Xh.update(e)
            }
            _initLoggerBefore(e) {
                Ni.AB_SDK_VERSION = Ph.M.getAbVersions(),
                Fi.init(Mh.g, e.channelConfig, {
                    region: e.region,
                    user_unique_id: e.webId,
                    user_is_login: e.isLogin
                }),
                this.plugins.push(Hi)
            }
            set volume(e) {
                this.player && (this.player.volume = e || 1)
            }
            set muted(e) {
                this.player && (this.player.muted = e)
            }
            set playbackRate(e) {
                this.player && (this.player.playbackRate = e)
            }
            get currentTime() {
                var e;
                return null == (e = this.player) ? void 0 : e.currentTime
            }
            get duration() {
                var e;
                return (null == (e = this.player) ? void 0 : e.duration) || 0
            }
            get attributes() {
                const {element: e, player: t} = this
                  , n = (null == t ? void 0 : t.rawSrc) || (null == e ? void 0 : e.currentSrc) || (null == e ? void 0 : e.src) || "";
                return {
                    error: (null == e ? void 0 : e.error) || null,
                    src: n,
                    currentTime: (null == e ? void 0 : e.currentTime) || 0,
                    muted: !(null == e || !e.muted),
                    duration: (null == e ? void 0 : e.duration) || 0,
                    readyState: (null == e ? void 0 : e.readyState) || 0,
                    networkState: (null == e ? void 0 : e.networkState) || 0,
                    buffered: null == e ? void 0 : e.buffered,
                    volume: (null == e ? void 0 : e.volume) || 1,
                    ended: !(null == e || !e.ended),
                    paused: !(null == e || !e.paused),
                    seeking: !(null == e || !e.seeking),
                    currentSrc: n
                }
            }
            get isReady() {
                var e;
                return (null == (e = this.player) ? void 0 : e.isCanplay) || !1
            }
            get volume() {
                var e;
                return (null == (e = this.player) ? void 0 : e.volume) || 1
            }
            get muted() {
                var e;
                return (null == (e = this.player) ? void 0 : e.muted) || !1
            }
            get playbackRate() {
                var e;
                return (null == (e = this.player) ? void 0 : e.playbackRate) || 1
            }
            get curDefinition() {
                var e;
                const t = (null == (e = this.player) ? void 0 : e.curDefinition) || null
                  , {config: n} = this;
                return {
                    url: (null == t ? void 0 : t.url) || "",
                    bitrate: (null == t ? void 0 : t.bitrate) || n.defaultBitrate || -1,
                    definition: (null == t ? void 0 : t.definition) || n.defaultDefinition,
                    codecType: (null == t ? void 0 : t.codecType) || n.codecType || -1,
                    duration: this.duration || 0
                }
            }
            on(e, t) {
                this.player.on(e, t)
            }
            off(e, t) {
                this.player.off(e, t)
            }
            once(e, t) {
                this.player.once(e, t)
            }
            load(e) {
                this.player.playNext({
                    url: e
                })
            }
            seek(e) {
                this.player.currentTime = e
            }
            play() {
                return (0,
                sh.l)(Wh, this.uuid, "play"),
                new Promise(( (e, t) => {
                    this.player || t();
                    const n = this.player.play();
                    n || e(),
                    n.then(( () => {
                        e()
                    }
                    )).catch(( () => {}
                    ))
                }
                ))
            }
            pause() {
                return (0,
                sh.l)(Wh, this.uuid, "pause"),
                this.player.pause()
            }
            release(e) {
                const {vid: t} = this.config;
                Xh.removePlayingVid(t),
                super.release(e);
                const n = this.player;
                n.off(h, this._onAutoplayPrevent),
                n.off(c, this._onAutoplayStart),
                n.off(s, this._onLoadedData),
                e || n.destroy()
            }
            reset() {}
            replay() {
                return this.player.replay()
            }
            addSubtitle(e, t) {
                const n = this.player;
                !this.player || !n.plugins || !n.plugins.texttrack || n.plugins.texttrack.updateSubtitles(e, (e => {
                    t(e.text)
                }
                ))
            }
            getVideoDesc() {
                return this.player ? {
                    videoType: this.player.vtype
                } : super.getVideoDesc()
            }
            preloadResources(e) {
                Xh && (Xh.clearTask(),
                Xh.addPreloadList(e))
            }
            updatePreloadConfig(e) {
                Xh.update(e)
            }
            updatePreloadCodec(e) {
                Xh.changeCodec(e)
            }
            updateConfig(e) {
                this.player.setConfig({
                    mp4encryptplayerConfig: {
                        reqOptions: e
                    }
                })
            }
            changeState(e) {
                this.state = e,
                e === Oh.ACTIVE && Xh.attachPlayer(this.player)
            }
            getPreloadMeta(e) {
                return Xh.getPreloadMeta(e)
            }
            async enterFullscreen(e) {
                await this.player.getFullscreen(e)
            }
            async exitFullscreen(e) {
                await this.player.exitFullscreen(e)
            }
        }
        class Zh extends Gh {
            constructor(e) {
                super("RAW"),
                this._init(e)
            }
            _init(e) {
                this.player = new rh.BasicPlayer({
                    withCredentials: !0
                }),
                this.element = this.player.el,
                this.initStyle(),
                this.initProperty(),
                e && (e.enablePreloader && this._initPreloader(e.preloader),
                e.enableLogger && this._initLoggerAfter(e),
                e.video && (e.video.mvmaf && (this.mvmaf = e.video.mvmaf),
                e.video.vqscore && (this.vqscore = e.video.vqscore))),
                Xh.attachPlayer(this.element),
                e && e.extra && e.extra.url && this.load(e.extra.url)
            }
            _initPreloader(e) {
                const {preloader: t} = Xh;
                Ni.attachPreloader(t),
                Xh.update(e)
            }
            _initLoggerAfter(e) {
                let t = 0
                  , n = 0
                  , i = ""
                  , r = ""
                  , o = ""
                  , a = "h264"
                  , s = 0
                  , l = ""
                  , u = ""
                  , c = {}
                  , h = ""
                  , d = ""
                  , f = !1;
                e.logger && (e.logger.line_app_id && (n = e.logger.line_app_id),
                e.logger.appId && (t = e.logger.appId),
                e.logger.playMode && (i = e.logger.playMode),
                e.logger.tag && (r = e.logger.tag),
                e.logger.vid && (o = e.logger.vid),
                e.logger.abTestVersion && (u = e.logger.abTestVersion),
                e.logger.channelConfig && (c = e.logger.channelConfig),
                e.logger.region && (h = e.logger.region),
                e.logger.webId && (d = e.logger.webId),
                e.logger.isLogin && (f = e.logger.isLogin)),
                e.video && (e.video.codecType && (a = e.video.codecType),
                e.video.defaultBitrate && (s = e.video.defaultBitrate),
                e.video.defaultDefinition && (l = e.video.defaultDefinition));
                let p = {
                    codec_type: a,
                    decodeFlag: "h265" === a,
                    defaultBitrate: s,
                    defaultDefinition: l,
                    line_app_id: n,
                    playMode: i,
                    playerCoreVersion: ih.version,
                    pv: "",
                    strategyVersion: lh.v,
                    tag: r,
                    vid: o,
                    vtype: "MP4"
                };
                Fi.appId = t,
                Ni.AB_SDK_VERSION = u,
                Fi.init(Mh.g, c, {
                    region: h,
                    user_unique_id: d,
                    user_is_login: f
                });
                const g = new Ni(p);
                this.player.logger = g,
                g.attachPlayer(this.element),
                Xh.addPlayingVid(o)
            }
            play() {
                return new Promise(( (e, t) => {
                    this.player.play().then(( () => {
                        e()
                    }
                    )).catch((e => {
                        this.forceAutoplay && this.tryPlay(e)
                    }
                    ))
                }
                ))
            }
            pause() {
                this.player.pause()
            }
            load(e) {
                this.player.load(e)
            }
            release(e) {
                super.release(e),
                this.player.release()
            }
            reset() {
                this.pause(),
                this.seek(0)
            }
            on(e, t) {
                this.player.on(e, t)
            }
            off(e, t) {
                this.player.off(e, t)
            }
            once(e, t) {
                const n = i => {
                    t(i),
                    this.player.off(e, n)
                }
                ;
                this.player.on(e, n)
            }
            addSubtitle(e, t) {
                this.player.addSubtitle(e, t)
            }
            preloadResources(e) {
                const {closePreload: t} = this.hevcResult;
                Xh && !t && (Xh.clearTask(),
                Xh.addPreloadList(e))
            }
            updatePreloadConfig(e) {
                Xh.update(e)
            }
            updatePreloadCodec(e) {
                Xh.changeCodec(e)
            }
            get isReady() {
                return this.player.isReady
            }
            get playbackQuality() {
                return this.player ? this.player.getQualityInfo() : super.playbackQuality
            }
        }
        var Yh = (e => (e.XG = "XG",
        e.TT = "TT",
        e.RAW = "RAW",
        e))(Yh || {});
        class Jh extends oh.C {
            constructor(e, t) {
                super(),
                xh(this, "onPlayCatch", ( (e, t) => {
                    if ((0,
                    sh.l)("_onPlayCatch", e, t),
                    !t)
                        return;
                    const {message: n="", errorCode: i} = t;
                    n.includes("is unsupported") && Ph.a.focusDisableHevc({
                        hevcCode: i || 1,
                        hevcMsg: n
                    })
                }
                )),
                xh(this, "onceCanplay", ( () => {
                    const {isTTP: e} = Ph.M.getInstance();
                    null !== e && Ph.b.asyncMark(e)
                }
                )),
                xh(this, "release", ( (e=!1) => {
                    this.currentPlayer && (this.currentPlayer.release(e),
                    this.currentPlayer.off("canplay", this.onceCanplay))
                }
                )),
                this.event = e,
                this.device = t,
                this.currentPlayer = null
            }
            static get version() {
                return lh.v
            }
            static setCustomTracker(e) {
                Ni.setCustomTracker(e)
            }
            usePlayer(e, t, n=!1) {
                return this.release(n),
                this.currentPlayer && n || (t ? e == Yh.XG ? (this.currentPlayer = new qh(t),
                this.currentPlayer.player.on("playCatch", this.onPlayCatch)) : this.device && this.device.isMSESupported ? e == Yh.TT ? this.currentPlayer = new Nh(t) : e == Yh.RAW && (this.currentPlayer = new Zh(t)) : this.currentPlayer = new Zh(t) : this.currentPlayer = new Zh(t),
                this.event.player = this.currentPlayer,
                this.currentPlayer.once("canplay", this.onceCanplay)),
                this.currentPlayer
            }
            get attributes() {
                return this.currentPlayer && this.currentPlayer.element ? {
                    error: this.currentPlayer.element.error,
                    src: this.currentPlayer.element.currentSrc,
                    currentTime: this.currentPlayer.element.currentTime,
                    muted: this.currentPlayer.element.muted,
                    duration: this.currentPlayer.element.duration,
                    readyState: this.currentPlayer.element.readyState,
                    networkState: this.currentPlayer.element.networkState,
                    buffered: this.currentPlayer.element.buffered,
                    volume: this.currentPlayer.element.volume,
                    ended: this.currentPlayer.element.ended,
                    paused: this.currentPlayer.element.paused,
                    seeking: this.currentPlayer.element.seeking
                } : null
            }
            get element() {
                return this.currentPlayer ? this.currentPlayer.element : null
            }
        }
        class ed extends oh.C {
            static get version() {
                return lh.v
            }
            constructor() {
                super(),
                this.config = new Dh,
                this.event = new Eh,
                this.device = new ah.A,
                this.network = new Ih(this.device),
                this.metrics = new Ch(this.event,this.config),
                this.pool = new Jh(this.event,this.device)
            }
            _initConfig() {
                this.config = new Dh
            }
            _initEvent() {
                this.event = new Eh
            }
            _initDevice() {
                this.device = new ah.A
            }
            _initNetwork() {
                this.network = new Ih(this.device)
            }
            _initMetrics() {
                this.metrics = new Ch(this.event,this.config)
            }
            _initPlayerPool() {
                this.pool = new Jh(this.event,this.device)
            }
            set player(e) {
                this.event.player = e,
                this.metrics.player = e,
                this.pool.currentPlayer = e
            }
            get player() {
                return this.pool.currentPlayer
            }
            get attributes() {
                return this.pool.attributes
            }
            get element() {
                return this.pool.element
            }
            setCustomTracker(e) {
                Jh.setCustomTracker(e)
            }
            usePlayer(e, t, n) {
                const i = this.pool.usePlayer(e, t, n);
                return this.metrics.player = i,
                i
            }
            release(e) {
                this.pool.release(e)
            }
            getPreloadMeta(e) {
                return this.player && this.player.preloader ? this.player.getPreloadMeta(e) : null
            }
        }
    }
    ,
    80967: (e, t, n) => {
        "use strict";
        n.d(t, {
            v: () => i
        });
        const i = "0.2.1"
    }
}]);
